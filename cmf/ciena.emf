StartOffSet 0001745585

%est                 zeroDotZero      mandatory
%edes        zeroDotZero             A value used for null identifiers.
%edes        dot1xPaeSystemAuthControl The administrative enable/disable state for\n         Port Access Control in a System.
%eref        dot1xPaeSystemAuthControl 802.1X-2001 9.6.1, SystemAuthControl,\n         802.1X-2004 9.6.1, SystemAuthControl
%edes        dot1xPaePortTable       A table of system level information for each port\n        supported by the Port Access Entity.  An entry appears\n        in this table for each port of this system.
%eref        dot1xPaePortTable       802.1X-2001 9.6.1,\n         802.1X-2004 9.6.1
%edes        dot1xPaePortEntry       The Port number, protocol version, and\n        initialization control for a Port.
%edes        dot1xPaePortNumber      The Port number associated with this Port.
%eref        dot1xPaePortNumber      802.1X-2001 9.6.1, Port number,\n         802.1X-2004 9.6.1, Port number
%edes        dot1xPaePortProtocolVersion The protocol version associated with this Port.
%eref        dot1xPaePortProtocolVersion 802.1X-2001 9.6.1, Protocol version,\n         802.1X-2004 9.6.1, Protocol version
%edes        dot1xPaePortCapabilities Indicates the PAE functionality that this Port\n        supports and that may be managed through this MIB.
%eref        dot1xPaePortCapabilities 802.1X-2001 9.6.1, PAE Capabilities,\n         802.1X-2004 9.6.1, PAE Capabilities
%edes        dot1xPaePortInitialize  The initialization control for this Port. Setting this\n        attribute TRUE causes the Port to be initialized.\n        The attribute value reverts to FALSE once initialization\n        has completed.
%eref        dot1xPaePortInitialize  802.1X-2001 9.6.1.3, Initialize Port,\n         802.1X-2004 9.6.1.3, Initialize Port
%edes        dot1xPaePortReauthenticate The reauthentication control for this port. Setting\n        this attribute TRUE causes the Authenticator PAE state\n        machine for the Port to reauthenticate the Supplicant.\n        Setting this attribute FALSE has no effect.\n        This attribute always returns FALSE when it is read.
%eref        dot1xPaePortReauthenticate 802.1X-2001 9.4.1.3 Reauthenticate,\n         802.1X-2004 9.4.1.3 Reauthenticate
%edes        dot1xAuthConfigTable    A table that contains the configuration objects for the\n        Authenticator PAE associated with each port.\n        An entry appears in this table for each port that may\n        authenticate access to itself.
%eref        dot1xAuthConfigTable    802.1X-2001 9.4.1 Authenticator Configuration,\n         802.1X-2004 9.4.1 Authenticator Configuration
%edes        dot1xAuthConfigEntry    The configuration information for an Authenticator\n        PAE.
%edes        dot1xAuthPaeState       The current value of the Authenticator PAE state\n        machine.
%eref        dot1xAuthPaeState       802.1X-2001 9.4.1, Authenticator PAE state,\n         802.1X-2004 9.4.1, Authenticator PAE state
%edes        dot1xAuthBackendAuthState The current state of the Backend Authentication\n        state machine.
%eref        dot1xAuthBackendAuthState 802.1X-2001 9.4.1, Backend Authentication state,\n         802.1X-2004 9.4.1, Backend Authentication state
%edes        dot1xAuthAdminControlledDirections The current value of the administrative controlled\n        directions parameter for the Port.
%eref        dot1xAuthAdminControlledDirections 802.1X-2001 9.4.1, Admin Control Mode,\n         802.1X-2004 9.4.1, Admin Control Mode
%edes        dot1xAuthOperControlledDirections The current value of the operational controlled\n        directions parameter for the Port.
%eref        dot1xAuthOperControlledDirections 802.1X-2001 9.4.1, Oper Control Mode,\n         802.1X-2004 9.4.1, Oper Control Mode
%edes        dot1xAuthAuthControlledPortStatus The current value of the controlled Port\n        status parameter for the Port.
%eref        dot1xAuthAuthControlledPortStatus 802.1X-2001 9.4.1, AuthControlledPortStatus,\n         802.1X-2004 9.4.1, AuthControlledPortStatus
%edes        dot1xAuthAuthControlledPortControl The current value of the controlled Port\n        control parameter for the Port.
%eref        dot1xAuthAuthControlledPortControl 802.1X-2001 9.4.1, AuthControlledPortControl,\n         802.1X-2004 9.4.1, AuthControlledPortControl
%edes        dot1xAuthQuietPeriod    The value, in seconds, of the quietPeriod constant\n        currently in use by the Authenticator PAE state\n        machine.
%eref        dot1xAuthQuietPeriod    802.1X-2001 9.4.1, quietPeriod,\n         802.1X-2004 9.4.1, quietPeriod
%edes        dot1xAuthTxPeriod       The value, in seconds, of the txPeriod constant\n        currently in use by the Authenticator PAE state\n        machine.
%eref        dot1xAuthTxPeriod       802.1X-2001 9.4.1, txPeriod
%edes        dot1xAuthSuppTimeout    The value, in seconds, of the suppTimeout constant\n        currently in use by the Backend Authentication state\n        machine.
%eref        dot1xAuthSuppTimeout    802.1X-2001 9.4.1, suppTimeout,\n         802.1X-2004 9.4.1, suppTimeout
%edes        dot1xAuthServerTimeout  The value, in seconds, of the serverTimeout constant\n        currently in use by the Backend Authentication state\n        machine.
%eref        dot1xAuthServerTimeout  802.1X-2001 9.4.1, serverTimeout,\n         802.1X-2004 9.4.1, serverTimeout
%edes        dot1xAuthMaxReq         The value of the maxReq constant currently in use by\n        the Backend Authentication state machine.
%eref        dot1xAuthMaxReq         802.1X-2001 9.4.1, maxReq
%edes        dot1xAuthReAuthPeriod   The value, in seconds, of the reAuthPeriod constant\n        currently in use by the Reauthentication Timer state\n        machine.
%eref        dot1xAuthReAuthPeriod   802.1X-2001 9.4.1, reAuthPeriod,\n         802.1X-2004 9.4.1, reAuthPeriod
%edes        dot1xAuthReAuthEnabled  The enable/disable control used by the Reauthentication\n        Timer state machine (8.5.5.1).
%eref        dot1xAuthReAuthEnabled  802.1X-2001 9.4.1, reAuthEnabled,\n         802.1X-2004 9.4.1, reAuthEnabled
%edes        dot1xAuthKeyTxEnabled   The value of the keyTransmissionEnabled constant\n        currently in use by the Authenticator PAE state\n        machine.
%eref        dot1xAuthKeyTxEnabled   802.1X-2001 9.4.1, keyTransmissionEnabled,\n         802.1X-2004 9.4.1, keyTransmissionEnabled
%edes        dot1xAuthStatsTable     A table that contains the statistics objects for the\n         Authenticator PAE associated with each Port.\n         An entry appears in this table for each port that may\n         authenticate access to itself.
%eref        dot1xAuthStatsTable     802.1X-2001 9.4.2 Authenticator Statistics,\n         802.1X-2004 9.4.2 Authenticator Statistics
%edes        dot1xAuthStatsEntry     The statistics information for an Authenticator PAE.
%edes        dot1xAuthEapolFramesRx  The number of valid EAPOL frames of any type\n        that have been received by this Authenticator.
%eref        dot1xAuthEapolFramesRx  802.1X-2001 9.4.2, EAPOL frames received,\n         802.1X-2004 9.4.2, EAPOL frames received
%edes        dot1xAuthEapolFramesTx  The number of EAPOL frames of any type\n        that have been transmitted by this Authenticator.
%eref        dot1xAuthEapolFramesTx  802.1X-2001 9.4.2, EAPOL frames transmitted,\n         802.1X-2004 9.4.2, EAPOL frames transmitted
%edes        dot1xAuthEapolStartFramesRx The number of EAPOL Start frames that have\n        been received by this Authenticator.
%eref        dot1xAuthEapolStartFramesRx 802.1X-2001 9.4.2, EAPOL Start frames received,\n         802.1X-2004 9.4.2, EAPOL Start frames received
%edes        dot1xAuthEapolLogoffFramesRx The number of EAPOL Logoff frames that have\n        been received by this Authenticator.
%eref        dot1xAuthEapolLogoffFramesRx 802.1X-2001 9.4.2, EAPOL Logoff frames received,\n         802.1X-2004 9.4.2, EAPOL Logoff frames received
%edes        dot1xAuthEapolRespIdFramesRx The number of EAP Resp/Id frames that have\n        been received by this Authenticator.
%eref        dot1xAuthEapolRespIdFramesRx 802.1X-2001 9.4.2, EAPOL Resp/Id frames received,\n         802.1X-2004 9.4.2, EAPOL Resp/Id frames received
%edes        dot1xAuthEapolRespFramesRx The number of valid EAP Response frames\n        (other than Resp/Id frames) that have been\n        received by this Authenticator.
%eref        dot1xAuthEapolRespFramesRx 802.1X-2001 9.4.2, EAPOL Response frames received,\n         802.1X-2004 9.4.2, EAPOL Response frames received
%edes        dot1xAuthEapolReqIdFramesTx The number of EAP Req/Id frames that have been\n        transmitted by this Authenticator.
%eref        dot1xAuthEapolReqIdFramesTx 802.1X-2001 9.4.2, EAPOL Req/Id frames transmitted,\n         802.1X-2004 9.4.2, EAPOL Req/Id frames transmitted
%edes        dot1xAuthEapolReqFramesTx The number of EAP Request frames\n        (other than Rq/Id frames) that have been\n        transmitted by this Authenticator.
%eref        dot1xAuthEapolReqFramesTx 802.1X-2001 9.4.2, EAPOL Request frames transmitted,\n         802.1X-2004 9.4.2, EAPOL Request frames transmitted
%edes        dot1xAuthInvalidEapolFramesRx The number of EAPOL frames that have been\n        received by this Authenticator in which the\n        frame type is not recognized.
%eref        dot1xAuthInvalidEapolFramesRx 802.1X-2001 9.4.2, Invalid EAPOL frames received,\n         802.1X-2004 9.4.2, Invalid EAPOL frames received
%edes        dot1xAuthEapLengthErrorFramesRx The number of EAPOL frames that have been received\n        by this Authenticator in which the Packet Body\n        Length field is invalid.
%eref        dot1xAuthEapLengthErrorFramesRx 802.1X-2001 9.4.2, EAP length error frames received,\n         802.1X-2004 9.4.2, EAP length error frames received
%edes        dot1xAuthLastEapolFrameVersion The protocol version number carried in the\n        most recently received EAPOL frame.
%eref        dot1xAuthLastEapolFrameVersion 802.1X-2001 9.4.2, Last EAPOL frame version,\n         802.1X-2004 9.4.2, Last EAPOL frame version
%edes        dot1xAuthLastEapolFrameSource The source MAC address carried in the\n        most recently received EAPOL frame.
%eref        dot1xAuthLastEapolFrameSource 802.1X-2001 9.4.2, Last EAPOL frame source,\n         802.1X-2004 9.4.2, Last EAPOL frame source
%edes        dot1xAuthDiagTable      A table that contains the diagnostics objects for the\n         Authenticator PAE associated with each Port.\n         An entry appears in this table for each port that may\n         authenticate access to itself.
%eref        dot1xAuthDiagTable      802.1X-2001 9.4.3 Authenticator Diagnostics
%edes        dot1xAuthDiagEntry      The diagnostics information for an Authenticator PAE.
%edes        dot1xAuthEntersConnecting Counts the number of times that the state machine\n        transitions to the CONNECTING state from any other\n        state.
%eref        dot1xAuthEntersConnecting 802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.1
%edes        dot1xAuthEapLogoffsWhileConnecting Counts the number of times that the state machine\n        transitions from CONNECTING to DISCONNECTED as a result\n        of receiving an EAPOL-Logoff message.
%eref        dot1xAuthEapLogoffsWhileConnecting 802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.2
%edes        dot1xAuthEntersAuthenticating Counts the number of times that the state machine\n        transitions from CONNECTING to AUTHENTICATING, as a\n        result of an EAP-Response/Identity message being\n        received from the Supplicant.
%eref        dot1xAuthEntersAuthenticating 802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.3
%edes        dot1xAuthAuthSuccessWhileAuthenticating Counts the number of times that the state machine\n        transitions from AUTHENTICATING to AUTHENTICATED, as a\n        result of the Backend Authentication state machine\n        indicating successful authentication of the Supplicant\n        (authSuccess = TRUE).
%eref        dot1xAuthAuthSuccessWhileAuthenticating 802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.4
%edes        dot1xAuthAuthTimeoutsWhileAuthenticating Counts the number of times that the state machine\n        transitions from AUTHENTICATING to ABORTING, as a result\n        of the Backend Authentication state machine indicating\n        authentication timeout (authTimeout = TRUE).
%eref        dot1xAuthAuthTimeoutsWhileAuthenticating 802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.5
%edes        dot1xAuthAuthFailWhileAuthenticating Counts the number of times that the state machine\n        transitions from AUTHENTICATING to HELD, as a result\n        of the Backend Authentication state machine indicating\n        authentication failure (authFail = TRUE).
%eref        dot1xAuthAuthFailWhileAuthenticating 802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.6
%edes        dot1xAuthAuthReauthsWhileAuthenticating Counts the number of times that the state machine\n        transitions from AUTHENTICATING to ABORTING, as a result\n        of a reauthentication request (reAuthenticate = TRUE).
%eref        dot1xAuthAuthReauthsWhileAuthenticating 802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.7
%edes        dot1xAuthAuthEapStartsWhileAuthenticating Counts the number of times that the state machine\n        transitions from AUTHENTICATING to ABORTING, as a result\n        of an EAPOL-Start message being received\n        from the Supplicant.
%eref        dot1xAuthAuthEapStartsWhileAuthenticating 802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.8
%edes        dot1xAuthAuthEapLogoffWhileAuthenticating Counts the number of times that the state machine\n        transitions from AUTHENTICATING to ABORTING, as a result\n        of an EAPOL-Logoff message being received\n        from the Supplicant.
%eref        dot1xAuthAuthEapLogoffWhileAuthenticating 802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.9
%edes        dot1xAuthAuthReauthsWhileAuthenticated Counts the number of times that the state machine\n        transitions from AUTHENTICATED to CONNECTING, as a\n        result of a reauthentication request\n        (reAuthenticate = TRUE).
%eref        dot1xAuthAuthReauthsWhileAuthenticated 802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.10
%edes        dot1xAuthAuthEapStartsWhileAuthenticated Counts the number of times that the state machine\n        transitions from AUTHENTICATED to CONNECTING, as a\n        result of an EAPOL-Start message being received from the\n        Supplicant.
%eref        dot1xAuthAuthEapStartsWhileAuthenticated 802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.11
%edes        dot1xAuthAuthEapLogoffWhileAuthenticated Counts the number of times that the state machine\n        transitions from AUTHENTICATED to DISCONNECTED, as a\n        result of an EAPOL-Logoff message being received from\n        the Supplicant.
%eref        dot1xAuthAuthEapLogoffWhileAuthenticated 802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.12
%edes        dot1xAuthBackendResponses Counts the number of times that the state machine sends\n        an initial Access-Request packet to the Authentication\n        server (i.e., executes sendRespToServer on entry to the\n        RESPONSE state). Indicates that the Authenticator\n        attempted communication with the Authentication Server.
%eref        dot1xAuthBackendResponses 802.1X-2001 9.4.2, 802.1X-2001 8.5.6.2.1
%edes        dot1xAuthBackendAccessChallenges Counts the number of times that the state machine\n        receives an initial Access-Challenge packet from the\n        Authentication server (i.e., aReq becomes TRUE,\n        causing exit from the RESPONSE state). Indicates that\n        the Authentication Server has communication with\n        the Authenticator.
%eref        dot1xAuthBackendAccessChallenges 802.1X-2001 9.4.2, 802.1X-2001 8.5.6.2.2
%edes        dot1xAuthBackendOtherRequestsToSupplicant Counts the number of times that the state machine\n        sends an EAP-Request packet (other than an Identity,\n        Notification, Failure or Success message) to the\n        Supplicant (i.e., executes txReq on entry to the\n        REQUEST state). Indicates that the Authenticator chose\n        an EAP-method.
%eref        dot1xAuthBackendOtherRequestsToSupplicant 802.1X-2001 9.4.2, 802.1X-2001 8.5.6.2.3
%edes        dot1xAuthBackendNonNakResponsesFromSupplicant Counts the number of times that the state machine\n        receives a response from the Supplicant to an initial\n        EAP-Request, and the response is something other than\n        EAP-NAK (i.e., rxResp becomes TRUE, causing the state\n        machine to transition from REQUEST to RESPONSE,\n        and the response is not an EAP-NAK). Indicates that\n        the Supplicant can respond to the Authenticator's\n        chosen EAP-method.
%eref        dot1xAuthBackendNonNakResponsesFromSupplicant 802.1X-2001 9.4.2, 802.1X-2001 8.5.6.2.4
%edes        dot1xAuthBackendAuthSuccesses Counts the number of times that the state machine\n        receives an EAP-Success message from the Authentication\n        Server (i.e., aSuccess becomes TRUE, causing a\n        transition from RESPONSE to SUCCESS). Indicates that\n        the Supplicant has successfully authenticated to\n        the Authentication Server.
%eref        dot1xAuthBackendAuthSuccesses 802.1X-2001 9.4.2, 802.1X-2001 8.5.6.2.5
%edes        dot1xAuthBackendAuthFails Counts the number of times that the state machine\n        receives an EAP-Failure message from the Authentication\n        Server (i.e., aFail becomes TRUE, causing a transition\n        from RESPONSE to FAIL). Indicates that the Supplicant\n        has not authenticated to the Authentication Server.
%eref        dot1xAuthBackendAuthFails 802.1X-2001 9.4.2, 802.1X-2001 8.5.6.2.6
%edes        dot1xAuthSessionStatsTable A table that contains the session statistics objects\n        for the Authenticator PAE associated with each Port.\n        An entry appears in this table for each port that may\n        authenticate access to itself.
%eref        dot1xAuthSessionStatsTable 802.1X-2001 9.4.4,\n         802.1X-2004 9.4.4
%edes        dot1xAuthSessionStatsEntry The session statistics information for an Authenticator\n        PAE.  This shows the current values being collected for\n        each session that is still in progress, or the final\n        values for the last valid session on each port where\n        there is no session currently active.
%edes        dot1xAuthSessionOctetsRx The number of octets received in user data\n        frames on this Port during the session.
%eref        dot1xAuthSessionOctetsRx 802.1X-2001 9.4.4, Session Octets Received,\n         802.1X-2004 9.4.4, Session Octets Received
%edes        dot1xAuthSessionOctetsTx The number of octets transmitted in user data\n        frames on this Port during the session.
%eref        dot1xAuthSessionOctetsTx 802.1X-2001 9.4.4, Session Octets Transmitted,\n         802.1X-2004 9.4.4, Session Octets Transmitted
%edes        dot1xAuthSessionFramesRx The number of user data frames received\n        on this Port during the session.
%eref        dot1xAuthSessionFramesRx 802.1X-2001 9.4.4, Session Frames Received,\n         802.1X-2004 9.4.4, Session Frames Received
%edes        dot1xAuthSessionFramesTx The number of user data frames transmitted\n        on this Port during the session.
%eref        dot1xAuthSessionFramesTx 802.1X-2001 9.4.4, Session Frames Transmitted,\n         802.1X-2004 9.4.4, Session Frames Transmitted
%edes        dot1xAuthSessionId      A unique identifier for the session, in the\n        form of a printable ASCII string of at least\n        three characters.
%eref        dot1xAuthSessionId      802.1X-2001 9.4.4, Session Identifier,\n         802.1X-2004 9.4.4, Session Identifier
%edes        dot1xAuthSessionAuthenticMethod The authentication method used to establish the\n        session.
%eref        dot1xAuthSessionAuthenticMethod 802.1X-2001 9.4.4, Session Authentication Method,\n         802.1X-2004 9.4.4, Session Authentication Method
%edes        dot1xAuthSessionTime    The duration of the session in seconds.
%eref        dot1xAuthSessionTime    802.1X-2001 9.4.4, Session Time,\n         802.1X-2004 9.4.4, Session Time
%edes        dot1xAuthSessionTerminateCause The reason for the session termination.
%eref        dot1xAuthSessionTerminateCause 802.1X-2001 9.4.4, Session Terminate Cause,\n         802.1X-2004 9.4.4, Session Terminate Cause
%edes        dot1xAuthSessionUserName The User-Name representing the identity of the\n        Supplicant PAE.
%eref        dot1xAuthSessionUserName 802.1X-2001 9.4.4, Session User Name,\n         802.1X-2004 9.4.4, Session User Name
%edes        dot1xSuppConfigTable    A table that contains the configuration objects for the\n        Supplicant PAE associated with each port.\n        An entry appears in this table for each port that may\n        authenticate itself when challenged by a remote system.
%eref        dot1xSuppConfigTable    802.1X-2001 9.5.1,\n         802.1X-2004 9.5.1
%edes        dot1xSuppConfigEntry    The configuration information for a Supplicant PAE.
%edes        dot1xSuppPaeState       The current state of the Supplicant PAE state\n        machine (8.5.8).
%eref        dot1xSuppPaeState       802.1X-2001 9.5.1, Supplicant PAE State,\n         802.1X-2004 9.5.1, Supplicant PAE State
%edes        dot1xSuppHeldPeriod     The value, in seconds, of the heldPeriod\n        constant currently in use by the Supplicant\n        PAE state machine (8.5.8.1.2).
%eref        dot1xSuppHeldPeriod     802.1X-2001 9.5.1, heldPeriod,\n         802.1X-2004 9.5.1, heldPeriod
%edes        dot1xSuppAuthPeriod     The value, in seconds, of the authPeriod\n        constant currently in use by the Supplicant\n        PAE state machine (8.5.8.1.2).
%eref        dot1xSuppAuthPeriod     802.1X-2001 9.5.1, authPeriod,\n         802.1X-2004 9.5.1, authPeriod
%edes        dot1xSuppStartPeriod    The value, in seconds, of the startPeriod\n        constant currently in use by the Supplicant\n        PAE state machine (8.5.8.1.2).
%eref        dot1xSuppStartPeriod    802.1X-2001 9.5.1, startPeriod,\n         802.1X-2004 9.5.1, startPeriod
%edes        dot1xSuppMaxStart       The value of the maxStart constant currently in use by\n        the Supplicant PAE state machine (8.5.8.1.2).
%eref        dot1xSuppMaxStart       802.1X-2001 9.5.1, maxStart,\n         802.1X-2004 9.5.1, maxStart
%edes        dot1xSuppControlledPortStatus The current state of the Supplicant PAE state\n        machine (8.5.8).
%eref        dot1xSuppControlledPortStatus 802.1X-2001 9.5.1, Supplicant PAE State,\n         802.1X-2004 9.5.1, Supplicant PAE State
%edes        dot1xSuppAccessCtrlWithAuth The setting for the application of the Supplicant\n        authorization state when the port is operating as\n        both a Supplicant and an Authenticator.\n            inactive  indicates the port will not apply the\n                      the Supplicant authorization state, using\n                      only the Authenticator authorization\n                      state to restrict access to the port.\n            active    indicates the port will apply the\n                      the Supplicant authorization state, as\n                      well as the Authenticator\n                      authorization state.
%eref        dot1xSuppAccessCtrlWithAuth 802.1X-2004 9.5.1, Supplicant Access Control With\n        Authenticator
%edes        dot1xSuppBackendState   The current state of the Supplicant Backend state\n         machine.
%eref        dot1xSuppBackendState   802.1X-2004 9.5.1, Backend Supplicant state
%edes        dot1xSuppStatsTable     A table that contains the statistics objects for the\n        Supplicant PAE associated with each port.\n        An entry appears in this table for each port that may\n        authenticate itself when challenged by a remote system.
%eref        dot1xSuppStatsTable     802.1X-2001 9.5.2,\n         802.1X-2004 9.5.2
%edes        dot1xSuppStatsEntry     The statistics information for a Supplicant PAE.
%edes        dot1xSuppEapolFramesRx  The number of EAPOL frames of any type\n        that have been received by this Supplicant.
%eref        dot1xSuppEapolFramesRx  802.1X-2001 9.5.2, EAPOL frames received,\n         802.1X-2004 9.5.2, EAPOL frames received
%edes        dot1xSuppEapolFramesTx  The number of EAPOL frames of any type\n        that have been transmitted by this Supplicant.
%eref        dot1xSuppEapolFramesTx  802.1X-2001 9.5.2, EAPOL frames transmitted,\n         802.1X-2004 9.5.2, EAPOL frames transmitted
%edes        dot1xSuppEapolStartFramesTx The number of EAPOL Start frames\n        that have been transmitted by this Supplicant.
%eref        dot1xSuppEapolStartFramesTx 802.1X-2001 9.5.2, EAPOL Start frames transmitted,\n         802.1X-2004 9.5.2, EAPOL Start frames transmitted
%edes        dot1xSuppEapolLogoffFramesTx The number of EAPOL Logoff frames\n        that have been transmitted by this Supplicant.
%eref        dot1xSuppEapolLogoffFramesTx 802.1X-2001 9.5.2, EAPOL Logoff frames transmitted,\n         802.1X-2004 9.5.2, EAPOL Logoff frames transmitted
%edes        dot1xSuppEapolRespIdFramesTx The number of EAP Resp/Id frames\n        that have been transmitted by this Supplicant.
%eref        dot1xSuppEapolRespIdFramesTx 802.1X-2001 9.5.2, EAP Resp/Id frames transmitted,\n         802.1X-2004 9.5.2, EAP Resp/Id frames transmitted
%edes        dot1xSuppEapolRespFramesTx The number of valid EAP Response frames\n        (other than Resp/Id frames)\n        that have been transmitted by this Supplicant.
%eref        dot1xSuppEapolRespFramesTx 802.1X-2001 9.5.2, EAP Resp frames transmitted,\n         802.1X-2004 9.5.2, EAP Resp frames transmitted
%edes        dot1xSuppEapolReqIdFramesRx The number of EAP Req/Id frames\n        that have been received by this Supplicant.
%eref        dot1xSuppEapolReqIdFramesRx 802.1X-2001 9.5.2, EAP Req/Id frames received,\n         802.1X-2004 9.5.2, EAP Req/Id frames received
%edes        dot1xSuppEapolReqFramesRx The number of EAP Request frames (other than Rq/Id\n        frames) that have been received by this Supplicant.
%eref        dot1xSuppEapolReqFramesRx 802.1X-2001 9.5.2, EAP Req frames received,\n         802.1X-2004 9.5.2, EAP Req frames received
%edes        dot1xSuppInvalidEapolFramesRx The number of EAPOL frames that have been\n        received by this Supplicant in which the\n        frame type is not recognized.
%eref        dot1xSuppInvalidEapolFramesRx 802.1X-2001 9.5.2, Invalid EAPOL frames received,\n         802.1X-2004 9.5.2, Invalid EAPOL frames received
%edes        dot1xSuppEapLengthErrorFramesRx The number of EAPOL frames that have been\n        received by this Supplicant in which the Packet\n        Body Length field (7.5.5) is invalid.
%eref        dot1xSuppEapLengthErrorFramesRx 802.1X-2001 9.5.2, EAP length error frames received,\n         802.1X-2004 9.5.2, EAP length error frames received
%edes        dot1xSuppLastEapolFrameVersion The protocol version number carried in the\n        most recently received EAPOL frame.
%eref        dot1xSuppLastEapolFrameVersion 802.1X-2001 9.5.2, Last EAPOL frame version,\n         802.1X-2004 9.5.2, Last EAPOL frame version
%edes        dot1xSuppLastEapolFrameSource The source MAC address carried in the\n        most recently received EAPOL frame.
%eref        dot1xSuppLastEapolFrameSource 802.1X-2001 9.5.2, Last EAPOL frame source,\n         802.1X-2004 9.5.2, Last EAPOL frame source
%edes        dot1xPaeSystemGroup     A collection of objects providing system information\n        about, and control over, a PAE.
%est                 dot1xPaeAuthConfigGroup deprecated
%edes        dot1xPaeAuthConfigGroup A collection of objects providing configuration\n        information about an Authenticator PAE.
%edes        dot1xPaeAuthStatsGroup  A collection of objects providing statistics about an\n        Authenticator PAE.
%est                 dot1xPaeAuthDiagGroup deprecated
%edes        dot1xPaeAuthDiagGroup   A collection of objects providing diagnostic statistics\n        about an Authenticator PAE.
%edes        dot1xPaeAuthSessionStatsGroup A collection of objects providing statistics about the\n        current, or last session for an Authenticator PAE.
%edes        dot1xPaeSuppConfigGroup A collection of objects providing configuration\n        information about a Supplicant PAE.
%est                 dot1xPaeSuppStatsGroup deprecated
%edes        dot1xPaeSuppStatsGroup  A collection of objects providing statistics about a\n        Supplicant PAE.
%edes        dot1xPaeAuthConfigGroup2 A collection of objects providing configuration\n        information about an Authenticator PAE.
%edes        dot1xPaeSuppConfigGroup2 A collection of objects providing configuration\n        information about a Supplicant PAE.
%edes        dot1xPaeSuppStatsGroup2 A collection of objects providing statistics about a\n        Supplicant PAE.
%edes        lldpRemTablesChange     A lldpRemTablesChange notification is sent when the value\n            of lldpStatsRemTableLastChangeTime changes.  It can be\n            utilized by an NMS to trigger LLDP remote systems table\n            maintenance polls.\n\n            Note that transmission of lldpRemTablesChange\n            notifications are throttled by the agent, as specified by the\n            'lldpNotificationInterval' object.
%eunits      lldpMessageTxInterval   seconds
%edes        lldpMessageTxInterval   The interval at which LLDP frames are transmitted on\n            behalf of this LLDP agent.\n\n            The default value for lldpMessageTxInterval object is\n            30 seconds.\n\n            The value of this object must be restored from non-volatile\n            storage after a re-initialization of the management system.
%eref        lldpMessageTxInterval   IEEE 802.1AB-2005 10.5.3.3
%edes        lldpMessageTxHoldMultiplier The time-to-live value expressed as a multiple of the\n            lldpMessageTxInterval object.  The actual time-to-live value\n            used in LLDP frames, transmitted on behalf of this LLDP agent,\n            can be expressed by the following formula: TTL = min(65535,\n            (lldpMessageTxInterval * lldpMessageTxHoldMultiplier)) For\n            example, if the value of lldpMessageTxInterval is '30', and\n            the value of lldpMessageTxHoldMultiplier is '4', then the\n            value '120' is encoded in the TTL field in the LLDP header.\n\n            The default value for lldpMessageTxHoldMultiplier object is 4.\n\n            The value of this object must be restored from non-volatile\n            storage after a re-initialization of the management system.
%eref        lldpMessageTxHoldMultiplier IEEE 802.1AB-2005 10.5.3.3
%eunits      lldpReinitDelay         seconds
%edes        lldpReinitDelay         The lldpReinitDelay indicates the delay (in units of\n            seconds) from when lldpPortConfigAdminStatus object of a\n            particular port becomes 'disabled' until re-initialization\n            will be attempted.\n\n            The default value for lldpReintDelay object is two seconds.\n\n            The value of this object must be restored from non-volatile\n            storage after a re-initialization of the management system.
%eref        lldpReinitDelay         IEEE 802.1AB-2005 10.5.3.3
%eunits      lldpTxDelay             seconds
%edes        lldpTxDelay             The lldpTxDelay indicates the delay (in units\n            of seconds) between successive LLDP frame transmissions\n            initiated by value/status changes in the LLDP local systems\n            MIB.  The recommended value for the lldpTxDelay is set by the\n            following  formula:\n\n               1 <= lldpTxDelay <= (0.25 * lldpMessageTxInterval)\n\n            The default value for lldpTxDelay object is two seconds.\n\n            The value of this object must be restored from non-volatile\n            storage after a re-initialization of the management system.
%eref        lldpTxDelay             IEEE 802.1AB-2005 10.5.3.3
%eunits      lldpNotificationInterval seconds
%edes        lldpNotificationInterval This object controls the transmission of LLDP notifications.\n\n            the agent must not generate more than one lldpRemTablesChange\n            notification-event in the indicated period, where a\n            'notification-event' is the transmission of a single\n            notification PDU type to a list of notification destinations.\n            If additional changes in lldpRemoteSystemsData object\n            groups occur within the indicated throttling period,\n            then these trap- events must be suppressed by the\n            agent. An NMS should periodically check the value of\n            lldpStatsRemTableLastChangeTime to detect any missed\n            lldpRemTablesChange notification-events, e.g. due to\n            throttling or transmission loss.\n\n            If notification transmission is enabled for particular ports,\n            the suggested default throttling period is 5 seconds.\n\n            The value of this object must be restored from non-volatile\n            storage after a re-initialization of the management system.
%edes        lldpPortConfigTable     The table that controls LLDP frame transmission on individual\n            ports.
%edes        lldpPortConfigEntry     LLDP configuration information for a particular port.\n            This configuration parameter controls the transmission and\n            the reception of LLDP frames on those ports whose rows are\n            created in this table.
%edes        lldpPortConfigPortNum   The index value used to identify the port component\n            (contained in the local chassis with the LLDP agent)\n            associated with this entry.\n\n            The value of this object is used as a port index to the\n            lldpPortConfigTable.
%edes        lldpPortConfigAdminStatus The administratively desired status of the local LLDP agent.\n\n            If the associated lldpPortConfigAdminStatus object has a\n            value of 'txOnly(1)', then LLDP agent will transmit LLDP\n            frames on this port and it will not store any information\n            about the remote systems connected.\n\n            If the associated lldpPortConfigAdminStatus object has a\n            value of 'rxOnly(2)', then the LLDP agent will receive,\n            but it will not transmit LLDP frames on this port.\n\n            If the associated lldpPortConfigAdminStatus object has a\n            value of 'txAndRx(3)', then the LLDP agent will transmit\n            and receive LLDP frames on this port.\n\n            If the associated lldpPortConfigAdminStatus object has a\n            value of 'disabled(4)', then LLDP agent will not transmit or\n            receive LLDP frames on this port.  If there is remote systems\n            information which is received on this port and stored in\n            other tables, before the port's lldpPortConfigAdminStatus\n            becomes disabled, then the information will naturally age out.
%eref        lldpPortConfigAdminStatus IEEE 802.1AB-2005 10.5.1
%edes        lldpPortConfigNotificationEnable The lldpPortConfigNotificationEnable controls, on a per\n            port basis,  whether or not notifications from the agent\n            are enabled. The value true(1) means that notifications are\n            enabled; the value false(2) means that they are not.
%edes        lldpPortConfigTLVsTxEnable The lldpPortConfigTLVsTxEnable, defined as a bitmap,\n            includes the basic set of LLDP TLVs whose transmission is\n            allowed on the local LLDP agent by the network management.\n            Each bit in the bitmap corresponds to a TLV type associated\n            with a specific optional TLV.\n\n            It should be noted that the organizationally-specific TLVs\n            are excluded from the lldpTLVsTxEnable bitmap.\n\n            LLDP Organization Specific Information Extension MIBs should\n            have similar configuration object to control transmission\n            of their organizationally defined TLVs.\n\n            The bit 'portDesc(0)' indicates that LLDP agent should\n            transmit 'Port Description TLV'.\n\n            The bit 'sysName(1)' indicates that LLDP agent should transmit\n            'System Name TLV'.\n\n            The bit 'sysDesc(2)' indicates that LLDP agent should transmit\n            'System Description TLV'.\n\n            The bit 'sysCap(3)' indicates that LLDP agent should transmit\n            'System Capabilities TLV'.\n\n            There is no bit reserved for the management address TLV type\n            since transmission of management address TLVs are controlled\n            by another object, lldpConfigManAddrTable.\n\n            The default value for lldpPortConfigTLVsTxEnable object is\n            empty set, which means no enumerated values are set.\n\n            The value of this object must be restored from non-volatile\n            storage after a re-initialization of the management system.
%eref        lldpPortConfigTLVsTxEnable IEEE 802.1AB-2005 10.2.1.1
%edes        lldpConfigManAddrTable  The table that controls selection of LLDP management address\n            TLV instances to be transmitted on individual ports.
%edes        lldpConfigManAddrEntry  LLDP configuration information that specifies the set\n            of ports (represented as a PortList) on which the local\n            system management address instance will be transmitted.\n\n            This configuration object augments the lldpLocManAddrEntry,\n            therefore it is only present along with the management\n            address instance contained in the associated\n            lldpLocManAddrEntry entry.\n\n            Each active lldpConfigManAddrEntry must be restored from\n            non-volatile and re-created (along with the corresponding\n            lldpLocManAddrEntry) after a re-initialization of the\n            management system.
%edes        lldpConfigManAddrPortsTxEnable A set of ports that are identified by a PortList, in which\n            each port is represented as a bit.  The corresponding local\n            system management address instance will be transmitted on the\n            member ports of the lldpManAddrPortsTxEnable.\n\n            The default value for lldpConfigManAddrPortsTxEnable object\n            is empty binary string, which means no ports are specified\n            for advertising indicated management address instance.
%eref        lldpConfigManAddrPortsTxEnable IEEE 802.1AB-2005 10.2.1.1
%edes        lldpStatsRemTablesLastChangeTime The value of sysUpTime object (defined in IETF RFC 3418)\n            at the time an entry is created, modified, or deleted in the\n            in tables associated with the lldpRemoteSystemsData objects\n            and all LLDP extension objects associated with remote systems.\n\n            An NMS can use this object to reduce polling of the\n            lldpRemoteSystemsData objects.
%eunits      lldpStatsRemTablesInserts table entries
%edes        lldpStatsRemTablesInserts The number of times the complete set of information\n            advertised by a particular MSAP has been inserted into tables\n            contained in lldpRemoteSystemsData and lldpExtensions objects.\n\n            The complete set of information received from a particular\n            MSAP should be inserted into related tables.  If partial\n            information cannot be inserted for a reason such as lack\n            of resources, all of the complete set of information should\n            be removed.\n\n            This counter should be incremented only once after the\n            complete set of information is successfully recorded\n            in all related tables.  Any failures during inserting\n            information set which result in deletion of previously\n            inserted information should not trigger any changes in\n            lldpStatsRemTablesInserts since the insert is not completed\n            yet or or in lldpStatsRemTablesDeletes, since the deletion\n            would only be a partial deletion. If the failure was the\n            result of lack of resources, the lldpStatsRemTablesDrops\n            counter should be incremented once.
%eunits      lldpStatsRemTablesDeletes table entries
%edes        lldpStatsRemTablesDeletes The number of times the complete set of information\n            advertised by a particular MSAP has been deleted from\n            tables contained in lldpRemoteSystemsData and lldpExtensions\n            objects.\n\n            This counter should be incremented only once when the\n            complete set of information is completely deleted from all\n            related tables.  Partial deletions, such as deletion of\n            rows associated with a particular MSAP from some tables,\n            but not from all tables are not allowed, thus should not\n            change the value of this counter.
%eunits      lldpStatsRemTablesDrops table entries
%edes        lldpStatsRemTablesDrops The number of times the complete set of information\n            advertised by a particular MSAP could not be entered into\n            tables contained in lldpRemoteSystemsData and lldpExtensions\n            objects because of insufficient resources.
%edes        lldpStatsRemTablesAgeouts The number of times the complete set of information\n            advertised by a particular MSAP has been deleted from tables\n            contained in lldpRemoteSystemsData and lldpExtensions objects\n            because the information timeliness interval has expired.\n\n            This counter should be incremented only once when the complete\n            set of information is completely invalidated (aged out)\n            from all related tables.  Partial aging, similar to deletion\n            case, is not allowed, and thus, should not change the value\n            of this counter.
%edes        lldpStatsTxPortTable    A table containing LLDP transmission statistics for\n            individual ports.  Entries are not required to exist in\n            this table while the lldpPortConfigEntry object is equal to\n            'disabled(4)'.
%edes        lldpStatsTxPortEntry    LLDP frame transmission statistics for a particular port.\n             The port must be contained in the same chassis as the\n             LLDP agent.\n\n             All counter values in a particular entry shall be\n             maintained on a continuing basis and shall not be deleted\n             upon expiration of rxInfoTTL timing counters in the LLDP\n             remote systems MIB of the receipt of a shutdown frame from\n             a remote LLDP agent.\n\n             All statistical counters associated with a particular\n             port on the local LLDP agent become frozen whenever the\n             adminStatus is disabled for the same port.
%edes        lldpStatsTxPortNum      The index value used to identify the port component\n            (contained in the local chassis with the LLDP agent)\n            associated with this entry.\n\n            The value of this object is used as a port index to the\n            lldpStatsTable.
%edes        lldpStatsTxPortFramesTotal The number of LLDP frames transmitted by this LLDP agent\n            on the indicated port.
%eref        lldpStatsTxPortFramesTotal IEEE 802.1AB-2005 10.5.2.1
%edes        lldpStatsRxPortTable    A table containing LLDP reception statistics for individual\n            ports.  Entries are not required to exist in this table while\n            the lldpPortConfigEntry object is equal to 'disabled(4)'.
%edes        lldpStatsRxPortEntry    LLDP frame reception statistics for a particular port.\n             The port must be contained in the same chassis as the\n             LLDP agent.\n\n             All counter values in a particular entry shall be\n             maintained on a continuing basis and shall not be deleted\n             upon expiration of rxInfoTTL timing counters in the LLDP\n             remote systems MIB of the receipt of a shutdown frame from\n             a remote LLDP agent.\n\n             All statistical counters associated with a particular\n             port on the local LLDP agent become frozen whenever the\n             adminStatus is disabled for the same port.
%edes        lldpStatsRxPortNum      The index value used to identify the port component\n            (contained in the local chassis with the LLDP agent)\n            associated with this entry.\n\n            The value of this object is used as a port index to the\n            lldpStatsTable.
%edes        lldpStatsRxPortFramesDiscardedTotal The number of LLDP frames received by this LLDP agent on\n            the indicated port, and then discarded for any reason.\n            This counter can provide an indication that LLDP header\n            formating problems may exist with the local LLDP agent in\n            the sending system or that LLDPDU validation problems may\n            exist with the local LLDP agent in the receiving system.
%eref        lldpStatsRxPortFramesDiscardedTotal IEEE 802.1AB-2005 10.5.2.2
%edes        lldpStatsRxPortFramesErrors The number of invalid LLDP frames received by this LLDP\n            agent on the indicated port, while this LLDP agent is enabled.
%eref        lldpStatsRxPortFramesErrors IEEE 802.1AB-2005 10.5.2.2
%edes        lldpStatsRxPortFramesTotal The number of valid LLDP frames received by this LLDP agent\n            on the indicated port, while this LLDP agent is enabled.
%eref        lldpStatsRxPortFramesTotal IEEE 802.1AB-2005 10.5.2.2
%edes        lldpStatsRxPortTLVsDiscardedTotal The number of LLDP TLVs discarded for any reason by this LLDP\n            agent on the indicated port.
%eref        lldpStatsRxPortTLVsDiscardedTotal IEEE 802.1AB-2005 10.5.2.2
%edes        lldpStatsRxPortTLVsUnrecognizedTotal The number of LLDP TLVs received on the given port that\n            are not recognized by this LLDP agent on the indicated port.\n\n            An unrecognized TLV is referred to as the TLV whose type value\n            is in the range of reserved TLV types (000 1001 - 111 1110)\n            in Table 9.1 of IEEE Std 802.1AB-2005.  An unrecognized\n            TLV may be a basic management TLV from a later LLDP version.
%eref        lldpStatsRxPortTLVsUnrecognizedTotal IEEE 802.1AB-2005 10.5.2.2
%edes        lldpStatsRxPortAgeoutsTotal The counter that represents the number of age-outs that\n            occurred on a given port.  An age-out is the number of\n            times the complete set of information advertised by a\n            particular MSAP has been deleted from tables contained in\n            lldpRemoteSystemsData and lldpExtensions objects because\n            the information timeliness interval has expired.\n\n            This counter is similar to lldpStatsRemTablesAgeouts, except\n            that the counter is on a per port basis.  This enables NMS to\n            poll tables associated with the lldpRemoteSystemsData objects\n            and all LLDP extension objects associated with remote systems\n            on the indicated port only.\n\n            This counter should be set to zero during agent initialization\n            and its value should not be saved in non-volatile storage.\n            When a port's admin status changes from 'disabled' to\n            'rxOnly', 'txOnly' or 'txAndRx', the counter associated with\n            the same port should reset to 0.  The agent should also flush\n            all remote system information associated with the same port.\n\n            This counter should be incremented only once when the\n            complete set of information is invalidated (aged out) from\n            all related tables on a particular port.  Partial aging\n            is not allowed, and thus, should not change the value of\n            this counter.
%eref        lldpStatsRxPortAgeoutsTotal IEEE 802.1AB-2005 10.5.2.2
%edes        lldpLocChassisIdSubtype The type of encoding used to identify the chassis\n            associated with the local system.
%eref        lldpLocChassisIdSubtype IEEE 802.1AB-2005 9.5.2.2
%edes        lldpLocChassisId        The string value used to identify the chassis component\n            associated with the local system.
%eref        lldpLocChassisId        IEEE 802.1AB-2005 9.5.2.3
%edes        lldpLocSysName          The string value used to identify the system name of the\n            local system.  If the local agent supports IETF RFC 3418,\n            lldpLocSysName object should have the same value of sysName\n            object.
%eref        lldpLocSysName          IEEE 802.1AB-2005 9.5.6.2
%edes        lldpLocSysDesc          The string value used to identify the system description\n            of the local system.  If the local agent supports IETF RFC 3418,\n            lldpLocSysDesc object should have the same value of sysDesc\n            object.
%eref        lldpLocSysDesc          IEEE 802.1AB-2005 9.5.7.2
%edes        lldpLocSysCapSupported  The bitmap value used to identify which system capabilities\n            are supported on the local system.
%eref        lldpLocSysCapSupported  IEEE 802.1AB-2005 9.5.8.1
%edes        lldpLocSysCapEnabled    The bitmap value used to identify which system capabilities\n            are enabled on the local system.
%eref        lldpLocSysCapEnabled    IEEE 802.1AB-2005 9.5.8.2
%edes        lldpLocPortTable        This table contains one or more rows per port information\n            associated with the local system known to this agent.
%edes        lldpLocPortEntry        Information about a particular port component.\n\n            Entries may be created and deleted in this table by the\n            agent.
%edes        lldpLocPortNum          The index value used to identify the port component\n            (contained in the local chassis with the LLDP agent)\n            associated with this entry.\n\n            The value of this object is used as a port index to the\n            lldpLocPortTable.
%edes        lldpLocPortIdSubtype    The type of port identifier encoding used in the associated\n            'lldpLocPortId' object.
%eref        lldpLocPortIdSubtype    IEEE 802.1AB-2005 9.5.3.2
%edes        lldpLocPortId           The string value used to identify the port component\n            associated with a given port in the local system.
%eref        lldpLocPortId           IEEE 802.1AB-2005 9.5.3.3
%edes        lldpLocPortDesc         The string value used to identify the 802 LAN station's port\n            description associated with the local system.  If the local\n            agent supports IETF RFC 2863, lldpLocPortDesc object should\n            have the same value of ifDescr object.
%eref        lldpLocPortDesc         IEEE 802.1AB-2005 9.5.5.2
%edes        lldpLocManAddrTable     This table contains management address information on the\n            local system known to this agent.
%edes        lldpLocManAddrEntry     Management address information about a particular chassis\n            component.  There may be multiple management addresses\n            configured on the system identified by a particular\n            lldpLocChassisId.  Each management address should have\n            distinct 'management address type' (lldpLocManAddrSubtype) and\n            'management address' (lldpLocManAddr.)\n\n            Entries may be created and deleted in this table by the\n            agent.
%edes        lldpLocManAddrSubtype   The type of management address identifier encoding used in\n            the associated 'lldpLocManagmentAddr' object.
%eref        lldpLocManAddrSubtype   IEEE 802.1AB-2005 9.5.9.3
%edes        lldpLocManAddr          The string value used to identify the management address\n            component associated with the local system.  The purpose of\n            this address is to contact the management entity.
%eref        lldpLocManAddr          IEEE 802.1AB-2005 9.5.9.4
%edes        lldpLocManAddrLen       The total length of the management address subtype and the\n            management address fields in LLDPDUs transmitted by the\n            local LLDP agent.\n\n            The management address length field is needed so that the\n            receiving systems that do not implement SNMP will not be\n            required to implement an iana family numbers/address length\n            equivalency table in order to decode the management adress.
%eref        lldpLocManAddrLen       IEEE 802.1AB-2005 9.5.9.2
%edes        lldpLocManAddrIfSubtype The enumeration value that identifies the interface numbering\n            method used for defining the interface number, associated\n            with the local system.
%eref        lldpLocManAddrIfSubtype IEEE 802.1AB-2005 9.5.9.5
%edes        lldpLocManAddrIfId      The integer value used to identify the interface number\n            regarding the management address component associated with\n            the local system.
%eref        lldpLocManAddrIfId      IEEE 802.1AB-2005 9.5.9.6
%edes        lldpLocManAddrOID       The OID value used to identify the type of hardware component\n            or protocol entity associated with the management address\n            advertised by the local system agent.
%eref        lldpLocManAddrOID       IEEE 802.1AB-2005 9.5.9.8
%edes        lldpRemTable            This table contains one or more rows per physical network\n            connection known to this agent.  The agent may wish to ensure\n            that only one lldpRemEntry is present for each local port,\n            or it may choose to maintain multiple lldpRemEntries for\n            the same local port.\n\n            The following procedure may be used to retrieve remote\n            systems information updates from an LLDP agent:\n\n               1. NMS polls all tables associated with remote systems\n                  and keeps a local copy of the information retrieved.\n                  NMS polls periodically the values of the following\n                  objects:\n                     a. lldpStatsRemTablesInserts\n                     b. lldpStatsRemTablesDeletes\n                     c. lldpStatsRemTablesDrops\n                     d. lldpStatsRemTablesAgeouts\n                     e. lldpStatsRxPortAgeoutsTotal for all ports.\n\n               2. LLDP agent updates remote systems MIB objects, and\n                  sends out notifications to a list of notification\n                  destinations.\n\n               3. NMS receives the notifications and compares the new\n                  values of objects listed in step 1.\n\n                  Periodically, NMS should poll the object\n                  lldpStatsRemTablesLastChangeTime to find out if anything\n                  has changed since the last poll.  if something has\n                  changed, NMS will poll the objects listed in step 1 to\n                  figure out what kind of changes occurred in the tables.\n\n                  if value of lldpStatsRemTablesInserts has changed,\n                  then NMS will walk all tables by employing TimeFilter\n                  with the last-polled time value.  This request will\n                  return new objects or objects whose values are updated\n                  since the last poll.\n\n                  if value of lldpStatsRemTablesAgeouts has changed,\n                  then NMS will walk the lldpStatsRxPortAgeoutsTotal and\n                  compare the new values with previously recorded ones.\n                  For ports whose lldpStatsRxPortAgeoutsTotal value is\n                  greater than the recorded value, NMS will have to\n                  retrieve objects associated with those ports from\n                  table(s) without employing a TimeFilter (which is\n                  performed by specifying 0 for the TimeFilter.)\n\n                  lldpStatsRemTablesDeletes and lldpStatsRemTablesDrops\n                  objects are provided for informational purposes.
%edes        lldpRemEntry            Information about a particular physical network connection.\n            Entries may be created and deleted in this table by the agent,\n            if a physical topology discovery process is active.
%edes        lldpRemTimeMark         A TimeFilter for this entry.  See the TimeFilter textual\n            convention in IETF RFC 2021 and\n            http://www.ietf.org/IESG/Implementations/RFC2021-Implementation.txt\n            to see how TimeFilter works.
%eref        lldpRemTimeMark         IETF RFC 2021 section 6
%edes        lldpRemLocalPortNum     The index value used to identify the port component\n            (contained in the local chassis with the LLDP agent)\n            associated with this entry.  The lldpRemLocalPortNum\n            identifies the port on which the remote system information\n            is received.\n\n            The value of this object is used as a port index to the\n            lldpRemTable.
%edes        lldpRemIndex            This object represents an arbitrary local integer value used\n            by this agent to identify a particular connection instance,\n            unique only for the indicated remote system.\n\n            An agent is encouraged to assign monotonically increasing\n            index values to new entries, starting with one, after each\n            reboot.  It is considered unlikely that the lldpRemIndex\n            will wrap between reboots.
%edes        lldpRemChassisIdSubtype The type of encoding used to identify the chassis associated\n            with the remote system.
%eref        lldpRemChassisIdSubtype IEEE 802.1AB-2005 9.5.2.2
%edes        lldpRemChassisId        The string value used to identify the chassis component\n            associated with the remote system.
%eref        lldpRemChassisId        IEEE 802.1AB-2005 9.5.2.3
%edes        lldpRemPortIdSubtype    The type of port identifier encoding used in the associated\n            'lldpRemPortId' object.
%eref        lldpRemPortIdSubtype    IEEE 802.1AB-2005 9.5.3.2
%edes        lldpRemPortId           The string value used to identify the port component\n            associated with the remote system.
%eref        lldpRemPortId           IEEE 802.1AB-2005 9.5.3.3
%edes        lldpRemPortDesc         The string value used to identify the description of\n            the given port associated with the remote system.
%eref        lldpRemPortDesc         IEEE 802.1AB-2005 9.5.5.2
%edes        lldpRemSysName          The string value used to identify the system name of the\n            remote system.
%eref        lldpRemSysName          IEEE 802.1AB-2005 9.5.6.2
%edes        lldpRemSysDesc          The string value used to identify the system description\n            of the remote system.
%eref        lldpRemSysDesc          IEEE 802.1AB-2005 9.5.7.2
%edes        lldpRemSysCapSupported  The bitmap value used to identify which system capabilities\n            are supported on the remote system.
%eref        lldpRemSysCapSupported  IEEE 802.1AB-2005 9.5.8.1
%edes        lldpRemSysCapEnabled    The bitmap value used to identify which system capabilities\n            are enabled on the remote system.
%eref        lldpRemSysCapEnabled    IEEE 802.1AB-2005 9.5.8.2
%edes        lldpRemManAddrTable     This table contains one or more rows per management address\n            information on the remote system learned on a particular port\n            contained in the local chassis known to this agent.
%edes        lldpRemManAddrEntry     Management address information about a particular chassis\n            component.  There may be multiple management addresses\n            configured on the remote system identified by a particular\n            lldpRemIndex whose information is received on\n            lldpRemLocalPortNum of the local system.  Each management\n            address should have distinct 'management address\n            type' (lldpRemManAddrSubtype) and 'management address'\n            (lldpRemManAddr.)\n\n            Entries may be created and deleted in this table by the\n            agent.
%edes        lldpRemManAddrSubtype   The type of management address identifier encoding used in\n            the associated 'lldpRemManagmentAddr' object.
%eref        lldpRemManAddrSubtype   IEEE 802.1AB-2005 9.5.9.3
%edes        lldpRemManAddr          The string value used to identify the management address\n            component associated with the remote system.  The purpose\n            of this address is to contact the management entity.
%eref        lldpRemManAddr          IEEE 802.1AB-2005 9.5.9.4
%edes        lldpRemManAddrIfSubtype The enumeration value that identifies the interface numbering\n            method used for defining the interface number, associated\n            with the remote system.
%eref        lldpRemManAddrIfSubtype IEEE 802.1AB-2005 9.5.9.5
%edes        lldpRemManAddrIfId      The integer value used to identify the interface number\n            regarding the management address component associated with\n            the remote system.
%eref        lldpRemManAddrIfId      IEEE 802.1AB-2005 9.5.9.6
%edes        lldpRemManAddrOID       The OID value used to identify the type of hardware component\n            or protocol entity associated with the management address\n            advertised by the remote system agent.
%eref        lldpRemManAddrOID       IEEE 802.1AB-2005 9.5.9.8
%edes        lldpRemUnknownTLVTable  This table contains information about an incoming TLV which\n            is not recognized by the receiving LLDP agent.  The TLV may\n            be from a later version of the basic management set.\n\n            This table should only contain TLVs that are found in\n            a single LLDP frame.  Entries in this table, associated\n            with an MAC service access point (MSAP, the access point\n            for MAC services provided to the LCC sublayer, defined\n            in IEEE 100, which is also identified with a particular\n            lldpRemLocalPortNum, lldpRemIndex pair) are overwritten with\n            most recently received unrecognized TLV from the same MSAP,\n            or they will naturally age out when the rxInfoTTL timer\n            (associated with the MSAP) expires.
%eref        lldpRemUnknownTLVTable  IEEE 802.1AB-2005 10.3.2
%edes        lldpRemUnknownTLVEntry  Information about an unrecognized TLV received from a\n            physical network connection.  Entries may be created and\n            deleted in this table by the agent, if a physical topology\n            discovery process is active.
%edes        lldpRemUnknownTLVType   This object represents the value extracted from the type\n            field of the TLV.
%eref        lldpRemUnknownTLVType   IEEE 802.1AB-2005 10.3.5
%edes        lldpRemUnknownTLVInfo   This object represents the value extracted from the value\n            field of the TLV.
%eref        lldpRemUnknownTLVInfo   IEEE 802.1AB-2005 10.3.5
%edes        lldpRemOrgDefInfoTable  This table contains one or more rows per physical network\n            connection which advertises the organizationally defined\n            information.\n\n            Note that this table contains one or more rows of\n            organizationally defined information that is not recognized\n            by the local agent.\n\n            If the local system is capable of recognizing any\n            organizationally defined information, appropriate extension\n            MIBs from the organization should be used for information\n            retrieval.
%edes        lldpRemOrgDefInfoEntry  Information about the unrecognized organizationally\n            defined information advertised by the remote system.\n            The lldpRemTimeMark, lldpRemLocalPortNum, lldpRemIndex,\n            lldpRemOrgDefInfoOUI, lldpRemOrgDefInfoSubtype, and\n            lldpRemOrgDefInfoIndex are indexes to this table.  If there is\n            an lldpRemOrgDefInfoEntry associated with a particular remote\n            system identified by the lldpRemLocalPortNum and lldpRemIndex,\n            there must be an lldpRemEntry associated with the same\n            instance (i.e, using same indexes.)  When the lldpRemEntry\n            for the same index is removed from the lldpRemTable, the\n            associated lldpRemOrgDefInfoEntry should be removed from\n            the lldpRemOrgDefInfoTable.\n\n            Entries may be created and deleted in this table by the\n            agent.
%edes        lldpRemOrgDefInfoOUI    The Organizationally Unique Identifier (OUI), as defined\n            in IEEE std 802-2001, is a 24 bit (three octets) globally\n            unique assigned number referenced by various standards,\n            of the information received from the remote system.
%eref        lldpRemOrgDefInfoOUI    IEEE 802.1AB-2005 9.5.1.3
%edes        lldpRemOrgDefInfoSubtype The integer value used to identify the subtype of the\n            organizationally defined information received from the\n            remote system.\n\n            The subtype value is required to identify different instances\n            of organizationally defined information that could not be\n            retrieved without a unique identifier that indicates the\n            particular type of information contained in the information\n            string.
%eref        lldpRemOrgDefInfoSubtype IEEE 802.1AB-2005 9.5.1.4
%edes        lldpRemOrgDefInfoIndex  This object represents an arbitrary local integer value\n            used by this agent to identify a particular unrecognized\n            organizationally defined information instance, unique only\n            for the lldpRemOrgDefInfoOUI and lldpRemOrgDefInfoSubtype\n            from the same remote system.\n\n            An agent is encouraged to assign monotonically increasing\n            index values to new entries, starting with one, after each\n            reboot.  It is considered unlikely that the\n            lldpRemOrgDefInfoIndex will wrap between reboots.
%edes        lldpRemOrgDefInfo       The string value used to identify the organizationally\n            defined information of the remote system.  The encoding for\n            this object should be as defined for SnmpAdminString TC.
%eref        lldpRemOrgDefInfo       IEEE 802.1AB-2005 9.5.1.5
%edes        lldpConfigGroup         The collection of objects which are used to configure the\n            LLDP implementation behavior.\n\n            This group is mandatory for agents which implement the LLDP.
%edes        lldpConfigRxGroup       The collection of objects which are used to configure the\n            LLDP implementation behavior.\n\n            This group is mandatory for agents which implement the LLDP\n            and have the capability of receiving LLDP frames.
%edes        lldpConfigTxGroup       The collection of objects which are used to configure the\n            LLDP implementation behavior.\n\n            This group is mandatory for agents which implement the LLDP\n            and have the capability of transmitting LLDP frames.
%edes        lldpStatsRxGroup        The collection of objects which are used to represent LLDP\n            reception statistics.\n\n            This group is mandatory for agents which implement the LLDP\n            and have the capability of receiving LLDP frames.
%edes        lldpStatsTxGroup        The collection of objects which are used to represent LLDP\n            transmission statistics.\n\n            This group is mandatory for agents which implement the LLDP\n            and have the capability of transmitting LLDP frames.
%edes        lldpLocSysGroup         The collection of objects which are used to represent LLDP\n            Local System Information.\n\n            This group is mandatory for agents which implement the LLDP\n            and have the capability of transmitting LLDP frames.
%edes        lldpRemSysGroup         The collection of objects which are used to represent\n            LLDP Remote Systems Information.  The objects represent the\n            information associated with the basic TLV set.  Please note\n            that even the agent doesn't implement some of the optional\n            TLVs, it shall recognize all the optional TLV information\n            that the remote system may advertise.\n\n            This group is mandatory for agents which implement the LLDP\n            and have the capability of receiving LLDP frames.
%edes        lldpNotificationsGroup  The collection of notifications used to indicate LLDP MIB\n            data consistency and general status information.\n\n            This group is mandatory for agents which implement the LLDP\n            and have the capability of receiving LLDP frames.
%edes        sysDescr                A textual description of the entity.  This value should\n            include the full name and version identification of\n            the system's hardware type, software operating-system,\n            and networking software.
%edes        sysObjectID             The vendor's authoritative identification of the\n            network management subsystem contained in the entity.\n            This value is allocated within the SMI enterprises\n            subtree (1.3.6.1.4.1) and provides an easy and\n            unambiguous means for determining `what kind of box' is\n            being managed.  For example, if vendor `Flintstones,\n            Inc.' was assigned the subtree 1.3.6.1.4.1.424242,\n            it could assign the identifier 1.3.6.1.4.1.424242.1.1\n            to its `Fred Router'.
%edes        sysUpTime               The time (in hundredths of a second) since the\n            network management portion of the system was last\n            re-initialized.
%edes        sysContact              The textual identification of the contact person for\n            this managed node, together with information on how\n            to contact this person.  If no contact information is\n            known, the value is the zero-length string.
%edes        sysName                 An administratively-assigned name for this managed\n            node.  By convention, this is the node's fully-qualified\n            domain name.  If the name is unknown, the value is\n            the zero-length string.
%edes        sysLocation             The physical location of this node (e.g., 'telephone\n            closet, 3rd floor').  If the location is unknown, the\n            value is the zero-length string.
%edes        sysServices             A value which indicates the set of services that this\n            entity may potentially offer.  The value is a sum.\n\n            This sum initially takes the value zero. Then, for\n            each layer, L, in the range 1 through 7, that this node\n            performs transactions for, 2 raised to (L - 1) is added\n            to the sum.  For example, a node which performs only\n            routing functions would have a value of 4 (2^(3-1)).\n            In contrast, a node which is a host offering application\n            services would have a value of 72 (2^(4-1) + 2^(7-1)).\n            Note that in the context of the Internet suite of\n            protocols, values should be calculated accordingly:\n\n                 layer      functionality\n                   1        physical (e.g., repeaters)\n                   2        datalink/subnetwork (e.g., bridges)\n                   3        internet (e.g., supports the IP)\n                   4        end-to-end  (e.g., supports the TCP)\n                   7        applications (e.g., supports the SMTP)\n\n            For systems including OSI protocols, layers 5 and 6\n            may also be counted.
%edes        sysORLastChange         The value of sysUpTime at the time of the most recent\n            change in state or value of any instance of sysORID.
%edes        sysORTable              The (conceptual) table listing the capabilities of\n            the local SNMP application acting as a command\n            responder with respect to various MIB modules.\n            SNMP entities having dynamically-configurable support\n            of MIB modules will have a dynamically-varying number\n            of conceptual rows.
%edes        sysOREntry              An entry (conceptual row) in the sysORTable.
%edes        sysORIndex              The auxiliary variable used for identifying instances\n            of the columnar objects in the sysORTable.
%edes        sysORID                 An authoritative identification of a capabilities\n            statement with respect to various MIB modules supported\n            by the local SNMP application acting as a command\n            responder.
%edes        sysORDescr              A textual description of the capabilities identified\n            by the corresponding instance of sysORID.
%edes        sysORUpTime             The value of sysUpTime at the time this conceptual\n            row was last instantiated.
%edes        ifNumber                The number of network interfaces (regardless of their\n            current state) present on this system.
%edes        ifTable                 A list of interface entries.  The number of entries is\n            given by the value of ifNumber.
%edes        ifEntry                 An entry containing management information applicable to a\n            particular interface.
%edes        ifIndex                 A unique value, greater than zero, for each interface.  It\n            is recommended that values are assigned contiguously\n            starting from 1.  The value for each interface sub-layer\n            must remain constant at least from one re-initialization of\n            the entity's network management system to the next re-\n            initialization.
%edes        ifDescr                 A textual string containing information about the\n            interface.  This string should include the name of the\n            manufacturer, the product name and the version of the\n            interface hardware/software.
%edes        ifType                  The type of interface.  Additional values for ifType are\n            assigned by the Internet Assigned Numbers Authority (IANA),\n            through updating the syntax of the IANAifType textual\n            convention.
%edes        ifMtu                   The size of the largest packet which can be sent/received\n            on the interface, specified in octets.  For interfaces that\n            are used for transmitting network datagrams, this is the\n            size of the largest network datagram that can be sent on the\n            interface.
%edes        ifSpeed                 An estimate of the interface's current bandwidth in bits\n            per second.  For interfaces which do not vary in bandwidth\n            or for those where no accurate estimation can be made, this\n            object should contain the nominal bandwidth.  If the\n            bandwidth of the interface is greater than the maximum value\n            reportable by this object then this object should report its\n            maximum value (4,294,967,295) and ifHighSpeed must be used\n            to report the interace's speed.  For a sub-layer which has\n            no concept of bandwidth, this object should be zero.
%edes        ifPhysAddress           The interface's address at its protocol sub-layer.  For\n            example, for an 802.x interface, this object normally\n            contains a MAC address.  The interface's media-specific MIB\n            must define the bit and byte ordering and the format of the\n            value of this object.  For interfaces which do not have such\n            an address (e.g., a serial line), this object should contain\n            an octet string of zero length.
%edes        ifAdminStatus           The desired state of the interface.  The testing(3) state\n            indicates that no operational packets can be passed.  When a\n            managed system initializes, all interfaces start with\n            ifAdminStatus in the down(2) state.  As a result of either\n            explicit management action or per configuration information\n            retained by the managed system, ifAdminStatus is then\n            changed to either the up(1) or testing(3) states (or remains\n            in the down(2) state).
%edes        ifOperStatus            The current operational state of the interface.  The\n            testing(3) state indicates that no operational packets can\n            be passed.  If ifAdminStatus is down(2) then ifOperStatus\n            should be down(2).  If ifAdminStatus is changed to up(1)\n            then ifOperStatus should change to up(1) if the interface is\n            ready to transmit and receive network traffic; it should\n            change to dormant(5) if the interface is waiting for\n            external actions (such as a serial line waiting for an\n            incoming connection); it should remain in the down(2) state\n            if and only if there is a fault that prevents it from going\n            to the up(1) state; it should remain in the notPresent(6)\n            state if the interface has missing (typically, hardware)\n            components.
%edes        ifLastChange            The value of sysUpTime at the time the interface entered\n            its current operational state.  If the current state was\n            entered prior to the last re-initialization of the local\n            network management subsystem, then this object contains a\n            zero value.
%edes        ifInOctets              The total number of octets received on the interface,\n\n            including framing characters.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifInUcastPkts           The number of packets, delivered by this sub-layer to a\n            higher (sub-)layer, which were not addressed to a multicast\n            or broadcast address at this sub-layer.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifInNUcastPkts          The number of packets, delivered by this sub-layer to a\n            higher (sub-)layer, which were addressed to a multicast or\n            broadcast address at this sub-layer.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.\n\n            This object is deprecated in favour of ifInMulticastPkts and\n            ifInBroadcastPkts.
%edes        ifInDiscards            The number of inbound packets which were chosen to be\n            discarded even though no errors had been detected to prevent\n\n            their being deliverable to a higher-layer protocol.  One\n            possible reason for discarding such a packet could be to\n            free up buffer space.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifInErrors              For packet-oriented interfaces, the number of inbound\n            packets that contained errors preventing them from being\n            deliverable to a higher-layer protocol.  For character-\n            oriented or fixed-length interfaces, the number of inbound\n            transmission units that contained errors preventing them\n            from being deliverable to a higher-layer protocol.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifInUnknownProtos       For packet-oriented interfaces, the number of packets\n            received via the interface which were discarded because of\n            an unknown or unsupported protocol.  For character-oriented\n            or fixed-length interfaces that support protocol\n            multiplexing the number of transmission units received via\n            the interface which were discarded because of an unknown or\n            unsupported protocol.  For any interface that does not\n            support protocol multiplexing, this counter will always be\n            0.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifOutOctets             The total number of octets transmitted out of the\n            interface, including framing characters.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifOutUcastPkts          The total number of packets that higher-level protocols\n            requested be transmitted, and which were not addressed to a\n            multicast or broadcast address at this sub-layer, including\n            those that were discarded or not sent.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifOutNUcastPkts         The total number of packets that higher-level protocols\n            requested be transmitted, and which were addressed to a\n            multicast or broadcast address at this sub-layer, including\n            those that were discarded or not sent.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.\n\n            This object is deprecated in favour of ifOutMulticastPkts\n            and ifOutBroadcastPkts.
%edes        ifOutDiscards           The number of outbound packets which were chosen to be\n            discarded even though no errors had been detected to prevent\n            their being transmitted.  One possible reason for discarding\n            such a packet could be to free up buffer space.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifOutErrors             For packet-oriented interfaces, the number of outbound\n            packets that could not be transmitted because of errors.\n            For character-oriented or fixed-length interfaces, the\n            number of outbound transmission units that could not be\n            transmitted because of errors.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifOutQLen               The length of the output packet queue (in packets).
%edes        ifSpecific              A reference to MIB definitions specific to the particular\n            media being used to realize the interface.  It is\n\n            recommended that this value point to an instance of a MIB\n            object in the media-specific MIB, i.e., that this object\n            have the semantics associated with the InstancePointer\n            textual convention defined in RFC 2579.  In fact, it is\n            recommended that the media-specific MIB specify what value\n            ifSpecific should/can take for values of ifType.  If no MIB\n            definitions specific to the particular media are available,\n            the value should be set to the OBJECT IDENTIFIER { 0 0 }.
%edes        atTable                 The Address Translation tables contain the\n            NetworkAddress to `physical' address equivalences.\n            Some interfaces do not use translation tables for\n            determining address equivalences (e.g., DDN-X.25\n            has an algorithmic method); if all interfaces are\n            of this type, then the Address Translation table\n            is empty, i.e., has zero entries.
%edes        atEntry                 Each entry contains one NetworkAddress to\n            `physical' address equivalence.
%edes        atIfIndex               The interface on which this entry's equivalence\n            is effective.  The interface identified by a\n            particular value of this index is the same\n            interface as identified by the same value of\n            ifIndex.
%edes        atPhysAddress           The media-dependent `physical' address.\n\n            Setting this object to a null string (one of zero\n            length) has the effect of invaliding the\n            corresponding entry in the atTable object.  That\n            is, it effectively dissasociates the interface\n            identified with said entry from the mapping\n            identified with said entry.  It is an\n            implementation-specific matter as to whether the\n            agent removes an invalidated entry from the table.\n            Accordingly, management stations must be prepared\n            to receive tabular information from agents that\n            corresponds to entries not currently in use.\n            Proper interpretation of such entries requires\n            examination of the relevant atPhysAddress object.
%edes        atNetAddress            The NetworkAddress (e.g., the IP address)\n            corresponding to the media-dependent `physical'\n            address.
%edes        ipForwarding            The indication of whether this entity is acting\n            as an IP gateway in respect to the forwarding of\n            datagrams received by, but not addressed to, this\n            entity.  IP gateways forward datagrams.  IP hosts\n            do not (except those source-routed via the host).\n\n            Note that for some managed nodes, this object may\n            take on only a subset of the values possible.\n            Accordingly, it is appropriate for an agent to\n            return a `badValue' response if a management\n            station attempts to change this object to an\n            inappropriate value.
%edes        ipDefaultTTL            The default value inserted into the Time-To-Live\n            field of the IP header of datagrams originated at\n            this entity, whenever a TTL value is not supplied\n            by the transport layer protocol.
%edes        ipInReceives            The total number of input datagrams received from\n            interfaces, including those received in error.
%edes        ipInHdrErrors           The number of input datagrams discarded due to\n            errors in their IP headers, including bad\n            checksums, version number mismatch, other format\n            errors, time-to-live exceeded, errors discovered\n            in processing their IP options, etc.
%edes        ipInAddrErrors          The number of input datagrams discarded because\n            the IP address in their IP header's destination\n            field was not a valid address to be received at\n            this entity.  This count includes invalid\n            addresses (e.g., 0.0.0.0) and addresses of\n            unsupported Classes (e.g., Class E).  For entities\n            which are not IP Gateways and therefore do not\n            forward datagrams, this counter includes datagrams\n            discarded because the destination address was not\n            a local address.
%edes        ipForwDatagrams         The number of input datagrams for which this\n            entity was not their final IP destination, as a\n            result of which an attempt was made to find a\n            route to forward them to that final destination.\n            In entities which do not act as IP Gateways, this\n            counter will include only those packets which were\n            Source-Routed via this entity, and the Source-\n            Route option processing was successful.
%edes        ipInUnknownProtos       The number of locally-addressed datagrams\n            received successfully but discarded because of an\n            unknown or unsupported protocol.
%edes        ipInDiscards            The number of input IP datagrams for which no\n            problems were encountered to prevent their\n            continued processing, but which were discarded\n            (e.g., for lack of buffer space).  Note that this\n            counter does not include any datagrams discarded\n            while awaiting re-assembly.
%edes        ipInDelivers            The total number of input datagrams successfully\n            delivered to IP user-protocols (including ICMP).
%edes        ipOutRequests           The total number of IP datagrams which local IP\n            user-protocols (including ICMP) supplied to IP in\n            requests for transmission.  Note that this counter\n            does not include any datagrams counted in\n            ipForwDatagrams.
%edes        ipOutDiscards           The number of output IP datagrams for which no\n\n            problem was encountered to prevent their\n            transmission to their destination, but which were\n            discarded (e.g., for lack of buffer space).  Note\n            that this counter would include datagrams counted\n            in ipForwDatagrams if any such packets met this\n            (discretionary) discard criterion.
%edes        ipOutNoRoutes           The number of IP datagrams discarded because no\n            route could be found to transmit them to their\n            destination.  Note that this counter includes any\n            packets counted in ipForwDatagrams which meet this\n            `no-route' criterion.  Note that this includes any\n            datagarms which a host cannot route because all of\n            its default gateways are down.
%edes        ipReasmTimeout          The maximum number of seconds which received\n            fragments are held while they are awaiting\n            reassembly at this entity.
%edes        ipReasmReqds            The number of IP fragments received which needed\n            to be reassembled at this entity.
%edes        ipReasmOKs              The number of IP datagrams successfully re-\n            assembled.
%edes        ipReasmFails            The number of failures detected by the IP re-\n            assembly algorithm (for whatever reason: timed\n            out, errors, etc).  Note that this is not\n            necessarily a count of discarded IP fragments\n            since some algorithms (notably the algorithm in\n            RFC 815) can lose track of the number of fragments\n            by combining them as they are received.
%edes        ipFragOKs               The number of IP datagrams that have been\n            successfully fragmented at this entity.
%edes        ipFragFails             The number of IP datagrams that have been\n            discarded because they needed to be fragmented at\n            this entity but could not be, e.g., because their\n            Don't Fragment flag was set.
%edes        ipFragCreates           The number of IP datagram fragments that have\n            been generated as a result of fragmentation at\n            this entity.
%edes        ipAddrTable             The table of addressing information relevant to\n            this entity's IP addresses.
%edes        ipAddrEntry             The addressing information for one of this\n            entity's IP addresses.
%edes        ipAdEntAddr             The IP address to which this entry's addressing\n            information pertains.
%edes        ipAdEntIfIndex          The index value which uniquely identifies the\n            interface to which this entry is applicable.  The\n            interface identified by a particular value of this\n            index is the same interface as identified by the\n            same value of ifIndex.
%edes        ipAdEntNetMask          The subnet mask associated with the IP address of\n            this entry.  The value of the mask is an IP\n            address with all the network bits set to 1 and all\n            the hosts bits set to 0.
%edes        ipAdEntBcastAddr        The value of the least-significant bit in the IP\n            broadcast address used for sending datagrams on\n            the (logical) interface associated with the IP\n            address of this entry.  For example, when the\n            Internet standard all-ones broadcast address is\n            used, the value will be 1.  This value applies to\n            both the subnet and network broadcasts addresses\n            used by the entity on this (logical) interface.
%edes        ipAdEntReasmMaxSize     The size of the largest IP datagram which this\n            entity can re-assemble from incoming IP fragmented\n            datagrams received on this interface.
%edes        ipRouteTable            This entity's IP Routing table.
%edes        ipRouteEntry            A route to a particular destination.
%edes        ipRouteDest             The destination IP address of this route.  An\n            entry with a value of 0.0.0.0 is considered a\n            default route.  Multiple routes to a single\n            destination can appear in the table, but access to\n            such multiple entries is dependent on the table-\n            access mechanisms defined by the network\n            management protocol in use.
%edes        ipRouteIfIndex          The index value which uniquely identifies the\n            local interface through which the next hop of this\n            route should be reached.  The interface identified\n            by a particular value of this index is the same\n            interface as identified by the same value of\n            ifIndex.
%edes        ipRouteMetric1          The primary routing metric for this route.  The\n            semantics of this metric are determined by the\n            routing-protocol specified in the route's\n            ipRouteProto value.  If this metric is not used,\n            its value should be set to -1.
%edes        ipRouteMetric2          An alternate routing metric for this route.  The\n            semantics of this metric are determined by the\n            routing-protocol specified in the route's\n            ipRouteProto value.  If this metric is not used,\n            its value should be set to -1.
%edes        ipRouteMetric3          An alternate routing metric for this route.  The\n            semantics of this metric are determined by the\n            routing-protocol specified in the route's\n            ipRouteProto value.  If this metric is not used,\n            its value should be set to -1.
%edes        ipRouteMetric4          An alternate routing metric for this route.  The\n            semantics of this metric are determined by the\n            routing-protocol specified in the route's\n            ipRouteProto value.  If this metric is not used,\n            its value should be set to -1.
%edes        ipRouteNextHop          The IP address of the next hop of this route.\n            (In the case of a route bound to an interface\n            which is realized via a broadcast media, the value\n            of this field is the agent's IP address on that\n            interface.)
%edes        ipRouteType             The type of route.  Note that the values\n            direct(3) and indirect(4) refer to the notion of\n            direct and indirect routing in the IP\n            architecture.\n\n            Setting this object to the value invalid(2) has\n            the effect of invalidating the corresponding entry\n            in the ipRouteTable object.  That is, it\n            effectively dissasociates the destination\n            identified with said entry from the route\n            identified with said entry.  It is an\n            implementation-specific matter as to whether the\n            agent removes an invalidated entry from the table.\n            Accordingly, management stations must be prepared\n            to receive tabular information from agents that\n            corresponds to entries not currently in use.\n            Proper interpretation of such entries requires\n            examination of the relevant ipRouteType object.
%edes        ipRouteProto            The routing mechanism via which this route was\n            learned.  Inclusion of values for gateway routing\n            protocols is not intended to imply that hosts\n            should support those protocols.
%edes        ipRouteAge              The number of seconds since this route was last\n            updated or otherwise determined to be correct.\n            Note that no semantics of `too old' can be implied\n            except through knowledge of the routing protocol\n            by which the route was learned.
%edes        ipRouteMask             Indicate the mask to be logical-ANDed with the\n            destination address before being compared to the\n            value in the ipRouteDest field.  For those systems\n            that do not support arbitrary subnet masks, an\n            agent constructs the value of the ipRouteMask by\n            determining whether the value of the correspondent\n            ipRouteDest field belong to a class-A, B, or C\n            network, and then using one of:\n\n                 mask           network\n                 255.0.0.0      class-A\n                 255.255.0.0    class-B\n                 255.255.255.0  class-C\n\n            If the value of the ipRouteDest is 0.0.0.0 (a\n            default route), then the mask value is also\n            0.0.0.0.  It should be noted that all IP routing\n            subsystems implicitly use this mechanism.
%edes        ipRouteMetric5          An alternate routing metric for this route.  The\n            semantics of this metric are determined by the\n            routing-protocol specified in the route's\n            ipRouteProto value.  If this metric is not used,\n            its value should be set to -1.
%edes        ipRouteInfo             A reference to MIB definitions specific to the\n            particular routing protocol which is responsible\n            for this route, as determined by the value\n            specified in the route's ipRouteProto value.  If\n            this information is not present, its value should\n            be set to the OBJECT IDENTIFIER { 0 0 }, which is\n            a syntatically valid object identifier, and any\n            conformant implementation of ASN.1 and BER must be\n            able to generate and recognize this value.
%edes        ipNetToMediaTable       The IP Address Translation table used for mapping\n            from IP addresses to physical addresses.
%edes        ipNetToMediaEntry       Each entry contains one IpAddress to `physical'\n            address equivalence.
%edes        ipNetToMediaIfIndex     The interface on which this entry's equivalence\n            is effective.  The interface identified by a\n            particular value of this index is the same\n            interface as identified by the same value of\n            ifIndex.
%edes        ipNetToMediaPhysAddress The media-dependent `physical' address.
%edes        ipNetToMediaNetAddress  The IpAddress corresponding to the media-\n            dependent `physical' address.
%edes        ipNetToMediaType        The type of mapping.\n\n            Setting this object to the value invalid(2) has\n            the effect of invalidating the corresponding entry\n            in the ipNetToMediaTable.  That is, it effectively\n            dissasociates the interface identified with said\n            entry from the mapping identified with said entry.\n            It is an implementation-specific matter as to\n            whether the agent removes an invalidated entry\n            from the table.  Accordingly, management stations\n            must be prepared to receive tabular information\n            from agents that corresponds to entries not\n            currently in use.  Proper interpretation of such\n            entries requires examination of the relevant\n            ipNetToMediaType object.
%edes        ipRoutingDiscards       The number of routing entries which were chosen\n            to be discarded even though they are valid.  One\n            possible reason for discarding such an entry could\n            be to free-up buffer space for other routing\n\n            entries.
%edes        icmpInMsgs              The total number of ICMP messages which the\n            entity received.  Note that this counter includes\n            all those counted by icmpInErrors.
%edes        icmpInErrors            The number of ICMP messages which the entity\n            received but determined as having ICMP-specific\n            errors (bad ICMP checksums, bad length, etc.).
%edes        icmpInDestUnreachs      The number of ICMP Destination Unreachable\n            messages received.
%edes        icmpInTimeExcds         The number of ICMP Time Exceeded messages\n            received.
%edes        icmpInParmProbs         The number of ICMP Parameter Problem messages\n            received.
%edes        icmpInSrcQuenchs        The number of ICMP Source Quench messages\n            received.
%edes        icmpInRedirects         The number of ICMP Redirect messages received.
%edes        icmpInEchos             The number of ICMP Echo (request) messages\n            received.
%edes        icmpInEchoReps          The number of ICMP Echo Reply messages received.
%edes        icmpInTimestamps        The number of ICMP Timestamp (request) messages\n            received.
%edes        icmpInTimestampReps     The number of ICMP Timestamp Reply messages\n            received.
%edes        icmpInAddrMasks         The number of ICMP Address Mask Request messages\n            received.
%edes        icmpInAddrMaskReps      The number of ICMP Address Mask Reply messages\n            received.
%edes        icmpOutMsgs             The total number of ICMP messages which this\n            entity attempted to send.  Note that this counter\n            includes all those counted by icmpOutErrors.
%edes        icmpOutErrors           The number of ICMP messages which this entity did\n            not send due to problems discovered within ICMP\n\n            such as a lack of buffers.  This value should not\n            include errors discovered outside the ICMP layer\n            such as the inability of IP to route the resultant\n            datagram.  In some implementations there may be no\n            types of error which contribute to this counter's\n            value.
%edes        icmpOutDestUnreachs     The number of ICMP Destination Unreachable\n            messages sent.
%edes        icmpOutTimeExcds        The number of ICMP Time Exceeded messages sent.
%edes        icmpOutParmProbs        The number of ICMP Parameter Problem messages\n            sent.
%edes        icmpOutSrcQuenchs       The number of ICMP Source Quench messages sent.
%edes        icmpOutRedirects        The number of ICMP Redirect messages sent.  For a\n\n            host, this object will always be zero, since hosts\n            do not send redirects.
%edes        icmpOutEchos            The number of ICMP Echo (request) messages sent.
%edes        icmpOutEchoReps         The number of ICMP Echo Reply messages sent.
%edes        icmpOutTimestamps       The number of ICMP Timestamp (request) messages\n            sent.
%edes        icmpOutTimestampReps    The number of ICMP Timestamp Reply messages\n            sent.
%edes        icmpOutAddrMasks        The number of ICMP Address Mask Request messages\n            sent.
%edes        icmpOutAddrMaskReps     The number of ICMP Address Mask Reply messages\n            sent.
%edes        tcpRtoAlgorithm         The algorithm used to determine the timeout value\n            used for retransmitting unacknowledged octets.
%edes        tcpRtoMin               The minimum value permitted by a TCP\n            implementation for the retransmission timeout,\n            measured in milliseconds.  More refined semantics\n            for objects of this type depend upon the algorithm\n            used to determine the retransmission timeout.  In\n            particular, when the timeout algorithm is rsre(3),\n            an object of this type has the semantics of the\n            LBOUND quantity described in RFC 793.
%edes        tcpRtoMax               The maximum value permitted by a TCP\n            implementation for the retransmission timeout,\n            measured in milliseconds.  More refined semantics\n            for objects of this type depend upon the algorithm\n            used to determine the retransmission timeout.  In\n            particular, when the timeout algorithm is rsre(3),\n            an object of this type has the semantics of the\n            UBOUND quantity described in RFC 793.
%edes        tcpMaxConn              The limit on the total number of TCP connections\n            the entity can support.  In entities where the\n            maximum number of connections is dynamic, this\n            object should contain the value -1.
%edes        tcpActiveOpens          The number of times TCP connections have made a\n            direct transition to the SYN-SENT state from the\n            CLOSED state.
%edes        tcpPassiveOpens         The number of times TCP connections have made a\n            direct transition to the SYN-RCVD state from the\n            LISTEN state.
%edes        tcpAttemptFails         The number of times TCP connections have made a\n            direct transition to the CLOSED state from either\n            the SYN-SENT state or the SYN-RCVD state, plus the\n            number of times TCP connections have made a direct\n            transition to the LISTEN state from the SYN-RCVD\n            state.
%edes        tcpEstabResets          The number of times TCP connections have made a\n            direct transition to the CLOSED state from either\n            the ESTABLISHED state or the CLOSE-WAIT state.
%edes        tcpCurrEstab            The number of TCP connections for which the\n            current state is either ESTABLISHED or CLOSE-\n            WAIT.
%edes        tcpInSegs               The total number of segments received, including\n            those received in error.  This count includes\n            segments received on currently established\n            connections.
%edes        tcpOutSegs              The total number of segments sent, including\n            those on current connections but excluding those\n            containing only retransmitted octets.
%edes        tcpRetransSegs          The total number of segments retransmitted - that\n            is, the number of TCP segments transmitted\n            containing one or more previously transmitted\n            octets.
%edes        tcpConnTable            A table containing TCP connection-specific\n            information.
%edes        tcpConnEntry            Information about a particular current TCP\n            connection.  An object of this type is transient,\n            in that it ceases to exist when (or soon after)\n            the connection makes the transition to the CLOSED\n            state.
%edes        tcpConnState            The state of this TCP connection.\n\n            The only value which may be set by a management\n            station is deleteTCB(12).  Accordingly, it is\n            appropriate for an agent to return a `badValue'\n            response if a management station attempts to set\n            this object to any other value.\n\n            If a management station sets this object to the\n            value deleteTCB(12), then this has the effect of\n            deleting the TCB (as defined in RFC 793) of the\n            corresponding connection on the managed node,\n            resulting in immediate termination of the\n            connection.\n\n            As an implementation-specific option, a RST\n\n            segment may be sent from the managed node to the\n            other TCP endpoint (note however that RST segments\n            are not sent reliably).
%edes        tcpConnLocalAddress     The local IP address for this TCP connection.  In\n            the case of a connection in the listen state which\n            is willing to accept connections for any IP\n            interface associated with the node, the value\n            0.0.0.0 is used.
%edes        tcpConnLocalPort        The local port number for this TCP connection.
%edes        tcpConnRemAddress       The remote IP address for this TCP connection.
%edes        tcpConnRemPort          The remote port number for this TCP connection.
%edes        tcpInErrs               The total number of segments received in error\n            (e.g., bad TCP checksums).
%edes        tcpOutRsts              The number of TCP segments sent containing the\n            RST flag.
%edes        udpInDatagrams          The total number of UDP datagrams delivered to\n            UDP users.
%edes        udpNoPorts              The total number of received UDP datagrams for\n            which there was no application at the destination\n            port.
%edes        udpInErrors             The number of received UDP datagrams that could\n            not be delivered for reasons other than the lack\n            of an application at the destination port.
%edes        udpOutDatagrams         The total number of UDP datagrams sent from this\n            entity.
%edes        udpTable                A table containing UDP listener information.
%edes        udpEntry                Information about a particular current UDP\n            listener.
%edes        udpLocalAddress         The local IP address for this UDP listener.  In\n\n            the case of a UDP listener which is willing to\n            accept datagrams for any IP interface associated\n            with the node, the value 0.0.0.0 is used.
%edes        udpLocalPort            The local port number for this UDP listener.
%edes        egpInMsgs               The number of EGP messages received without\n            error.
%edes        egpInErrors             The number of EGP messages received that proved\n            to be in error.
%edes        egpOutMsgs              The total number of locally generated EGP\n            messages.
%edes        egpOutErrors            The number of locally generated EGP messages not\n            sent due to resource limitations within an EGP\n            entity.
%edes        egpNeighTable           The EGP neighbor table.
%edes        egpNeighEntry           Information about this entity's relationship with\n            a particular EGP neighbor.
%edes        egpNeighState           The EGP state of the local system with respect to\n            this entry's EGP neighbor.  Each EGP state is\n            represented by a value that is one greater than\n            the numerical value associated with said state in\n            RFC 904.
%edes        egpNeighAddr            The IP address of this entry's EGP neighbor.
%edes        egpNeighAs              The autonomous system of this EGP peer.  Zero\n            should be specified if the autonomous system\n            number of the neighbor is not yet known.
%edes        egpNeighInMsgs          The number of EGP messages received without error\n            from this EGP peer.
%edes        egpNeighInErrs          The number of EGP messages received from this EGP\n            peer that proved to be in error (e.g., bad EGP\n            checksum).
%edes        egpNeighOutMsgs         The number of locally generated EGP messages to\n            this EGP peer.
%edes        egpNeighOutErrs         The number of locally generated EGP messages not\n            sent to this EGP peer due to resource limitations\n            within an EGP entity.
%edes        egpNeighInErrMsgs       The number of EGP-defined error messages received\n            from this EGP peer.
%edes        egpNeighOutErrMsgs      The number of EGP-defined error messages sent to\n            this EGP peer.
%edes        egpNeighStateUps        The number of EGP state transitions to the UP\n            state with this EGP peer.
%edes        egpNeighStateDowns      The number of EGP state transitions from the UP\n            state to any other state with this EGP peer.
%edes        egpNeighIntervalHello   The interval between EGP Hello command\n            retransmissions (in hundredths of a second).  This\n            represents the t1 timer as defined in RFC 904.
%edes        egpNeighIntervalPoll    The interval between EGP poll command\n\n            retransmissions (in hundredths of a second).  This\n            represents the t3 timer as defined in RFC 904.
%edes        egpNeighMode            The polling mode of this EGP entity, either\n            passive or active.
%edes        egpNeighEventTrigger    A control variable used to trigger operator-\n            initiated Start and Stop events.  When read, this\n            variable always returns the most recent value that\n            egpNeighEventTrigger was set to.  If it has not\n            been set since the last initialization of the\n            network management subsystem on the node, it\n            returns a value of `stop'.\n\n            When set, this variable causes a Start or Stop\n            event on the specified neighbor, as specified on\n            pages 8-10 of RFC 904.  Briefly, a Start event\n            causes an Idle peer to begin neighbor acquisition\n            and a non-Idle peer to reinitiate neighbor\n            acquisition.  A stop event causes a non-Idle peer\n            to return to the Idle state until a Start event\n            occurs, either via egpNeighEventTrigger or\n            otherwise.
%edes        egpAs                   The autonomous system number of this EGP entity.
%edes        mplsXCUp                This notification is generated when the\n        mplsXCOperStatus object for one or more contiguous\n        entries in mplsXCTable are about to enter the up(1)\n        state from some other state. The included values of\n        mplsXCOperStatus MUST both be set equal to this\n        new state (i.e: up(1)).  The two instances of\n        mplsXCOperStatus in this notification indicate the range\n        of indexes that are affected.  Note that all the indexes\n        of the two ends of the range can be derived from the\n        instance identifiers of these two objects.  For\n        cases where a contiguous range of cross-connects\n        have transitioned into the up(1) state at roughly\n        the same time, the device SHOULD issue a single\n        notification for each range of contiguous indexes in\n        an effort to minimize the emission of a large number\n        of notifications.  If a notification has to be\n        issued for just a single cross-connect entry, then\n        the instance identifier (and values) of the two\n        mplsXCOperStatus objects MUST be the identical.
%edes        mplsXCDown              This notification is generated when the\n        mplsXCOperStatus object for one or more contiguous\n        entries in mplsXCTable are about to enter the\n        down(2) state from some other state. The included values\n\n        of mplsXCOperStatus MUST both be set equal to this\n        down(2) state.  The two instances of mplsXCOperStatus\n        in this notification indicate the range of indexes\n        that are affected.  Note that all the indexes of the\n        two ends of the range can be derived from the\n        instance identifiers of these two objects.  For\n        cases where a contiguous range of cross-connects\n        have transitioned into the down(2) state at roughly\n        the same time, the device SHOULD issue a single\n        notification for each range of contiguous indexes in\n        an effort to minimize the emission of a large number\n        of notifications.  If a notification has to be\n        issued for just a single cross-connect entry, then\n        the instance identifier (and values) of the two\n        mplsXCOperStatus objects MUST be identical.
%edes        mplsInterfaceTable      This table specifies per-interface MPLS capability\n        and associated information.
%edes        mplsInterfaceEntry      A conceptual row in this table is created\n        automatically by an LSR for every interface capable\n        of supporting MPLS and which is configured to do so.\n        A conceptual row in this table will exist if and only if\n        a corresponding entry in ifTable exists with ifType =\n        mpls(166). If this associated entry in ifTable is\n        operationally disabled (thus removing MPLS\n        capabilities on that interface), the corresponding\n        entry in this table MUST be deleted shortly thereafter.\n        An conceptual row with index 0 is created if the LSR\n        supports per-platform labels. This conceptual row\n        represents the per-platform label space and contains\n        parameters that apply to all interfaces that participate\n        in the per-platform label space. Other conceptual rows\n        in this table represent MPLS interfaces that may\n        participate in either the per-platform or per-\n        interface label spaces, or both.  Implementations\n        that either only support per-platform labels,\n        or have only them configured, may choose to return\n        just the mplsInterfaceEntry of 0 and not return\n        the other rows. This will greatly reduce the number\n        of objects returned. Further information about label\n        space participation of an interface is provided in\n        the DESCRIPTION clause of\n        mplsInterfaceLabelParticipationType.
%edes        mplsInterfaceIndex      This is a unique index for an entry in the\n        MplsInterfaceTable.  A non-zero index for an\n        entry indicates the ifIndex for the corresponding\n        interface entry of the MPLS-layer in the ifTable.\n        The entry with index 0 represents the per-platform\n        label space and contains parameters that apply to all\n        interfaces that participate in the per-platform label\n        space. Other entries defined in this table represent\n        additional MPLS interfaces that may participate in either\n        the per-platform or per-interface label spaces, or both.
%eref        mplsInterfaceIndex      RFC 2863 - The Interfaces Group MIB, McCloghrie, K.,\n        and F. Kastenholtz, June 2000
%edes        mplsInterfaceLabelMinIn This is the minimum value of an MPLS label that this\n        LSR is willing to receive on this interface.
%edes        mplsInterfaceLabelMaxIn This is the maximum value of an MPLS label that this\n        LSR is willing to receive on this interface.
%edes        mplsInterfaceLabelMinOut This is the minimum value of an MPLS label that this\n\n        LSR is willing to send on this interface.
%edes        mplsInterfaceLabelMaxOut This is the maximum value of an MPLS label that this\n        LSR is willing to send on this interface.
%eunits      mplsInterfaceTotalBandwidth kilobits per second
%edes        mplsInterfaceTotalBandwidth This value indicates the total amount of usable\n        bandwidth on this interface and is specified in\n        kilobits per second (Kbps).  This variable is not\n        applicable when applied to the interface with index\n        0. When this value cannot be measured, this value\n        should contain the nominal bandwidth.
%edes        mplsInterfaceAvailableBandwidth This value indicates the total amount of available\n        bandwidth available on this interface and is\n        specified in kilobits per second (Kbps).  This value\n        is calculated as the difference between the amount\n        of bandwidth currently in use and that specified in\n        mplsInterfaceTotalBandwidth.  This variable is not\n        applicable when applied to the interface with index\n        0. When this value cannot be measured, this value\n        should contain the nominal bandwidth.
%edes        mplsInterfaceLabelParticipationType If the value of the mplsInterfaceIndex for this\n        entry is zero, then this entry corresponds to the\n        per-platform label space for all interfaces configured\n        to use that label space. In this case the perPlatform(0)\n        bit MUST be set; the perInterface(1) bit is meaningless\n        and MUST be ignored.\n\n        The remainder of this description applies to entries\n        with a non-zero value of mplsInterfaceIndex.\n\n        If the perInterface(1) bit is set then the value of\n        mplsInterfaceLabelMinIn, mplsInterfaceLabelMaxIn,\n        mplsInterfaceLabelMinOut, and\n        mplsInterfaceLabelMaxOut for this entry reflect the\n        label ranges for this interface.\n\n        If only the perPlatform(0) bit is set, then the value of\n        mplsInterfaceLabelMinIn, mplsInterfaceLabelMaxIn,\n        mplsInterfaceLabelMinOut, and\n        mplsInterfaceLabelMaxOut for this entry MUST be\n        identical to the instance of these objects with\n        index 0.  These objects may only vary from the entry\n        with index 0 if both the perPlatform(0) and perInterface(1)\n        bits are set.\n\n        In all cases, at a minimum one of the perPlatform(0) or\n        perInterface(1) bits MUST be set to indicate that\n        at least one label space is in use by this interface. In\n        all cases, agents MUST ensure that label ranges are\n        specified consistently and MUST return an\n        inconsistentValue error when they do not.
%eref        mplsInterfaceLabelParticipationType Rosen, E., Viswanathan, A., and R. Callon,\n        Multiprotocol Label Switching Architecture, RFC\n        3031, January 2001.
%edes        mplsInterfacePerfTable  This table provides MPLS performance information on\n        a per-interface basis.
%edes        mplsInterfacePerfEntry  An entry in this table is created by the LSR for\n        every interface capable of supporting MPLS.  Its is\n        an extension to the mplsInterfaceEntry table.\n        Note that the discontinuity behavior of entries in\n        this table MUST be based on the corresponding\n        ifEntry's ifDiscontinuityTime.
%edes        mplsInterfacePerfInLabelsInUse This object counts the number of labels that are in\n        use at this point in time on this interface in the\n        incoming direction. If the interface participates in\n        only the per-platform label space, then the value of\n        the instance of this object MUST be identical to\n        the value of the instance with index 0. If the\n        interface participates in the per-interface label\n        space, then the instance of this object MUST\n        represent the number of per-interface labels that\n        are in use on this interface.
%edes        mplsInterfacePerfInLabelLookupFailures This object counts the number of labeled packets\n        that have been received on this interface and which\n        were discarded because there was no matching cross-\n        connect entry. This object MUST count on a per-\n        interface basis regardless of which label space the\n        interface participates in.
%edes        mplsInterfacePerfOutLabelsInUse This object counts the number of top-most labels in\n        the outgoing label stacks that are in use at this\n        point in time on this interface. This object MUST\n        count on a per-interface basis regardless of which\n        label space the interface participates in.
%edes        mplsInterfacePerfOutFragmentedPkts This object counts the number of outgoing MPLS\n        packets that required fragmentation before\n        transmission on this interface. This object MUST\n        count on a per-interface basis regardless of which\n        label space the interface participates in.
%edes        mplsInSegmentIndexNext  This object contains the next available value to\n        be used for mplsInSegmentIndex when creating entries\n        in the mplsInSegmentTable. The special value of a\n        string containing the single octet 0x00 indicates\n        that no new entries can be created in this table.\n        Agents not allowing managers to create entries\n\n        in this table MUST set this object to this special\n        value.
%edes        mplsInSegmentTable      This table contains a description of the incoming MPLS\n        segments (labels) to an LSR and their associated parameters.\n        The index for this table is mplsInSegmentIndex.\n        The index structure of this table is specifically designed\n        to handle many different MPLS implementations that manage\n        their labels both in a distributed and centralized manner.\n        The table is also designed to handle existing MPLS labels\n        as defined in RFC3031 as well as longer ones that may\n        be necessary in the future.\n\n        In cases where the label cannot fit into the\n        mplsInSegmentLabel object, the mplsInSegmentLabelPtr\n        will indicate this by being set to the first accessible\n        column in the appropriate extension table's row.\n        In this case an additional table MUST\n        be provided and MUST be indexed by at least the indexes\n        used by this table. In all other cases when the label is\n        represented within the mplsInSegmentLabel object, the\n        mplsInSegmentLabelPtr MUST be set to 0.0. Due to the\n        fact that MPLS labels may not exceed 24 bits, the\n        mplsInSegmentLabelPtr object is only a provision for\n        future-proofing the MIB module. Thus, the definition\n        of any extension tables is beyond the scope of this\n        MIB module.
%edes        mplsInSegmentEntry      An entry in this table represents one incoming\n        segment as is represented in an LSR's LFIB.\n        An entry can be created by a network\n        administrator or an SNMP agent, or an MPLS signaling\n        protocol.  The creator of the entry is denoted by\n        mplsInSegmentOwner.\n\n        The value of mplsInSegmentRowStatus cannot be active(1)\n        unless the ifTable entry corresponding to\n        mplsInSegmentInterface exists.  An entry in this table\n        must match any incoming packets, and indicates an\n        instance of mplsXCEntry based on which forwarding\n        and/or switching actions are taken.
%edes        mplsInSegmentIndex      The index for this in-segment. The\n        string containing the single octet 0x00\n        MUST not be used as an index.
%edes        mplsInSegmentInterface  This object represents the\n        interface index for the incoming MPLS interface.  A\n        value of zero represents all interfaces participating in\n        the per-platform label space.  This may only be used\n        in cases where the incoming interface and label\n        are associated with the same mplsXCEntry. Specifically,\n        given a label and any incoming interface pair from the\n        per-platform label space, the outgoing label/interface\n        mapping remains the same. If this is not the case,\n        then individual entries MUST exist that\n\n        can then be mapped to unique mplsXCEntries.
%edes        mplsInSegmentLabel      If the corresponding instance of mplsInSegmentLabelPtr is\n      zeroDotZero then this object MUST contain the incoming label\n      associated with this in-segment. If not this object SHOULD\n      be zero and MUST be ignored.
%edes        mplsInSegmentLabelPtr   If the label for this segment cannot be represented\n        fully within the mplsInSegmentLabel object,\n        this object MUST point to the first accessible\n        column of a conceptual row in an external table containing\n        the label.  In this case, the mplsInSegmentTopLabel\n        object SHOULD be set to 0 and ignored. This object MUST\n        be set to zeroDotZero otherwise.
%edes        mplsInSegmentNPop       The number of labels to pop from the incoming\n        packet.  Normally only the top label is popped from\n        the packet and used for all switching decisions for\n        that packet.  This is indicated by setting this\n        object to the default value of 1. If an LSR supports\n        popping of more than one label, this object MUST\n        be set to that number. This object cannot be modified\n        if mplsInSegmentRowStatus is active(1).
%edes        mplsInSegmentAddrFamily The IANA address family [IANAFamily] of packets\n        received on this segment, which is used at an egress\n        LSR to deliver them to the appropriate layer 3 entity.\n        A value of other(0) indicates that the family type is\n        either unknown or undefined; this SHOULD NOT be used\n        at an egress LSR. This object cannot be\n        modified if mplsInSegmentRowStatus is active(1).
%eref        mplsInSegmentAddrFamily Internet Assigned Numbers Authority (IANA), ADDRESS\n        FAMILY NUMBERS, (http://www.iana.org/assignments/\n        address-family-numbers), for MIB see:\n        http://www.iana.org/assignments/\n        ianaaddressfamilynumbers-mib\n
%edes        mplsInSegmentXCIndex    Index into mplsXCTable which identifies which cross-\n        connect entry this segment is part of.  The string\n        containing the single octet 0x00 indicates that this\n        entry is not referred to by any cross-connect entry.\n        When a cross-connect entry is created which this\n        in-segment is a part of, this object is automatically\n        updated to reflect the value of mplsXCIndex of that\n        cross-connect entry.
%edes        mplsInSegmentOwner      Denotes the entity that created and is responsible\n        for managing this segment.
%edes        mplsInSegmentTrafficParamPtr This variable represents a pointer to the traffic\n      parameter specification for this in-segment.  This\n      value may point at an entry in the\n      mplsTunnelResourceTable in the MPLS-TE-STD-MIB (RFC3812)\n      to indicate which traffic parameter settings for this\n      segment if it represents an LSP used for a TE tunnel.\n\n      This value may optionally point at an\n      externally defined traffic parameter specification\n      table.  A value of zeroDotZero indicates best-effort\n      treatment.  By having the same value of this object,\n      two or more segments can indicate resource sharing\n      of such things as LSP queue space, etc.\n\n      This object cannot be modified if mplsInSegmentRowStatus\n      is active(1).  For entries in this table that\n      are preserved after a re-boot, the agent MUST ensure\n      that their integrity be preserved, or this object should\n      be set to 0.0 if it cannot.
%edes        mplsInSegmentRowStatus  This variable is used to create, modify, and/or\n        delete a row in this table. When a row in this\n        table has a row in the active(1) state, no\n        objects in this row can be modified except the\n        mplsInSegmentRowStatus and mplsInSegmentStorageType.
%edes        mplsInSegmentStorageType This variable indicates the storage type for this\n        object. The agent MUST ensure that this object's\n        value remains consistent with the associated\n        mplsXCEntry. Conceptual rows having the value\n        'permanent' need not allow write-access to any\n        columnar objects in the row.
%eref        mplsInSegmentStorageType See RFC2579.
%edes        mplsInSegmentPerfTable  This table contains statistical information for\n        incoming MPLS segments to an LSR.
%edes        mplsInSegmentPerfEntry  An entry in this table contains statistical\n        information about one incoming segment which is\n        configured in the mplsInSegmentTable. The counters\n        in this entry should behave in a manner similar to\n        that of the interface.\n        mplsInSegmentPerfDiscontinuityTime indicates the\n        time of the last discontinuity in all of these\n        objects.
%edes        mplsInSegmentPerfOctets This value represents the total number of octets\n        received by this segment. It MUST be equal to the\n        least significant 32 bits of\n        mplsInSegmentPerfHCOctets\n        if mplsInSegmentPerfHCOctets is supported according to\n        the rules spelled out in RFC2863.
%edes        mplsInSegmentPerfPackets Total number of packets received by this segment.
%edes        mplsInSegmentPerfErrors The number of errored packets received on this\n        segment.
%edes        mplsInSegmentPerfDiscards The number of labeled packets received on this in-\n        segment, which were chosen to be discarded even\n        though no errors had been detected to prevent their\n        being transmitted.  One possible reason for\n        discarding such a labeled packet could be to free up\n        buffer space.
%edes        mplsInSegmentPerfHCOctets The total number of octets received.  This is the 64\n        bit version of mplsInSegmentPerfOctets,\n        if mplsInSegmentPerfHCOctets is supported according to\n        the rules spelled out in RFC2863.
%edes        mplsInSegmentPerfDiscontinuityTime The value of sysUpTime on the most recent occasion\n        at which any one or more of this segment's Counter32\n        or Counter64 suffered a discontinuity. If no such\n        discontinuities have occurred since the last re-\n        initialization of the local management subsystem,\n        then this object contains a zero value.
%edes        mplsOutSegmentIndexNext This object contains the next available value to\n        be used for mplsOutSegmentIndex when creating entries\n        in the mplsOutSegmentTable. The special value of a\n        string containing the single octet 0x00\n        indicates that no new entries can be created in this\n        table. Agents not allowing managers to create entries\n        in this table MUST set this object to this special\n        value.
%edes        mplsOutSegmentTable     This table contains a representation of the outgoing\n        segments from an LSR.
%edes        mplsOutSegmentEntry     An entry in this table represents one outgoing\n\n        segment.  An entry can be created by a network\n        administrator, an SNMP agent, or an MPLS signaling\n        protocol.  The object mplsOutSegmentOwner indicates\n        the creator of this entry. The value of\n        mplsOutSegmentRowStatus cannot be active(1) unless\n        the ifTable entry corresponding to\n        mplsOutSegmentInterface exists.\n\n        Note that the indexing of this table uses a single,\n        arbitrary index (mplsOutSegmentIndex) to indicate\n        which out-segment (i.e.: label) is being switched to\n        from which in-segment (i.e: label) or in-segments.\n        This is necessary because it is possible to have an\n        equal-cost multi-path situation where two identical\n        out-going labels are assigned to the same\n        cross-connect (i.e.: they go to two different neighboring\n        LSRs); thus, requiring two out-segments. In order to\n        preserve the uniqueness of the references\n        by the mplsXCEntry, an arbitrary integer must be used as\n        the index for this table.
%edes        mplsOutSegmentIndex     This value contains a unique index for this row.\n        While a value of a string containing the single\n        octet 0x00 is not valid as an index for entries\n        in this table, it can be supplied as a valid value\n        to index the mplsXCTable to represent entries for\n\n        which no out-segment has been configured or\n        exists.
%edes        mplsOutSegmentInterface This value must contain the interface index of the\n        outgoing interface. This object cannot be modified\n        if mplsOutSegmentRowStatus is active(1). The\n        mplsOutSegmentRowStatus cannot be set to active(1)\n        until this object is set to a value corresponding to\n        a valid ifEntry.
%edes        mplsOutSegmentPushTopLabel This value indicates whether or not a top label\n        should be pushed onto the outgoing packet's label\n        stack.  The value of this variable MUST be set to\n        true(1) if the outgoing interface does not support\n        pop-and-go (and no label stack remains). For example,\n        on ATM interface, or if the segment represents a\n        tunnel origination.  Note that it is considered\n        an error in the case that mplsOutSegmentPushTopLabel\n        is set to false, but the cross-connect entry which\n        refers to this out-segment has a non-zero\n        mplsLabelStackIndex.  The LSR MUST ensure that this\n        situation does not happen. This object cannot be\n        modified if mplsOutSegmentRowStatus is active(1).
%edes        mplsOutSegmentTopLabel  If mplsOutSegmentPushTopLabel is true then this\n        represents the label that should be pushed onto the\n        top of the outgoing packet's label stack. Otherwise\n        this value SHOULD be set to 0 by the management\n        station and MUST be ignored by the agent. This\n\n        object cannot be modified if mplsOutSegmentRowStatus\n        is active(1).
%edes        mplsOutSegmentTopLabelPtr If the label for this segment cannot be represented\n        fully within the mplsOutSegmentLabel object,\n        this object MUST point to the first accessible\n        column of a conceptual row in an external table containing\n        the label.  In this case, the mplsOutSegmentTopLabel\n        object SHOULD be set to 0 and ignored. This object\n        MUST be set to zeroDotZero otherwise.
%edes        mplsOutSegmentNextHopAddrType Indicates the next hop Internet address type.\n        Only values unknown(0), ipv4(1) or ipv6(2)\n        have to be supported.\n\n        A value of unknown(0) is allowed only when\n        the outgoing interface is of type point-to-point.\n        If any other unsupported values are attempted in a set\n        operation, the agent MUST return an inconsistentValue\n        error.
%eref        mplsOutSegmentNextHopAddrType See RFC3291.
%edes        mplsOutSegmentNextHopAddr The internet address of the next hop. The type of\n        this address is determined by the value of the\n        mplslOutSegmentNextHopAddrType object.\n\n        This object cannot be modified if\n\n        mplsOutSegmentRowStatus is active(1).
%edes        mplsOutSegmentXCIndex   Index into mplsXCTable which identifies which cross-\n        connect entry this segment is part of.  A value of\n        the string containing the single octet 0x00\n        indicates that this entry is not referred\n        to by any cross-connect entry.  When a cross-connect\n        entry is created which this out-segment is a part of,\n        this object MUST be updated by the agent to reflect\n        the value of mplsXCIndex of that cross-connect\n        entry.
%edes        mplsOutSegmentOwner     Denotes the entity which created and is responsible\n        for managing this segment.
%edes        mplsOutSegmentTrafficParamPtr This variable represents a pointer to the traffic\n      parameter specification for this out-segment.  This\n      value may point at an entry in the\n      MplsTunnelResourceEntry in the MPLS-TE-STD-MIB (RFC3812)\n\n      RFC Editor: Please fill in RFC number.\n\n      to indicate which traffic parameter settings for this\n      segment if it represents an LSP used for a TE tunnel.\n\n      This value may optionally point at an\n      externally defined traffic parameter specification\n      table.  A value of zeroDotZero indicates best-effort\n      treatment.  By having the same value of this object,\n      two or more segments can indicate resource sharing\n\n      of such things as LSP queue space, etc.\n\n      This object cannot be modified if\n      mplsOutSegmentRowStatus is active(1).\n      For entries in this table that\n      are preserved after a re-boot, the agent MUST ensure\n      that their integrity be preserved, or this object should\n      be set to 0.0 if it cannot.
%edes        mplsOutSegmentRowStatus For creating, modifying, and deleting this row.\n        When a row in this table has a row in the active(1)\n        state, no objects in this row can be modified\n        except the mplsOutSegmentRowStatus or\n        mplsOutSegmentStorageType.
%edes        mplsOutSegmentStorageType This variable indicates the storage type for this\n        object. The agent MUST ensure that this object's value\n        remains consistent with the associated mplsXCEntry.\n        Conceptual rows having the value 'permanent'\n        need not allow write-access to any columnar\n        objects in the row.
%edes        mplsOutSegmentPerfTable This table contains statistical information about\n\n        outgoing segments from an LSR. The counters in this\n        entry should behave in a manner similar to that of\n        the interface.
%edes        mplsOutSegmentPerfEntry An entry in this table contains statistical\n        information about one outgoing segment configured in\n        mplsOutSegmentTable. The object\n        mplsOutSegmentPerfDiscontinuityTime indicates the\n        time of the last discontinuity in these objects. 
%edes        mplsOutSegmentPerfOctets This value contains the total number of octets sent\n        on this segment. It MUST be equal to the least\n        significant 32 bits of mplsOutSegmentPerfHCOctets\n        if mplsOutSegmentPerfHCOctets is supported according to\n        the rules spelled out in RFC2863.
%edes        mplsOutSegmentPerfPackets This value contains the total number of packets sent\n\n        on this segment.
%edes        mplsOutSegmentPerfErrors Number of packets that could not be sent due to\n        errors on this segment.
%edes        mplsOutSegmentPerfDiscards The number of labeled packets attempted to be transmitted\n        on this out-segment, which were chosen to be discarded\n        even though no errors had been detected to prevent their\n        being transmitted. One possible reason for\n        discarding such a labeled packet could be to free up\n        buffer space.
%edes        mplsOutSegmentPerfHCOctets Total number of octets sent.  This is the 64 bit\n        version of mplsOutSegmentPerfOctets,\n        if mplsOutSegmentPerfHCOctets is supported according to\n        the rules spelled out in RFC2863.
%edes        mplsOutSegmentPerfDiscontinuityTime The value of sysUpTime on the most recent occasion\n        at which any one or more of this segment's Counter32\n        or Counter64 suffered a discontinuity. If no such\n        discontinuities have occurred since the last re-\n        initialization of the local management subsystem,\n        then this object contains a zero value.
%edes        mplsXCIndexNext         This object contains the next available value to\n        be used for mplsXCIndex when creating entries in\n        the mplsXCTable. A special value of the zero length\n        string indicates that no more new entries can be created\n        in the relevant table.  Agents not allowing managers\n        to create entries in this table MUST set this value\n        to the zero length string.
%edes        mplsXCTable             This table specifies information for switching\n        between LSP segments.  It supports point-to-point,\n        point-to-multipoint and multipoint-to-point\n        connections.  mplsLabelStackTable specifies the\n        label stack information for a cross-connect LSR and\n        is referred to from mplsXCTable.
%edes        mplsXCEntry             A row in this table represents one cross-connect\n        entry.  It is indexed by the following objects:\n\n        - cross-connect index mplsXCIndex that uniquely\n          identifies a group of cross-connect entries\n\n        - in-segment index, mplsXCInSegmentIndex\n\n        - out-segment index, mplsXCOutSegmentIndex\n\n       LSPs originating at this LSR:\n        These are represented by using the special\n        of value of mplsXCInSegmentIndex set to the\n        string containing a single octet 0x00. In\n        this case the mplsXCOutSegmentIndex\n        MUST not be the string containing a single\n        octet 0x00.\n\n       LSPs terminating at this LSR:\n        These are represented by using the special value\n        mplsXCOutSegmentIndex set to the string containing\n        a single octet 0x00.\n\n       Special labels:\n        Entries indexed by the strings containing the\n        reserved MPLS label values as a single octet 0x00\n        through 0x0f (inclusive) imply LSPs terminating at\n        this LSR.  Note that situations where LSPs are\n        terminated with incoming label equal to the string\n        containing a single octet 0x00 can be distinguished\n        from LSPs originating at this LSR because the\n        mplsXCOutSegmentIndex equals the string containing the\n        single octet 0x00.\n\n        An entry can be created by a network administrator\n        or by an SNMP agent as instructed by an MPLS\n        signaling protocol.
%edes        mplsXCIndex             Primary index for the conceptual row identifying a\n        group of cross-connect segments. The string\n        containing a single octet 0x00 is an invalid index.
%edes        mplsXCInSegmentIndex    Incoming label index.\n        If this object is set to the string containing\n        a single octet 0x00, this indicates a special\n        case outlined in the table's description above.\n        In this case no corresponding mplsInSegmentEntry\n        shall exist.
%edes        mplsXCOutSegmentIndex   Index of out-segment for LSPs not terminating on\n        this LSR if not set to the string containing the\n        single octet 0x00. If the segment identified by this\n        entry is terminating, then this object MUST be set to\n        the string containing a single octet 0x00 to indicate\n        that no corresponding mplsOutSegmentEntry shall\n        exist.
%edes        mplsXCLspId             This value identifies the label switched path that\n        this cross-connect entry belongs to. This object\n        cannot be modified if mplsXCRowStatus is active(1)\n        except for this object.
%edes        mplsXCLabelStackIndex   Primary index into mplsLabelStackTable identifying a\n        stack of labels to be pushed beneath the top label.\n        Note that the top label identified by the out-\n        segment ensures that all the components of a\n        multipoint-to-point connection have the same\n        outgoing label. A value of the string containing the\n        single octet 0x00 indicates that no labels are to\n        be stacked beneath the top label.\n        This object cannot be modified if mplsXCRowStatus is\n        active(1).
%edes        mplsXCOwner             Denotes the entity that created and is responsible\n        for managing this cross-connect.
%edes        mplsXCRowStatus         For creating, modifying, and deleting this row.\n        When a row in this table has a row in the active(1)\n        state, no objects in this row except this object\n        and the mplsXCStorageType can be modified. 
%edes        mplsXCStorageType       This variable indicates the storage type for this\n        object. The agent MUST ensure that the associated in\n        and out segments also have the same StorageType value\n        and are restored consistently upon system restart.\n        This value SHOULD be set to permanent(4) if created\n        as a result of a static LSP configuration.\n\n        Conceptual rows having the value 'permanent'\n        need not allow write-access to any columnar\n        objects in the row.
%edes        mplsXCAdminStatus       The desired operational status of this segment.
%edes        mplsXCOperStatus        The actual operational status of this cross-\n        connect.
%edes        mplsMaxLabelStackDepth  The maximum stack depth supported by this LSR.
%edes        mplsLabelStackIndexNext This object contains the next available value to\n        be used for mplsLabelStackIndex when creating entries\n        in the mplsLabelStackTable. The special string\n        containing the single octet 0x00\n        indicates that no more new entries can be created\n        in the relevant table.  Agents not allowing managers\n        to create entries in this table MUST set this value\n        to the string containing the single octet 0x00.
%edes        mplsLabelStackTable     This table specifies the label stack to be pushed\n        onto a packet, beneath the top label.  Entries into\n        this table are referred to from mplsXCTable.
%edes        mplsLabelStackEntry     An entry in this table represents one label which is\n        to be pushed onto an outgoing packet, beneath the\n        top label.  An entry can be created by a network\n        administrator or by an SNMP agent as instructed by\n        an MPLS signaling protocol.
%edes        mplsLabelStackIndex     Primary index for this row identifying a stack of\n        labels to be pushed on an outgoing packet, beneath\n        the top label. An index containing the string with\n        a single octet 0x00 MUST not be used.
%edes        mplsLabelStackLabelIndex Secondary index for this row identifying one label\n        of the stack.  Note that an entry with a smaller\n        mplsLabelStackLabelIndex would refer to a label\n        higher up the label stack and would be popped at a\n        downstream LSR before a label represented by a\n        higher mplsLabelStackLabelIndex at a downstream\n        LSR.
%edes        mplsLabelStackLabel     The label to pushed.
%edes        mplsLabelStackLabelPtr  If the label for this segment cannot be represented\n        fully within the mplsLabelStackLabel object,\n        this object MUST point to the first accessible\n        column of a conceptual row in an external table containing\n        the label.  In this case, the mplsLabelStackLabel\n        object SHOULD be set to 0 and ignored. This object\n        MUST be set to zeroDotZero otherwise.
%edes        mplsLabelStackRowStatus For creating, modifying, and deleting this row.\n        When a row in this table has a row in the active(1)\n        state, no objects in this row except this object\n        and the mplsLabelStackStorageType can be modified.
%edes        mplsLabelStackStorageType This variable indicates the storage type for this\n        object. This object cannot be modified if\n        mplsLabelStackRowStatus is active(1).\n        No objects are required to be writable for\n        rows in this table with this object set to\n        permanent(4).\n\n        The agent MUST ensure that all related entries\n        in this table retain the same value for this\n        object.  Agents MUST ensure that the storage type\n        for all entries related to a particular mplsXCEntry\n        retain the same value for this object as the\n        mplsXCEntry's StorageType.
%edes        mplsInSegmentMapTable   This table specifies the mapping from the\n        mplsInSegmentIndex to the corresponding\n        mplsInSegmentInterface and mplsInSegmentLabel\n        objects. The purpose of this table is to\n        provide the manager with an alternative\n        means by which to locate in-segments.
%edes        mplsInSegmentMapEntry   An entry in this table represents one interface\n        and incoming label pair.\n\n        In cases where the label cannot fit into the\n        mplsInSegmentLabel object, the mplsInSegmentLabelPtr\n        will indicate this by being set to the first accessible\n        column in the appropriate extension table's row,\n        and the mplsInSegmentLabel SHOULD be set to 0.\n        In all other cases when the label is\n        represented within the mplsInSegmentLabel object, the\n        mplsInSegmentLabelPtr MUST be 0.0.\n\n        Implementors need to be aware that if the value of\n        the mplsInSegmentMapLabelPtrIndex (an OID) has more\n        that 111 sub-identifiers, then OIDs of column\n        instances in this table will have more than 128\n        sub-identifiers and cannot be accessed using SNMPv1,\n        SNMPv2c, or SNMPv3.
%edes        mplsInSegmentMapInterface This index contains the same value as the\n        mplsInSegmentIndex in the mplsInSegmentTable.
%edes        mplsInSegmentMapLabel   This index contains the same value as the\n        mplsInSegmentLabel in the mplsInSegmentTable.
%edes        mplsInSegmentMapLabelPtrIndex This index contains the same value as the\n        mplsInSegmentLabelPtr.\n\n        If the label for the InSegment cannot be represented\n        fully within the mplsInSegmentLabel object,\n        this index MUST point to the first accessible\n        column of a conceptual row in an external table containing\n        the label.  In this case, the mplsInSegmentTopLabel\n        object SHOULD be set to 0 and ignored. This object MUST\n        be set to zeroDotZero otherwise.
%edes        mplsInSegmentMapIndex   The mplsInSegmentIndex that corresponds\n        to the mplsInSegmentInterface and\n        mplsInSegmentLabel, or the mplsInSegmentInterface\n        and mplsInSegmentLabelPtr, if applicable.\n        The string containing the single octet 0x00\n        MUST not be returned.
%edes        mplsXCNotificationsEnable If this object is set to true(1), then it enables\n        the emission of mplsXCUp and mplsXCDown\n        notifications; otherwise these notifications are not\n\n        emitted.
%eref        mplsXCNotificationsEnable See also RFC3413 for explanation that\n        notifications are under the ultimate control of the\n        MIB module in this document.
%edes        mplsLdpInitSessionThresholdExceeded This notification is generated when the value of\n        the 'mplsLdpEntityInitSessionThreshold' object\n        is not zero, and the number of Session\n        Initialization messages exceeds the value\n        of the 'mplsLdpEntityInitSessionThreshold' object.
%edes        mplsLdpPathVectorLimitMismatch This notification is sent when the\n        'mplsLdpEntityPathVectorLimit' does NOT match\n        the value of the 'mplsLdpPeerPathVectorLimit' for\n        a specific Entity.
%eref        mplsLdpPathVectorLimitMismatch RFC3036, LDP Specification, Section 3.5.3.
%edes        mplsLdpSessionUp        If this notification is sent when the\n        value of 'mplsLdpSessionState' enters\n        the 'operational(5)' state.
%edes        mplsLdpSessionDown      This notification is sent when the\n        value of 'mplsLdpSessionState' leaves\n        the 'operational(5)' state.
%edes        mplsLdpLsrId            The Label Switching Router's Identifier.
%edes        mplsLdpLsrLoopDetectionCapable A indication of whether this\n        Label Switching Router supports\n        loop detection.\n\n        none(1) -- Loop Detection is not supported\n                   on this LSR.\n\n        other(2) -- Loop Detection is supported but\n                    by a method other than those\n                    listed below.\n\n        hopCount(3) -- Loop Detection is supported by\n                       Hop Count only.\n\n        pathVector(4) -- Loop Detection is supported by\n                         Path Vector only.\n\n        hopCountAndPathVector(5) -- Loop Detection is\n                             supported by both Hop Count\n                             And Path Vector.\n\n        Since Loop Detection is determined during\n        Session Initialization, an individual session\n        may not be running with loop detection.  This\n        object simply gives an indication of whether or not the\n        LSR has the ability to support Loop Detection and\n        which types.
%edes        mplsLdpEntityLastChange The value of sysUpTime at the time of the most\n        recent addition or deletion of an entry\n        to/from the mplsLdpEntityTable/mplsLdpEntityStatsTable, or\n        the most recent change in value of any objects in the\n        mplsLdpEntityTable.\n\n        If no such changes have occurred since the last\n        re-initialization of the local management subsystem,\n        then this object contains a zero value.
%edes        mplsLdpEntityIndexNext  This object contains an appropriate value to\n        be used for mplsLdpEntityIndex when creating\n        entries in the mplsLdpEntityTable. The value\n        0 indicates that no unassigned entries are\n        available.
%edes        mplsLdpEntityTable      This table contains information about the\n        MPLS Label Distribution Protocol Entities which\n        exist on this Label Switching Router (LSR)\n        or Label Edge Router (LER).
%edes        mplsLdpEntityEntry      An entry in this table represents an LDP entity.\n         An entry can be created by a network administrator\n         or by an SNMP agent as instructed by LDP.
%edes        mplsLdpEntityLdpId      The LDP identifier.
%eref        mplsLdpEntityLdpId      RFC3036, LDP Specification, Section on LDP Identifiers.
%edes        mplsLdpEntityIndex      This index is used as a secondary index to uniquely\n        identify this row.  Before creating a row in this table,\n        the 'mplsLdpEntityIndexNext' object should be retrieved.\n        That value should be used for the value of this index\n        when creating a row in this table.  NOTE:  if a value\n        of zero (0) is retrieved, that indicates that no rows\n        can be created in this table at this time.\n\n        A secondary index (this object) is meaningful to some\n        but not all, LDP implementations.  For example\n        an LDP implementation which uses PPP would\n        use this index to differentiate PPP sub-links.\n\n        Another way to use this index is to give this the\n        value of ifIndex.  However, this is dependant\n        on the implementation.
%edes        mplsLdpEntityProtocolVersion The version number of the LDP protocol which will be\n       used in the session initialization message.\n\n       Section 3.5.3 in the LDP Specification specifies\n       that the version of the LDP protocol is negotiated during\n       session establishment. The value of this object\n       represents the value that is sent in the initialization\n       message.
%eref        mplsLdpEntityProtocolVersion RFC3036, LDP Specification, Section 3.5.3 Initialization\n       Message.
%edes        mplsLdpEntityAdminStatus The administrative status of this LDP Entity.\n        If this object is changed from 'enable' to 'disable'\n        and this entity has already attempted to establish\n        contact with a Peer, then all contact with that\n        Peer is lost and all information from that Peer\n        needs to be removed from the MIB. (This implies\n        that the network management subsystem should clean\n        up any related entry in the mplsLdpPeerTable.  This\n        further implies that a 'tear-down' for that session\n        is issued and the session and all information related\n        to that session cease to exist).\n\n        At this point the operator is able to change values\n        which are related to this entity.\n\n        When the admin status is set back to 'enable', then\n        this Entity will attempt to establish a new session\n        with the Peer.
%edes        mplsLdpEntityOperStatus The operational status of this LDP Entity.\n\n        The value of unknown(1) indicates that the\n        operational status cannot be determined at\n        this time.  The value of unknown should be\n        a transient condition before changing\n        to enabled(2) or disabled(3).
%edes        mplsLdpEntityTcpPort    The TCP Port for\n        LDP.  The default value is the well-known\n        value of this port.
%eref        mplsLdpEntityTcpPort    RFC3036, LDP Specification, Section 3.10, Well-known\n         Numbers, and Section 3.10.1.  UDP and TCP Ports.
%edes        mplsLdpEntityUdpDscPort The UDP Discovery Port for\n        LDP.  The default value is the\n        well-known value for this port.
%eref        mplsLdpEntityUdpDscPort RFC3036, LDP Specification, Section 2.4.1,\n        Basic Discovery Mechanism, Section 2.4.2,\n        Extended Discovery Mechanism, Section\n        3.10, Well-known Numbers, and Section 3.10.1.\n        UDP and TCP Ports.
%eunits      mplsLdpEntityMaxPduLength octets
%edes        mplsLdpEntityMaxPduLength The maximum PDU Length that is sent in\n       the Common Session Parameters of an Initialization\n       Message. According to the LDP Specification [RFC3036]\n       a value of 255 or less specifies the\n       default maximum length of 4096 octets, this is why\n       the value of this object starts at 256.  The operator\n       should explicitly choose the default value (i.e., 4096),\n       or some other value.\n\n       The receiving LSR MUST calculate the maximum PDU\n       length for the session by using the smaller of its and\n       its peer's proposals for Max PDU Length.
%eref        mplsLdpEntityMaxPduLength RFC3036, LDP Specification, Section 3.5.3.\n       Initialization Message.
%eunits      mplsLdpEntityKeepAliveHoldTimer seconds
%edes        mplsLdpEntityKeepAliveHoldTimer The 16-bit integer value which is the proposed keep\n        alive hold timer for this LDP Entity.
%eunits      mplsLdpEntityHelloHoldTimer seconds
%edes        mplsLdpEntityHelloHoldTimer The 16-bit integer value which is the proposed Hello\n        hold timer for this LDP Entity. The Hello Hold time\n        in seconds.\n\n        An LSR maintains a record of Hellos received\n        from potential peers.  This object represents\n        the Hold Time in the Common Hello Parameters TLV of\n        the Hello Message.\n\n        A value of 0 is a default value and should be\n        interpretted in conjunction with the\n        mplsLdpEntityTargetPeer object.\n\n        If the value of this object is 0: if the value of the\n        mplsLdpEntityTargetPeer object is false(2), then this\n        specifies that the Hold Time's actual default value is\n        15 seconds (i.e., the default Hold time for Link Hellos\n        is 15 seconds).  Otherwise if the value of the\n        mplsLdpEntityTargetPeer object is true(1), then this\n        specifies that the Hold Time's actual default value is\n        45 seconds (i.e., the default Hold time for Targeted\n        Hellos is 45 seconds).\n\n        A value of 65535 means infinite (i.e., wait forever).\n\n        All other values represent the amount of time in\n        seconds to wait for a Hello Message.  Setting the\n        hold time to a value smaller than 15 is not\n        recommended, although not forbidden according\n        to RFC3036.
%eref        mplsLdpEntityHelloHoldTimer RFC3036, LDP Specification, Section 3.5.2.,\n        Hello Message.
%edes        mplsLdpEntityInitSessionThreshold When attempting to establish a session with\n        a given Peer, the given LDP Entity should\n        send out the SNMP notification,\n        'mplsLdpInitSessionThresholdExceeded', when\n        the number of Session Initialization messages\n        sent exceeds this threshold.\n\n        The notification is used to notify an\n        operator when this Entity and its Peer are\n        possibly engaged in an endless sequence\n        of messages as each NAKs the other's\n        Initialization messages with Error Notification\n        messages.  Setting this threshold which triggers\n        the notification is one way to notify the\n        operator.  The notification should be generated\n        each time this threshold is exceeded and\n        for every subsequent Initialization message\n        which is NAK'd with an Error Notification\n        message after this threshold is exceeded.\n\n        A value of 0 (zero) for this object\n        indicates that the threshold is infinity, thus\n        the SNMP notification will never be generated.
%eref        mplsLdpEntityInitSessionThreshold RFC3036, LDP Specification,\n        Section 2.5.3 Session Initialization.
%edes        mplsLdpEntityLabelDistMethod For any given LDP session, the method of\n        label distribution must be specified.
%edes        mplsLdpEntityLabelRetentionMode The LDP Entity can be configured to use either\n        conservative or liberal label retention mode.\n\n        If the value of this object is conservative(1)\n        then advertized label mappings are retained\n        only if they will be used to forward packets,\n        i.e., if label came from a valid next hop.\n\n        If the value of this object is liberal(2)\n        then all advertized label mappings are retained\n        whether they are from a valid next hop or not.
%edes        mplsLdpEntityPathVectorLimit If the value of this object is 0 (zero) then\n        Loop Detection for Path Vectors is disabled.\n\n        Otherwise, if this object has a value greater than\n        zero, then Loop Dection for Path Vectors is enabled,\n        and the Path Vector Limit is this value.\n        Also, the value of the object,\n        'mplsLdpLsrLoopDetectionCapable', must be set to\n        either 'pathVector(4)' or 'hopCountAndPathVector(5)',\n        if this object has a value greater than 0 (zero),\n        otherwise it is ignored.
%eref        mplsLdpEntityPathVectorLimit RFC3036, LDP Specification, Section 2.8 Loop Dection,\n       Section 3.4.5 Path Vector TLV.
%edes        mplsLdpEntityHopCountLimit If the value of this object is 0 (zero),\n        then Loop Detection using Hop Counters is\n        disabled.\n\n        If the value of this object is greater than\n        0 (zero) then Loop Detection using Hop\n        Counters is enabled, and this object\n        specifies this Entity's maximum allowable\n        value for the Hop Count.\n        Also, the value of the object\n        mplsLdpLsrLoopDetectionCapable must be set\n        to either 'hopCount(3)' or\n        'hopCountAndPathVector(5)' if this object\n        has a value greater than 0 (zero), otherwise\n        it is ignored.
%edes        mplsLdpEntityTransportAddrKind This specifies whether the loopback or interface\n        address is to be used as the transport address\n        in the transport address TLV of the\n        hello message.\n\n        If the value is interface(1), then the IP\n        address of the interface from which hello\n        messages are sent is used as the transport\n        address in the hello message.\n\n        Otherwise, if the value is loopback(2), then the IP\n        address of the loopback interface is used as the\n        transport address in the hello message.
%edes        mplsLdpEntityTargetPeer If this LDP entity uses targeted peer then set\n        this to true.
%edes        mplsLdpEntityTargetPeerAddrType The type of the internetwork layer address used for\n        the Extended Discovery.  This object indicates how\n        the value of mplsLdpEntityTargetPeerAddr is to\n        be interpreted.
%edes        mplsLdpEntityTargetPeerAddr The value of the internetwork layer address\n        used for the Extended Discovery.  The value of\n        mplsLdpEntityTargetPeerAddrType specifies how\n        this address is to be interpreted.
%edes        mplsLdpEntityLabelType  Specifies the optional parameters for the LDP\n        Initialization Message.\n\n        If the value is generic(1) then no\n        optional parameters will be sent in\n        the LDP Initialization message associated\n        with this Entity.\n\n        If the value is atmParameters(2) then\n        a row must be created in the\n        mplsLdpEntityAtmTable, which\n        corresponds to this entry.\n\n        If the value is frameRelayParameters(3) then\n        a row must be created in the\n        mplsLdpEntityFrameRelayTable, which\n        corresponds to this entry.
%eref        mplsLdpEntityLabelType  RFC3036, LDP Specification, Section 3.5.3.,\n        Initialization Message.
%edes        mplsLdpEntityDiscontinuityTime The value of sysUpTime on the most recent occasion\n        at which any one or more of this entity's counters\n        suffered a discontinuity.  The relevant counters\n        are the specific instances associated with this\n        entity of any Counter32 object contained\n        in the 'mplsLdpEntityStatsTable'.  If no such\n        discontinuities have occurred since the last\n        re-initialization of the local management\n        subsystem, then this object contains a zero\n        value.
%edes        mplsLdpEntityStorageType The storage type for this conceptual row.\n        Conceptual rows having the value 'permanent(4)'\n        need not allow write-access to any columnar\n        objects in the row.
%edes        mplsLdpEntityRowStatus  The status of this conceptual row.  All writable\n         objects in this row may be modified at any\n         time, however, as described in detail in\n         the section entitled, 'Changing Values After\n         Session Establishment', and again described\n         in the DESCRIPTION clause of the\n         mplsLdpEntityAdminStatus object, if a session\n         has been initiated with a Peer, changing objects\n         in this table will wreak havoc with the session\n         and interrupt traffic.  To repeat again:\n         the recommended procedure is to\n         set the mplsLdpEntityAdminStatus to down, thereby\n         explicitly causing a session to be torn down. Then,\n         change objects in this entry, then set\n         the mplsLdpEntityAdminStatus to enable,\n         which enables a new session to be initiated.
%edes        mplsLdpEntityStatsTable This table is a read-only table which augments\n        the mplsLdpEntityTable.  The purpose of this\n        table is to keep statistical information about\n        the LDP Entities on the LSR.
%edes        mplsLdpEntityStatsEntry A row in this table contains statistical information\n        about an LDP Entity.  Some counters contained in a\n        row are for fatal errors received during a former\n        LDP Session associated with this entry.  For example,\n        an LDP PDU received on a TCP connection during an\n        LDP Session contains a fatal error.  That\n        error is counted here, because the\n        session is terminated.\n\n        If the error is NOT fatal (i.e., the Session\n        remains), then the error is counted in the\n        mplsLdpSessionStatsEntry.
%edes        mplsLdpEntityStatsSessionAttempts A count of the Session Initialization messages\n        which were sent or received by this LDP Entity and\n        were NAK'd.   In other words, this counter counts\n        the number of session initializations that failed.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsLdpEntityDiscontinuityTime.
%edes        mplsLdpEntityStatsSessionRejectedNoHelloErrors A count of the Session Rejected/No Hello Error\n        Notification Messages sent or received by\n        this LDP Entity.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsLdpEntityDiscontinuityTime.
%edes        mplsLdpEntityStatsSessionRejectedAdErrors A count of the Session Rejected/Parameters\n        Advertisement Mode Error Notification Messages sent\n        or received by this LDP Entity.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsLdpEntityDiscontinuityTime.
%edes        mplsLdpEntityStatsSessionRejectedMaxPduErrors A count of the Session Rejected/Parameters\n\n        Max Pdu Length Error Notification Messages sent\n        or received by this LDP Entity.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsLdpEntityDiscontinuityTime.
%edes        mplsLdpEntityStatsSessionRejectedLRErrors A count of the Session Rejected/Parameters\n        Label Range Notification Messages sent\n        or received by this LDP Entity.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsLdpEntityDiscontinuityTime.
%edes        mplsLdpEntityStatsBadLdpIdentifierErrors This object counts the number of Bad LDP Identifier\n        Fatal Errors detected by the session(s)\n        (past and present) associated with this LDP Entity.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsLdpEntityDiscontinuityTime.
%eref        mplsLdpEntityStatsBadLdpIdentifierErrors RFC3036, LDP Specification, Section 3.5.1.2.
%edes        mplsLdpEntityStatsBadPduLengthErrors This object counts the number of Bad PDU Length\n        Fatal Errors detected by the session(s)\n        (past and present) associated with this LDP Entity.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsLdpEntityDiscontinuityTime.
%eref        mplsLdpEntityStatsBadPduLengthErrors RFC3036, LDP Specification, Section 3.5.1.2.
%edes        mplsLdpEntityStatsBadMessageLengthErrors This object counts the number of Bad Message\n        Length Fatal Errors detected by the session(s)\n        (past and present) associated with this LDP Entity.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsLdpEntityDiscontinuityTime.
%eref        mplsLdpEntityStatsBadMessageLengthErrors RFC3036, LDP Specification, Section 3.5.1.2.
%edes        mplsLdpEntityStatsBadTlvLengthErrors This object counts the number of Bad TLV\n        Length Fatal Errors detected by the session(s)\n        (past and present) associated with this LDP Entity.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsLdpEntityDiscontinuityTime.
%eref        mplsLdpEntityStatsBadTlvLengthErrors RFC3036, LDP Specification, Section 3.5.1.2.
%edes        mplsLdpEntityStatsMalformedTlvValueErrors This object counts the number of Malformed TLV\n        Value Fatal Errors detected by the session(s)\n        (past and present) associated with this\n        LDP Entity.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsLdpEntityDiscontinuityTime.
%eref        mplsLdpEntityStatsMalformedTlvValueErrors RFC3036, LDP Specification, Section 3.5.1.2.
%edes        mplsLdpEntityStatsKeepAliveTimerExpErrors This object counts the number of Session Keep Alive\n        Timer Expired Errors detected by the session(s)\n        (past and present) associated with this LDP Entity.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsLdpEntityDiscontinuityTime.
%eref        mplsLdpEntityStatsKeepAliveTimerExpErrors RFC3036, LDP Specification, Section 3.5.1.2.
%edes        mplsLdpEntityStatsShutdownReceivedNotifications This object counts the number of Shutdown Notifications\n        received related to session(s) (past and present)\n        associated with this LDP Entity.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsLdpEntityDiscontinuityTime.
%edes        mplsLdpEntityStatsShutdownSentNotifications This object counts the number of Shutdown Notfications\n        sent related to session(s) (past and present) associated\n        with this LDP Entity.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsLdpEntityDiscontinuityTime.
%edes        mplsLdpPeerLastChange   The value of sysUpTime at the time of the most\n        recent addition or deletion to/from the\n        mplsLdpPeerTable/mplsLdpSessionTable.
%edes        mplsLdpPeerTable        Information about LDP peers known by Entities in\n        the mplsLdpEntityTable.  The information in this table\n        is based on information from the Entity-Peer interaction\n        during session initialization but is not appropriate\n        for the mplsLdpSessionTable, because objects in this\n        table may or may not be used in session establishment.
%edes        mplsLdpPeerEntry        Information about a single Peer which is related\n        to a Session.  This table is augmented by\n        the mplsLdpSessionTable.
%edes        mplsLdpPeerLdpId        The LDP identifier of this LDP Peer.
%edes        mplsLdpPeerLabelDistMethod For any given LDP session, the method of\n        label distribution must be specified.
%edes        mplsLdpPeerPathVectorLimit If the value of this object is 0 (zero) then\n        Loop Dection for Path Vectors for this Peer\n        is disabled.\n\n        Otherwise, if this object has a value greater than\n        zero, then Loop Dection for Path  Vectors for this\n        Peer is enabled and the Path Vector Limit is this value.
%eref        mplsLdpPeerPathVectorLimit RFC3036, LDP Specification, Section 2.8 Loop Dection,\n       Section 3.4.5 Path Vector TLV.
%edes        mplsLdpPeerTransportAddrType The type of the Internet address for the\n        mplsLdpPeerTransportAddr object.  The LDP\n        specification describes this as being either\n        an IPv4 Transport Address or IPv6 Transport\n        Address which is used in opening the LDP session's\n        TCP connection, or if the optional TLV is not\n        present, then this is the IPv4/IPv6 source\n        address for the UPD packet carrying the Hellos.\n\n        This object specifies how the value of the\n        mplsLdpPeerTransportAddr object should be\n        interpreted.
%eref        mplsLdpPeerTransportAddrType RFC3036, LDP Specification, Section 2.5.2\n       Transport Connection Establishment and\n       Section 3.5.2.1 Hello Message Procedures.
%edes        mplsLdpPeerTransportAddr The Internet address advertised by the peer\n        in the Hello Message or the Hello source address.\n\n        The type of this address is specified by the\n        value of the mplsLdpPeerTransportAddrType\n        object.
%eref        mplsLdpPeerTransportAddr RFC3036, LDP Specification, Section 2.5.2\n       Transport Connection Establishment and\n       Section 3.5.2.1 Hello Message Procedures.
%edes        mplsLdpSessionTable     A table of Sessions between the LDP Entities\n        and LDP Peers.  This table AUGMENTS the\n        mplsLdpPeerTable.  Each row in this table\n        represents a single session.
%edes        mplsLdpSessionEntry     An entry in this table represents information on a\n        single session between an LDP Entity and LDP Peer.\n        The information contained in a row is read-only.\n\n        Please note:  the Path Vector Limit for the\n        Session is the value which is configured in\n        the corresponding mplsLdpEntityEntry. The\n        Peer's Path Vector Limit is in the\n        mplsLdpPeerPathVectorLimit object in the\n        mplsLdpPeerTable.\n\n        Values which may differ from those configured are\n        noted in the objects of this table, the\n        mplsLdpAtmSessionTable and the\n        mplsLdpFrameRelaySessionTable. A value will\n        differ if it was negotiated between the\n        Entity and the Peer.  Values may or may not\n        be negotiated.  For example, if the values\n        are the same then no negotiation takes place.\n        If they are negotiated, then they may differ.
%edes        mplsLdpSessionStateLastChange The value of sysUpTime at the time this\n        Session entered its current state as\n        denoted by the mplsLdpSessionState\n        object.
%edes        mplsLdpSessionState     The current state of the session, all of the\n        states 1 to 5 are based on the state machine\n        for session negotiation behavior.
%eref        mplsLdpSessionState     RFC3036, LDP Specification, Section 2.5.4,\n        Initialization State Machine.
%edes        mplsLdpSessionRole      During session establishment the LSR/LER takes either\n        the active role or the passive role based on address\n        comparisons.  This object indicates whether this LSR/LER\n        was behaving in an active role or passive role during\n        this session's establishment.\n\n        The value of unknown(1), indicates that the role is not\n        able to be determined at the present time.
%eref        mplsLdpSessionRole      RFC3036, LDP Specification, Section 2.5.3.,\n        Session Initialization
%edes        mplsLdpSessionProtocolVersion The version of the LDP Protocol which\n        this session is using.  This is the version of\n        the LDP protocol which has been negotiated\n        during session initialization.
%eref        mplsLdpSessionProtocolVersion RFC3036, LDP Specification, Section 3.5.3,\n       Initialization Message.
%edes        mplsLdpSessionKeepAliveHoldTimeRem The keep alive hold time remaining for\n        this session.
%eunits      mplsLdpSessionKeepAliveTime seconds
%edes        mplsLdpSessionKeepAliveTime The negotiated KeepAlive Time which\n           represents the amount of seconds between\n           keep alive messages.  The\n           mplsLdpEntityKeepAliveHoldTimer\n           related to this Session is the\n           value that was proposed as the\n           KeepAlive Time for this session.\n\n           This value is negotiated during\n           session initialization between\n           the entity's proposed value\n           (i.e., the value configured in\n           mplsLdpEntityKeepAliveHoldTimer)\n           and the peer's proposed\n           KeepAlive Hold Timer value.\n           This value is the smaller\n           of the two proposed values.
%eref        mplsLdpSessionKeepAliveTime RFC3036, LDP Specification, Section 3.5.3,\n          Initialization Message.
%eunits      mplsLdpSessionMaxPduLength octets
%edes        mplsLdpSessionMaxPduLength The value of maximum allowable length for LDP PDUs for\n           this session.  This value may have been negotiated\n           during the Session Initialization.  This object is\n           related to the mplsLdpEntityMaxPduLength object.  The\n           mplsLdpEntityMaxPduLength object specifies the requested\n           LDP PDU length, and this object reflects the negotiated\n           LDP PDU length between the Entity and\n           the Peer.
%eref        mplsLdpSessionMaxPduLength RFC3036, LDP Specification, Section 3.5.3,\n          Initialization Message.
%edes        mplsLdpSessionDiscontinuityTime The value of sysUpTime on the most recent occasion\n        at which any one or more of this session's counters\n        suffered a discontinuity.  The relevant counters are\n        the specific instances associated with this session\n        of any Counter32 object contained in the\n        mplsLdpSessionStatsTable.\n\n        The initial value of this object is the value of\n        sysUpTime when the entry was created in this table.\n\n        Also, a command generator can distinguish when a session\n        between a given Entity and Peer goes away and a new\n        session is established.  This value would change and\n        thus indicate to the command generator that this is a\n        different session.
%edes        mplsLdpSessionStatsTable A table of statistics for Sessions between\n        LDP Entities and LDP Peers.  This table AUGMENTS\n        the mplsLdpPeerTable.
%edes        mplsLdpSessionStatsEntry An entry in this table represents statistical\n        information on a single session between an LDP\n        Entity and LDP Peer.
%edes        mplsLdpSessionStatsUnknownMesTypeErrors This object counts the number of Unknown Message Type\n        Errors detected by this LSR/LER during this session.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsLdpSessionDiscontinuityTime.
%edes        mplsLdpSessionStatsUnknownTlvErrors This object counts the number of Unknown TLV Errors\n        detected by this LSR/LER during this session.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsLdpSessionDiscontinuityTime.
%edes        mplsLdpHelloAdjacencyTable A table of Hello Adjacencies for Sessions.
%edes        mplsLdpHelloAdjacencyEntry Each row represents a single LDP Hello Adjacency.\n        An LDP Session can have one or more Hello\n        Adjacencies.
%edes        mplsLdpHelloAdjacencyIndex An identifier for this specific adjacency.
%eunits      mplsLdpHelloAdjacencyHoldTimeRem seconds
%edes        mplsLdpHelloAdjacencyHoldTimeRem If the value of this object is 65535,\n        this means that the hold time is infinite\n        (i.e., wait forever).\n\n        Otherwise, the time remaining for\n        this Hello Adjacency to receive its\n        next Hello Message.\n\n        This interval will change when the 'next'\n        Hello Message which corresponds to this\n        Hello Adjacency is received unless it\n        is infinite.
%edes        mplsLdpHelloAdjacencyHoldTime The Hello hold time which is negotiated between\n        the Entity and the Peer.  The entity associated\n        with this Hello Adjacency issues a proposed\n        Hello Hold Time value in the\n        mplsLdpEntityHelloHoldTimer object.  The peer\n        also proposes a value and this object represents\n        the negotiated value.\n\n        A value of 0 means the default,\n        which is 15 seconds for Link Hellos\n        and 45 seconds for Targeted Hellos.\n        A value of 65535 indicates an\n        infinite hold time.
%eref        mplsLdpHelloAdjacencyHoldTime RFC3036, LDP Specification, Section 3.5.2 Hello Message
%edes        mplsLdpHelloAdjacencyType This adjacency is the result of a 'link'\n        hello if the value of this object is link(1).\n        Otherwise, it is a result of a 'targeted'\n        hello, targeted(2).
%edes        mplsInSegmentLdpLspTable A table of LDP LSP's which\n        map to the mplsInSegmentTable in the\n        MPLS-LSR-STD-MIB module.
%edes        mplsInSegmentLdpLspEntry An entry in this table represents information\n        on a single LDP LSP which is represented by\n        a session's index triple (mplsLdpEntityLdpId,\n        mplsLdpEntityIndex, mplsLdpPeerLdpId) AND the\n        index for the mplsInSegmentTable\n        (mplsInSegmentLdpLspLabelIndex) from the\n        MPLS-LSR-STD-MIB.\n\n        The information contained in a row is read-only.
%edes        mplsInSegmentLdpLspIndex This contains the same value as the\n        mplsInSegmentIndex in the\n        MPLS-LSR-STD-MIB's mplsInSegmentTable.
%edes        mplsInSegmentLdpLspLabelType The Layer 2 Label Type.
%edes        mplsInSegmentLdpLspType The type of LSP connection.
%edes        mplsOutSegmentLdpLspTable A table of LDP LSP's which\n        map to the mplsOutSegmentTable in the\n       MPLS-LSR-STD-MIB.
%edes        mplsOutSegmentLdpLspEntry An entry in this table represents information\n        on a single LDP LSP which is represented by\n        a session's index triple (mplsLdpEntityLdpId,\n        mplsLdpEntityIndex, mplsLdpPeerLdpId) AND the\n        index (mplsOutSegmentLdpLspIndex)\n        for the mplsOutSegmentTable.\n\n        The information contained in a row is read-only.
%edes        mplsOutSegmentLdpLspIndex This contains the same value as the\n        mplsOutSegmentIndex in the\n        MPLS-LSR-STD-MIB's mplsOutSegmentTable.
%edes        mplsOutSegmentLdpLspLabelType The Layer 2 Label Type.
%edes        mplsOutSegmentLdpLspType The type of LSP connection.
%edes        mplsFecLastChange       The value of sysUpTime at the time of the most\n        recent addition/deletion of an entry\n        to/from the mplsLdpFectTable or\n        the most recent change in values to any objects\n        in the mplsLdpFecTable.\n\n        If no such changes have occurred since the last\n        re-initialization of the local management subsystem,\n        then this object contains a zero value.
%edes        mplsFecIndexNext        This object contains an appropriate value to\n        be used for mplsFecIndex when creating\n        entries in the mplsFecTable. The value\n        0 indicates that no unassigned entries are\n        available.
%edes        mplsFecTable            This table represents the FEC\n        (Forwarding Equivalence Class)\n        Information associated with an LSP.
%edes        mplsFecEntry            Each row represents a single FEC Element.
%edes        mplsFecIndex            The index which uniquely identifies this entry.
%edes        mplsFecType             The type of the FEC.  If the value of this object\n        is 'prefix(1)' then the FEC type described by this\n        row is an address prefix.\n\n        If the value of this object is 'hostAddress(2)' then\n        the FEC type described by this row is a host address.
%eref        mplsFecType             RFC3036, Section 3.4.1. FEC TLV.
%edes        mplsFecAddrPrefixLength If the value of the 'mplsFecType' is 'hostAddress(2)'\n        then this object is undefined.\n\n        If the value of 'mplsFecType' is 'prefix(1)'\n        then the value of this object is the length in\n        bits of the address prefix represented by\n        'mplsFecAddr', or zero.  If the value of this\n        object is zero, this indicates that the\n        prefix matches all addresses.  In this case the\n        address prefix MUST also be zero (i.e., 'mplsFecAddr'\n        should have the value of zero.)
%eref        mplsFecAddrPrefixLength RFC3036, Section 3.4.1. FEC TLV.
%edes        mplsFecAddrType         The value of this object is the type of the\n        Internet address.  The value of this object,\n        decides how the value of the mplsFecAddr object\n        is interpreted.
%eref        mplsFecAddrType         RFC3036, Section 3.4.1. FEC TLV.
%edes        mplsFecAddr             The value of this object is interpreted based\n        on the value of the 'mplsFecAddrType' object.\n\n        This address is then further interpretted as\n        an being used with the address prefix,\n        or as the host address.  This further interpretation\n        is indicated by the 'mplsFecType' object.\n        In other words, the FEC element is populated\n        according to the Prefix FEC Element value encoding, or\n        the Host Address FEC Element encoding.
%eref        mplsFecAddr             RFC3036, Section 3.4.1 FEC TLV.
%edes        mplsFecStorageType      The storage type for this conceptual row.\n        Conceptual rows having the value 'permanent(4)'\n        need not allow write-access to any columnar\n        objects in the row.
%edes        mplsFecRowStatus        The status of this conceptual row.  If the value of this\n        object is 'active(1)', then none of the writable objects\n        of this entry can be modified, except to set this object\n        to 'destroy(6)'.\n\n        NOTE: if this row is being referenced by any entry in\n        the mplsLdpLspFecTable, then a request to destroy\n        this row, will result in an inconsistentValue error.
%edes        mplsLdpLspFecLastChange The value of sysUpTime at the time of the most\n        recent addition/deletion of an entry\n        to/from the mplsLdpLspFecTable or\n        the most recent change in values to any objects in the\n        mplsLdpLspFecTable.\n\n        If no such changes have occurred since the last\n        re-initialization of the local management subsystem,\n        then this object contains a zero value.
%edes        mplsLdpLspFecTable      A table which shows the relationship between\n      LDP LSPs and FECs.  Each row represents\n      a single LDP LSP to FEC association.
%edes        mplsLdpLspFecEntry      An entry represents a LDP LSP\n      to FEC association.
%edes        mplsLdpLspFecSegment    If the value is inSegment(1), then this\n       indicates that the following index,\n       mplsLdpLspFecSegmentIndex, contains the same\n       value as the mplsInSegmentLdpLspIndex.\n\n       Otherwise, if the value of this object is\n       outSegment(2),  then this\n       indicates that following index,\n       mplsLdpLspFecSegmentIndex, contains the same\n       value as the mplsOutSegmentLdpLspIndex.
%edes        mplsLdpLspFecSegmentIndex This index is interpretted by using the value\n       of the mplsLdpLspFecSegment.\n\n       If the mplsLdpLspFecSegment is inSegment(1),\n       then this index has the same value as\n       mplsInSegmentLdpLspIndex.\n\n       If the mplsLdpLspFecSegment is outSegment(2),\n       then this index has the same value as\n       mplsOutSegmentLdpLspIndex.
%edes        mplsLdpLspFecIndex      This index identifies the FEC entry in the\n        mplsFecTable associated with this session.\n        In other words, the value of this index\n        is the same as the value of the mplsFecIndex\n        that denotes the FEC associated with this\n        Session.
%edes        mplsLdpLspFecStorageType The storage type for this conceptual row.\n       Conceptual rows having the value 'permanent(4)'\n       need not allow write-access to any columnar\n       objects in the row.
%edes        mplsLdpLspFecRowStatus  The status of this conceptual row.  If the\n        value of this object is 'active(1)', then\n        none of the writable objects of this entry\n        can be modified.\n\n        The Agent should delete this row when\n        the session ceases to exist.  If an\n        operator wants to associate the session with\n        a different FEC, the recommended\n        procedure is (as described in detail in the section\n        entitled, 'Changing Values After Session\n        Establishment', and again described in the\n        DESCRIPTION clause of the\n        mplsLdpEntityAdminStatus object)\n        is to set the mplsLdpEntityAdminStatus to\n        down, thereby explicitly causing a session\n        to be torn down. This will also\n        cause this entry to be deleted.\n\n        Then, set the mplsLdpEntityAdminStatus\n        to enable which enables a new session to be initiated.\n        Once the session is initiated, an entry may be\n        added to this table to associate the new session\n        with a FEC.
%edes        mplsLdpSessionPeerAddrTable This table 'extends' the mplsLdpSessionTable.\n        This table is used to store Label Address Information\n        from Label Address Messages received by this LSR from\n        Peers.  This table is read-only and should be updated\n        when Label Withdraw Address Messages are received, i.e.,\n        Rows should be deleted as appropriate.\n\n        NOTE:  since more than one address may be contained\n        in a Label Address Message, this table 'sparse augments',\n        the mplsLdpSessionTable's information.
%edes        mplsLdpSessionPeerAddrEntry An entry in this table represents information on\n        a session's single next hop address which was\n        advertised in an Address Message from the LDP peer.\n        The information contained in a row is read-only.
%edes        mplsLdpSessionPeerAddrIndex An index which uniquely identifies this entry within\n        a given session.
%edes        mplsLdpSessionPeerNextHopAddrType The internetwork layer address type of this Next Hop\n        Address as specified in the Label Address Message\n        associated with this Session. The value of this\n        object indicates how to interpret the value of\n        mplsLdpSessionPeerNextHopAddr.
%edes        mplsLdpSessionPeerNextHopAddr The next hop address.  The type of this address\n        is specified by the value of the\n        mplsLdpSessionPeerNextHopAddrType.
%eref        mplsLdpSessionPeerNextHopAddr RFC3036, Section 2.7. LDP Identifiers\n        and Next Hop Addresses
%edes        mplsL3VpnVrfUp          This notification is generated when:\n        a. No interface is associated with this VRF, and the first\n           (and only first) interface associated with it has its\n           ifOperStatus change to up(1).\n\n        b. One interface is associated with this VRF, and\n           the ifOperStatus of this interface changes to up(1).\n\n        c. Multiple interfaces are associated with this VRF, and the\n           ifOperStatus of all interfaces is down(2), and the first\n           of those interfaces has its ifOperStatus change to up(1).
%edes        mplsL3VpnVrfDown        This notification is generated when:\n        a. One interface is associated with this VRF, and\n           the ifOperStatus of this interface changes from up(1)\n           to down(2).\n\n        b. Multiple interfaces are associated with this VRF, and\n           the ifOperStatus of all except one of these interfaces is\n           equal to up(1), and the ifOperStatus of that interface\n           changes from up(1) to down(2).\n\n        c. The last interface with ifOperStatus equal to up(1)\n           is disassociated from a VRF.
%edes        mplsL3VpnVrfRouteMidThreshExceeded This notification is generated when the number of routes\n        contained by the specified VRF exceeds the value indicated by\n        mplsL3VpnVrfMidRouteThreshold.  A single notification MUST be\n        generated when this threshold is exceeded, and no other\n        notifications of this type should be issued until the value\n        of mplsL3VpnVrfPerfCurrNumRoutes has fallen below that of\n        mplsL3VpnVrfConfMidRteThresh.
%edes        mplsL3VpnVrfNumVrfRouteMaxThreshExceeded This notification is generated when the number of routes\n        contained by the specified VRF exceeds or attempts to exceed\n        the maximum allowed value as indicated by\n        mplsL3VpnVrfMaxRouteThreshold.  In cases where\n        mplsL3VpnVrfConfHighRteThresh is set to the same value\n        as mplsL3VpnVrfConfMaxRoutes, mplsL3VpnVrfConfHighRteThresh\n        need not be exceeded; rather, just reached for this notification\n        to be issued.\n\n        Note that mplsL3VpnVrfConfRteMxThrshTime denotes the interval\n        at which the this notification will be reissued after the\n        maximum value has been exceeded (or reached if\n        mplsL3VpnVrfConfMaxRoutes and mplsL3VpnVrfConfHighRteThresh are\n        equal) and the initial notification has been issued.  This value\n        is intended to prevent continuous generation of notifications by\n        an agent in the event that routes are continually added to a VRF\n        after it has reached its maximum value.  The default value is 0\n        minutes.  If this value is set to 0, the agent should only issue\n        a single notification at the time that the maximum threshold has\n        been reached, and should not issue any more notifications until\n        the value of routes has fallen below the configured threshold\n        value.
%edes        mplsL3VpnNumVrfSecIllglLblThrshExcd This notification is generated when the number of illegal\n        label violations on a VRF as indicated by\n\n        mplsL3VpnVrfSecIllegalLblVltns has exceeded\n        mplsL3VpnIllLblRcvThrsh.  The threshold is not\n        included in the varbind here because the value of\n        mplsL3VpnVrfSecIllegalLblVltns should be one greater than\n        the threshold at the time this notification is issued.
%edes        mplsL3VpnNumVrfRouteMaxThreshCleared This notification is generated only after the number of routes\n        contained by the specified VRF exceeds or attempts to exceed\n        the maximum allowed value as indicated by\n        mplsVrfMaxRouteThreshold, and then falls below this value.  The\n        emission of this notification informs the operator that the\n        error condition has been cleared without the operator having to\n        query the device.\n\n        Note that mplsL3VpnVrfConfRteMxThrshTime denotes the interval at\n        which the mplsNumVrfRouteMaxThreshExceeded notification will\n        be reissued after the maximum value has been exceeded (or\n        reached if mplsL3VpnVrfConfMaxRoutes and\n        mplsL3VpnVrfConfHighRteThresh are equal) and the initial\n        notification has been issued.  Therefore,\n        the generation of this notification should also be emitted with\n        this same frequency (assuming that the error condition is\n        cleared).  Specifically, if the error condition is reached and\n        cleared several times during the period of time specified in\n        mplsL3VpnVrfConfRteMxThrshTime, only a single notification will\n        be issued to indicate the first instance of the error condition\n        as well as the first time the error condition is cleared.\n        This behavior is intended to prevent continuous generation of\n        notifications by an agent in the event that routes are\n        continually added and removed to/from a VRF after it has\n        reached its maximum value.  The default value is 0.  If this\n        value is set to 0, the agent should issue a notification\n        whenever the maximum threshold has been cleared.
%edes        mplsL3VpnConfiguredVrfs The number of VRFs that are configured on this node.
%edes        mplsL3VpnActiveVrfs     The number of VRFs that are active on this node.\n        That is, those VRFs whose corresponding mplsL3VpnVrfOperStatus\n        object value is equal to operational (1).
%edes        mplsL3VpnConnectedInterfaces Total number of interfaces connected to a VRF.
%edes        mplsL3VpnNotificationEnable If this object is true, then it enables the\n         generation of all notifications defined in\n         this MIB.  This object's value should be\n         preserved across agent reboots.
%eref        mplsL3VpnNotificationEnable See also [RFC3413] for explanation that\n        notifications are under the ultimate control of the\n        MIB modules in this document.
%edes        mplsL3VpnVrfConfMaxPossRts Denotes maximum number of routes that the device\n      will allow all VRFs jointly to hold.  If this value is\n      set to 0, this indicates that the device is\n      unable to determine the absolute maximum.  In this\n      case, the configured maximum MAY not actually\n      be allowed by the device.
%eunits      mplsL3VpnVrfConfRteMxThrshTime seconds
%edes        mplsL3VpnVrfConfRteMxThrshTime Denotes the interval in seconds, at which the route max threshold\n      notification may be reissued after the maximum value has been\n      exceeded (or has been reached if mplsL3VpnVrfConfMaxRoutes and\n      mplsL3VpnVrfConfHighRteThresh are equal) and the initial\n      notification has been issued.  This value is intended to prevent\n      continuous generation of notifications by an agent in the event\n      that routes are continually added to a VRF after it has reached\n      its maximum value.  If this value is set to 0, the agent should\n      only issue a single notification at the time that the maximum\n      threshold has been reached, and should not issue any more\n      notifications until the value of routes has fallen below the\n      configured threshold value.  This is the recommended default\n      behavior.
%edes        mplsL3VpnIllLblRcvThrsh The number of illegally received labels above which\n        the mplsNumVrfSecIllglLblThrshExcd notification\n        is issued.  The persistence of this value mimics\n        that of the device's configuration.
%edes        mplsL3VpnIfConfTable    This table specifies per-interface MPLS capability\n        and associated information.
%edes        mplsL3VpnIfConfEntry    An entry in this table is created by an LSR for\n        every interface capable of supporting MPLS L3VPN.\n        Each entry in this table is meant to correspond to\n        an entry in the Interfaces Table.
%edes        mplsL3VpnIfConfIndex    This is a unique index for an entry in the\n        mplsL3VpnIfConfTable.  A non-zero index for an\n        entry indicates the ifIndex for the corresponding\n        interface entry in the MPLS-VPN-layer in the ifTable.\n        Note that this table does not necessarily correspond\n        one-to-one with all entries in the Interface MIB\n        having an ifType of MPLS-layer; rather, only those\n        that are enabled for MPLS L3VPN functionality.
%eref        mplsL3VpnIfConfIndex    RFC2863
%edes        mplsL3VpnIfVpnClassification Denotes whether this link participates in a\n        carrier's carrier, enterprise, or inter-provider\n        scenario.
%edes        mplsL3VpnIfVpnRouteDistProtocol Denotes the route distribution protocol across the\n        PE-CE link.  Note that more than one routing protocol\n        may be enabled at the same time; thus, this object is\n        specified as a bitmask.  For example, static(5) and\n        ospf(2) are a typical configuration.
%edes        mplsL3VpnIfConfStorageType The storage type for this VPN If entry.\n        Conceptual rows having the value 'permanent'\n        need not allow write access to any columnar\n        objects in the row.
%eref        mplsL3VpnIfConfStorageType See RFC2579.
%edes        mplsL3VpnIfConfRowStatus This variable is used to create, modify, and/or\n        delete a row in this table.  Rows in this\n        table signify that the specified interface is\n        associated with this VRF.  If the row creation\n        operation succeeds, the interface will have been\n        associated with the specified VRF, otherwise the\n        agent MUST not allow the association.  If the agent\n        only allows read-only operations on this table, it\n        MUST create entries in this table as they are created\n        on the device.  When a row in this table is in\n        active(1) state, no objects in that row can be\n        modified except mplsL3VpnIfConfStorageType and\n        mplsL3VpnIfConfRowStatus.
%edes        mplsL3VpnVrfTable       This table specifies per-interface MPLS L3VPN\n        VRF Table capability and associated information.\n        Entries in this table define VRF routing instances\n        associated with MPLS/VPN interfaces.  Note that\n        multiple interfaces can belong to the same VRF\n        instance.  The collection of all VRF instances\n        comprises an actual VPN.
%edes        mplsL3VpnVrfEntry       An entry in this table is created by an LSR for\n        every VRF capable of supporting MPLS L3VPN.  The\n        indexing provides an ordering of VRFs per-VPN\n        interface.
%edes        mplsL3VpnVrfName        The human-readable name of this VPN.  This MAY\n        be equivalent to the [RFC2685] VPN-ID, but may\n        also vary.  If it is set to the VPN ID, it MUST\n        be equivalent to the value of mplsL3VpnVrfVpnId.\n        It is strongly recommended that all sites supporting\n        VRFs that are part of the same VPN use the same\n        naming convention for VRFs as well as the same VPN\n        ID.
%eref        mplsL3VpnVrfName        [RFC2685]
%edes        mplsL3VpnVrfVpnId       The VPN ID as specified in [RFC2685].  If a VPN ID\n        has not been specified for this VRF, then this\n        variable SHOULD be set to a zero-length OCTET\n        STRING.
%edes        mplsL3VpnVrfDescription The human-readable description of this VRF.
%edes        mplsL3VpnVrfRD          The route distinguisher for this VRF.
%edes        mplsL3VpnVrfCreationTime The time at which this VRF entry was created.
%edes        mplsL3VpnVrfOperStatus  Denotes whether or not a VRF is operational.  A VRF is\n        up(1) when there is at least one interface associated\n        with the VRF whose ifOperStatus is up(1).  A VRF is\n        down(2) when:\n        a. There does not exist at least one interface whose\n           ifOperStatus is up(1).\n        b. There are no interfaces associated with the VRF.
%edes        mplsL3VpnVrfActiveInterfaces Total number of interfaces connected to this VRF with\n        ifOperStatus = up(1).\n\n        This value should increase when an interface is associated\n        with the corresponding VRF and its corresponding ifOperStatus\n        is equal to up(1).  If an interface is associated whose\n        ifOperStatus is not up(1), then the value is not incremented\n        until such time as it transitions to this state.\n\n        This value should be decremented when an interface is\n        disassociated with a VRF or the corresponding ifOperStatus\n        transitions out of the up(1) state to any other state.\n       
%edes        mplsL3VpnVrfAssociatedInterfaces Total number of interfaces connected to this VRF\n        (independent of ifOperStatus type).
%edes        mplsL3VpnVrfConfMidRteThresh Denotes mid-level water marker for the number\n      of routes that this VRF may hold.
%edes        mplsL3VpnVrfConfHighRteThresh Denotes high-level water marker for the number of\n      routes that this VRF may hold.
%edes        mplsL3VpnVrfConfMaxRoutes Denotes maximum number of routes that this VRF is\n      configured to hold.  This value MUST be less than or\n      equal to mplsL3VpnVrfConfMaxPossRts unless it is set\n      to 0.
%edes        mplsL3VpnVrfConfLastChanged The value of sysUpTime at the time of the last\n      change of this table entry, which includes changes of\n      VRF parameters defined in this table or addition or\n      deletion of interfaces associated with this VRF.
%edes        mplsL3VpnVrfConfRowStatus This variable is used to create, modify, and/or\n        delete a row in this table.\n\n        When a row in this table is in active(1) state, no\n        objects in that row can be modified except\n        mplsL3VpnVrfConfAdminStatus, mplsL3VpnVrfConfRowStatus,\n        and mplsL3VpnVrfConfStorageType.
%edes        mplsL3VpnVrfConfAdminStatus Indicates the desired operational status of this\n         VRF.
%edes        mplsL3VpnVrfConfStorageType The storage type for this VPN VRF entry.\n         Conceptual rows having the value 'permanent'\n         need not allow write access to any columnar\n         objects in the row.
%eref        mplsL3VpnVrfConfStorageType See RFC2579.
%edes        mplsL3VpnVrfRTTable     This table specifies per-VRF route target association.\n         Each entry identifies a connectivity policy supported\n         as part of a VPN.
%edes        mplsL3VpnVrfRTEntry     An entry in this table is created by an LSR for\n        each route target configured for a VRF supporting\n        a MPLS L3VPN instance.  The indexing provides an\n        ordering per-VRF instance.  See [RFC4364] for a\n        complete definition of a route target.
%edes        mplsL3VpnVrfRTIndex     Auxiliary index for route targets configured for a\n        particular VRF.
%edes        mplsL3VpnVrfRTType      The route target distribution type.
%edes        mplsL3VpnVrfRT          The route target distribution policy.
%edes        mplsL3VpnVrfRTDescr     Description of the route target.
%edes        mplsL3VpnVrfRTRowStatus This variable is used to create, modify, and/or\n        delete a row in this table.  When a row in this\n        table is in active(1) state, no objects in that row\n        can be modified except mplsL3VpnVrfRTRowStatus.
%edes        mplsL3VpnVrfRTStorageType The storage type for this VPN route target (RT) entry.\n         Conceptual rows having the value 'permanent'\n         need not allow write access to any columnar\n         objects in the row.
%eref        mplsL3VpnVrfRTStorageType See RFC2579.
%edes        mplsL3VpnVrfSecTable    This table specifies per MPLS L3VPN VRF Table\n        security-related counters.
%edes        mplsL3VpnVrfSecEntry    An entry in this table is created by an LSR for\n        every VRF capable of supporting MPLS L3VPN.  Each\n        entry in this table is used to indicate security-related\n        information for each VRF entry.
%edes        mplsL3VpnVrfSecIllegalLblVltns Indicates the number of illegally received\n        labels on this VPN/VRF.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsL3VpnVrfSecDiscontinuityTime.
%edes        mplsL3VpnVrfSecDiscontinuityTime The value of sysUpTime on the most recent occasion at\n        which any one or more of this entry's counters suffered\n        a discontinuity.  If no such discontinuities have\n        occurred since the last re-initialization of the local\n        management subsystem, then this object contains a zero\n        value.
%edes        mplsL3VpnVrfPerfTable   This table specifies per MPLS L3VPN VRF Table performance\n\n        information.
%edes        mplsL3VpnVrfPerfEntry   An entry in this table is created by an LSR for\n        every VRF capable of supporting MPLS L3VPN.
%edes        mplsL3VpnVrfPerfRoutesAdded Indicates the number of routes added to this VPN/VRF\n        since the last discontinuity.  Discontinuities in\n        the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsL3VpnVrfPerfDiscTime.
%edes        mplsL3VpnVrfPerfRoutesDeleted Indicates the number of routes removed from this VPN/VRF.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsL3VpnVrfPerfDiscTime.
%edes        mplsL3VpnVrfPerfCurrNumRoutes Indicates the number of routes currently used by this\n        VRF.
%edes        mplsL3VpnVrfPerfRoutesDropped This counter should be incremented when the number of routes\n        contained by the specified VRF exceeds or attempts to exceed\n        the maximum allowed value as indicated by\n        mplsL3VpnVrfMaxRouteThreshold.\n\n        Discontinuities in the value of this counter can occur\n        at re-initialization of the management system, and at\n        other times as indicated by the value of\n        mplsL3VpnVrfPerfDiscTime.
%edes        mplsL3VpnVrfPerfDiscTime The value of sysUpTime on the most recent occasion at\n        which any one or more of this entry's counters suffered\n        a discontinuity.  If no such discontinuities have\n        occurred since the last re-initialization of the local\n        management subsystem, then this object contains a zero\n        value.
%edes        mplsL3VpnVrfRteTable    This table specifies per-interface MPLS L3VPN VRF Table\n        routing information.  Entries in this table define VRF routing\n        entries associated with the specified MPLS/VPN interfaces.  Note\n\n        that this table contains both BGP and Interior Gateway Protocol\n        IGP routes, as both may appear in the same VRF.
%eref        mplsL3VpnVrfRteTable    [RFC2096]
%edes        mplsL3VpnVrfRteEntry    An entry in this table is created by an LSR for every route\n        present configured (either dynamically or statically) within\n        the context of a specific VRF capable of supporting MPLS/BGP\n        VPN.  The indexing provides an ordering of VRFs per-VPN\n        interface.\n\n        Implementers need to be aware that there are quite a few\n        index objects that together can exceed the size allowed\n        for an Object Identifier (OID).  So implementers must make\n        sure that OIDs of column instances in this table will have\n        no more than 128 sub-identifiers, otherwise they cannot be\n        accessed using SNMPv1, SNMPv2c, or SNMPv3.
%edes        mplsL3VpnVrfRteInetCidrDestType The type of the mplsL3VpnVrfRteInetCidrDest address, as\n                defined in the InetAddress MIB.\n\n                Only those address types that may appear in an actual\n                routing table are allowed as values of this object.
%eref        mplsL3VpnVrfRteInetCidrDestType RFC4001
%edes        mplsL3VpnVrfRteInetCidrDest The destination IP address of this route.\n\n                The type of this address is determined by the value of\n                the mplsL3VpnVrfRteInetCidrDestType object.\n\n                The values for the index objects\n                mplsL3VpnVrfRteInetCidrDest and\n                mplsL3VpnVrfRteInetCidrPfxLen must be consistent.  When\n                the value of mplsL3VpnVrfRteInetCidrDest is x, then\n                the bitwise logical-AND of x with the value of the mask\n                formed from the corresponding index object\n                mplsL3VpnVrfRteInetCidrPfxLen MUST be\n                equal to x.  If not, then the index pair is not\n                consistent and an inconsistentName error must be\n                returned on SET or CREATE requests.
%edes        mplsL3VpnVrfRteInetCidrPfxLen Indicates the number of leading one bits that form the\n\n                mask to be logical-ANDed with the destination address\n                before being compared to the value in the\n                mplsL3VpnVrfRteInetCidrDest field.\n\n                The values for the index objects\n                mplsL3VpnVrfRteInetCidrDest and\n                mplsL3VpnVrfRteInetCidrPfxLen must be consistent.  When\n                the value of mplsL3VpnVrfRteInetCidrDest is x, then the\n                bitwise logical-AND of x with the value of the mask\n                formed from the corresponding index object\n                mplsL3VpnVrfRteInetCidrPfxLen MUST be\n                equal to x.  If not, then the index pair is not\n                consistent and an inconsistentName error must be\n                returned on SET or CREATE requests.
%edes        mplsL3VpnVrfRteInetCidrPolicy This object is an opaque object without any defined\n                semantics.  Its purpose is to serve as an additional\n                index that may delineate between multiple entries to\n                the same destination.  The value { 0 0 } shall be used\n                as the default value for this object.
%edes        mplsL3VpnVrfRteInetCidrNHopType The type of the mplsL3VpnVrfRteInetCidrNextHop address,\n                as defined in the InetAddress MIB.\n\n                Value should be set to unknown(0) for non-remote\n                routes.\n\n                Only those address types that may appear in an actual\n                routing table are allowed as values of this object.
%eref        mplsL3VpnVrfRteInetCidrNHopType RFC4001
%edes        mplsL3VpnVrfRteInetCidrNextHop On remote routes, the address of the next system en\n                route.  For non-remote routes, a zero-length string.\n                The type of this address is determined by the value of\n                the mplsL3VpnVrfRteInetCidrNHopType object.
%edes        mplsL3VpnVrfRteInetCidrIfIndex The ifIndex value that identifies the local interface\n                through which the next hop of this route should be\n                reached.  A value of 0 is valid and represents the\n                scenario where no interface is specified.
%edes        mplsL3VpnVrfRteInetCidrType The type of route.  Note that local(3) refers to a\n                route for which the next hop is the final destination;\n                remote(4) refers to a route for which the next hop is\n                not the final destination.\n\n                Routes that do not result in traffic forwarding or\n                rejection should not be displayed even if the\n                implementation keeps them stored internally.\n\n                reject(2) refers to a route that, if matched, discards\n                the message as unreachable and returns a notification\n                (e.g., ICMP error) to the message sender.  This is used\n                in some protocols as a means of correctly aggregating\n                routes.\n\n                blackhole(5) refers to a route that, if matched,\n\n                discards the message silently.
%edes        mplsL3VpnVrfRteInetCidrProto The routing mechanism via which this route was learned.\n                Inclusion of values for gateway routing protocols is\n                not intended to imply that hosts should support those\n                protocols.
%edes        mplsL3VpnVrfRteInetCidrAge The number of seconds since this route was last updated\n                or otherwise determined to be correct.  Note that no\n                semantics of 'too old' can be implied except through\n                knowledge of the routing protocol by which the route\n                was learned.
%edes        mplsL3VpnVrfRteInetCidrNextHopAS The Autonomous System Number of the next hop.  The\n                semantics of this object are determined by the\n                routing protocol specified in the route's\n                mplsL3VpnVrfRteInetCidrProto value.  When this\n                object is unknown or not relevant, its value should\n                be set to zero.
%edes        mplsL3VpnVrfRteInetCidrMetric1 The primary routing metric for this route.  The\n                semantics of this metric are determined by the\n\n                routing protocol specified in the route's\n                mplsL3VpnVrfRteInetCidrProto value.  If this\n                metric is not used, its value should be set to\n                -1.
%edes        mplsL3VpnVrfRteInetCidrMetric2 An alternate routing metric for this route.  The\n                semantics of this metric are determined by the routing\n                protocol specified in the route's\n                mplsL3VpnVrfRteInetCidrProto\n                value.  If this metric is not used, its value should be\n                set to -1.
%edes        mplsL3VpnVrfRteInetCidrMetric3 An alternate routing metric for this route.  The\n                semantics of this metric are determined by the routing\n                protocol specified in the route's\n                mplsL3VpnVrfRteInetCidrProto\n                value.  If this metric is not used, its value should be\n                set to -1.
%edes        mplsL3VpnVrfRteInetCidrMetric4 An alternate routing metric for this route.  The\n                semantics of this metric are determined by the routing\n                protocol specified in the route's\n                mplsL3VpnVrfRteInetCidrProto value.  If this metric\n                is not used, its value should be set to -1.
%edes        mplsL3VpnVrfRteInetCidrMetric5 An alternate routing metric for this route.  The\n                semantics of this metric are determined by the routing\n                protocol specified in the route's\n                mplsL3VpnVrfRteInetCidrProto value.  If this metric is\n                not used, its value should be set to -1.
%edes        mplsL3VpnVrfRteXCPointer Index into mplsXCTable that identifies which cross-\n        connect entry is associated with this VRF route entry\n        by containing the mplsXCIndex of that cross-connect entry.\n        The string containing the single-octet 0x00 indicates that\n        a label stack is not associated with this route entry.  This\n        can be the case because the label bindings have not yet\n        been established, or because some change in the agent has\n        removed them.\n\n        When the label stack associated with this VRF route is created,\n        it MUST establish the associated cross-connect\n        entry in the mplsXCTable and then set that index to the value\n        of this object.  Changes to the cross-connect object in the\n        mplsXCTable MUST automatically be reflected in the value of\n        this object.  If this object represents a static routing entry,\n        then the manager must ensure that this entry is maintained\n        consistently in the corresponding mplsXCTable as well.
%eref        mplsL3VpnVrfRteXCPointer RFC 3813 - Multiprotocol Label Switching (MPLS) Label Switching\n        Router (LSR) Management Information base (MIB), C. Srinivasan,\n        A. Vishwanathan, and T. Nadeau, June 2004
%edes        mplsL3VpnVrfRteInetCidrStatus The row status variable, used according to row\n                installation and removal conventions.\n\n                A row entry cannot be modified when the status is\n                marked as active(1).
%edes        mplsL3VpnScalarGroup    Collection of scalar objects required for MPLS VPN\n              management.
%edes        mplsL3VpnVrfGroup       Collection of objects needed for MPLS VPN VRF\n              management.
%edes        mplsL3VpnIfGroup        Collection of objects needed for MPLS VPN interface\n              management.
%edes        mplsL3VpnPerfGroup      Collection of objects needed for MPLS VPN\n              performance information.
%edes        mplsL3VpnPerfRouteGroup Collection of objects needed to track MPLS VPN\n              routing table dropped routes.
%edes        mplsL3VpnSecGroup       Collection of objects needed for MPLS VPN\n              security-related information.
%edes        mplsL3VpnVrfRteGroup    Objects required for VRF route table management.
%edes        mplsL3VpnVrfRTGroup     Objects required for VRF route target management.
%edes        mplsL3VpnNotificationGroup Objects required for MPLS VPN notifications.
%edes        snmpInPkts              The total number of messages delivered to the SNMP\n            entity from the transport service.
%edes        snmpOutPkts             The total number of SNMP Messages which were\n            passed from the SNMP protocol entity to the\n            transport service.
%edes        snmpInBadVersions       The total number of SNMP messages which were delivered\n            to the SNMP entity and were for an unsupported SNMP\n            version.
%edes        snmpInBadCommunityNames The total number of community-based SNMP messages (for\n           example,  SNMPv1) delivered to the SNMP entity which\n           used an SNMP community name not known to said entity.\n           Also, implementations which authenticate community-based\n           SNMP messages using check(s) in addition to matching\n           the community name (for example, by also checking\n           whether the message originated from a transport address\n           allowed to use a specified community name) MAY include\n           in this value the number of messages which failed the\n           additional check(s).  It is strongly RECOMMENDED that\n\n           the documentation for any security model which is used\n           to authenticate community-based SNMP messages specify\n           the precise conditions that contribute to this value.
%edes        snmpInBadCommunityUses  The total number of community-based SNMP messages (for\n           example, SNMPv1) delivered to the SNMP entity which\n           represented an SNMP operation that was not allowed for\n           the SNMP community named in the message.  The precise\n           conditions under which this counter is incremented\n           (if at all) depend on how the SNMP entity implements\n           its access control mechanism and how its applications\n           interact with that access control mechanism.  It is\n           strongly RECOMMENDED that the documentation for any\n           access control mechanism which is used to control access\n           to and visibility of MIB instrumentation specify the\n           precise conditions that contribute to this value.
%edes        snmpInASNParseErrs      The total number of ASN.1 or BER errors encountered by\n            the SNMP entity when decoding received SNMP messages.
%edes        snmpInTooBigs           The total number of SNMP PDUs which were\n            delivered to the SNMP protocol entity and for\n            which the value of the error-status field was\n            `tooBig'.
%edes        snmpInNoSuchNames       The total number of SNMP PDUs which were\n            delivered to the SNMP protocol entity and for\n            which the value of the error-status field was\n            `noSuchName'.
%edes        snmpInBadValues         The total number of SNMP PDUs which were\n            delivered to the SNMP protocol entity and for\n            which the value of the error-status field was\n            `badValue'.
%edes        snmpInReadOnlys         The total number valid SNMP PDUs which were delivered\n            to the SNMP protocol entity and for which the value\n            of the error-status field was `readOnly'.  It should\n            be noted that it is a protocol error to generate an\n            SNMP PDU which contains the value `readOnly' in the\n            error-status field, as such this object is provided\n            as a means of detecting incorrect implementations of\n            the SNMP.
%edes        snmpInGenErrs           The total number of SNMP PDUs which were delivered\n            to the SNMP protocol entity and for which the value\n            of the error-status field was `genErr'.
%edes        snmpInTotalReqVars      The total number of MIB objects which have been\n            retrieved successfully by the SNMP protocol entity\n            as the result of receiving valid SNMP Get-Request\n            and Get-Next PDUs.
%edes        snmpInTotalSetVars      The total number of MIB objects which have been\n            altered successfully by the SNMP protocol entity as\n            the result of receiving valid SNMP Set-Request PDUs.
%edes        snmpInGetRequests       The total number of SNMP Get-Request PDUs which\n            have been accepted and processed by the SNMP\n            protocol entity.
%edes        snmpInGetNexts          The total number of SNMP Get-Next PDUs which have been\n            accepted and processed by the SNMP protocol entity.
%edes        snmpInSetRequests       The total number of SNMP Set-Request PDUs which\n            have been accepted and processed by the SNMP protocol\n            entity.
%edes        snmpInGetResponses      The total number of SNMP Get-Response PDUs which\n            have been accepted and processed by the SNMP protocol\n            entity.
%edes        snmpInTraps             The total number of SNMP Trap PDUs which have been\n            accepted and processed by the SNMP protocol entity.
%edes        snmpOutTooBigs          The total number of SNMP PDUs which were generated\n            by the SNMP protocol entity and for which the value\n            of the error-status field was `tooBig.'
%edes        snmpOutNoSuchNames      The total number of SNMP PDUs which were generated\n            by the SNMP protocol entity and for which the value\n            of the error-status was `noSuchName'.
%edes        snmpOutBadValues        The total number of SNMP PDUs which were generated\n            by the SNMP protocol entity and for which the value\n            of the error-status field was `badValue'.
%edes        snmpOutGenErrs          The total number of SNMP PDUs which were generated\n            by the SNMP protocol entity and for which the value\n            of the error-status field was `genErr'.
%edes        snmpOutGetRequests      The total number of SNMP Get-Request PDUs which\n            have been generated by the SNMP protocol entity.
%edes        snmpOutGetNexts         The total number of SNMP Get-Next PDUs which have\n            been generated by the SNMP protocol entity.
%edes        snmpOutSetRequests      The total number of SNMP Set-Request PDUs which\n            have been generated by the SNMP protocol entity.
%edes        snmpOutGetResponses     The total number of SNMP Get-Response PDUs which\n            have been generated by the SNMP protocol entity.
%edes        snmpOutTraps            The total number of SNMP Trap PDUs which have\n            been generated by the SNMP protocol entity.
%edes        snmpEnableAuthenTraps   Indicates whether the SNMP entity is permitted to\n            generate authenticationFailure traps.  The value of this\n            object overrides any configuration information; as such,\n            it provides a means whereby all authenticationFailure\n            traps may be disabled.\n\n            Note that it is strongly recommended that this object\n            be stored in non-volatile memory so that it remains\n            constant across re-initializations of the network\n            management system.
%edes        snmpSilentDrops         The total number of Confirmed Class PDUs (such as\n           GetRequest-PDUs, GetNextRequest-PDUs,\n           GetBulkRequest-PDUs, SetRequest-PDUs, and\n           InformRequest-PDUs) delivered to the SNMP entity which\n           were silently dropped because the size of a reply\n           containing an alternate Response Class PDU (such as a\n           Response-PDU) with an empty variable-bindings field\n           was greater than either a local constraint or the\n           maximum message size associated with the originator of\n           the request.
%edes        snmpProxyDrops          The total number of Confirmed Class PDUs\n            (such as GetRequest-PDUs, GetNextRequest-PDUs,\n            GetBulkRequest-PDUs, SetRequest-PDUs, and\n            InformRequest-PDUs) delivered to the SNMP entity which\n            were silently dropped because the transmission of\n            the (possibly translated) message to a proxy target\n            failed in a manner (other than a time-out) such that\n            no Response Class PDU (such as a Response-PDU) could\n            be returned.
%edes        ospfRouterId            A 32-bit integer uniquely identifying the\n          router in the Autonomous System.\n          By convention, to ensure uniqueness, this\n          should default to the value of one of the\n          router's IP interface addresses.\n\n          This object is persistent and when written\n          the entity SHOULD save the change to non-volatile storage.
%eref        ospfRouterId            OSPF Version 2, C.1 Global parameters
%edes        ospfAdminStat           The administrative status of OSPF in the\n          router.  The value 'enabled' denotes that the\n          OSPF Process is active on at least one interface;\n          'disabled' disables it on all interfaces.\n\n          This object is persistent and when written\n          the entity SHOULD save the change to non-volatile storage.
%edes        ospfVersionNumber       The current version number of the OSPF protocol is 2.
%eref        ospfVersionNumber       OSPF Version 2, Title
%edes        ospfAreaBdrRtrStatus    A flag to note whether this router is an Area\n          Border Router.
%eref        ospfAreaBdrRtrStatus    OSPF Version 2, Section 3 Splitting the AS into\n          Areas
%edes        ospfASBdrRtrStatus      A flag to note whether this router is configured as\n           an Autonomous System Border Router.\n\n           This object is persistent and when written the\n           entity SHOULD save the change to non-volatile storage.
%eref        ospfASBdrRtrStatus      OSPF Version 2, Section 3.3 Classification of\n          routers
%edes        ospfExternLsaCount      The number of external (LS type-5) link state\n           advertisements in the link state database.
%eref        ospfExternLsaCount      OSPF Version 2, Appendix A.4.5 AS external link\n           advertisements
%edes        ospfExternLsaCksumSum   The 32-bit sum of the LS checksums of\n           the external link state advertisements\n           contained in the link state database.  This sum\n           can be used to determine if there has been a\n           change in a router's link state database and\n           to compare the link state database of two\n           routers.  The value should be treated as unsigned\n           when comparing two sums of checksums.
%edes        ospfTOSSupport          The router's support for type-of-service routing.\n\n           This object is persistent and when written\n           the entity SHOULD save the change to non-volatile\n           storage.
%eref        ospfTOSSupport          OSPF Version 2, Appendix F.1.2 Optional TOS\n          support
%edes        ospfOriginateNewLsas    The number of new link state advertisements\n          that have been originated.  This number is\n          incremented each time the router originates a new\n          LSA.\n\n          Discontinuities in the value of this counter can\n          occur at re-initialization of the management system,\n          and at other times as indicated by the value of\n          ospfDiscontinuityTime.
%edes        ospfRxNewLsas           The number of link state advertisements received\n          that are determined to be new instantiations.\n          This number does not include newer instantiations\n          of self-originated link state advertisements.\n\n          Discontinuities in the value of this counter can\n          occur at re-initialization of the management system,\n          and at other times as indicated by the value of\n          ospfDiscontinuityTime.
%edes        ospfExtLsdbLimit        The maximum number of non-default\n          AS-external LSAs entries that can be stored in the\n          link state database.  If the value is -1, then\n          there is no limit.\n\n          When the number of non-default AS-external LSAs\n          in a router's link state database reaches\n          ospfExtLsdbLimit, the router enters\n          overflow state.  The router never holds more than\n          ospfExtLsdbLimit non-default AS-external LSAs\n          in its database.  OspfExtLsdbLimit MUST be set\n          identically in all routers attached to the OSPF\n          backbone and/or any regular OSPF area (i.e.,\n          OSPF stub areas and NSSAs are excluded).\n\n          This object is persistent and when written\n          the entity SHOULD save the change to non-volatile\n          storage.
%edes        ospfMulticastExtensions A bit mask indicating whether the router is\n          forwarding IP multicast (Class D) datagrams\n          based on the algorithms defined in the\n          multicast extensions to OSPF.\n\n          Bit 0, if set, indicates that the router can\n\n          forward IP multicast datagrams in the router's\n          directly attached areas (called intra-area\n          multicast routing).\n\n          Bit 1, if set, indicates that the router can\n          forward IP multicast datagrams between OSPF\n          areas (called inter-area multicast routing).\n\n          Bit 2, if set, indicates that the router can\n          forward IP multicast datagrams between\n          Autonomous Systems (called inter-AS multicast\n          routing).\n\n          Only certain combinations of bit settings are\n          allowed, namely: 0 (no multicast forwarding is\n          enabled), 1 (intra-area multicasting only), 3\n          (intra-area and inter-area multicasting), 5\n          (intra-area and inter-AS multicasting), and 7\n          (multicasting everywhere).  By default, no\n          multicast forwarding is enabled.\n\n          This object is persistent and when written\n          the entity SHOULD save the change to non-volatile\n          storage.
%edes        ospfExitOverflowInterval The number of seconds that, after entering\n          OverflowState, a router will attempt to leave\n          OverflowState.  This allows the router to again\n          originate non-default AS-external LSAs.  When\n          set to 0, the router will not leave\n          overflow state until restarted.\n\n          This object is persistent and when written\n          the entity SHOULD save the change to non-volatile\n          storage.
%edes        ospfDemandExtensions    The router's support for demand routing.\n           This object is persistent and when written\n           the entity SHOULD save the change to non-volatile\n           storage.
%eref        ospfDemandExtensions    Extending OSPF to Support Demand Circuits
%edes        ospfRFC1583Compatibility Indicates metrics used to choose among multiple\n          AS-external LSAs.  When RFC1583Compatibility is set to\n          enabled, only cost will be used when choosing among\n          multiple AS-external LSAs advertising the same\n          destination.  When RFC1583Compatibility is set to\n          disabled, preference will be driven first by type of\n          path using cost only to break ties.\n\n          This object is persistent and when written\n          the entity SHOULD save the change to non-volatile\n          storage.
%eref        ospfRFC1583Compatibility OSPF Version 2, Section 16.4.1 External path\n            preferences
%edes        ospfOpaqueLsaSupport    The router's support for Opaque LSA types.
%eref        ospfOpaqueLsaSupport    The OSPF Opaque LSA Option
%eunits      ospfReferenceBandwidth  kilobits per second
%edes        ospfReferenceBandwidth  Reference bandwidth in kilobits/second for\n\n          calculating default interface metrics.  The\n          default value is 100,000 KBPS (100 MBPS).\n\n          This object is persistent and when written\n          the entity SHOULD save the change to non-volatile\n          storage.
%edes        ospfRestartSupport      The router's support for OSPF graceful restart.\n          Options include: no restart support, only planned\n          restarts, or both planned and unplanned restarts.\n\n          This object is persistent and when written\n          the entity SHOULD save the change to non-volatile\n          storage.
%eunits      ospfRestartInterval     seconds
%edes        ospfRestartInterval     Configured OSPF graceful restart timeout interval.\n\n           This object is persistent and when written\n           the entity SHOULD save the change to non-volatile\n           storage.
%edes        ospfRestartStrictLsaChecking Indicates if strict LSA checking is enabled for\n           graceful restart.\n\n           This object is persistent and when written\n           the entity SHOULD save the change to non-volatile\n\n           storage.
%edes        ospfRestartStatus       Current status of OSPF graceful restart.
%eunits      ospfRestartAge          seconds
%edes        ospfRestartAge          Remaining time in current OSPF graceful restart\n          interval.
%edes        ospfRestartExitReason   Describes the outcome of the last attempt at a\n          graceful restart.  If the value is 'none', no restart\n          has yet been attempted.  If the value is 'inProgress',\n          a restart attempt is currently underway.
%edes        ospfAsLsaCount          The number of AS-scope link state\n           advertisements in the AS-scope link state database.
%edes        ospfAsLsaCksumSum       The 32-bit unsigned sum of the LS checksums of\n           the AS link state advertisements contained in the AS-scope\n           link state database.  This sum can be used to determine\n           if there has been a change in a router's AS-scope link\n           state database, and to compare the AS-scope link state\n           database of two routers.
%edes        ospfStubRouterSupport   The router's support for stub router functionality.
%eref        ospfStubRouterSupport   OSPF Stub Router Advertisement
%edes        ospfStubRouterAdvertisement This object controls the advertisement of\n           stub router LSAs by the router.  The value\n           doNotAdvertise will result in the advertisement\n           of a standard router LSA and is the default value.\n\n           This object is persistent and when written\n           the entity SHOULD save the change to non-volatile\n           storage.
%edes        ospfDiscontinuityTime   The value of sysUpTime on the most recent occasion\n          at which any one of this MIB's counters suffered\n          a discontinuity.\n\n          If no such discontinuities have occurred since the last\n          re-initialization of the local management subsystem,\n          then this object contains a zero value.
%edes        ospfAreaTable           Information describing the configured parameters and\n          cumulative statistics of the router's attached areas.\n          The interfaces and virtual links are configured\n          as part of these areas.  Area 0.0.0.0, by definition,\n          is the backbone area.
%eref        ospfAreaTable           OSPF Version 2, Section 6 The Area Data Structure
%edes        ospfAreaEntry           Information describing the configured parameters and\n          cumulative statistics of one of the router's attached areas.\n          The interfaces and virtual links are configured as part of\n          these areas.  Area 0.0.0.0, by definition, is the backbone\n          area.\n\n          Information in this table is persistent and when this object\n          is written the entity SHOULD save the change to non-volatile\n          storage.
%edes        ospfAreaId              A 32-bit integer uniquely identifying an area.\n          Area ID 0.0.0.0 is used for the OSPF backbone.
%eref        ospfAreaId              OSPF Version 2, Appendix C.2 Area parameters
%edes        ospfAuthType            The authentication type specified for an area.
%eref        ospfAuthType            OSPF Version 2, Appendix D Authentication
%edes        ospfImportAsExtern      Indicates if an area is a stub area, NSSA, or standard\n          area.  Type-5 AS-external LSAs and type-11 Opaque LSAs are\n          not imported into stub areas or NSSAs.  NSSAs import\n          AS-external data as type-7 LSAs
%eref        ospfImportAsExtern      OSPF Version 2, Appendix C.2 Area parameters
%edes        ospfSpfRuns             The number of times that the intra-area route\n          table has been calculated using this area's\n          link state database.  This is typically done\n          using Dijkstra's algorithm.\n\n          Discontinuities in the value of this counter can occur\n          at re-initialization of the management system, and at other\n          times as indicated by the value of ospfDiscontinuityTime.
%edes        ospfAreaBdrRtrCount     The total number of Area Border Routers reachable\n          within this area.  This is initially zero and is\n          calculated in each Shortest Path First (SPF) pass.
%edes        ospfAsBdrRtrCount       The total number of Autonomous System Border\n          Routers reachable within this area.  This is\n          initially zero and is calculated in each SPF\n          pass.
%edes        ospfAreaLsaCount        The total number of link state advertisements\n          in this area's link state database, excluding\n          AS-external LSAs.
%edes        ospfAreaLsaCksumSum     The 32-bit sum of the link state\n          advertisements' LS checksums contained in this\n          area's link state database.  This sum excludes\n          external (LS type-5) link state advertisements.\n          The sum can be used to determine if there has\n          been a change in a router's link state\n          database, and to compare the link state database of\n          two routers.  The value should be treated as unsigned\n          when comparing two sums of checksums.
%edes        ospfAreaSummary         The variable ospfAreaSummary controls the\n          import of summary LSAs into stub and NSSA areas.\n          It has no effect on other areas.\n\n          If it is noAreaSummary, the router will not\n          originate summary LSAs into the stub or NSSA area.\n          It will rely entirely on its default route.\n\n          If it is sendAreaSummary, the router will both\n          summarize and propagate summary LSAs.
%edes        ospfAreaStatus          This object permits management of the table by\n          facilitating actions such as row creation,\n          construction, and destruction.\n\n          The value of this object has no effect on\n          whether other objects in this conceptual row can be\n          modified.
%edes        ospfAreaNssaTranslatorRole Indicates an NSSA border router's ability to\n          perform NSSA translation of type-7 LSAs into\n          type-5 LSAs.
%edes        ospfAreaNssaTranslatorState Indicates if and how an NSSA border router is\n          performing NSSA translation of type-7 LSAs into type-5\n\n          LSAs.  When this object is set to enabled, the NSSA Border\n          router's OspfAreaNssaExtTranslatorRole has been set to\n          always.  When this object is set to elected, a candidate\n          NSSA Border router is Translating type-7 LSAs into type-5.\n          When this object is set to disabled, a candidate NSSA\n          border router is NOT translating type-7 LSAs into type-5.
%eunits      ospfAreaNssaTranslatorStabilityInterval seconds
%edes        ospfAreaNssaTranslatorStabilityInterval The number of seconds after an elected translator\n          determines its services are no longer required, that\n          it should continue to perform its translation duties.
%edes        ospfAreaNssaTranslatorEvents Indicates the number of translator state changes\n          that have occurred since the last boot-up.\n\n          Discontinuities in the value of this counter can occur\n          at re-initialization of the management system, and at other\n          times as indicated by the value of ospfDiscontinuityTime.
%edes        ospfStubAreaTable       The set of metrics that will be advertised\n          by a default Area Border Router into a stub area.
%eref        ospfStubAreaTable       OSPF Version 2, Appendix C.2, Area Parameters
%edes        ospfStubAreaEntry       The metric for a given Type of Service that\n          will be advertised by a default Area Border\n          Router into a stub area.\n\n          Information in this table is persistent and when this object\n          is written the entity SHOULD save the change to non-volatile\n          storage.
%eref        ospfStubAreaEntry       OSPF Version 2, Appendix C.2, Area Parameters
%edes        ospfStubAreaId          The 32-bit identifier for the stub area.  On\n          creation, this can be derived from the\n          instance.
%edes        ospfStubTOS             The Type of Service associated with the\n          metric.  On creation, this can be derived from\n\n          the instance.
%edes        ospfStubMetric          The metric value applied at the indicated Type\n          of Service.  By default, this equals the least\n          metric at the Type of Service among the\n          interfaces to other areas.
%edes        ospfStubStatus          This object permits management of the table by\n          facilitating actions such as row creation,\n          construction, and destruction.\n\n          The value of this object has no effect on\n          whether other objects in this conceptual row can be\n          modified.
%edes        ospfStubMetricType      This variable displays the type of metric\n          advertised as a default route.
%edes        ospfLsdbTable           The OSPF Process's link state database (LSDB).\n           The LSDB contains the link state advertisements\n           from throughout the areas that the device is attached to.
%eref        ospfLsdbTable           OSPF Version 2, Section 12 Link State Advertisements
%edes        ospfLsdbEntry           A single link state advertisement.
%edes        ospfLsdbAreaId          The 32-bit identifier of the area from which\n          the LSA was received.
%eref        ospfLsdbAreaId          OSPF Version 2, Appendix C.2 Area parameters
%edes        ospfLsdbType            The type of the link state advertisement.\n          Each link state type has a separate advertisement\n          format.\n\n          Note: External link state advertisements are permitted\n          for backward compatibility, but should be displayed\n          in the ospfAsLsdbTable rather than here.
%eref        ospfLsdbType            OSPF Version 2, Appendix A.4.1 The Link State\n          Advertisement header
%edes        ospfLsdbLsid            The Link State ID is an LS Type Specific field\n          containing either a Router ID or an IP address;\n          it identifies the piece of the routing domain\n          that is being described by the advertisement.
%eref        ospfLsdbLsid            OSPF Version 2, Section 12.1.4 Link State ID
%edes        ospfLsdbRouterId        The 32-bit number that uniquely identifies the\n          originating router in the Autonomous System.
%eref        ospfLsdbRouterId        OSPF Version 2, Appendix C.1 Global parameters
%edes        ospfLsdbSequence        The sequence number field is a signed 32-bit\n          integer.  It starts with the value '80000001'h,\n          or -'7FFFFFFF'h, and increments until '7FFFFFFF'h.\n          Thus, a typical sequence number will be very negative.\n          It is used to detect old and duplicate Link State\n          Advertisements.  The space of sequence numbers is linearly\n          ordered.  The larger the sequence number, the more recent\n          the advertisement.
%eref        ospfLsdbSequence        OSPF Version 2, Section 12.1.6 LS sequence\n          number
%eunits      ospfLsdbAge             seconds
%edes        ospfLsdbAge             This field is the age of the link state advertisement\n          in seconds.
%eref        ospfLsdbAge             OSPF Version 2, Section 12.1.1 LS age
%edes        ospfLsdbChecksum        This field is the checksum of the complete contents of\n          the advertisement, excepting the age field.  The age field\n          is excepted so that an advertisement's age can be\n          incremented without updating the checksum.  The checksum\n          used is the same that is used for ISO connectionless\n\n          datagrams; it is commonly referred to as the\n          Fletcher checksum.
%eref        ospfLsdbChecksum        OSPF Version 2, Section 12.1.7 LS checksum
%edes        ospfLsdbAdvertisement   The entire link state advertisement, including\n          its header.\n\n          Note that for variable length LSAs, SNMP agents\n          may not be able to return the largest string size.
%eref        ospfLsdbAdvertisement   OSPF Version 2, Section 12 Link State Advertisements
%edes        ospfAreaRangeTable      The Address Range Table acts as an adjunct to the Area\n           Table.  It describes those Address Range Summaries that\n           are configured to be propagated from an Area to reduce\n           the amount of information about it that is known beyond\n           its borders.  It contains a set of IP address ranges\n           specified by an IP address/IP network mask pair.\n           For example, class B address range of X.X.X.X\n           with a network mask of 255.255.0.0 includes all IP\n           addresses from X.X.0.0 to X.X.255.255.\n\n           Note that this table is obsoleted and is replaced\n           by the Area Aggregate Table.
%eref        ospfAreaRangeTable      OSPF Version 2, Appendix C.2  Area parameters
%edes        ospfAreaRangeEntry      A single area address range.\n\n          Information in this table is persistent and when this object\n          is written the entity SHOULD save the change to non-volatile\n          storage.
%eref        ospfAreaRangeEntry      OSPF Version 2, Appendix C.2  Area parameters
%edes        ospfAreaRangeAreaId     The area that the address range is to be found\n          within.
%eref        ospfAreaRangeAreaId     OSPF Version 2, Appendix C.2 Area parameters
%edes        ospfAreaRangeNet        The IP address of the net or subnet indicated\n          by the range.
%eref        ospfAreaRangeNet        OSPF Version 2, Appendix C.2 Area parameters
%edes        ospfAreaRangeMask       The subnet mask that pertains to the net or\n          subnet.
%eref        ospfAreaRangeMask       OSPF Version 2, Appendix C.2 Area parameters
%edes        ospfAreaRangeStatus     This object permits management of the table by\n          facilitating actions such as row creation,\n          construction, and destruction.\n\n          The value of this object has no effect on\n          whether other objects in this conceptual row can be\n          modified.
%edes        ospfAreaRangeEffect     Subnets subsumed by ranges either trigger the\n          advertisement of the indicated summary\n         (advertiseMatching) or result in the subnet's not\n          being advertised at all outside the area.
%edes        ospfHostTable           The Host/Metric Table indicates what hosts are directly\n\n          attached to the router, what metrics and types\n          of service should be advertised for them,\n          and what areas they are found within.
%eref        ospfHostTable           OSPF Version 2, Appendix C.7 Host route\n          parameters
%edes        ospfHostEntry           A metric to be advertised, for a given type of\n          service, when a given host is reachable.\n\n          Information in this table is persistent and when this object\n          is written the entity SHOULD save the change to non-volatile\n          storage.
%edes        ospfHostIpAddress       The IP address of the host.
%eref        ospfHostIpAddress       OSPF Version 2, Appendix C.7 Host route parameters
%edes        ospfHostTOS             The Type of Service of the route being configured.
%eref        ospfHostTOS             OSPF Version 2, Appendix C.7 Host route parameters
%edes        ospfHostMetric          The metric to be advertised.
%eref        ospfHostMetric          OSPF Version 2, Appendix C.7 Host route parameters
%edes        ospfHostStatus          This object permits management of the table by\n          facilitating actions such as row creation,\n          construction, and destruction.\n\n          The value of this object has no effect on\n          whether other objects in this conceptual row can be\n          modified.
%edes        ospfHostAreaID          The OSPF area to which the host belongs.\n          Deprecated by ospfHostCfgAreaID.
%eref        ospfHostAreaID          OSPF Version 2, Appendix C.7 Host parameters
%edes        ospfHostCfgAreaID       To configure the OSPF area to which the host belongs.
%eref        ospfHostCfgAreaID       OSPF Version 2, Appendix C.7 Host parameters
%edes        ospfIfTable             The OSPF Interface Table describes the interfaces\n          from the viewpoint of OSPF.\n          It augments the ipAddrTable with OSPF specific information.
%eref        ospfIfTable             OSPF Version 2, Appendix C.3  Router interface\n          parameters
%edes        ospfIfEntry             The OSPF interface entry describes one interface\n          from the viewpoint of OSPF.\n\n          Information in this table is persistent and when this object\n          is written the entity SHOULD save the change to non-volatile\n          storage.
%edes        ospfIfIpAddress         The IP address of this OSPF interface.
%edes        ospfAddressLessIf       For the purpose of easing the instancing of\n          addressed and addressless interfaces; this\n          variable takes the value 0 on interfaces with\n          IP addresses and the corresponding value of\n          ifIndex for interfaces having no IP address.
%edes        ospfIfAreaId            A 32-bit integer uniquely identifying the area\n          to which the interface connects.  Area ID\n          0.0.0.0 is used for the OSPF backbone.
%edes        ospfIfType              The OSPF interface type.\n          By way of a default, this field may be intuited\n          from the corresponding value of ifType.\n          Broadcast LANs, such as Ethernet and IEEE 802.5,\n          take the value 'broadcast', X.25 and similar\n          technologies take the value 'nbma', and links\n          that are definitively point to point take the\n          value 'pointToPoint'.
%edes        ospfIfAdminStat         The OSPF interface's administrative status.\n          The value formed on the interface, and the interface\n          will be advertised as an internal route to some area.\n          The value 'disabled' denotes that the interface is\n          external to OSPF.
%edes        ospfIfRtrPriority       The priority of this interface.  Used in\n          multi-access networks, this field is used in\n          the designated router election algorithm.  The\n          value 0 signifies that the router is not eligible\n          to become the designated router on this particular\n          network.  In the event of a tie in this value,\n          routers will use their Router ID as a tie breaker.
%eunits      ospfIfTransitDelay      seconds
%edes        ospfIfTransitDelay      The estimated number of seconds it takes to\n           transmit a link state update packet over this\n           interface.  Note that the minimal value SHOULD be\n           1 second.
%eunits      ospfIfRetransInterval   seconds
%edes        ospfIfRetransInterval   The number of seconds between link state advertisement\n          retransmissions, for adjacencies belonging to this\n          interface.  This value is also used when retransmitting\n\n          database description and Link State request packets.\n          Note that minimal value SHOULD be 1 second.
%eunits      ospfIfHelloInterval     seconds
%edes        ospfIfHelloInterval     The length of time, in seconds, between the Hello packets\n          that the router sends on the interface.  This value must be\n          the same for all routers attached to a common network.
%eunits      ospfIfRtrDeadInterval   seconds
%edes        ospfIfRtrDeadInterval   The number of seconds that a router's Hello packets have\n          not been seen before its neighbors declare the router down.\n          This should be some multiple of the Hello interval.  This\n          value must be the same for all routers attached to a common\n          network.
%eunits      ospfIfPollInterval      seconds
%edes        ospfIfPollInterval      The larger time interval, in seconds, between the Hello\n          packets sent to an inactive non-broadcast multi-access\n          neighbor.
%edes        ospfIfState             The OSPF Interface State.
%edes        ospfIfDesignatedRouter  The IP address of the designated router.
%edes        ospfIfBackupDesignatedRouter The IP address of the backup designated\n          router.
%edes        ospfIfEvents            The number of times this OSPF interface has\n          changed its state or an error has occurred.\n\n          Discontinuities in the value of this counter can occur\n          at re-initialization of the management system, and at other\n          times as indicated by the value of ospfDiscontinuityTime.
%edes        ospfIfAuthKey           The cleartext password used as an OSPF\n          authentication key when simplePassword security\n          is enabled.  This object does not access any OSPF\n          cryptogaphic (e.g., MD5) authentication key under\n          any circumstance.\n\n          If the key length is shorter than 8 octets, the\n          agent will left adjust and zero fill to 8 octets.\n\n          Unauthenticated interfaces need no authentication\n          key, and simple password authentication cannot use\n          a key of more than 8 octets.\n\n          Note that the use of simplePassword authentication\n          is NOT recommended when there is concern regarding\n          attack upon the OSPF system.  SimplePassword\n          authentication is only sufficient to protect against\n          accidental misconfigurations because it re-uses\n          cleartext passwords [RFC1704].\n\n          When read, ospfIfAuthKey always returns an octet\n          string of length zero.
%eref        ospfIfAuthKey           OSPF Version 2, Section 9 The Interface Data\n          Structure
%edes        ospfIfStatus            This object permits management of the table by\n          facilitating actions such as row creation,\n          construction, and destruction.\n\n          The value of this object has no effect on\n          whether other objects in this conceptual row can be\n          modified.
%edes        ospfIfMulticastForwarding The way multicasts should be forwarded on this\n          interface: not forwarded, forwarded as data\n          link multicasts, or forwarded as data link\n          unicasts.  Data link multicasting is not\n          meaningful on point-to-point and NBMA interfaces,\n          and setting ospfMulticastForwarding to 0 effectively\n          disables all multicast forwarding.
%edes        ospfIfDemand            Indicates whether Demand OSPF procedures (hello\n          suppression to FULL neighbors and setting the\n          DoNotAge flag on propagated LSAs) should be\n          performed on this interface.
%edes        ospfIfAuthType          The authentication type specified for an interface.\n\n          Note that this object can be used to engage\n          in significant attacks against an OSPF router.
%eref        ospfIfAuthType          OSPF Version 2, Appendix D Authentication
%edes        ospfIfLsaCount          The total number of link-local link state advertisements\n          in this interface's link-local link state database.
%edes        ospfIfLsaCksumSum       The 32-bit unsigned sum of the Link State\n          Advertisements' LS checksums contained in this\n          interface's link-local link state database.\n          The sum can be used to determine if there has\n          been a change in the interface's link state\n          database and to compare the interface link state\n          database of routers attached to the same subnet.
%edes        ospfIfDesignatedRouterId The Router ID of the designated router.
%edes        ospfIfBackupDesignatedRouterId The Router ID of the backup designated router.
%edes        ospfIfMetricTable       The Metric Table describes the metrics to be advertised\n          for a specified interface at the various types of service.\n          As such, this table is an adjunct of the OSPF Interface\n          Table.\n\n          Types of service, as defined by RFC 791, have the ability\n          to request low delay, high bandwidth, or reliable linkage.\n\n          For the purposes of this specification, the measure of\n          bandwidth:\n\n          Metric = referenceBandwidth / ifSpeed\n\n          is the default value.\n          The default reference bandwidth is 10^8.\n          For multiple link interfaces, note that ifSpeed is the sum\n          of the individual link speeds.  This yields a number having\n          the following typical values:\n\n          Network Type/bit rate   Metric\n\n          >= 100 MBPS                 1\n          Ethernet/802.3             10\n          E1                         48\n          T1 (ESF)                   65\n          64 KBPS                    1562\n          56 KBPS                    1785\n          19.2 KBPS                  5208\n          9.6 KBPS                   10416\n\n          Routes that are not specified use the default\n          (TOS 0) metric.\n\n          Note that the default reference bandwidth can be configured\n          using the general group object ospfReferenceBandwidth.
%eref        ospfIfMetricTable       OSPF Version 2, Appendix C.3 Router interface\n          parameters
%edes        ospfIfMetricEntry       A particular TOS metric for a non-virtual interface\n          identified by the interface index.\n\n          Information in this table is persistent and when this object\n          is written the entity SHOULD save the change to non-volatile\n          storage.
%eref        ospfIfMetricEntry       OSPF Version 2, Appendix C.3 Router interface\n          parameters
%edes        ospfIfMetricIpAddress   The IP address of this OSPF interface.  On row\n          creation, this can be derived from the instance.
%edes        ospfIfMetricAddressLessIf For the purpose of easing the instancing of\n          addressed and addressless interfaces; this\n          variable takes the value 0 on interfaces with\n          IP addresses and the value of ifIndex for\n          interfaces having no IP address.  On row\n          creation, this can be derived from the instance.
%edes        ospfIfMetricTOS         The Type of Service metric being referenced.\n          On row creation, this can be derived from the\n          instance.
%edes        ospfIfMetricValue       The metric of using this Type of Service on\n          this interface.  The default value of the TOS 0\n          metric is 10^8 / ifSpeed.
%edes        ospfIfMetricStatus      This object permits management of the table by\n          facilitating actions such as row creation,\n          construction, and destruction.\n\n          The value of this object has no effect on\n          whether other objects in this conceptual row can be\n          modified.
%edes        ospfVirtIfTable         Information about this router's virtual interfaces\n          that the OSPF Process is configured to carry on.
%eref        ospfVirtIfTable         OSPF Version 2, Appendix C.4  Virtual link\n          parameters
%edes        ospfVirtIfEntry         Information about a single virtual interface.\n\n          Information in this table is persistent and when this object\n          is written the entity SHOULD save the change to non-volatile\n          storage.
%edes        ospfVirtIfAreaId        The transit area that the virtual link\n          traverses.  By definition, this is not 0.0.0.0.
%edes        ospfVirtIfNeighbor      The Router ID of the virtual neighbor.
%eunits      ospfVirtIfTransitDelay  seconds
%edes        ospfVirtIfTransitDelay  The estimated number of seconds it takes to\n          transmit a Link State update packet over this\n          interface.  Note that the minimal value SHOULD be\n          1 second.
%eunits      ospfVirtIfRetransInterval seconds
%edes        ospfVirtIfRetransInterval The number of seconds between link state\n          avertisement retransmissions, for adjacencies\n          belonging to this interface.  This value is\n          also used when retransmitting database\n          description and Link State request packets.  This\n          value should be well over the expected\n          round-trip time.  Note that the minimal value SHOULD be\n          1 second.
%eunits      ospfVirtIfHelloInterval seconds
%edes        ospfVirtIfHelloInterval The length of time, in seconds, between the\n          Hello packets that the router sends on the\n          interface.  This value must be the same for the\n          virtual neighbor.
%eunits      ospfVirtIfRtrDeadInterval seconds
%edes        ospfVirtIfRtrDeadInterval The number of seconds that a router's Hello\n          packets have not been seen before its\n          neighbors declare the router down.  This should be\n          some multiple of the Hello interval.  This\n          value must be the same for the virtual neighbor.
%edes        ospfVirtIfState         OSPF virtual interface states.
%edes        ospfVirtIfEvents        The number of state changes or error events on\n          this virtual link.\n\n          Discontinuities in the value of this counter can occur\n          at re-initialization of the management system, and at other\n          times as indicated by the value of ospfDiscontinuityTime.
%edes        ospfVirtIfAuthKey       The cleartext password used as an OSPF\n          authentication key when simplePassword security\n          is enabled.  This object does not access any OSPF\n          cryptogaphic (e.g., MD5) authentication key under\n          any circumstance.\n\n          If the key length is shorter than 8 octets, the\n          agent will left adjust and zero fill to 8 octets.\n\n          Unauthenticated interfaces need no authentication\n          key, and simple password authentication cannot use\n          a key of more than 8 octets.\n\n          Note that the use of simplePassword authentication\n          is NOT recommended when there is concern regarding\n          attack upon the OSPF system.  SimplePassword\n          authentication is only sufficient to protect against\n          accidental misconfigurations because it re-uses\n          cleartext passwords.  [RFC1704]\n\n          When read, ospfIfAuthKey always returns an octet\n          string of length zero.
%eref        ospfVirtIfAuthKey       OSPF Version 2, Section 9 The Interface Data\n          Structure
%edes        ospfVirtIfStatus        This object permits management of the table by\n          facilitating actions such as row creation,\n          construction, and destruction.\n\n          The value of this object has no effect on\n          whether other objects in this conceptual row can be\n          modified.
%edes        ospfVirtIfAuthType      The authentication type specified for a virtual interface.\n\n          Note that this object can be used to engage\n          in significant attacks against an OSPF router.
%eref        ospfVirtIfAuthType      OSPF Version 2, Appendix E Authentication
%edes        ospfVirtIfLsaCount      The total number of link-local link state advertisements\n          in this virtual interface's link-local link state database.
%edes        ospfVirtIfLsaCksumSum   The 32-bit unsigned sum of the link state\n          advertisements' LS checksums contained in this\n          virtual interface's link-local link state database.\n          The sum can be used to determine if there has\n          been a change in the virtual interface's link state\n          database, and to compare the virtual interface\n          link state database of the virtual neighbors.
%edes        ospfNbrTable            A table describing all non-virtual neighbors\n          in the locality of the OSPF router.
%eref        ospfNbrTable            OSPF Version 2, Section 10 The Neighbor Data\n          Structure
%edes        ospfNbrEntry            The information regarding a single neighbor.\n\n          Information in this table is persistent and when this object\n          is written the entity SHOULD save the change to non-volatile\n\n          storage.
%eref        ospfNbrEntry            OSPF Version 2, Section 10 The Neighbor Data\n          Structure
%edes        ospfNbrIpAddr           The IP address this neighbor is using in its\n          IP source address.  Note that, on addressless\n          links, this will not be 0.0.0.0 but the\n\n          address of another of the neighbor's interfaces.
%edes        ospfNbrAddressLessIndex On an interface having an IP address, zero.\n          On addressless interfaces, the corresponding\n          value of ifIndex in the Internet Standard MIB.\n          On row creation, this can be derived from the\n          instance.
%edes        ospfNbrRtrId            A 32-bit integer (represented as a type\n          IpAddress) uniquely identifying the neighboring\n          router in the Autonomous System.
%edes        ospfNbrOptions          A bit mask corresponding to the neighbor's\n          options field.\n\n          Bit 0, if set, indicates that the system will\n          operate on Type of Service metrics other than\n          TOS 0.  If zero, the neighbor will ignore all\n          metrics except the TOS 0 metric.\n\n          Bit 1, if set, indicates that the associated\n          area accepts and operates on external\n          information; if zero, it is a stub area.\n\n          Bit 2, if set, indicates that the system is\n          capable of routing IP multicast datagrams, that is\n          that it implements the multicast extensions to\n          OSPF.\n\n          Bit 3, if set, indicates that the associated\n          area is an NSSA.  These areas are capable of\n          carrying type-7 external advertisements, which\n          are translated into type-5 external advertisements\n          at NSSA borders.
%eref        ospfNbrOptions          OSPF Version 2, Section 12.1.2 Options
%edes        ospfNbrPriority         The priority of this neighbor in the designated\n          router election algorithm.  The value 0 signifies\n          that the neighbor is not eligible to become\n          the designated router on this particular network.
%edes        ospfNbrState            The state of the relationship with this neighbor.
%eref        ospfNbrState            OSPF Version 2, Section 10.1 Neighbor States
%edes        ospfNbrEvents           The number of times this neighbor relationship\n          has changed state or an error has occurred.\n\n          Discontinuities in the value of this counter can occur\n          at re-initialization of the management system, and at other\n          times as indicated by the value of ospfDiscontinuityTime.
%edes        ospfNbrLsRetransQLen    The current length of the retransmission\n          queue.
%edes        ospfNbmaNbrStatus       This object permits management of the table by\n          facilitating actions such as row creation,\n          construction, and destruction.\n\n          The value of this object has no effect on\n          whether other objects in this conceptual row can be\n          modified.
%edes        ospfNbmaNbrPermanence   This variable displays the status of the entry;\n          'dynamic' and 'permanent' refer to how the neighbor\n          became known.
%edes        ospfNbrHelloSuppressed  Indicates whether Hellos are being suppressed\n          to the neighbor.
%edes        ospfNbrRestartHelperStatus Indicates whether the router is acting\n          as a graceful restart helper for the neighbor.
%eunits      ospfNbrRestartHelperAge seconds
%edes        ospfNbrRestartHelperAge Remaining time in current OSPF graceful restart\n          interval, if the router is acting as a restart\n          helper for the neighbor.
%edes        ospfNbrRestartHelperExitReason Describes the outcome of the last attempt at acting\n           as a graceful restart helper for the neighbor.
%edes        ospfVirtNbrTable        This table describes all virtual neighbors.\n          Since virtual links are configured\n          in the Virtual Interface Table, this table is read-only.
%eref        ospfVirtNbrTable        OSPF Version 2, Section 15 Virtual Links
%edes        ospfVirtNbrEntry        Virtual neighbor information.
%edes        ospfVirtNbrArea         The Transit Area Identifier.
%edes        ospfVirtNbrRtrId        A 32-bit integer uniquely identifying the\n          neighboring router in the Autonomous System.
%edes        ospfVirtNbrIpAddr       The IP address this virtual neighbor is using.
%edes        ospfVirtNbrOptions      A bit mask corresponding to the neighbor's\n          options field.\n\n          Bit 1, if set, indicates that the system will\n          operate on Type of Service metrics other than\n          TOS 0.  If zero, the neighbor will ignore all\n          metrics except the TOS 0 metric.\n\n          Bit 2, if set, indicates that the system is\n          network multicast capable, i.e., that it\n          implements OSPF multicast routing.
%edes        ospfVirtNbrState        The state of the virtual neighbor relationship.
%edes        ospfVirtNbrEvents       The number of times this virtual link has\n          changed its state or an error has occurred.\n\n          Discontinuities in the value of this counter can occur\n          at re-initialization of the management system, and at other\n          times as indicated by the value of ospfDiscontinuityTime.
%edes        ospfVirtNbrLsRetransQLen The current length of the retransmission\n          queue.
%edes        ospfVirtNbrHelloSuppressed Indicates whether Hellos are being suppressed\n          to the neighbor.
%edes        ospfVirtNbrRestartHelperStatus Indicates whether the router is acting\n          as a graceful restart helper for the neighbor.
%eunits      ospfVirtNbrRestartHelperAge seconds
%edes        ospfVirtNbrRestartHelperAge Remaining time in current OSPF graceful restart\n          interval, if the router is acting as a restart\n          helper for the neighbor.
%edes        ospfVirtNbrRestartHelperExitReason Describes the outcome of the last attempt at acting\n           as a graceful restart helper for the neighbor.
%edes        ospfExtLsdbTable        The OSPF Process's external LSA link state database.\n\n          This table is identical to the OSPF LSDB Table\n          in format, but contains only external link state\n          advertisements.  The purpose is to allow external\n\n          LSAs to be displayed once for the router rather\n          than once in each non-stub area.\n\n          Note that external LSAs are also in the AS-scope link state\n          database.
%eref        ospfExtLsdbTable        OSPF Version 2, Section 12 Link State Advertisements
%edes        ospfExtLsdbEntry        A single link state advertisement.
%edes        ospfExtLsdbType         The type of the link state advertisement.\n          Each link state type has a separate advertisement\n          format.
%eref        ospfExtLsdbType         OSPF Version 2, Appendix A.4.1 The Link State\n          Advertisement header
%edes        ospfExtLsdbLsid         The Link State ID is an LS Type Specific field\n          containing either a Router ID or an IP address;\n          it identifies the piece of the routing domain\n          that is being described by the advertisement.
%eref        ospfExtLsdbLsid         OSPF Version 2, Section 12.1.4 Link State ID
%edes        ospfExtLsdbRouterId     The 32-bit number that uniquely identifies the\n          originating router in the Autonomous System.
%eref        ospfExtLsdbRouterId     OSPF Version 2, Appendix C.1 Global parameters
%edes        ospfExtLsdbSequence     The sequence number field is a signed 32-bit\n          integer.  It starts with the value '80000001'h,\n          or -'7FFFFFFF'h, and increments until '7FFFFFFF'h.\n          Thus, a typical sequence number will be very negative.\n          It is used to detect old and duplicate link state\n          advertisements.  The space of sequence numbers is linearly\n          ordered.  The larger the sequence number, the more recent\n          the advertisement.
%eref        ospfExtLsdbSequence     OSPF Version  2,  Section  12.1.6  LS  sequence\n          number
%eunits      ospfExtLsdbAge          seconds
%edes        ospfExtLsdbAge          This field is the age of the link state\n          advertisement in seconds.
%eref        ospfExtLsdbAge          OSPF Version 2, Section 12.1.1 LS age
%edes        ospfExtLsdbChecksum     This field is the checksum of the complete\n          contents of the advertisement, excepting the\n          age field.  The age field is excepted so that\n          an advertisement's age can be incremented\n          without updating the checksum.  The checksum\n          used is the same that is used for ISO\n          connectionless datagrams; it is commonly referred\n          to as the Fletcher checksum.
%eref        ospfExtLsdbChecksum     OSPF Version 2, Section 12.1.7 LS checksum
%edes        ospfExtLsdbAdvertisement The entire link state advertisement, including\n          its header.
%eref        ospfExtLsdbAdvertisement OSPF Version 2, Section 12  Link State\n          Advertisements
%edes        ospfAreaAggregateTable  The Area Aggregate Table acts as an adjunct\n           to the Area Table.  It describes those address aggregates\n           that are configured to be propagated from an area.\n           Its purpose is to reduce the amount of information\n           that is known beyond an Area's borders.\n\n           It contains a set of IP address ranges\n           specified by an IP address/IP network mask pair.\n           For example, a class B address range of X.X.X.X\n           with a network mask of 255.255.0.0 includes all IP\n           addresses from X.X.0.0 to X.X.255.255.\n\n           Note that if ranges are configured such that one range\n           subsumes another range (e.g., 10.0.0.0 mask 255.0.0.0\n           and 10.1.0.0 mask 255.255.0.0),\n           the most specific match is the preferred one.
%eref        ospfAreaAggregateTable  OSPF Version 2, Appendix C.2  Area parameters
%edes        ospfAreaAggregateEntry  A single area aggregate entry.\n\n          Information in this table is persistent and when this object\n          is written the entity SHOULD save the change to non-volatile\n          storage.
%eref        ospfAreaAggregateEntry  OSPF Version 2, Appendix C.2  Area parameters
%edes        ospfAreaAggregateAreaID The area within which the address aggregate is to be\n          found.
%eref        ospfAreaAggregateAreaID OSPF Version 2, Appendix C.2 Area parameters
%edes        ospfAreaAggregateLsdbType The type of the address aggregate.  This field\n          specifies the Lsdb type that this address\n          aggregate applies to.
%eref        ospfAreaAggregateLsdbType OSPF Version 2, Appendix A.4.1 The Link State\n          Advertisement header
%edes        ospfAreaAggregateNet    The IP address of the net or subnet indicated\n          by the range.
%eref        ospfAreaAggregateNet    OSPF Version 2, Appendix C.2 Area parameters
%edes        ospfAreaAggregateMask   The subnet mask that pertains to the net or\n          subnet.
%eref        ospfAreaAggregateMask   OSPF Version 2, Appendix C.2 Area parameters
%edes        ospfAreaAggregateStatus This object permits management of the table by\n          facilitating actions such as row creation,\n          construction, and destruction.\n\n          The value of this object has no effect on\n          whether other objects in this conceptual row can be\n          modified.
%edes        ospfAreaAggregateEffect Subnets subsumed by ranges either trigger the\n          advertisement of the indicated aggregate\n         (advertiseMatching) or result in the subnet's not\n          being advertised at all outside the area.
%edes        ospfAreaAggregateExtRouteTag External route tag to be included in NSSA (type-7)\n           LSAs.
%est                 ospfBasicGroup   deprecated
%edes        ospfBasicGroup          These objects are used to monitor/manage\n          global OSPF parameters.  This object group\n          conforms to RFC 1850.
%est                 ospfAreaGroup    deprecated
%edes        ospfAreaGroup           These objects are used for OSPF systems\n          supporting areas per RFC 1850.
%edes        ospfStubAreaGroup       These objects are used for OSPF systems\n          supporting stub areas.
%edes        ospfLsdbGroup           These objects are used for OSPF systems\n          that display their link state database.
%est                 ospfAreaRangeGroup obsolete
%edes        ospfAreaRangeGroup      These objects are used for non-CIDR OSPF\n          systems that support multiple areas.  This\n          object group is obsolete.
%est                 ospfHostGroup    deprecated
%edes        ospfHostGroup           These objects are used for OSPF systems\n          that support attached hosts.
%est                 ospfIfGroup      deprecated
%edes        ospfIfGroup             These objects are used to monitor/manage OSPF\n          interfaces.  This object group conforms to RFC 1850.
%edes        ospfIfMetricGroup       These objects are used for OSPF systems for supporting\n\n          interface metrics.
%est                 ospfVirtIfGroup  deprecated
%edes        ospfVirtIfGroup         These objects are used for OSPF systems for supporting\n          virtual interfaces.  This object group conforms\n          to RFC 1850.
%est                 ospfNbrGroup     deprecated
%edes        ospfNbrGroup            These objects are used to monitor/manage OSPF neighbors.\n          This object group conforms to RFC 1850.
%est                 ospfVirtNbrGroup deprecated
%edes        ospfVirtNbrGroup        These objects are used to monitor/manage OSPF virtual\n          neighbors.  This object group conforms to RFC 1850.
%est                 ospfExtLsdbGroup deprecated
%edes        ospfExtLsdbGroup        These objects are used for OSPF systems that display\n          their link state database.  This object group\n          conforms to RFC 1850.\n\n          This object group is replaced by the ospfAsLsdbGroup\n          in order to support any AS-scope LSA type in a single\n          table.
%est                 ospfAreaAggregateGroup deprecated
%edes        ospfAreaAggregateGroup  These objects are used for OSPF systems to support\n          network prefix aggregation across areas.
%edes        ospfLocalLsdbGroup      These objects are used for OSPF systems\n          that display their link-local link state databases\n          for non-virtual links.
%edes        ospfVirtLocalLsdbGroup  These objects are used for OSPF systems\n           that display their link-local link state databases\n           for virtual links.
%edes        ospfAsLsdbGroup         These objects are used for OSPF systems\n           that display their AS-scope link state database.
%edes        ospfBasicGroup2         These objects are used to monitor/manage OSPF global\n          parameters.
%edes        ospfAreaGroup2          These objects are used by OSPF systems\n            to support areas.
%edes        ospfIfGroup2            These objects are used to monitor/manage OSPF interfaces.
%edes        ospfVirtIfGroup2        These objects are used to monitor/manage OSPF\n          virtual interfaces.
%edes        ospfNbrGroup2           These objects are used to monitor/manage OSPF\n          neighbors.
%edes        ospfVirtNbrGroup2       These objects are used to monitor/manage OSPF\n          virtual neighbors.
%edes        ospfAreaAggregateGroup2 These objects are used for OSPF systems to support\n          network prefix aggregation across areas.
%edes        ospfAreaLsaCountGroup   These objects are used for OSPF systems that display\n          per-area, per-LSA-type counters.
%edes        ospfHostGroup2          These objects are used for OSPF systems\n          that support attached hosts.
%est                 ospfObsoleteGroup obsolete
%edes        ospfObsoleteGroup       These objects are obsolete and are no longer required for\n          OSPF systems.  They are placed into this group for SMI\n          conformance.
%edes        ospfSetTrap             A 4-octet string serving as a bit map for\n             the trap events defined by the OSPF traps.  This\n             object is used to enable and disable specific\n             OSPF traps where a 1 in the bit field\n             represents enabled.  The right-most bit (least\n             significant) represents trap 0.\n\n             This object is persistent and when written\n\n             the entity SHOULD save the change to non-volatile\n             storage.
%edes        ospfConfigErrorType     Potential types of configuration conflicts.\n             Used by the ospfConfigError and\n             ospfConfigVirtError traps.  When the last value\n             of a trap using this object is needed, but no\n             traps of that type have been sent, this value\n             pertaining to this object should be returned as\n             noError.
%edes        ospfPacketType          OSPF packet types.  When the last value of a trap\n             using this object is needed, but no traps of\n             that type have been sent, this value pertaining\n             to this object should be returned as nullPacket.
%edes        ospfPacketSrc           The IP address of an inbound packet that cannot\n             be identified by a neighbor instance.  When\n             the last value of a trap using this object is\n             needed, but no traps of that type have been sent,\n             this value pertaining to this object should\n             be returned as 0.0.0.0.
%edes        ospfVirtIfStateChange   An ospfVirtIfStateChange trap signifies that there\n             has been a change in the state of an OSPF virtual\n             interface.\n\n             This trap should be generated when the interface\n             state regresses (e.g., goes from Point-to-Point to Down)\n             or progresses to a terminal state\n             (i.e., Point-to-Point).
%edes        ospfNbrStateChange      An ospfNbrStateChange trap signifies that\n             there has been a change in the state of a\n             non-virtual OSPF neighbor.  This trap should be\n             generated when the neighbor state regresses\n             (e.g., goes from Attempt or Full to 1-Way or\n             Down) or progresses to a terminal state (e.g.,\n\n             2-Way or Full).  When an neighbor transitions\n             from or to Full on non-broadcast multi-access\n             and broadcast networks, the trap should be\n             generated by the designated router.  A designated\n             router transitioning to Down will be noted by\n             ospfIfStateChange.
%edes        ospfVirtNbrStateChange  An ospfVirtNbrStateChange trap signifies that there\n             has been a change in the state of an OSPF virtual\n             neighbor.  This trap should be generated\n             when the neighbor state regresses (e.g., goes\n             from Attempt or Full to 1-Way or Down) or\n             progresses to a terminal state (e.g., Full).
%edes        ospfIfConfigError       An ospfIfConfigError trap signifies that a\n             packet has been received on a non-virtual\n             interface from a router whose configuration\n             parameters conflict with this router's\n             configuration parameters.  Note that the event\n             optionMismatch should cause a trap only if it\n             prevents an adjacency from forming.
%edes        ospfVirtIfConfigError   An ospfVirtIfConfigError trap signifies that a\n             packet has been received on a virtual interface\n             from a router whose configuration parameters\n             conflict with this router's configuration\n             parameters.  Note that the event optionMismatch\n             should cause a trap only if it prevents an\n             adjacency from forming.
%edes        ospfIfAuthFailure       An ospfIfAuthFailure trap signifies that a\n             packet has been received on a non-virtual\n             interface from a router whose authentication key\n             or authentication type conflicts with this\n             router's authentication key or authentication\n             type.
%edes        ospfVirtIfAuthFailure   An ospfVirtIfAuthFailure trap signifies that a\n             packet has been received on a virtual interface\n             from a router whose authentication key or\n             authentication type conflicts with this router's\n             authentication key or authentication type.
%edes        ospfIfRxBadPacket       An ospfIfRxBadPacket trap signifies that an\n             OSPF packet has been received on a non-virtual\n             interface that cannot be parsed.
%edes        ospfVirtIfRxBadPacket   An ospfVirtIfRxBadPacket trap signifies that an OSPF\n             packet has been received on a virtual interface\n             that cannot be parsed.
%edes        ospfTxRetransmit        An ospfTxRetransmit trap signifies than an\n              OSPF packet has been retransmitted on a\n              non-virtual interface.  All packets that may be\n              retransmitted are associated with an LSDB entry.\n              The LS type, LS ID, and Router ID are used to\n              identify the LSDB entry.
%edes        ospfVirtIfTxRetransmit  An ospfVirtIfTxRetransmit trap signifies than an\n             OSPF packet has been retransmitted on a virtual\n             interface.  All packets that may be retransmitted\n             are associated with an LSDB entry.  The LS\n             type, LS ID, and Router ID are used to identify\n             the LSDB entry.
%edes        ospfOriginateLsa        An ospfOriginateLsa trap signifies that a new\n             LSA has been originated by this router.  This\n             trap should not be invoked for simple refreshes\n             of LSAs (which happens every 30 minutes), but\n             instead will only be invoked when an LSA is\n             (re)originated due to a topology change.\n             Additionally, this trap does not include LSAs that\n             are being flushed because they have reached\n             MaxAge.
%edes        ospfMaxAgeLsa           An ospfMaxAgeLsa trap signifies that one of\n             the LSAs in the router's link state database has\n             aged to MaxAge.
%edes        ospfLsdbOverflow        An ospfLsdbOverflow trap signifies that the\n             number of LSAs in the router's link state\n             database has exceeded ospfExtLsdbLimit.
%edes        ospfLsdbApproachingOverflow An ospfLsdbApproachingOverflow trap signifies\n             that the number of LSAs in the router's\n             link state database has exceeded ninety percent of\n             ospfExtLsdbLimit.
%edes        ospfIfStateChange       An ospfIfStateChange trap signifies that there\n             has been a change in the state of a non-virtual\n             OSPF interface.  This trap should be generated\n             when the interface state regresses (e.g., goes\n             from Dr to Down) or progresses to a terminal\n             state (i.e., Point-to-Point, DR Other, Dr, or\n             Backup).
%edes        ospfNssaTranslatorStatusChange An ospfNssaTranslatorStatusChange trap indicates that\n             there has been a change in the router's ability to\n             translate OSPF type-7 LSAs into OSPF type-5 LSAs.\n             This trap should be generated when the translator\n             status transitions from or to any defined status on\n             a per-area basis.
%edes        ospfRestartStatusChange An ospfRestartStatusChange trap signifies that\n             there has been a change in the graceful restart\n             state for the router.  This trap should be\n             generated when the router restart status\n             changes.
%edes        ospfNbrRestartHelperStatusChange An ospfNbrRestartHelperStatusChange trap signifies that\n             there has been a change in the graceful restart\n             helper state for the neighbor.  This trap should be\n             generated when the neighbor restart helper status\n             transitions for a neighbor.
%edes        ospfVirtNbrRestartHelperStatusChange An ospfVirtNbrRestartHelperStatusChange trap signifies\n             that there has been a change in the graceful restart\n             helper state for the virtual neighbor.  This trap should\n             be generated when the virtual neighbor restart helper\n             status transitions for a virtual neighbor.
%edes        ospfTrapControlGroup    These objects are required to control traps\n             from OSPF systems.
%edes        ospfTrapEventGroup      A grouping of OSPF trap events, as specified\n             in NOTIFICATION-TYPE constructs.
%edes        ospfLocalLsdbTable      The OSPF Process's link-local link state database\n          for non-virtual links.\n          This table is identical to the OSPF LSDB Table\n          in format, but contains only link-local Link State\n          Advertisements for non-virtual links.  The purpose is\n          to allow link-local LSAs to be displayed for each\n          non-virtual interface.  This table is implemented to\n          support type-9 LSAs that are defined\n          in 'The OSPF Opaque LSA Option'.
%eref        ospfLocalLsdbTable      OSPF Version 2, Section 12 Link State Advertisements\n          and The OSPF Opaque LSA Option
%edes        ospfLocalLsdbEntry      A single link state advertisement.
%edes        ospfLocalLsdbIpAddress  The IP address of the interface from\n          which the LSA was received if the interface is\n          numbered.
%eref        ospfLocalLsdbIpAddress  OSPF Version 2, Appendix C.3 Interface parameters
%edes        ospfLocalLsdbAddressLessIf The interface index of the interface from\n          which the LSA was received if the interface is\n          unnumbered.
%eref        ospfLocalLsdbAddressLessIf OSPF Version 2, Appendix C.3 Interface parameters
%edes        ospfLocalLsdbType       The type of the link state advertisement.\n          Each link state type has a separate\n          advertisement format.
%eref        ospfLocalLsdbType       OSPF Version 2, Appendix A.4.1 The Link State\n          Advertisement header
%edes        ospfLocalLsdbLsid       The Link State ID is an LS Type Specific field\n          containing a 32-bit identifier in IP address format;\n          it identifies the piece of the routing domain\n          that is being described by the advertisement.
%eref        ospfLocalLsdbLsid       OSPF Version 2, Section 12.1.4 Link State ID
%edes        ospfLocalLsdbRouterId   The 32-bit number that uniquely identifies the\n          originating router in the Autonomous System.
%eref        ospfLocalLsdbRouterId   OSPF Version 2, Appendix C.1 Global parameters
%edes        ospfLocalLsdbSequence   The sequence number field is a signed 32-bit\n          integer.  It starts with the value '80000001'h,\n          or -'7FFFFFFF'h, and increments until '7FFFFFFF'h.\n          Thus, a typical sequence number will be very negative.\n          It is used to detect old and duplicate link state\n          advertisements.  The space of sequence numbers is linearly\n          ordered.  The larger the sequence number, the more recent\n          the advertisement.
%eref        ospfLocalLsdbSequence   OSPF Version 2, Section 12.1.6 LS sequence\n          number
%eunits      ospfLocalLsdbAge        seconds
%edes        ospfLocalLsdbAge        This field is the age of the link state\n          advertisement in seconds.
%eref        ospfLocalLsdbAge        OSPF Version 2, Section 12.1.1 LS age
%edes        ospfLocalLsdbChecksum   This field is the checksum of the complete\n          contents of the advertisement, excepting the\n          age field.  The age field is excepted so that\n          an advertisement's age can be incremented\n          without updating the checksum.  The checksum\n          used is the same that is used for ISO\n          connectionless datagrams; it is commonly referred\n          to as the Fletcher checksum.
%eref        ospfLocalLsdbChecksum   OSPF Version 2, Section 12.1.7 LS checksum
%edes        ospfLocalLsdbAdvertisement The entire link state advertisement, including\n          its header.\n\n          Note that for variable length LSAs, SNMP agents\n          may not be able to return the largest string size.
%eref        ospfLocalLsdbAdvertisement OSPF Version 2, Section 12 Link State\n          Advertisements
%edes        ospfVirtLocalLsdbTable  The OSPF Process's link-local link state database\n          for virtual links.\n\n          This table is identical to the OSPF LSDB Table\n          in format, but contains only link-local Link State\n          Advertisements for virtual links.  The purpose is to\n          allow link-local LSAs to be displayed for each virtual\n          interface.  This table is implemented to support type-9 LSAs\n          that are defined in 'The OSPF Opaque LSA Option'.
%eref        ospfVirtLocalLsdbTable  OSPF Version 2, Section 12 Link State\n          Advertisements and The OSPF Opaque LSA Option
%edes        ospfVirtLocalLsdbEntry  A single link state advertisement.
%edes        ospfVirtLocalLsdbTransitArea The transit area that the virtual link\n          traverses.  By definition, this is not 0.0.0.0.
%eref        ospfVirtLocalLsdbTransitArea OSPF Version 2, Appendix C.3 Interface parameters
%edes        ospfVirtLocalLsdbNeighbor The Router ID of the virtual neighbor.
%eref        ospfVirtLocalLsdbNeighbor OSPF Version 2, Appendix C.3 Interface parameters
%edes        ospfVirtLocalLsdbType   The type of the link state advertisement.\n          Each link state type has a separate\n          advertisement format.
%eref        ospfVirtLocalLsdbType   OSPF Version 2, Appendix A.4.1 The Link State\n          Advertisement header
%edes        ospfVirtLocalLsdbLsid   The Link State ID is an LS Type Specific field\n          containing a 32-bit identifier in IP address format;\n          it identifies the piece of the routing domain\n          that is being described by the advertisement.
%eref        ospfVirtLocalLsdbLsid   OSPF Version 2, Section 12.1.4 Link State ID
%edes        ospfVirtLocalLsdbRouterId The 32-bit number that uniquely identifies the\n          originating router in the Autonomous System.
%eref        ospfVirtLocalLsdbRouterId OSPF Version 2, Appendix C.1 Global parameters
%edes        ospfVirtLocalLsdbSequence The sequence number field is a signed 32-bit\n          integer.  It starts with the value '80000001'h,\n          or -'7FFFFFFF'h, and increments until '7FFFFFFF'h.\n          Thus, a typical sequence number will be very negative.\n          It is used to detect old and duplicate link state\n          advertisements.  The space of sequence numbers is linearly\n          ordered.  The larger the sequence number, the more recent\n          the advertisement.
%eref        ospfVirtLocalLsdbSequence OSPF Version 2, Section 12.1.6 LS sequence\n          number
%eunits      ospfVirtLocalLsdbAge    seconds
%edes        ospfVirtLocalLsdbAge    This field is the age of the link state\n          advertisement in seconds.
%eref        ospfVirtLocalLsdbAge    OSPF Version 2, Section 12.1.1 LS age
%edes        ospfVirtLocalLsdbChecksum This field is the checksum of the complete\n          contents of the advertisement, excepting the\n          age field.  The age field is excepted so that\n\n          an advertisement's age can be incremented\n          without updating the checksum.  The checksum\n          used is the same that is used for ISO\n          connectionless datagrams; it is commonly\n          referred to as the Fletcher checksum.
%eref        ospfVirtLocalLsdbChecksum OSPF Version 2, Section 12.1.7 LS checksum
%edes        ospfVirtLocalLsdbAdvertisement The entire link state advertisement, including\n          its header.
%eref        ospfVirtLocalLsdbAdvertisement OSPF Version 2, Section 12 Link State\n          Advertisements.\n\n          Note that for variable length LSAs, SNMP agents\n          may not be able to return the largest string size.
%edes        ospfAsLsdbTable         The OSPF Process's AS-scope LSA link state database.\n           The database contains the AS-scope Link State\n           Advertisements from throughout the areas that\n           the device is attached to.\n\n           This table is identical to the OSPF LSDB Table\n           in format, but contains only AS-scope Link State\n           Advertisements.  The purpose is to allow AS-scope\n           LSAs to be displayed once for the router rather\n           than once in each non-stub area.
%eref        ospfAsLsdbTable         OSPF Version 2, Section 12 Link State\n          Advertisements
%edes        ospfAsLsdbEntry         A single link state advertisement.
%edes        ospfAsLsdbType          The type of the link state advertisement.\n          Each link state type has a separate\n          advertisement format.
%eref        ospfAsLsdbType          OSPF Version 2, Appendix A.4.1 The Link State\n          Advertisement header
%edes        ospfAsLsdbLsid          The Link State ID is an LS Type Specific field\n          containing either a Router ID or an IP address;\n\n          it identifies the piece of the routing domain\n          that is being described by the advertisement.
%eref        ospfAsLsdbLsid          OSPF Version 2, Section 12.1.4 Link State ID
%edes        ospfAsLsdbRouterId      The 32-bit number that uniquely identifies the\n          originating router in the Autonomous System.
%eref        ospfAsLsdbRouterId      OSPF Version 2, Appendix C.1 Global parameters
%edes        ospfAsLsdbSequence      The sequence number field is a signed 32-bit\n          integer.  It starts with the value '80000001'h,\n          or -'7FFFFFFF'h, and increments until '7FFFFFFF'h.\n          Thus, a typical sequence number will be very negative.\n          It is used to detect old and duplicate link state\n          advertisements.  The space of sequence numbers is linearly\n          ordered.  The larger the sequence number, the more recent\n          the advertisement.
%eref        ospfAsLsdbSequence      OSPF Version  2,  Section  12.1.6  LS  sequence\n          number
%eunits      ospfAsLsdbAge           seconds
%edes        ospfAsLsdbAge           This field is the age of the link state\n          advertisement in seconds.
%eref        ospfAsLsdbAge           OSPF Version 2, Section 12.1.1 LS age
%edes        ospfAsLsdbChecksum      This field is the checksum of the complete\n          contents of the advertisement, excepting the\n          age field.  The age field is excepted so that\n          an advertisement's age can be incremented\n          without updating the checksum.  The checksum\n          used is the same that is used for ISO\n          connectionless datagrams; it is commonly referred\n          to as the Fletcher checksum.
%eref        ospfAsLsdbChecksum      OSPF Version 2, Section 12.1.7 LS checksum
%edes        ospfAsLsdbAdvertisement The entire link state advertisement, including\n          its header.
%eref        ospfAsLsdbAdvertisement OSPF Version 2, Section 12 Link State\n          Advertisements.\n\n          Note that for variable length LSAs, SNMP agents\n          may not be able to return the largest string size.
%edes        ospfAreaLsaCountTable   This table maintains per-area, per-LSA-type counters
%edes        ospfAreaLsaCountEntry   An entry with a number of link advertisements\n\n              of a given type for a given area.
%edes        ospfAreaLsaCountAreaId  This entry Area ID.
%edes        ospfAreaLsaCountLsaType This entry LSA type.
%edes        ospfAreaLsaCountNumber  Number of LSAs of a given type for a given area.
%edes        bgpEstablishedNotification The bgpEstablishedNotification event is generated\n                     when the BGP FSM enters the established state.\n\n                     This Notification replaces the bgpEstablished\n                     Notification.
%edes        bgpBackwardTransNotification The bgpBackwardTransNotification event is\n                     generated when the BGP FSM moves from a higher\n                     numbered state to a lower numbered state.\n\n                     This Notification replaces the\n                     bgpBackwardsTransition Notification.
%edes        bgpVersion              Vector of supported BGP protocol version\n                     numbers.  Each peer negotiates the version\n                     from this vector.  Versions are identified\n                     via the string of bits contained within this\n                     object.  The first octet contains bits 0 to\n                     7, the second octet contains bits 8 to 15,\n                     and so on, with the most significant bit\n                     referring to the lowest bit number in the\n                     octet (e.g., the MSB of the first octet\n                     refers to bit 0).  If a bit, i, is present\n                     and set, then the version (i+1) of the BGP\n                     is supported.
%eref        bgpVersion              RFC 4271, Section 4.2.
%edes        bgpLocalAs              The local autonomous system number.
%eref        bgpLocalAs              RFC 4271, Section 4.2, 'My Autonomous System'.
%edes        bgpPeerTable            BGP peer table.  This table contains,\n                     one entry per BGP peer, information about the\n                     connections with BGP peers.
%edes        bgpPeerEntry            Entry containing information about the\n                     connection with a BGP peer.
%edes        bgpPeerIdentifier       The BGP Identifier of this entry's BGP peer.\n                     This entry MUST be 0.0.0.0 unless the\n                     bgpPeerState is in the openconfirm or the\n                     established state.
%eref        bgpPeerIdentifier       RFC 4271, Section 4.2, 'BGP Identifier'.
%edes        bgpPeerState            The BGP peer connection state.
%eref        bgpPeerState            RFC 4271, Section 8.2.2.
%edes        bgpPeerAdminStatus      The desired state of the BGP connection.\n                     A transition from 'stop' to 'start' will cause\n                     the BGP Manual Start Event to be generated.\n                     A transition from 'start' to 'stop' will cause\n                     the BGP Manual Stop Event to be generated.\n                     This parameter can be used to restart BGP peer\n                     connections.  Care should be used in providing\n                     write access to this object without adequate\n                     authentication.
%eref        bgpPeerAdminStatus      RFC 4271, Section 8.1.2.
%edes        bgpPeerNegotiatedVersion The negotiated version of BGP running between\n                     the two peers.\n\n                     This entry MUST be zero (0) unless the\n                     bgpPeerState is in the openconfirm or the\n\n                     established state.\n\n                     Note that legal values for this object are\n                     between 0 and 255.
%eref        bgpPeerNegotiatedVersion RFC 4271, Section 4.2.\n                     RFC 4271, Section 7.
%edes        bgpPeerLocalAddr        The local IP address of this entry's BGP\n                     connection.
%edes        bgpPeerLocalPort        The local port for the TCP connection between\n                     the BGP peers.
%edes        bgpPeerRemoteAddr       The remote IP address of this entry's BGP\n                     peer.
%edes        bgpPeerRemotePort       The remote port for the TCP connection\n                     between the BGP peers.  Note that the\n                     objects bgpPeerLocalAddr,\n                     bgpPeerLocalPort, bgpPeerRemoteAddr, and\n                     bgpPeerRemotePort provide the appropriate\n                     reference to the standard MIB TCP\n                     connection table.
%edes        bgpPeerRemoteAs         The remote autonomous system number received in\n                     the BGP OPEN message.
%eref        bgpPeerRemoteAs         RFC 4271, Section 4.2.
%edes        bgpPeerInUpdates        The number of BGP UPDATE messages\n                     received on this connection.
%eref        bgpPeerInUpdates        RFC 4271, Section 4.3.
%edes        bgpPeerOutUpdates       The number of BGP UPDATE messages\n                     transmitted on this connection.
%eref        bgpPeerOutUpdates       RFC 4271, Section 4.3.
%edes        bgpPeerInTotalMessages  The total number of messages received\n                     from the remote peer on this connection.
%eref        bgpPeerInTotalMessages  RFC 4271, Section 4.
%edes        bgpPeerOutTotalMessages The total number of messages transmitted to\n                     the remote peer on this connection.
%eref        bgpPeerOutTotalMessages RFC 4271, Section 4.
%edes        bgpPeerLastError        The last error code and subcode seen by this\n                     peer on this connection.  If no error has\n                     occurred, this field is zero.  Otherwise, the\n                     first byte of this two byte OCTET STRING\n                     contains the error code, and the second byte\n                     contains the subcode.
%eref        bgpPeerLastError        RFC 4271, Section 4.5.
%edes        bgpPeerFsmEstablishedTransitions The total number of times the BGP FSM\n                     transitioned into the established state\n                     for this peer.
%eref        bgpPeerFsmEstablishedTransitions RFC 4271, Section 8.
%eunits      bgpPeerFsmEstablishedTime seconds
%edes        bgpPeerFsmEstablishedTime This timer indicates how long (in\n                     seconds) this peer has been in the\n                     established state or how long\n                     since this peer was last in the\n                     established state.  It is set to zero when\n                     a new peer is configured or when the router is\n\n                     booted.
%eref        bgpPeerFsmEstablishedTime RFC 4271, Section 8.
%eunits      bgpPeerConnectRetryInterval seconds
%edes        bgpPeerConnectRetryInterval Time interval (in seconds) for the\n                     ConnectRetry timer.  The suggested value\n                     for this timer is 120 seconds.
%eref        bgpPeerConnectRetryInterval RFC 4271, Section 8.2.2.  This is the value used\n                     to initialize the 'ConnectRetryTimer'.
%eunits      bgpPeerHoldTime         seconds
%edes        bgpPeerHoldTime         Time interval (in seconds) for the Hold\n                     Timer established with the peer.  The\n                     value of this object is calculated by this\n                     BGP speaker, using the smaller of the\n                     values in bgpPeerHoldTimeConfigured and the\n                     Hold Time received in the OPEN message.\n\n                     This value must be at least three seconds\n                     if it is not zero (0).\n\n                     If the Hold Timer has not been established\n                     with the peer this object MUST have a value\n                     of zero (0).\n\n                     If the bgpPeerHoldTimeConfigured object has\n                     a value of (0), then this object MUST have a\n                     value of (0).
%eref        bgpPeerHoldTime         RFC 4271, Section 4.2.
%eunits      bgpPeerKeepAlive        seconds
%edes        bgpPeerKeepAlive        Time interval (in seconds) for the KeepAlive\n                     timer established with the peer.  The value\n                     of this object is calculated by this BGP\n                     speaker such that, when compared with\n                     bgpPeerHoldTime, it has the same proportion\n                     that bgpPeerKeepAliveConfigured has,\n                     compared with bgpPeerHoldTimeConfigured.\n\n                     If the KeepAlive timer has not been established\n                     with the peer, this object MUST have a value\n                     of zero (0).\n\n                     If the of bgpPeerKeepAliveConfigured object\n                     has a value of (0), then this object MUST have\n                     a value of (0).
%eref        bgpPeerKeepAlive        RFC 4271, Section 4.4.
%eunits      bgpPeerHoldTimeConfigured seconds
%edes        bgpPeerHoldTimeConfigured Time interval (in seconds) for the Hold Time\n                     configured for this BGP speaker with this\n                     peer.  This value is placed in an OPEN\n                     message sent to this peer by this BGP\n                     speaker, and is compared with the Hold\n                     Time field in an OPEN message received\n                     from the peer when determining the Hold\n                     Time (bgpPeerHoldTime) with the peer.\n                     This value must not be less than three\n                     seconds if it is not zero (0).  If it is\n                     zero (0), the Hold Time is NOT to be\n                     established with the peer.  The suggested\n                     value for this timer is 90 seconds.
%eref        bgpPeerHoldTimeConfigured RFC 4271, Section 4.2.\n                     RFC 4271, Section 10.
%eunits      bgpPeerKeepAliveConfigured seconds
%edes        bgpPeerKeepAliveConfigured Time interval (in seconds) for the\n                     KeepAlive timer configured for this BGP\n                     speaker with this peer.  The value of this\n                     object will only determine the\n                     KEEPALIVE messages' frequency relative to\n                     the value specified in\n                     bgpPeerHoldTimeConfigured; the actual\n                     time interval for the KEEPALIVE messages is\n                     indicated by bgpPeerKeepAlive.  A\n                     reasonable maximum value for this timer\n                     would be one third of that of\n                     bgpPeerHoldTimeConfigured.\n                     If the value of this object is zero (0),\n                     no periodical KEEPALIVE messages are sent\n                     to the peer after the BGP connection has\n                     been established.  The suggested value for\n                     this timer is 30 seconds.
%eref        bgpPeerKeepAliveConfigured RFC 4271, Section 4.4.\n                     RFC 4271, Section 10.
%eunits      bgpPeerMinASOriginationInterval seconds
%edes        bgpPeerMinASOriginationInterval Time interval (in seconds) for the\n                     MinASOriginationInterval timer.\n                     The suggested value for this timer is 15\n                     seconds.
%eref        bgpPeerMinASOriginationInterval RFC 4271, Section 9.2.1.2.\n                     RFC 4271, Section 10.
%eunits      bgpPeerMinRouteAdvertisementInterval seconds
%edes        bgpPeerMinRouteAdvertisementInterval Time interval (in seconds) for the\n                     MinRouteAdvertisementInterval timer.\n                     The suggested value for this timer is 30\n                     seconds for EBGP connections and 5\n                     seconds for IBGP connections.
%eref        bgpPeerMinRouteAdvertisementInterval RFC 4271, Section 9.2.1.1.\n                     RFC 4271, Section 10.
%eunits      bgpPeerInUpdateElapsedTime seconds
%edes        bgpPeerInUpdateElapsedTime Elapsed time (in seconds) since the last BGP\n                     UPDATE message was received from the peer.\n                     Each time bgpPeerInUpdates is incremented,\n                     the value of this object is set to zero (0).
%eref        bgpPeerInUpdateElapsedTime RFC 4271, Section 4.3.\n                     RFC 4271, Section 8.2.2, Established state.
%edes        bgpIdentifier           The BGP Identifier of the local system.
%eref        bgpIdentifier           RFC 4271, Section 4.2.
%edes        bgpRcvdPathAttrTable    The BGP Received Path Attribute Table\n                     contains information about paths to\n\n                     destination networks, received from all\n                     peers running BGP version 3 or less.
%edes        bgpPathAttrEntry        Information about a path to a network.
%edes        bgpPathAttrPeer         The IP address of the peer where the path\n                     information was learned.
%edes        bgpPathAttrDestNetwork  The address of the destination network.
%eref        bgpPathAttrDestNetwork  RFC 1267, Section 4.3.
%edes        bgpPathAttrOrigin       The ultimate origin of the path information.
%eref        bgpPathAttrOrigin       RFC 1267, Section 4.3.\n                     RFC 1267, Section 5.
%edes        bgpPathAttrASPath       The set of ASes that must be traversed to reach\n                     the network.  This object is probably best\n                     represented as SEQUENCE OF INTEGER.  For SMI\n                     compatibility, though, it is represented as\n                     OCTET STRING.  Each AS is represented as a pair\n                     of octets according to the following algorithm:\n\n                        first-byte-of-pair = ASNumber / 256;\n                        second-byte-of-pair = ASNumber & 255;
%eref        bgpPathAttrASPath       RFC 1267, Section 4.3.\n                     RFC 1267, Section 5.
%edes        bgpPathAttrNextHop      The address of the border router that should\n                     be used for the destination network.
%eref        bgpPathAttrNextHop      RFC 1267, Section 4.3.\n                     RFC 1267, Section 5.
%edes        bgpPathAttrInterASMetric The optional inter-AS metric.  If this\n                     attribute has not been provided for this route,\n                     the value for this object is 0.
%eref        bgpPathAttrInterASMetric RFC 1267, Section 4.3.\n                     RFC 1267, Section 5.
%edes        bgp4PathAttrTable       The BGP-4 Received Path Attribute Table\n                     contains information about paths to\n                     destination networks, received from all\n                     BGP4 peers.
%edes        bgp4PathAttrEntry       Information about a path to a network.
%edes        bgp4PathAttrPeer        The IP address of the peer where the path\n                     information was learned.
%edes        bgp4PathAttrIpAddrPrefixLen Length in bits of the IP address prefix in\n                     the Network Layer Reachability\n                     Information field.
%edes        bgp4PathAttrIpAddrPrefix An IP address prefix in the Network Layer\n                     Reachability Information field.  This object\n\n                     is an IP address containing the prefix with\n                     length specified by\n                     bgp4PathAttrIpAddrPrefixLen.\n                     Any bits beyond the length specified by\n                     bgp4PathAttrIpAddrPrefixLen are zeroed.
%eref        bgp4PathAttrIpAddrPrefix RFC 4271, Section 4.3.
%edes        bgp4PathAttrOrigin      The ultimate origin of the path\n                     information.
%eref        bgp4PathAttrOrigin      RFC 4271, Section 4.3.\n                     RFC 4271, Section 5.1.1.
%edes        bgp4PathAttrASPathSegment The sequence of AS path segments.  Each AS\n                     path segment is represented by a triple\n                     <type, length, value>.\n\n                     The type is a 1-octet field that has two\n                     possible values:\n                         1      AS_SET: unordered set of ASes that a\n                                     route in the UPDATE message\n                                     has traversed\n\n                         2      AS_SEQUENCE: ordered set of ASes that\n                                     a route in the UPDATE message\n                                     has traversed.\n\n                     The length is a 1-octet field containing the\n\n                     number of ASes in the value field.\n\n                     The value field contains one or more AS\n                     numbers.  Each AS is represented in the octet\n                     string as a pair of octets according to the\n                     following algorithm:\n\n                        first-byte-of-pair = ASNumber / 256;\n                        second-byte-of-pair = ASNumber & 255;\n\n                     Known Issues:\n                     o BGP Confederations will result in\n                       a type of either 3 or 4.\n                     o An AS Path may be longer than 255 octets.\n                       This may result in this object containing\n                       a truncated AS Path.
%eref        bgp4PathAttrASPathSegment RFC 4271, Section 4.3.\n                     RFC 4271, Section 5.1.2.
%edes        bgp4PathAttrNextHop     The address of the border router that\n                     should be used for the destination\n                     network.  This address is the NEXT_HOP\n                     address received in the UPDATE packet.
%eref        bgp4PathAttrNextHop     RFC 4271, Section 4.3.\n                     RFC 4271, Section 5.1.3.
%edes        bgp4PathAttrMultiExitDisc This metric is used to discriminate\n                     between multiple exit points to an\n                     adjacent autonomous system.  A value of -1\n                     indicates the absence of this attribute.\n\n                     Known Issues:\n                     o The BGP-4 specification uses an\n                       unsigned 32 bit number.  Thus, this\n\n                       object cannot represent the full\n                       range of the protocol.
%eref        bgp4PathAttrMultiExitDisc RFC 4271, Section 4.3.\n                     RFC 4271, Section 5.1.4.
%edes        bgp4PathAttrLocalPref   The originating BGP4 speaker's degree of\n                     preference for an advertised route.  A\n                     value of -1 indicates the absence of this\n                     attribute.\n\n                     Known Issues:\n                     o The BGP-4 specification uses an\n                       unsigned 32 bit number and thus this\n                       object cannot represent the full\n                       range of the protocol.
%eref        bgp4PathAttrLocalPref   RFC 4271, Section 4.3.\n                     RFC 4271, Section 5.1.5.
%edes        bgp4PathAttrAtomicAggregate If the ATOMIC_AGGREGATE attribute is present\n                     in the Path Attributes then this object MUST\n                     have a value of 'lessSpecificRouteNotSelected'.\n\n                     If the ATOMIC_AGGREGATE attribute is missing\n                     in the Path Attributes then this object MUST\n                     have a value of 'lessSpecificRouteSelected'.\n\n                     Note that ATOMIC_AGGREGATE is now a primarily\n                     informational attribute.
%eref        bgp4PathAttrAtomicAggregate RFC 4271, Sections 5.1.6 and 9.1.4.
%edes        bgp4PathAttrAggregatorAS The AS number of the last BGP4 speaker that\n                     performed route aggregation.  A value of\n                     zero (0) indicates the absence of this\n                     attribute.\n\n                     Note that propagation of AS of zero is illegal\n                     in the Internet.
%eref        bgp4PathAttrAggregatorAS RFC 4271, Section 5.1.7.\n                     RFC 4271, Section 9.2.2.2.
%edes        bgp4PathAttrAggregatorAddr The IP address of the last BGP4 speaker\n                     that performed route aggregation.  A\n                     value of 0.0.0.0 indicates the absence\n                     of this attribute.
%eref        bgp4PathAttrAggregatorAddr RFC 4271, Section 5.1.7.\n                     RFC 4271, Section 9.2.2.2.
%edes        bgp4PathAttrCalcLocalPref The degree of preference calculated by the\n                     receiving BGP4 speaker for an advertised\n                     route.  A value of -1 indicates the\n                     absence of this attribute.\n\n                     Known Issues:\n                     o The BGP-4 specification uses an\n                       unsigned 32 bit number and thus this\n                       object cannot represent the full\n                       range of the protocol.
%eref        bgp4PathAttrCalcLocalPref RFC 4271, Section 9.1.1.
%edes        bgp4PathAttrBest        An indication of whether this route\n                     was chosen as the best BGP4 route for this\n                     destination.
%eref        bgp4PathAttrBest        RFC 4271, Section 9.1.2.
%edes        bgp4PathAttrUnknown     One or more path attributes not understood by\n                     this BGP4 speaker.\n\n                     Path attributes are recorded in the Update Path\n                     attribute format of type, length, value.\n\n                     Size zero (0) indicates the absence of such\n                     attributes.\n\n                     Octets beyond the maximum size, if any, are not\n                     recorded by this object.\n\n                     Known Issues:\n                     o Attributes understood by this speaker, but not\n                       represented in this MIB, are unavailable to\n                       the agent.
%eref        bgp4PathAttrUnknown     RFC 4271, Section 5.
%est                 bgpEstablished   deprecated
%edes        bgpEstablished          The bgpEstablished event is generated when\n                     the BGP FSM enters the established state.\n\n                     This Notification has been replaced by the\n                     bgpEstablishedNotification Notification.
%est                 bgpBackwardTransition deprecated
%edes        bgpBackwardTransition   The bgpBackwardTransition event is generated\n                     when the BGP FSM moves from a higher numbered\n                     state to a lower numbered state.\n\n                     This Notification has been replaced by the\n                     bgpBackwardTransNotification Notification.
%edes        bgp4MIBGlobalsGroup     A collection of objects providing\n                     information on global BGP state.
%edes        bgp4MIBPeerGroup        A collection of objects for managing\n                     BGP peers.
%est                 bgpRcvdPathAttrGroup obsolete
%edes        bgpRcvdPathAttrGroup    A collection of objects for managing BGP-3 and\n                    earlier path entries.\n\n                    This conformance group, like BGP-3, is obsolete.
%edes        bgp4MIBPathAttrGroup    A collection of objects for managing\n                     BGP path entries.
%est                 bgp4MIBTrapGroup deprecated
%edes        bgp4MIBTrapGroup        A collection of notifications for signaling\n                     changes in BGP peer relationships.\n\n                     Obsoleted by bgp4MIBNotificationGroup
%edes        bgp4MIBNotificationGroup A collection of notifications for signaling\n                     changes in BGP peer relationships.\n\n                     Obsoletes bgp4MIBTrapGroup.
%edes        rmonEventsV2            Definition point for RMON notifications.
%edes        risingAlarm             The SNMP trap that is generated when an alarm\n         entry crosses its rising threshold and generates\n         an event that is configured for sending SNMP\n         traps.
%edes        fallingAlarm            The SNMP trap that is generated when an alarm\n         entry crosses its falling threshold and generates\n         an event that is configured for sending SNMP\n         traps.
%edes        etherStatsTable         A list of Ethernet statistics entries.
%edes        etherStatsEntry         A collection of statistics kept for a particular\n         Ethernet interface.  As an example, an instance of the\n         etherStatsPkts object might be named etherStatsPkts.1
%edes        etherStatsIndex         The value of this object uniquely identifies this\n         etherStats entry.
%edes        etherStatsDataSource    This object identifies the source of the data that\n         this etherStats entry is configured to analyze.  This\n         source can be any ethernet interface on this device.\n         In order to identify a particular interface, this object\n         shall identify the instance of the ifIndex object,\n         defined in RFC 2233 [17], for the desired interface.\n         For example, if an entry were to receive data from\n         interface #1, this object would be set to ifIndex.1.\n\n         The statistics in this group reflect all packets\n         on the local network segment attached to the identified\n         interface.\n\n         An agent may or may not be able to tell if fundamental\n         changes to the media of the interface have occurred and\n         necessitate an invalidation of this entry.  For example, a\n         hot-pluggable ethernet card could be pulled out and replaced\n         by a token-ring card.  In such a case, if the agent has such\n         knowledge of the change, it is recommended that it\n         invalidate this entry.\n\n         This object may not be modified if the associated\n         etherStatsStatus object is equal to valid(1).
%edes        etherStatsDropEvents    The total number of events in which packets\n         were dropped by the probe due to lack of resources.\n         Note that this number is not necessarily the number of\n         packets dropped; it is just the number of times this\n         condition has been detected.
%eunits      etherStatsOctets        Octets
%edes        etherStatsOctets        The total number of octets of data (including\n         those in bad packets) received on the\n         network (excluding framing bits but including\n         FCS octets).\n\n\n\n\n\n         This object can be used as a reasonable estimate of\n         10-Megabit ethernet utilization.  If greater precision is\n         desired, the etherStatsPkts and etherStatsOctets objects\n         should be sampled before and after a common interval.  The\n         differences in the sampled values are Pkts and Octets,\n         respectively, and the number of seconds in the interval is\n         Interval.  These values are used to calculate the Utilization\n         as follows:\n\n                          Pkts * (9.6 + 6.4) + (Octets * .8)\n          Utilization = -------------------------------------\n                                  Interval * 10,000\n\n         The result of this equation is the value Utilization which\n         is the percent utilization of the ethernet segment on a\n         scale of 0 to 100 percent.
%eunits      etherStatsPkts          Packets
%edes        etherStatsPkts          The total number of packets (including bad packets,\n         broadcast packets, and multicast packets) received.
%eunits      etherStatsBroadcastPkts Packets
%edes        etherStatsBroadcastPkts The total number of good packets received that were\n         directed to the broadcast address.  Note that this\n         does not include multicast packets.
%eunits      etherStatsMulticastPkts Packets
%edes        etherStatsMulticastPkts The total number of good packets received that were\n         directed to a multicast address.  Note that this number\n         does not include packets directed to the broadcast\n\n\n\n\n\n         address.
%eunits      etherStatsCRCAlignErrors Packets
%edes        etherStatsCRCAlignErrors The total number of packets received that\n         had a length (excluding framing bits, but\n         including FCS octets) of between 64 and 1518\n         octets, inclusive, but had either a bad\n         Frame Check Sequence (FCS) with an integral\n         number of octets (FCS Error) or a bad FCS with\n         a non-integral number of octets (Alignment Error).
%eunits      etherStatsUndersizePkts Packets
%edes        etherStatsUndersizePkts The total number of packets received that were\n         less than 64 octets long (excluding framing bits,\n         but including FCS octets) and were otherwise well\n         formed.
%eunits      etherStatsOversizePkts  Packets
%edes        etherStatsOversizePkts  The total number of packets received that were\n         longer than 1518 octets (excluding framing bits,\n         but including FCS octets) and were otherwise\n         well formed.
%eunits      etherStatsFragments     Packets
%edes        etherStatsFragments     The total number of packets received that were less than\n         64 octets in length (excluding framing bits but including\n         FCS octets) and had either a bad Frame Check Sequence\n         (FCS) with an integral number of octets (FCS Error) or a\n         bad FCS with a non-integral number of octets (Alignment\n         Error).\n\n         Note that it is entirely normal for etherStatsFragments to\n         increment.  This is because it counts both runts (which are\n         normal occurrences due to collisions) and noise hits.
%eunits      etherStatsJabbers       Packets
%edes        etherStatsJabbers       The total number of packets received that were\n         longer than 1518 octets (excluding framing bits,\n         but including FCS octets), and had either a bad\n         Frame Check Sequence (FCS) with an integral number\n         of octets (FCS Error) or a bad FCS with a non-integral\n         number of octets (Alignment Error).\n\n         Note that this definition of jabber is different\n         than the definition in IEEE-802.3 section 8.2.1.5\n         (10BASE5) and section 10.3.1.4 (10BASE2).  These\n         documents define jabber as the condition where any\n         packet exceeds 20 ms.  The allowed range to detect\n         jabber is between 20 ms and 150 ms.
%eunits      etherStatsCollisions    Collisions
%edes        etherStatsCollisions    The best estimate of the total number of collisions\n         on this Ethernet segment.\n\n         The value returned will depend on the location of the\n         RMON probe. Section 8.2.1.3 (10BASE-5) and section\n         10.3.1.3 (10BASE-2) of IEEE standard 802.3 states that a\n         station must detect a collision, in the receive mode, if\n         three or more stations are transmitting simultaneously.  A\n         repeater port must detect a collision when two or more\n\n\n\n\n\n         stations are transmitting simultaneously.  Thus a probe\n         placed on a repeater port could record more collisions\n         than a probe connected to a station on the same segment\n         would.\n\n         Probe location plays a much smaller role when considering\n         10BASE-T.  14.2.1.4 (10BASE-T) of IEEE standard 802.3\n         defines a collision as the simultaneous presence of signals\n         on the DO and RD circuits (transmitting and receiving\n         at the same time).  A 10BASE-T station can only detect\n         collisions when it is transmitting.  Thus probes placed on\n         a station and a repeater, should report the same number of\n         collisions.\n\n         Note also that an RMON probe inside a repeater should\n         ideally report collisions between the repeater and one or\n         more other hosts (transmit collisions as defined by IEEE\n         802.3k) plus receiver collisions observed on any coax\n         segments to which the repeater is connected.
%eunits      etherStatsPkts64Octets  Packets
%edes        etherStatsPkts64Octets  The total number of packets (including bad\n         packets) received that were 64 octets in length\n         (excluding framing bits but including FCS octets).
%eunits      etherStatsPkts65to127Octets Packets
%edes        etherStatsPkts65to127Octets The total number of packets (including bad\n         packets) received that were between\n         65 and 127 octets in length inclusive\n         (excluding framing bits but including FCS octets).
%eunits      etherStatsPkts128to255Octets Packets
%edes        etherStatsPkts128to255Octets The total number of packets (including bad\n         packets) received that were between\n         128 and 255 octets in length inclusive\n         (excluding framing bits but including FCS octets).
%eunits      etherStatsPkts256to511Octets Packets
%edes        etherStatsPkts256to511Octets The total number of packets (including bad\n         packets) received that were between\n         256 and 511 octets in length inclusive\n         (excluding framing bits but including FCS octets).
%eunits      etherStatsPkts512to1023Octets Packets
%edes        etherStatsPkts512to1023Octets The total number of packets (including bad\n         packets) received that were between\n         512 and 1023 octets in length inclusive\n         (excluding framing bits but including FCS octets).
%eunits      etherStatsPkts1024to1518Octets Packets
%edes        etherStatsPkts1024to1518Octets The total number of packets (including bad\n         packets) received that were between\n         1024 and 1518 octets in length inclusive\n         (excluding framing bits but including FCS octets).
%edes        etherStatsOwner         The entity that configured this entry and is therefore\n         using the resources assigned to it.
%edes        etherStatsStatus        The status of this etherStats entry.
%edes        tokenRingMLStatsTable   A list of Mac-Layer Token Ring statistics\n            entries.
%edes        tokenRingMLStatsEntry   A collection of Mac-Layer statistics kept for a\n            particular Token Ring interface.
%edes        tokenRingMLStatsIndex   The value of this object uniquely identifies this\n            tokenRingMLStats entry.
%edes        tokenRingMLStatsDataSource This object identifies the source of the data\n            that this tokenRingMLStats entry is configured to\n            analyze.  This source can be any tokenRing\n            interface on this device.  In order to identify a\n            particular interface, this object shall identify\n            the instance of the ifIndex object, defined in\n            MIB-II [3], for the desired interface.  For\n            example, if an entry were to receive data from\n            interface #1, this object would be set to\n            ifIndex.1.\n\n            The statistics in this group reflect all error\n            reports on the local network segment attached to\n            the identified interface.\n\n            This object may not be modified if the associated\n            tokenRingMLStatsStatus object is equal to\n            valid(1).
%edes        tokenRingMLStatsDropEvents The total number of events in which packets were\n            dropped by the probe due to lack of resources.\n            Note that this number is not necessarily the\n            number of packets dropped; it is just the number\n            of times this condition has been detected.  This\n            value is the same as the corresponding\n            tokenRingPStatsDropEvents.
%edes        tokenRingMLStatsMacOctets The total number of octets of data in MAC packets\n            (excluding those that were not good frames)\n            received on the network (excluding framing bits\n            but including FCS octets).
%edes        tokenRingMLStatsMacPkts The total number of MAC packets (excluding\n            packets that were not good frames) received.
%edes        tokenRingMLStatsRingPurgeEvents The total number of times that the ring enters\n            the ring purge state from normal ring state.  The\n            ring purge state that comes in response to the\n            claim token or beacon state is not counted.
%edes        tokenRingMLStatsRingPurgePkts The total number of ring purge MAC packets\n            detected by probe.
%edes        tokenRingMLStatsBeaconEvents The total number of times that the ring enters a\n            beaconing state (beaconFrameStreamingState,\n            beaconBitStreamingState,\n            beaconSetRecoveryModeState, or\n            beaconRingSignalLossState) from a non-beaconing\n            state.  Note that a change of the source address\n            of the beacon packet does not constitute a new\n            beacon event.
%edes        tokenRingMLStatsBeaconTime The total amount of time that the ring has been\n            in the beaconing state.
%edes        tokenRingMLStatsBeaconPkts The total number of beacon MAC packets detected\n            by the probe.
%edes        tokenRingMLStatsClaimTokenEvents The total number of times that the ring enters\n            the claim token state from normal ring state or\n            ring purge state.  The claim token state that\n            comes in response to a beacon state is not\n            counted.
%edes        tokenRingMLStatsClaimTokenPkts The total number of claim token MAC packets\n            detected by the probe.
%edes        tokenRingMLStatsNAUNChanges The total number of NAUN changes detected by the\n            probe.
%edes        tokenRingMLStatsLineErrors The total number of line errors reported in error\n            reporting packets detected by the probe.
%edes        tokenRingMLStatsInternalErrors The total number of adapter internal errors\n            reported in error reporting packets detected by\n            the probe.
%edes        tokenRingMLStatsBurstErrors The total number of burst errors reported in\n            error reporting packets detected by the probe.
%edes        tokenRingMLStatsACErrors The total number of AC (Address Copied)  errors\n            reported in error reporting packets detected by\n            the probe.
%edes        tokenRingMLStatsAbortErrors The total number of abort delimiters reported in\n            error reporting packets detected by the probe.
%edes        tokenRingMLStatsLostFrameErrors The total number of lost frame errors reported in\n            error reporting packets detected by the probe.
%edes        tokenRingMLStatsCongestionErrors The total number of receive congestion errors\n            reported in error reporting packets detected by\n            the probe.
%edes        tokenRingMLStatsFrameCopiedErrors The total number of frame copied errors reported\n            in error reporting packets detected by the probe.
%edes        tokenRingMLStatsFrequencyErrors The total number of frequency errors reported in\n            error reporting packets detected by the probe.
%edes        tokenRingMLStatsTokenErrors The total number of token errors reported in\n            error reporting packets detected by the probe.
%edes        tokenRingMLStatsSoftErrorReports The total number of soft error report frames\n            detected by the probe.
%edes        tokenRingMLStatsRingPollEvents The total number of ring poll events detected by\n            the probe (i.e. the number of ring polls initiated\n            by the active monitor that were detected).
%edes        tokenRingMLStatsOwner   The entity that configured this entry and is\n            therefore using the resources assigned to it.
%edes        tokenRingMLStatsStatus  The status of this tokenRingMLStats entry.
%edes        tokenRingPStatsTable    A list of promiscuous Token Ring statistics\n            entries.
%edes        tokenRingPStatsEntry    A collection of promiscuous statistics kept for\n            non-MAC packets on a particular Token Ring\n            interface.
%edes        tokenRingPStatsIndex    The value of this object uniquely identifies this\n            tokenRingPStats entry.
%edes        tokenRingPStatsDataSource This object identifies the source of the data\n            that this tokenRingPStats entry is configured to\n            analyze.  This source can be any tokenRing\n            interface on this device.  In order to identify a\n            particular interface, this object shall identify\n            the instance of the ifIndex object, defined in\n            MIB-II [3], for the desired interface.  For\n            example, if an entry were to receive data from\n            interface #1, this object would be set to\n            ifIndex.1.\n\n            The statistics in this group reflect all non-MAC\n            packets on the local network segment attached to\n            the identified interface.\n\n            This object may not be modified if the associated\n            tokenRingPStatsStatus object is equal to\n            valid(1).
%edes        tokenRingPStatsDropEvents The total number of events in which packets were\n            dropped by the probe due to lack of resources.\n            Note that this number is not necessarily the\n            number of packets dropped; it is just the number\n            of times this condition has been detected.  This\n            value is the same as the corresponding\n            tokenRingMLStatsDropEvents
%edes        tokenRingPStatsDataOctets The total number of octets of data in good frames\n            received on the network (excluding framing bits\n            but including FCS octets) in non-MAC packets.
%edes        tokenRingPStatsDataPkts The total number of non-MAC packets in good\n            frames.  received.
%edes        tokenRingPStatsDataBroadcastPkts The total number of good non-MAC frames received\n            that were directed to an LLC broadcast address\n            (0xFFFFFFFFFFFF or 0xC000FFFFFFFF).
%edes        tokenRingPStatsDataMulticastPkts The total number of good non-MAC frames received\n            that were directed to a local or global multicast\n            or functional address.  Note that this number does\n            not include packets directed to the broadcast\n            address.
%edes        tokenRingPStatsDataPkts18to63Octets The total number of good non-MAC frames received\n            that were between 18 and 63 octets in length\n            inclusive, excluding framing bits but including\n            FCS octets.
%edes        tokenRingPStatsDataPkts64to127Octets The total number of good non-MAC frames received\n            that were between 64 and 127 octets in length\n            inclusive, excluding framing bits but including\n            FCS octets.
%edes        tokenRingPStatsDataPkts128to255Octets The total number of good non-MAC frames received\n            that were between 128 and 255 octets in length\n            inclusive, excluding framing bits but including\n            FCS octets.
%edes        tokenRingPStatsDataPkts256to511Octets The total number of good non-MAC frames received\n            that were between 256 and 511 octets in length\n            inclusive, excluding framing bits but including\n            FCS octets.
%edes        tokenRingPStatsDataPkts512to1023Octets The total number of good non-MAC frames received\n            that were between 512 and 1023 octets in length\n            inclusive, excluding framing bits but including\n            FCS octets.
%edes        tokenRingPStatsDataPkts1024to2047Octets The total number of good non-MAC frames received\n            that were between 1024 and 2047 octets in length\n            inclusive, excluding framing bits but including\n            FCS octets.
%edes        tokenRingPStatsDataPkts2048to4095Octets The total number of good non-MAC frames received\n            that were between 2048 and 4095 octets in length\n            inclusive, excluding framing bits but including\n            FCS octets.
%edes        tokenRingPStatsDataPkts4096to8191Octets The total number of good non-MAC frames received\n            that were between 4096 and 8191 octets in length\n            inclusive, excluding framing bits but including\n            FCS octets.
%edes        tokenRingPStatsDataPkts8192to18000Octets The total number of good non-MAC frames received\n            that were between 8192 and 18000 octets in length\n            inclusive, excluding framing bits but including\n            FCS octets.
%edes        tokenRingPStatsDataPktsGreaterThan18000Octets The total number of good non-MAC frames received\n            that were greater than 18000 octets in length,\n            excluding framing bits but including FCS octets.
%edes        tokenRingPStatsOwner    The entity that configured this entry and is\n            therefore using the resources assigned to it.
%edes        tokenRingPStatsStatus   The status of this tokenRingPStats entry.
%edes        etherStats2Table        Contains the RMON-2 augmentations to RMON-1.
%edes        etherStats2Entry        Contains the RMON-2 augmentations to RMON-1.
%edes        etherStatsDroppedFrames The total number of frames that were received by the probe\n        and therefore not accounted for in the *StatsDropEvents, but\n        that the probe chose not to count for this entry for\n        whatever reason.  Most often, this event occurs when the\n        probe is out of some resources and decides to shed load from\n        this collection.\n\n        This count does not include packets that were not counted\n        because they had MAC-layer errors.\n\n        Note that, unlike the dropEvents counter, this number is the\n        exact number of frames dropped.
%edes        etherStatsCreateTime    The value of sysUpTime when this control entry was last\n        activated.  This can be used by the management station to\n        ensure that the table has not been deleted and recreated\n        between polls.
%edes        tokenRingMLStats2Table  Contains the RMON-2 augmentations to RMON-1.\n\n        This table has been deprecated, as it has not had enough\n        independent implementations to demonstrate interoperability\n        to meet the requirements of a Draft Standard.
%edes        tokenRingMLStats2Entry  Contains the RMON-2 augmentations to RMON-1.
%edes        tokenRingMLStatsDroppedFrames The total number of frames that were received by the probe\n        and therefore not accounted for in the *StatsDropEvents, but\n        that the probe chose not to count for this entry for\n        whatever reason.  Most often, this event occurs when the\n        probe is out of some resources and decides to shed load from\n        this collection.\n\n        This count does not include packets that were not counted\n        because they had MAC-layer errors.\n\n        Note that, unlike the dropEvents counter, this number is the\n        exact number of frames dropped.
%edes        tokenRingMLStatsCreateTime The value of sysUpTime when this control entry was last\n        activated.  This can be used by the management station to\n        ensure that the table has not been deleted and recreated\n        between polls.
%edes        tokenRingPStats2Table   Contains the RMON-2 augmentations to RMON-1.\n\n        This table has been deprecated, as it has not had enough\n        independent implementations to demonstrate interoperability\n        to meet the requirements of a Draft Standard.
%edes        tokenRingPStats2Entry   Contains the RMON-2 augmentations to RMON-1.
%edes        tokenRingPStatsDroppedFrames The total number of frames that were received by the probe\n        and therefore not accounted for in the *StatsDropEvents, but\n        that the probe chose not to count for this entry for\n        whatever reason.  Most often, this event occurs when the\n        probe is out of some resources and decides to shed load from\n        this collection.\n\n        This count does not include packets that were not counted\n        because they had MAC-layer errors.\n\n        Note that, unlike the dropEvents counter, this number is the\n        exact number of frames dropped.
%edes        tokenRingPStatsCreateTime The value of sysUpTime when this control entry was last\n        activated.  This can be used by the management station to\n        ensure that the table has not been deleted and recreated\n        between polls.
%edes        historyControlTable     A list of history control entries.
%edes        historyControlEntry     A list of parameters that set up a periodic sampling of\n         statistics.  As an example, an instance of the\n         historyControlInterval object might be named\n         historyControlInterval.2
%edes        historyControlIndex     An index that uniquely identifies an entry in the\n         historyControl table.  Each such entry defines a\n         set of samples at a particular interval for an\n         interface on the device.
%edes        historyControlDataSource This object identifies the source of the data for\n         which historical data was collected and\n         placed in a media-specific table on behalf of this\n         historyControlEntry.  This source can be any\n         interface on this device.  In order to identify\n\n\n\n\n\n         a particular interface, this object shall identify\n         the instance of the ifIndex object, defined\n         in  RFC 2233 [17], for the desired interface.\n         For example, if an entry were to receive data from\n         interface #1, this object would be set to ifIndex.1.\n\n         The statistics in this group reflect all packets\n         on the local network segment attached to the identified\n         interface.\n\n         An agent may or may not be able to tell if fundamental\n         changes to the media of the interface have occurred and\n         necessitate an invalidation of this entry.  For example, a\n         hot-pluggable ethernet card could be pulled out and replaced\n         by a token-ring card.  In such a case, if the agent has such\n         knowledge of the change, it is recommended that it\n         invalidate this entry.\n\n         This object may not be modified if the associated\n         historyControlStatus object is equal to valid(1).
%edes        historyControlBucketsRequested The requested number of discrete time intervals\n         over which data is to be saved in the part of the\n         media-specific table associated with this\n         historyControlEntry.\n\n         When this object is created or modified, the probe\n         should set historyControlBucketsGranted as closely to\n         this object as is possible for the particular probe\n         implementation and available resources.
%edes        historyControlBucketsGranted The number of discrete sampling intervals\n         over which data shall be saved in the part of\n         the media-specific table associated with this\n         historyControlEntry.\n\n\n\n\n\n         When the associated historyControlBucketsRequested\n         object is created or modified, the probe\n         should set this object as closely to the requested\n         value as is possible for the particular\n         probe implementation and available resources.  The\n         probe must not lower this value except as a result\n         of a modification to the associated\n         historyControlBucketsRequested object.\n\n         There will be times when the actual number of\n         buckets associated with this entry is less than\n         the value of this object.  In this case, at the\n         end of each sampling interval, a new bucket will\n         be added to the media-specific table.\n\n         When the number of buckets reaches the value of\n         this object and a new bucket is to be added to the\n         media-specific table, the oldest bucket associated\n         with this historyControlEntry shall be deleted by\n         the agent so that the new bucket can be added.\n\n         When the value of this object changes to a value less\n         than the current value, entries are deleted\n         from the media-specific table associated with this\n         historyControlEntry.  Enough of the oldest of these\n         entries shall be deleted by the agent so that their\n         number remains less than or equal to the new value of\n         this object.\n\n         When the value of this object changes to a value greater\n         than the current value, the number of associated media-\n         specific entries may be allowed to grow.
%eunits      historyControlInterval  Seconds
%edes        historyControlInterval  The interval in seconds over which the data is\n         sampled for each bucket in the part of the\n         media-specific table associated with this\n         historyControlEntry.  This interval can\n         be set to any number of seconds between 1 and\n         3600 (1 hour).\n\n         Because the counters in a bucket may overflow at their\n\n\n\n\n\n         maximum value with no indication, a prudent manager will\n         take into account the possibility of overflow in any of\n         the associated counters.  It is important to consider the\n         minimum time in which any counter could overflow on a\n         particular media type and set the historyControlInterval\n         object to a value less than this interval.  This is\n         typically most important for the 'octets' counter in any\n         media-specific table.  For example, on an Ethernet\n         network, the etherHistoryOctets counter could overflow\n         in about one hour at the Ethernet's maximum\n         utilization.\n\n         This object may not be modified if the associated\n         historyControlStatus object is equal to valid(1).
%edes        historyControlOwner     The entity that configured this entry and is therefore\n         using the resources assigned to it.
%edes        historyControlStatus    The status of this historyControl entry.\n\n         Each instance of the media-specific table associated\n         with this historyControlEntry will be deleted by the agent\n         if this historyControlEntry is not equal to valid(1).
%edes        etherHistoryTable       A list of Ethernet history entries.
%edes        etherHistoryEntry       An historical sample of Ethernet statistics on a particular\n         Ethernet interface.  This sample is associated with the\n         historyControlEntry which set up the parameters for\n         a regular collection of these samples.  As an example, an\n         instance of the etherHistoryPkts object might be named\n         etherHistoryPkts.2.89
%edes        etherHistoryIndex       The history of which this entry is a part.  The\n         history identified by a particular value of this\n         index is the same history as identified\n         by the same value of historyControlIndex.
%edes        etherHistorySampleIndex An index that uniquely identifies the particular\n         sample this entry represents among all samples\n         associated with the same historyControlEntry.\n         This index starts at 1 and increases by one\n         as each new sample is taken.
%edes        etherHistoryIntervalStart The value of sysUpTime at the start of the interval\n         over which this sample was measured.  If the probe\n         keeps track of the time of day, it should start\n         the first sample of the history at a time such that\n         when the next hour of the day begins, a sample is\n         started at that instant.  Note that following this\n         rule may require the probe to delay collecting the\n         first sample of the history, as each sample must be\n         of the same interval.  Also note that the sample which\n         is currently being collected is not accessible in this\n         table until the end of its interval.
%edes        etherHistoryDropEvents  The total number of events in which packets\n         were dropped by the probe due to lack of resources\n         during this sampling interval.  Note that this number\n         is not necessarily the number of packets dropped, it\n         is just the number of times this condition has been\n\n\n\n\n\n         detected.
%eunits      etherHistoryOctets      Octets
%edes        etherHistoryOctets      The total number of octets of data (including\n         those in bad packets) received on the\n         network (excluding framing bits but including\n         FCS octets).
%eunits      etherHistoryPkts        Packets
%edes        etherHistoryPkts        The number of packets (including bad packets)\n         received during this sampling interval.
%eunits      etherHistoryBroadcastPkts Packets
%edes        etherHistoryBroadcastPkts The number of good packets received during this\n         sampling interval that were directed to the\n         broadcast address.
%eunits      etherHistoryMulticastPkts Packets
%edes        etherHistoryMulticastPkts The number of good packets received during this\n         sampling interval that were directed to a\n         multicast address.  Note that this number does not\n         include packets addressed to the broadcast address.
%eunits      etherHistoryCRCAlignErrors Packets
%edes        etherHistoryCRCAlignErrors The number of packets received during this\n         sampling interval that had a length (excluding\n         framing bits but including FCS octets) between\n         64 and 1518 octets, inclusive, but had either a bad Frame\n         Check Sequence (FCS) with an integral number of octets\n         (FCS Error) or a bad FCS with a non-integral number\n         of octets (Alignment Error).
%eunits      etherHistoryUndersizePkts Packets
%edes        etherHistoryUndersizePkts The number of packets received during this\n         sampling interval that were less than 64 octets\n         long (excluding framing bits but including FCS\n         octets) and were otherwise well formed.
%eunits      etherHistoryOversizePkts Packets
%edes        etherHistoryOversizePkts The number of packets received during this\n         sampling interval that were longer than 1518\n         octets (excluding framing bits but including\n         FCS octets) but were otherwise well formed.
%eunits      etherHistoryFragments   Packets
%edes        etherHistoryFragments   The total number of packets received during this\n         sampling interval that were less than 64 octets in\n         length (excluding framing bits but including FCS\n\n\n\n\n\n         octets) had either a bad Frame Check Sequence (FCS)\n         with an integral number of octets (FCS Error) or a bad\n         FCS with a non-integral number of octets (Alignment\n         Error).\n\n         Note that it is entirely normal for etherHistoryFragments to\n         increment.  This is because it counts both runts (which are\n         normal occurrences due to collisions) and noise hits.
%eunits      etherHistoryJabbers     Packets
%edes        etherHistoryJabbers     The number of packets received during this\n         sampling interval that were longer than 1518 octets\n         (excluding framing bits but including FCS octets),\n         and  had either a bad Frame Check Sequence (FCS)\n         with an integral number of octets (FCS Error) or\n         a bad FCS with a non-integral number of octets\n         (Alignment Error).\n\n         Note that this definition of jabber is different\n         than the definition in IEEE-802.3 section 8.2.1.5\n         (10BASE5) and section 10.3.1.4 (10BASE2).  These\n         documents define jabber as the condition where any\n         packet exceeds 20 ms.  The allowed range to detect\n         jabber is between 20 ms and 150 ms.
%eunits      etherHistoryCollisions  Collisions
%edes        etherHistoryCollisions  The best estimate of the total number of collisions\n         on this Ethernet segment during this sampling\n         interval.\n\n         The value returned will depend on the location of the\n         RMON probe. Section 8.2.1.3 (10BASE-5) and section\n         10.3.1.3 (10BASE-2) of IEEE standard 802.3 states that a\n         station must detect a collision, in the receive mode, if\n         three or more stations are transmitting simultaneously.  A\n         repeater port must detect a collision when two or more\n\n\n\n\n\n         stations are transmitting simultaneously.  Thus a probe\n         placed on a repeater port could record more collisions\n         than a probe connected to a station on the same segment\n         would.\n\n         Probe location plays a much smaller role when considering\n         10BASE-T.  14.2.1.4 (10BASE-T) of IEEE standard 802.3\n         defines a collision as the simultaneous presence of signals\n         on the DO and RD circuits (transmitting and receiving\n         at the same time).  A 10BASE-T station can only detect\n         collisions when it is transmitting.  Thus probes placed on\n         a station and a repeater, should report the same number of\n         collisions.\n\n         Note also that an RMON probe inside a repeater should\n         ideally report collisions between the repeater and one or\n         more other hosts (transmit collisions as defined by IEEE\n         802.3k) plus receiver collisions observed on any coax\n         segments to which the repeater is connected.
%edes        etherHistoryUtilization The best estimate of the mean physical layer\n         network utilization on this interface during this\n         sampling interval, in hundredths of a percent.
%edes        tokenRingMLHistoryTable A list of Mac-Layer Token Ring statistics\n            entries.
%edes        tokenRingMLHistoryEntry A collection of Mac-Layer statistics kept for a\n            particular Token Ring interface.
%edes        tokenRingMLHistoryIndex The history of which this entry is a part.  The\n            history identified by a particular value of this\n            index is the same history as identified by the\n            same value of historyControlIndex.
%edes        tokenRingMLHistorySampleIndex An index that uniquely identifies the particular\n            Mac-Layer sample this entry represents among all\n            Mac-Layer samples associated with the same\n            historyControlEntry.  This index starts at 1 and\n            increases by one as each new sample is taken.
%edes        tokenRingMLHistoryIntervalStart The value of sysUpTime at the start of the\n            interval over which this sample was measured.  If\n            the probe keeps track of the time of day, it\n            should start the first sample of the history at a\n            time such that when the next hour of the day\n            begins, a sample is started at that instant.  Note\n            that following this rule may require the probe to\n            delay collecting the first sample of the history,\n            as each sample must be of the same interval.  Also\n            note that the sample which is currently being\n            collected is not accessible in this table until\n            the end of its interval.
%edes        tokenRingMLHistoryDropEvents The total number of events in which packets were\n            dropped by the probe due to lack of resources\n            during this sampling interval.  Note that this\n            number is not necessarily the number of packets\n            dropped, it is just the number of times this\n            condition has been detected.
%edes        tokenRingMLHistoryMacOctets The total number of octets of data in MAC packets\n            (excluding those that were not good frames)\n            received on the network during this sampling\n            interval (excluding framing bits but including FCS\n            octets).
%edes        tokenRingMLHistoryMacPkts The total number of MAC packets (excluding those\n            that were not good frames) received during this\n            sampling interval.
%edes        tokenRingMLHistoryRingPurgeEvents The total number of times that the ring entered\n            the ring purge state from normal ring state during\n            this sampling interval.  The ring purge state that\n            comes from the claim token or beacon state is not\n            counted.
%edes        tokenRingMLHistoryRingPurgePkts The total number of Ring Purge MAC packets\n            detected by the probe during this sampling\n            interval.
%edes        tokenRingMLHistoryBeaconEvents The total number of times that the ring enters a\n            beaconing state (beaconFrameStreamingState,\n            beaconBitStreamingState,\n            beaconSetRecoveryModeState, or\n            beaconRingSignalLossState) during this sampling\n            interval.  Note that a change of the source\n            address of the beacon packet does not constitute a\n            new beacon event.
%edes        tokenRingMLHistoryBeaconTime The amount of time that the ring has been in the\n            beaconing state during this sampling interval.
%edes        tokenRingMLHistoryBeaconPkts The total number of beacon MAC packets detected\n            by the probe during this sampling interval.
%edes        tokenRingMLHistoryClaimTokenEvents The total number of times that the ring enters\n            the claim token state from normal ring state or\n            ring purge state during this sampling interval.\n            The claim token state that comes from the beacon\n            state is not counted.
%edes        tokenRingMLHistoryClaimTokenPkts The total number of claim token MAC packets\n            detected by the probe during this sampling\n            interval.
%edes        tokenRingMLHistoryNAUNChanges The total number of NAUN changes detected by the\n            probe during this sampling interval.
%edes        tokenRingMLHistoryLineErrors The total number of line errors reported in error\n            reporting packets detected by the probe during\n            this sampling interval.
%edes        tokenRingMLHistoryInternalErrors The total number of adapter internal errors\n            reported in error reporting packets detected by\n            the probe during this sampling interval.
%edes        tokenRingMLHistoryBurstErrors The total number of burst errors reported in\n            error reporting packets detected by the probe\n            during this sampling interval.
%edes        tokenRingMLHistoryACErrors The total number of AC (Address Copied) errors\n            reported in error reporting packets detected by\n            the probe during this sampling interval.
%edes        tokenRingMLHistoryAbortErrors The total number of abort delimiters reported in\n            error reporting packets detected by the probe\n            during this sampling interval.
%edes        tokenRingMLHistoryLostFrameErrors The total number of lost frame errors reported in\n            error reporting packets detected by the probe\n            during this sampling interval.
%edes        tokenRingMLHistoryCongestionErrors The total number of receive congestion errors\n            reported in error reporting packets detected by\n            the probe during this sampling interval.
%edes        tokenRingMLHistoryFrameCopiedErrors The total number of frame copied errors reported\n            in error reporting packets detected by the probe\n            during this sampling interval.
%edes        tokenRingMLHistoryFrequencyErrors The total number of frequency errors reported in\n            error reporting packets detected by the probe\n            during this sampling interval.
%edes        tokenRingMLHistoryTokenErrors The total number of token errors reported in\n            error reporting packets detected by the probe\n            during this sampling interval.
%edes        tokenRingMLHistorySoftErrorReports The total number of soft error report frames\n            detected by the probe during this sampling\n            interval.
%edes        tokenRingMLHistoryRingPollEvents The total number of ring poll events detected by\n            the probe during this sampling interval.
%edes        tokenRingMLHistoryActiveStations The maximum number of active stations on the ring\n            detected by the probe during this sampling\n            interval.
%edes        tokenRingPHistoryTable  A list of promiscuous Token Ring statistics\n            entries.
%edes        tokenRingPHistoryEntry  A collection of promiscuous statistics kept for a\n            particular Token Ring interface.
%edes        tokenRingPHistoryIndex  The history of which this entry is a part.  The\n            history identified by a particular value of this\n            index is the same history as identified by the\n            same value of historyControlIndex.
%edes        tokenRingPHistorySampleIndex An index that uniquely identifies the particular\n            sample this entry represents among all samples\n            associated with the same historyControlEntry.\n            This index starts at 1 and increases by one as\n            each new sample is taken.
%edes        tokenRingPHistoryIntervalStart The value of sysUpTime at the start of the\n            interval over which this sample was measured.  If\n            the probe keeps track of the time of day, it\n            should start the first sample of the history at a\n            time such that when the next hour of the day\n            begins, a sample is started at that instant.  Note\n            that following this rule may require the probe to\n            delay collecting the first sample of the history,\n            as each sample must be of the same interval.  Also\n            note that the sample which is currently being\n            collected is not accessible in this table until\n            the end of its interval.
%edes        tokenRingPHistoryDropEvents The total number of events in which packets were\n            dropped by the probe due to lack of resources\n            during this sampling interval.  Note that this\n            number is not necessarily the number of packets\n            dropped, it is just the number of times this\n            condition has been detected.
%edes        tokenRingPHistoryDataOctets The total number of octets of data in good frames\n            received on the network (excluding framing bits\n            but including FCS octets) in non-MAC packets\n            during this sampling interval.
%edes        tokenRingPHistoryDataPkts The total number of good non-MAC frames received\n            during this sampling interval.
%edes        tokenRingPHistoryDataBroadcastPkts The total number of good non-MAC frames received\n            during this sampling interval that were directed\n            to an LLC broadcast address (0xFFFFFFFFFFFF or\n            0xC000FFFFFFFF).
%edes        tokenRingPHistoryDataMulticastPkts The total number of good non-MAC frames received\n            during this sampling interval that were directed\n            to a local or global multicast or functional\n            address.  Note that this number does not include\n            packets directed to the broadcast address.
%edes        tokenRingPHistoryDataPkts18to63Octets The total number of good non-MAC frames received\n            during this sampling interval that were between 18\n            and 63 octets in length inclusive, excluding\n            framing bits but including FCS octets.
%edes        tokenRingPHistoryDataPkts64to127Octets The total number of good non-MAC frames received\n            during this sampling interval that were between 64\n            and 127 octets in length inclusive, excluding\n            framing bits but including FCS octets.
%edes        tokenRingPHistoryDataPkts128to255Octets The total number of good non-MAC frames received\n            during this sampling interval that were between\n            128 and 255 octets in length inclusive, excluding\n            framing bits but including FCS octets.
%edes        tokenRingPHistoryDataPkts256to511Octets The total number of good non-MAC frames received\n            during this sampling interval that were between\n            256 and 511 octets in length inclusive, excluding\n            framing bits but including FCS octets.
%edes        tokenRingPHistoryDataPkts512to1023Octets The total number of good non-MAC frames received\n            during this sampling interval that were between\n            512 and 1023 octets in length inclusive, excluding\n            framing bits but including FCS octets.
%edes        tokenRingPHistoryDataPkts1024to2047Octets The total number of good non-MAC frames received\n            during this sampling interval that were between\n            1024 and 2047 octets in length inclusive,\n            excluding framing bits but including FCS octets.
%edes        tokenRingPHistoryDataPkts2048to4095Octets The total number of good non-MAC frames received\n            during this sampling interval that were between\n            2048 and 4095 octets in length inclusive,\n            excluding framing bits but including FCS octets.
%edes        tokenRingPHistoryDataPkts4096to8191Octets The total number of good non-MAC frames received\n            during this sampling interval that were between\n            4096 and 8191 octets in length inclusive,\n            excluding framing bits but including FCS octets.
%edes        tokenRingPHistoryDataPkts8192to18000Octets The total number of good non-MAC frames received\n            during this sampling interval that were between\n            8192 and 18000 octets in length inclusive,\n            excluding framing bits but including FCS octets.
%edes        tokenRingPHistoryDataPktsGreaterThan18000Octets The total number of good non-MAC frames received\n            during this sampling interval that were greater\n            than 18000 octets in length, excluding framing\n            bits but including FCS octets.
%edes        historyControl2Table    Contains the RMON-2 augmentations to RMON-1.
%edes        historyControl2Entry    Contains the RMON-2 augmentations to RMON-1.
%edes        historyControlDroppedFrames The total number of frames that were received by the probe\n        and therefore not accounted for in the *StatsDropEvents, but\n        that the probe chose not to count for this entry for\n        whatever reason.  Most often, this event occurs when the\n        probe is out of some resources and decides to shed load from\n        this collection.\n\n        This count does not include packets that were not counted\n        because they had MAC-layer errors.\n\n        Note that, unlike the dropEvents counter, this number is the\n        exact number of frames dropped.
%edes        alarmTable              A list of alarm entries.
%edes        alarmEntry              A list of parameters that set up a periodic checking\n         for alarm conditions.  For example, an instance of the\n         alarmValue object might be named alarmValue.8
%edes        alarmIndex              An index that uniquely identifies an entry in the\n         alarm table.  Each such entry defines a\n         diagnostic sample at a particular interval\n         for an object on the device.
%eunits      alarmInterval           Seconds
%edes        alarmInterval           The interval in seconds over which the data is\n         sampled and compared with the rising and falling\n         thresholds.  When setting this variable, care\n         should be taken in the case of deltaValue\n         sampling - the interval should be set short enough\n         that the sampled variable is very unlikely to\n         increase or decrease by more than 2^31 - 1 during\n         a single sampling interval.\n\n         This object may not be modified if the associated\n         alarmStatus object is equal to valid(1).
%edes        alarmVariable           The object identifier of the particular variable to be\n         sampled.  Only variables that resolve to an ASN.1 primitive\n         type of INTEGER (INTEGER, Integer32, Counter32, Counter64,\n         Gauge, or TimeTicks) may be sampled.\n\n         Because SNMP access control is articulated entirely\n         in terms of the contents of MIB views, no access\n         control mechanism exists that can restrict the value of\n         this object to identify only those objects that exist\n         in a particular MIB view.  Because there is thus no\n         acceptable means of restricting the read access that\n         could be obtained through the alarm mechanism, the\n         probe must only grant write access to this object in\n\n\n\n\n\n         those views that have read access to all objects on\n         the probe.\n\n         During a set operation, if the supplied variable name is\n         not available in the selected MIB view, a badValue error\n         must be returned.  If at any time the variable name of\n         an established alarmEntry is no longer available in the\n         selected MIB view, the probe must change the status of\n         this alarmEntry to invalid(4).\n\n         This object may not be modified if the associated\n         alarmStatus object is equal to valid(1).
%edes        alarmSampleType         The method of sampling the selected variable and\n         calculating the value to be compared against the\n         thresholds.  If the value of this object is\n         absoluteValue(1), the value of the selected variable\n         will be compared directly with the thresholds at the\n         end of the sampling interval.  If the value of this\n         object is deltaValue(2), the value of the selected\n         variable at the last sample will be subtracted from\n         the current value, and the difference compared with\n         the thresholds.\n\n         This object may not be modified if the associated\n         alarmStatus object is equal to valid(1).
%edes        alarmValue              The value of the statistic during the last sampling\n         period.  For example, if the sample type is deltaValue,\n         this value will be the difference between the samples\n         at the beginning and end of the period.  If the sample\n         type is absoluteValue, this value will be the sampled\n         value at the end of the period.\n\n\n\n\n\n         This is the value that is compared with the rising and\n         falling thresholds.\n\n         The value during the current sampling period is not\n         made available until the period is completed and will\n         remain available until the next period completes.
%edes        alarmStartupAlarm       The alarm that may be sent when this entry is first\n         set to valid.  If the first sample after this entry\n         becomes valid is greater than or equal to the\n         risingThreshold and alarmStartupAlarm is equal to\n         risingAlarm(1) or risingOrFallingAlarm(3), then a single\n         rising alarm will be generated.  If the first sample\n         after this entry becomes valid is less than or equal\n         to the fallingThreshold and alarmStartupAlarm is equal\n         to fallingAlarm(2) or risingOrFallingAlarm(3), then a\n         single falling alarm will be generated.\n\n         This object may not be modified if the associated\n         alarmStatus object is equal to valid(1).
%edes        alarmRisingThreshold    A threshold for the sampled statistic.  When the current\n         sampled value is greater than or equal to this threshold,\n         and the value at the last sampling interval was less than\n         this threshold, a single event will be generated.\n         A single event will also be generated if the first\n         sample after this entry becomes valid is greater than or\n         equal to this threshold and the associated\n         alarmStartupAlarm is equal to risingAlarm(1) or\n         risingOrFallingAlarm(3).\n\n         After a rising event is generated, another such event\n\n\n\n\n\n         will not be generated until the sampled value\n         falls below this threshold and reaches the\n         alarmFallingThreshold.\n\n         This object may not be modified if the associated\n         alarmStatus object is equal to valid(1).
%edes        alarmFallingThreshold   A threshold for the sampled statistic.  When the current\n         sampled value is less than or equal to this threshold,\n         and the value at the last sampling interval was greater than\n         this threshold, a single event will be generated.\n         A single event will also be generated if the first\n         sample after this entry becomes valid is less than or\n         equal to this threshold and the associated\n         alarmStartupAlarm is equal to fallingAlarm(2) or\n         risingOrFallingAlarm(3).\n\n         After a falling event is generated, another such event\n         will not be generated until the sampled value\n         rises above this threshold and reaches the\n         alarmRisingThreshold.\n\n         This object may not be modified if the associated\n         alarmStatus object is equal to valid(1).
%edes        alarmRisingEventIndex   The index of the eventEntry that is\n         used when a rising threshold is crossed.  The\n         eventEntry identified by a particular value of\n         this index is the same as identified by the same value\n         of the eventIndex object.  If there is no\n         corresponding entry in the eventTable, then\n         no association exists.  In particular, if this value\n         is zero, no associated event will be generated, as\n         zero is not a valid event index.\n\n         This object may not be modified if the associated\n\n\n\n\n\n         alarmStatus object is equal to valid(1).
%edes        alarmFallingEventIndex  The index of the eventEntry that is\n         used when a falling threshold is crossed.  The\n         eventEntry identified by a particular value of\n         this index is the same as identified by the same value\n         of the eventIndex object.  If there is no\n         corresponding entry in the eventTable, then\n         no association exists.  In particular, if this value\n         is zero, no associated event will be generated, as\n         zero is not a valid event index.\n\n         This object may not be modified if the associated\n         alarmStatus object is equal to valid(1).
%edes        alarmOwner              The entity that configured this entry and is therefore\n         using the resources assigned to it.
%edes        alarmStatus             The status of this alarm entry.
%edes        hostControlTable        A list of host table control entries.
%edes        hostControlEntry        A list of parameters that set up the discovery of hosts\n         on a particular interface and the collection of statistics\n         about these hosts.  For example, an instance of the\n         hostControlTableSize object might be named\n         hostControlTableSize.1
%edes        hostControlIndex        An index that uniquely identifies an entry in the\n\n\n\n\n\n         hostControl table.  Each such entry defines\n         a function that discovers hosts on a particular interface\n         and places statistics about them in the hostTable and\n         the hostTimeTable on behalf of this hostControlEntry.
%edes        hostControlDataSource   This object identifies the source of the data for\n         this instance of the host function.  This source\n         can be any interface on this device.  In order\n         to identify a particular interface, this object shall\n         identify the instance of the ifIndex object, defined\n         in RFC 2233 [17], for the desired interface.\n         For example, if an entry were to receive data from\n         interface #1, this object would be set to ifIndex.1.\n\n         The statistics in this group reflect all packets\n         on the local network segment attached to the identified\n         interface.\n\n         An agent may or may not be able to tell if fundamental\n         changes to the media of the interface have occurred and\n         necessitate an invalidation of this entry.  For example, a\n         hot-pluggable ethernet card could be pulled out and replaced\n         by a token-ring card.  In such a case, if the agent has such\n         knowledge of the change, it is recommended that it\n         invalidate this entry.\n\n         This object may not be modified if the associated\n         hostControlStatus object is equal to valid(1).
%edes        hostControlTableSize    The number of hostEntries in the hostTable and the\n         hostTimeTable associated with this hostControlEntry.
%edes        hostControlLastDeleteTime The value of sysUpTime when the last entry\n         was deleted from the portion of the hostTable\n         associated with this hostControlEntry.  If no\n         deletions have occurred, this value shall be zero.
%edes        hostControlOwner        The entity that configured this entry and is therefore\n         using the resources assigned to it.
%edes        hostControlStatus       The status of this hostControl entry.\n\n         If this object is not equal to valid(1), all associated\n         entries in the hostTable, hostTimeTable, and the\n         hostTopNTable shall be deleted by the agent.
%edes        hostTable               A list of host entries.
%edes        hostEntry               A collection of statistics for a particular host that has\n         been discovered on an interface of this device.  For example,\n         an instance of the hostOutBroadcastPkts object might be\n         named hostOutBroadcastPkts.1.6.8.0.32.27.3.176
%edes        hostAddress             The physical address of this host.
%edes        hostCreationOrder       An index that defines the relative ordering of\n         the creation time of hosts captured for a\n         particular hostControlEntry.  This index shall\n         be between 1 and N, where N is the value of\n         the associated hostControlTableSize.  The ordering\n         of the indexes is based on the order of each entry's\n         insertion into the table, in which entries added earlier\n         have a lower index value than entries added later.\n\n         It is important to note that the order for a\n         particular entry may change as an (earlier) entry\n         is deleted from the table.  Because this order may\n         change, management stations should make use of the\n         hostControlLastDeleteTime variable in the\n         hostControlEntry associated with the relevant\n         portion of the hostTable.  By observing\n         this variable, the management station may detect\n         the circumstances where a previous association\n         between a value of hostCreationOrder\n         and a hostEntry may no longer hold.
%edes        hostIndex               The set of collected host statistics of which\n         this entry is a part.  The set of hosts\n         identified by a particular value of this\n         index is associated with the hostControlEntry\n         as identified by the same value of hostControlIndex.
%eunits      hostInPkts              Packets
%edes        hostInPkts              The number of good packets transmitted to this\n         address since it was added to the hostTable.
%eunits      hostOutPkts             Packets
%edes        hostOutPkts             The number of packets, including bad packets, transmitted\n         by this address since it was added to the hostTable.
%eunits      hostInOctets            Octets
%edes        hostInOctets            The number of octets transmitted to this address since\n         it was added to the hostTable (excluding framing\n         bits but including FCS octets), except for those\n         octets in bad packets.
%eunits      hostOutOctets           Octets
%edes        hostOutOctets           The number of octets transmitted by this address since\n         it was added to the hostTable (excluding framing\n         bits but including FCS octets), including those\n         octets in bad packets.
%eunits      hostOutErrors           Packets
%edes        hostOutErrors           The number of bad packets transmitted by this address\n         since this host was added to the hostTable.
%eunits      hostOutBroadcastPkts    Packets
%edes        hostOutBroadcastPkts    The number of good packets transmitted by this\n         address that were directed to the broadcast address\n         since this host was added to the hostTable.
%eunits      hostOutMulticastPkts    Packets
%edes        hostOutMulticastPkts    The number of good packets transmitted by this\n         address that were directed to a multicast address\n         since this host was added to the hostTable.\n         Note that this number does not include packets\n         directed to the broadcast address.
%edes        hostTimeTable           A list of time-ordered host table entries.
%edes        hostTimeEntry           A collection of statistics for a particular host that has\n         been discovered on an interface of this device.  This\n         collection includes the relative ordering of the creation\n         time of this object.  For example, an instance of the\n         hostTimeOutBroadcastPkts object might be named\n         hostTimeOutBroadcastPkts.1.687
%edes        hostTimeAddress         The physical address of this host.
%edes        hostTimeCreationOrder   An index that uniquely identifies an entry in\n         the hostTime table among those entries associated\n         with the same hostControlEntry.  This index shall\n         be between 1 and N, where N is the value of\n\n\n\n\n\n         the associated hostControlTableSize.  The ordering\n         of the indexes is based on the order of each entry's\n         insertion into the table, in which entries added earlier\n         have a lower index value than entries added later.\n         Thus the management station has the ability to\n         learn of new entries added to this table without\n         downloading the entire table.\n\n         It is important to note that the index for a\n         particular entry may change as an (earlier) entry\n         is deleted from the table.  Because this order may\n         change, management stations should make use of the\n         hostControlLastDeleteTime variable in the\n         hostControlEntry associated with the relevant\n         portion of the hostTimeTable.  By observing\n         this variable, the management station may detect\n         the circumstances where a download of the table\n         may have missed entries, and where a previous\n         association between a value of hostTimeCreationOrder\n         and a hostTimeEntry may no longer hold.
%edes        hostTimeIndex           The set of collected host statistics of which\n         this entry is a part.  The set of hosts\n         identified by a particular value of this\n         index is associated with the hostControlEntry\n         as identified by the same value of hostControlIndex.
%eunits      hostTimeInPkts          Packets
%edes        hostTimeInPkts          The number of good packets transmitted to this\n         address since it was added to the hostTimeTable.
%eunits      hostTimeOutPkts         Packets
%edes        hostTimeOutPkts         The number of packets, including bad packets, transmitted\n         by this address since it was added to the hostTimeTable.
%eunits      hostTimeInOctets        Octets
%edes        hostTimeInOctets        The number of octets transmitted to this address since\n         it was added to the hostTimeTable (excluding framing\n         bits but including FCS octets), except for those\n         octets in bad packets.
%eunits      hostTimeOutOctets       Octets
%edes        hostTimeOutOctets       The number of octets transmitted by this address since\n         it was added to the hostTimeTable (excluding framing\n         bits but including FCS octets), including those\n         octets in bad packets.
%eunits      hostTimeOutErrors       Packets
%edes        hostTimeOutErrors       The number of bad packets transmitted by this address\n         since this host was added to the hostTimeTable.
%eunits      hostTimeOutBroadcastPkts Packets
%edes        hostTimeOutBroadcastPkts The number of good packets transmitted by this\n         address that were directed to the broadcast address\n\n\n\n\n\n         since this host was added to the hostTimeTable.
%eunits      hostTimeOutMulticastPkts Packets
%edes        hostTimeOutMulticastPkts The number of good packets transmitted by this\n         address that were directed to a multicast address\n         since this host was added to the hostTimeTable.\n         Note that this number does not include packets directed\n         to the broadcast address.
%edes        hostControl2Table       Contains the RMON-2 augmentations to RMON-1.
%edes        hostControl2Entry       Contains the RMON-2 augmentations to RMON-1.
%edes        hostControlDroppedFrames The total number of frames that were received by the probe\n        and therefore not accounted for in the *StatsDropEvents, but\n        that the probe chose not to count for this entry for\n        whatever reason.  Most often, this event occurs when the\n\n\n\n        probe is out of some resources and decides to shed load from\n        this collection.\n\n        This count does not include packets that were not counted\n        because they had MAC-layer errors.\n\n        Note that, unlike the dropEvents counter, this number is the\n        exact number of frames dropped.
%edes        hostControlCreateTime   The value of sysUpTime when this control entry was last\n        activated.  This can be used by the management station to\n        ensure that the table has not been deleted and recreated\n        between polls.
%edes        hostTopNControlTable    A list of top N host control entries.
%edes        hostTopNControlEntry    A set of parameters that control the creation of a report\n         of the top N hosts according to several metrics.  For\n         example, an instance of the hostTopNDuration object might\n         be named hostTopNDuration.3
%edes        hostTopNControlIndex    An index that uniquely identifies an entry\n         in the hostTopNControl table.  Each such\n         entry defines one top N report prepared for\n         one interface.
%edes        hostTopNHostIndex       The host table for which a top N report will be prepared\n         on behalf of this entry.  The host table identified by a\n         particular value of this index is associated with the same\n         host table as identified by the same value of\n         hostIndex.\n\n         This object may not be modified if the associated\n         hostTopNStatus object is equal to valid(1).
%edes        hostTopNRateBase        The variable for each host that the hostTopNRate\n         variable is based upon.\n\n         This object may not be modified if the associated\n         hostTopNStatus object is equal to valid(1).
%eunits      hostTopNTimeRemaining   Seconds
%edes        hostTopNTimeRemaining   The number of seconds left in the report currently being\n         collected.  When this object is modified by the management\n         station, a new collection is started, possibly aborting\n         a currently running report.  The new value is used\n         as the requested duration of this report, which is\n         loaded into the associated hostTopNDuration object.\n\n         When this object is set to a non-zero value, any\n         associated hostTopNEntries shall be made\n         inaccessible by the monitor.  While the value of this\n         object is non-zero, it decrements by one per second until\n         it reaches zero.  During this time, all associated\n         hostTopNEntries shall remain inaccessible.  At the time\n         that this object decrements to zero, the report is made\n         accessible in the hostTopNTable.  Thus, the hostTopN\n         table needs to be created only at the end of the collection\n         interval.
%eunits      hostTopNDuration        Seconds
%edes        hostTopNDuration        The number of seconds that this report has collected\n         during the last sampling interval, or if this\n         report is currently being collected, the number\n         of seconds that this report is being collected\n         during this sampling interval.\n\n         When the associated hostTopNTimeRemaining object is set,\n         this object shall be set by the probe to the same value\n         and shall not be modified until the next time\n         the hostTopNTimeRemaining is set.\n\n         This value shall be zero if no reports have been\n         requested for this hostTopNControlEntry.
%edes        hostTopNRequestedSize   The maximum number of hosts requested for the top N\n         table.\n\n         When this object is created or modified, the probe\n         should set hostTopNGrantedSize as closely to this\n         object as is possible for the particular probe\n         implementation and available resources.
%edes        hostTopNGrantedSize     The maximum number of hosts in the top N table.\n\n         When the associated hostTopNRequestedSize object is\n         created or modified, the probe should set this\n         object as closely to the requested value as is possible\n         for the particular implementation and available\n\n\n\n\n\n         resources. The probe must not lower this value except\n         as a result of a set to the associated\n         hostTopNRequestedSize object.\n\n         Hosts with the highest value of hostTopNRate shall be\n         placed in this table in decreasing order of this rate\n         until there is no more room or until there are no more\n         hosts.
%edes        hostTopNStartTime       The value of sysUpTime when this top N report was\n         last started.  In other words, this is the time that\n         the associated hostTopNTimeRemaining object was\n         modified to start the requested report.
%edes        hostTopNOwner           The entity that configured this entry and is therefore\n         using the resources assigned to it.
%edes        hostTopNStatus          The status of this hostTopNControl entry.\n\n         If this object is not equal to valid(1), all associated\n         hostTopNEntries shall be deleted by the agent.
%edes        hostTopNTable           A list of top N host entries.
%edes        hostTopNEntry           A set of statistics for a host that is part of a top N\n         report.  For example, an instance of the hostTopNRate\n         object might be named hostTopNRate.3.10
%edes        hostTopNReport          This object identifies the top N report of which\n         this entry is a part.  The set of hosts\n         identified by a particular value of this\n         object is part of the same report as identified\n         by the same value of the hostTopNControlIndex object.
%edes        hostTopNIndex           An index that uniquely identifies an entry in\n         the hostTopN table among those in the same report.\n         This index is between 1 and N, where N is the\n         number of entries in this table.  Increasing values\n         of hostTopNIndex shall be assigned to entries with\n         decreasing values of hostTopNRate until index N\n         is assigned to the entry with the lowest value of\n         hostTopNRate or there are no more hostTopNEntries.
%edes        hostTopNAddress         The physical address of this host.
%edes        hostTopNRate            The amount of change in the selected variable\n         during this sampling interval.  The selected\n         variable is this host's instance of the object\n         selected by hostTopNRateBase.
%edes        matrixControlTable      A list of information entries for the\n         traffic matrix on each interface.
%edes        matrixControlEntry      Information about a traffic matrix on a particular\n\n\n\n\n\n         interface.  For example, an instance of the\n         matrixControlLastDeleteTime object might be named\n         matrixControlLastDeleteTime.1
%edes        matrixControlIndex      An index that uniquely identifies an entry in the\n         matrixControl table.  Each such entry defines\n         a function that discovers conversations on a particular\n         interface and places statistics about them in the\n         matrixSDTable and the matrixDSTable on behalf of this\n         matrixControlEntry.
%edes        matrixControlDataSource This object identifies the source of\n         the data from which this entry creates a traffic matrix.\n         This source can be any interface on this device.  In\n         order to identify a particular interface, this object\n         shall identify the instance of the ifIndex object,\n         defined in RFC 2233 [17], for the desired\n         interface.  For example, if an entry were to receive data\n         from interface #1, this object would be set to ifIndex.1.\n\n         The statistics in this group reflect all packets\n         on the local network segment attached to the identified\n         interface.\n\n         An agent may or may not be able to tell if fundamental\n         changes to the media of the interface have occurred and\n\n\n\n\n\n         necessitate an invalidation of this entry.  For example, a\n         hot-pluggable ethernet card could be pulled out and replaced\n         by a token-ring card.  In such a case, if the agent has such\n         knowledge of the change, it is recommended that it\n         invalidate this entry.\n\n         This object may not be modified if the associated\n         matrixControlStatus object is equal to valid(1).
%edes        matrixControlTableSize  The number of matrixSDEntries in the matrixSDTable\n         for this interface.  This must also be the value of\n         the number of entries in the matrixDSTable for this\n         interface.
%edes        matrixControlLastDeleteTime The value of sysUpTime when the last entry\n         was deleted from the portion of the matrixSDTable\n         or matrixDSTable associated with this matrixControlEntry.\n         If no deletions have occurred, this value shall be\n         zero.
%edes        matrixControlOwner      The entity that configured this entry and is therefore\n         using the resources assigned to it.
%edes        matrixControlStatus     The status of this matrixControl entry.\n\n\n\n\n\n         If this object is not equal to valid(1), all associated\n         entries in the matrixSDTable and the matrixDSTable\n         shall be deleted by the agent.
%edes        matrixSDTable           A list of traffic matrix entries indexed by\n         source and destination MAC address.
%edes        matrixSDEntry           A collection of statistics for communications between\n         two addresses on a particular interface.  For example,\n         an instance of the matrixSDPkts object might be named\n         matrixSDPkts.1.6.8.0.32.27.3.176.6.8.0.32.10.8.113
%edes        matrixSDSourceAddress   The source physical address.
%edes        matrixSDDestAddress     The destination physical address.
%edes        matrixSDIndex           The set of collected matrix statistics of which\n         this entry is a part.  The set of matrix statistics\n         identified by a particular value of this index\n         is associated with the same matrixControlEntry\n         as identified by the same value of matrixControlIndex.
%eunits      matrixSDPkts            Packets
%edes        matrixSDPkts            The number of packets transmitted from the source\n         address to the destination address (this number includes\n         bad packets).
%eunits      matrixSDOctets          Octets
%edes        matrixSDOctets          The number of octets (excluding framing bits but\n         including FCS octets) contained in all packets\n         transmitted from the source address to the\n         destination address.
%eunits      matrixSDErrors          Packets
%edes        matrixSDErrors          The number of bad packets transmitted from\n         the source address to the destination address.
%edes        matrixDSTable           A list of traffic matrix entries indexed by\n         destination and source MAC address.
%edes        matrixDSEntry           A collection of statistics for communications between\n         two addresses on a particular interface.  For example,\n         an instance of the matrixSDPkts object might be named\n         matrixSDPkts.1.6.8.0.32.10.8.113.6.8.0.32.27.3.176
%edes        matrixDSSourceAddress   The source physical address.
%edes        matrixDSDestAddress     The destination physical address.
%edes        matrixDSIndex           The set of collected matrix statistics of which\n         this entry is a part.  The set of matrix statistics\n         identified by a particular value of this index\n         is associated with the same matrixControlEntry\n         as identified by the same value of matrixControlIndex.
%eunits      matrixDSPkts            Packets
%edes        matrixDSPkts            The number of packets transmitted from the source\n         address to the destination address (this number includes\n         bad packets).
%eunits      matrixDSOctets          Octets
%edes        matrixDSOctets          The number of octets (excluding framing bits\n         but including FCS octets) contained in all packets\n         transmitted from the source address to the\n         destination address.
%eunits      matrixDSErrors          Packets
%edes        matrixDSErrors          The number of bad packets transmitted from\n         the source address to the destination address.
%edes        matrixControl2Table     Contains the RMON-2 augmentations to RMON-1.
%edes        matrixControl2Entry     Contains the RMON-2 augmentations to RMON-1.
%edes        matrixControlDroppedFrames The total number of frames that were received by the probe\n        and therefore not accounted for in the *StatsDropEvents, but\n        that the probe chose not to count for this entry for\n        whatever reason.  Most often, this event occurs when the\n        probe is out of some resources and decides to shed load from\n        this collection.\n\n        This count does not include packets that were not counted\n        because they had MAC-layer errors.\n\n        Note that, unlike the dropEvents counter, this number is the\n        exact number of frames dropped.
%edes        matrixControlCreateTime The value of sysUpTime when this control entry was last\n        activated.  This can be used by the management station to\n        ensure that the table has not been deleted and recreated\n        between polls.
%edes        filterTable             A list of packet filter entries.
%edes        filterEntry             A set of parameters for a packet filter applied on a\n         particular interface.  As an example, an instance of the\n         filterPktData object might be named filterPktData.12
%edes        filterIndex             An index that uniquely identifies an entry\n         in the filter table.  Each such entry defines\n         one filter that is to be applied to every packet\n         received on an interface.
%edes        filterChannelIndex      This object identifies the channel of which this filter\n         is a part.  The filters identified by a particular value\n         of this object are associated with the same channel as\n         identified by the same value of the channelIndex object.
%eunits      filterPktDataOffset     Octets
%edes        filterPktDataOffset     The offset from the beginning of each packet where\n         a match of packet data will be attempted.  This offset\n         is measured from the point in the physical layer\n         packet after the framing bits, if any.  For example,\n         in an Ethernet frame, this point is at the beginning of\n         the destination MAC address.\n\n         This object may not be modified if the associated\n         filterStatus object is equal to valid(1).
%edes        filterPktData           The data that is to be matched with the input packet.\n         For each packet received, this filter and the accompanying\n         filterPktDataMask and filterPktDataNotMask will be\n         adjusted for the offset.  The only bits relevant to this\n         match algorithm are those that have the corresponding\n         filterPktDataMask bit equal to one.  The following three\n         rules are then applied to every packet:\n\n         (1) If the packet is too short and does not have data\n             corresponding to part of the filterPktData, the packet\n             will fail this data match.\n\n         (2) For each relevant bit from the packet with the\n             corresponding filterPktDataNotMask bit set to zero, if\n             the bit from the packet is not equal to the corresponding\n             bit from the filterPktData, then the packet will fail\n             this data match.\n\n         (3) If for every relevant bit from the packet with the\n             corresponding filterPktDataNotMask bit set to one, the\n             bit from the packet is equal to the corresponding bit\n             from the filterPktData, then the packet will fail this\n             data match.\n\n         Any packets that have not failed any of the three matches\n         above have passed this data match.  In particular, a zero\n         length filter will match any packet.\n\n         This object may not be modified if the associated\n         filterStatus object is equal to valid(1).
%edes        filterPktDataMask       The mask that is applied to the match process.\n         After adjusting this mask for the offset, only those\n         bits in the received packet that correspond to bits set\n         in this mask are relevant for further processing by the\n\n\n\n\n\n         match algorithm.  The offset is applied to filterPktDataMask\n         in the same way it is applied to the filter.  For the\n         purposes of the matching algorithm, if the associated\n         filterPktData object is longer than this mask, this mask is\n         conceptually extended with '1' bits until it reaches the\n         length of the filterPktData object.\n\n         This object may not be modified if the associated\n         filterStatus object is equal to valid(1).
%edes        filterPktDataNotMask    The inversion mask that is applied to the match\n         process.  After adjusting this mask for the offset,\n         those relevant bits in the received packet that correspond\n         to bits cleared in this mask must all be equal to their\n         corresponding bits in the filterPktData object for the packet\n         to be accepted.  In addition, at least one of those relevant\n         bits in the received packet that correspond to bits set in\n         this mask must be different to its corresponding bit in the\n         filterPktData object.\n\n         For the purposes of the matching algorithm, if the associated\n         filterPktData object is longer than this mask, this mask is\n         conceptually extended with '0' bits until it reaches the\n         length of the filterPktData object.\n\n         This object may not be modified if the associated\n         filterStatus object is equal to valid(1).
%edes        filterPktStatus         The status that is to be matched with the input packet.\n         The only bits relevant to this match algorithm are those that\n         have the corresponding filterPktStatusMask bit equal to one.\n         The following two rules are then applied to every packet:\n\n         (1) For each relevant bit from the packet status with the\n             corresponding filterPktStatusNotMask bit set to zero, if\n             the bit from the packet status is not equal to the\n\n\n\n\n\n             corresponding bit from the filterPktStatus, then the\n             packet will fail this status match.\n\n         (2) If for every relevant bit from the packet status with the\n             corresponding filterPktStatusNotMask bit set to one, the\n             bit from the packet status is equal to the corresponding\n             bit from the filterPktStatus, then the packet will fail\n             this status match.\n\n         Any packets that have not failed either of the two matches\n         above have passed this status match.  In particular, a zero\n         length status filter will match any packet's status.\n\n         The value of the packet status is a sum.  This sum\n         initially takes the value zero.  Then, for each\n         error, E, that has been discovered in this packet,\n         2 raised to a value representing E is added to the sum.\n         The errors and the bits that represent them are dependent\n         on the media type of the interface that this channel\n         is receiving packets from.\n\n         The errors defined for a packet captured off of an\n         Ethernet interface are as follows:\n\n             bit #    Error\n                 0    Packet is longer than 1518 octets\n                 1    Packet is shorter than 64 octets\n                 2    Packet experienced a CRC or Alignment error\n\n         For example, an Ethernet fragment would have a\n         value of 6 (2^1 + 2^2).\n\n         As this MIB is expanded to new media types, this object\n         will have other media-specific errors defined.\n\n         For the purposes of this status matching algorithm, if the\n         packet status is longer than this filterPktStatus object,\n         this object is conceptually extended with '0' bits until it\n         reaches the size of the packet status.\n\n         This object may not be modified if the associated\n         filterStatus object is equal to valid(1).
%edes        filterPktStatusMask     The mask that is applied to the status match process.\n         Only those bits in the received packet that correspond to\n         bits set in this mask are relevant for further processing\n         by the status match algorithm.  For the purposes\n         of the matching algorithm, if the associated filterPktStatus\n         object is longer than this mask, this mask is conceptually\n         extended with '1' bits until it reaches the size of the\n         filterPktStatus.  In addition, if a packet status is longer\n         than this mask, this mask is conceptually extended with '0'\n         bits until it reaches the size of the packet status.\n\n         This object may not be modified if the associated\n         filterStatus object is equal to valid(1).
%edes        filterPktStatusNotMask  The inversion mask that is applied to the status match\n         process.  Those relevant bits in the received packet status\n         that correspond to bits cleared in this mask must all be\n         equal to their corresponding bits in the filterPktStatus\n         object for the packet to be accepted.  In addition, at least\n         one of those relevant bits in the received packet status\n         that correspond to bits set in this mask must be different\n         to its corresponding bit in the filterPktStatus object for\n         the packet to be accepted.\n\n         For the purposes of the matching algorithm, if the associated\n         filterPktStatus object or a packet status is longer than this\n         mask, this mask is conceptually extended with '0' bits until\n         it reaches the longer of the lengths of the filterPktStatus\n         object and the packet status.\n\n         This object may not be modified if the associated\n         filterStatus object is equal to valid(1).
%edes        filterOwner             The entity that configured this entry and is therefore\n         using the resources assigned to it.
%edes        filterStatus            The status of this filter entry.
%edes        channelTable            A list of packet channel entries.
%edes        channelEntry            A set of parameters for a packet channel applied on a\n         particular interface.  As an example, an instance of the\n         channelMatches object might be named channelMatches.3
%edes        channelIndex            An index that uniquely identifies an entry in the channel\n         table.  Each such entry defines one channel, a logical\n         data and event stream.\n\n         It is suggested that before creating a channel, an\n         application should scan all instances of the\n         filterChannelIndex object to make sure that there are no\n         pre-existing filters that would be inadvertently be linked\n         to the channel.
%edes        channelIfIndex          The value of this object uniquely identifies the\n         interface on this remote network monitoring device to which\n         the associated filters are applied to allow data into this\n         channel.  The interface identified by a particular value\n         of this object is the same interface as identified by the\n         same value of the ifIndex object, defined in RFC 2233 [17].\n\n         The filters in this group are applied to all packets on\n         the local network segment attached to the identified\n         interface.\n\n         An agent may or may not be able to tell if fundamental\n         changes to the media of the interface have occurred and\n         necessitate an invalidation of this entry.  For example, a\n         hot-pluggable ethernet card could be pulled out and replaced\n         by a token-ring card.  In such a case, if the agent has such\n         knowledge of the change, it is recommended that it\n         invalidate this entry.\n\n         This object may not be modified if the associated\n         channelStatus object is equal to valid(1).
%edes        channelAcceptType       This object controls the action of the filters\n         associated with this channel.  If this object is equal\n         to acceptMatched(1), packets will be accepted to this\n         channel if they are accepted by both the packet data and\n         packet status matches of an associated filter.  If\n         this object is equal to acceptFailed(2), packets will\n         be accepted to this channel only if they fail either\n         the packet data match or the packet status match of\n         each of the associated filters.\n\n         In particular, a channel with no associated filters will\n         match no packets if set to acceptMatched(1) case and will\n         match all packets in the acceptFailed(2) case.\n\n         This object may not be modified if the associated\n         channelStatus object is equal to valid(1).
%edes        channelDataControl      This object controls the flow of data through this channel.\n         If this object is on(1), data, status and events flow\n         through this channel.  If this object is off(2), data,\n         status and events will not flow through this channel.
%edes        channelTurnOnEventIndex The value of this object identifies the event\n         that is configured to turn the associated\n         channelDataControl from off to on when the event is\n         generated.  The event identified by a particular value\n         of this object is the same event as identified by the\n         same value of the eventIndex object.  If there is no\n         corresponding entry in the eventTable, then no\n         association exists.  In fact, if no event is intended\n         for this channel, channelTurnOnEventIndex must be\n         set to zero, a non-existent event index.\n\n\n\n\n\n         This object may not be modified if the associated\n         channelStatus object is equal to valid(1).
%edes        channelTurnOffEventIndex The value of this object identifies the event\n         that is configured to turn the associated\n         channelDataControl from on to off when the event is\n         generated.  The event identified by a particular value\n         of this object is the same event as identified by the\n         same value of the eventIndex object.  If there is no\n         corresponding entry in the eventTable, then no\n         association exists.  In fact, if no event is intended\n         for this channel, channelTurnOffEventIndex must be\n         set to zero, a non-existent event index.\n\n         This object may not be modified if the associated\n         channelStatus object is equal to valid(1).
%edes        channelEventIndex       The value of this object identifies the event\n         that is configured to be generated when the\n         associated channelDataControl is on and a packet\n         is matched.  The event identified by a particular value\n         of this object is the same event as identified by the\n         same value of the eventIndex object.  If there is no\n         corresponding entry in the eventTable, then no\n         association exists.  In fact, if no event is intended\n         for this channel, channelEventIndex must be\n         set to zero, a non-existent event index.\n\n         This object may not be modified if the associated\n         channelStatus object is equal to valid(1).
%edes        channelEventStatus      The event status of this channel.\n\n         If this channel is configured to generate events\n         when packets are matched, a means of controlling\n         the flow of those events is often needed.  When\n         this object is equal to eventReady(1), a single\n         event may be generated, after which this object\n         will be set by the probe to eventFired(2).  While\n         in the eventFired(2) state, no events will be\n         generated until the object is modified to\n         eventReady(1) (or eventAlwaysReady(3)).  The\n         management station can thus easily respond to a\n         notification of an event by re-enabling this object.\n\n         If the management station wishes to disable this\n         flow control and allow events to be generated\n         at will, this object may be set to\n         eventAlwaysReady(3).  Disabling the flow control\n         is discouraged as it can result in high network\n         traffic or other performance problems.
%eunits      channelMatches          Packets
%edes        channelMatches          The number of times this channel has matched a packet.\n         Note that this object is updated even when\n         channelDataControl is set to off.
%edes        channelDescription      A comment describing this channel.
%edes        channelOwner            The entity that configured this entry and is therefore\n         using the resources assigned to it.
%edes        channelStatus           The status of this channel entry.
%edes        channel2Table           Contains the RMON-2 augmentations to RMON-1.
%edes        channel2Entry           Contains the RMON-2 augmentations to RMON-1.
%edes        channelDroppedFrames    The total number of frames that were received by the probe\n        and therefore not accounted for in the *StatsDropEvents, but\n        that the probe chose not to count for this entry for\n        whatever reason.  Most often, this event occurs when the\n        probe is out of some resources and decides to shed load from\n        this collection.\n\n        This count does not include packets that were not counted\n        because they had MAC-layer errors.\n\n        Note that, unlike the dropEvents counter, this number is the\n        exact number of frames dropped.
%edes        channelCreateTime       The value of sysUpTime when this control entry was last\n        activated.  This can be used by the management station to\n        ensure that the table has not been deleted and recreated\n        between polls.
%edes        filter2Table            Provides a variable-length packet filter feature to the\n        RMON-1 filter table.
%edes        filter2Entry            Provides a variable-length packet filter feature to the\n        RMON-1 filter table.
%edes        filterProtocolDirDataLocalIndex When this object is set to a non-zero value, the filter that\n        it is associated with performs the following operations on\n        every packet:\n\n        1) If the packet doesn't match the protocol directory entry\n           identified by this object, discard the packet and exit\n           (i.e., discard the packet if it is not of the identified\n           protocol).\n\n\n\n        2) If the associated filterProtocolDirLocalIndex is non-zero\n           and the packet doesn't match the protocol directory\n           entry identified by that object, discard the packet and\n           exit.\n        3) If the packet matches, perform the regular filter\n           algorithm as if the beginning of this named protocol is\n           the beginning of the packet, potentially applying the\n           filterOffset value to move further into the packet.
%edes        filterProtocolDirLocalIndex When this object is set to a non-zero value, the filter that\n        it is associated with will discard the packet if the packet\n        doesn't match this protocol directory entry.
%edes        bufferControlTable      A list of buffers control entries.
%edes        bufferControlEntry      A set of parameters that control the collection of a stream\n         of packets that have matched filters.  As an example, an\n         instance of the bufferControlCaptureSliceSize object might\n         be named bufferControlCaptureSliceSize.3
%edes        bufferControlIndex      An index that uniquely identifies an entry\n         in the bufferControl table.  The value of this\n         index shall never be zero.  Each such\n         entry defines one set of packets that is\n         captured and controlled by one or more filters.
%edes        bufferControlChannelIndex An index that identifies the channel that is the\n         source of packets for this bufferControl table.\n         The channel identified by a particular value of this\n         index is the same as identified by the same value of\n         the channelIndex object.\n\n         This object may not be modified if the associated\n         bufferControlStatus object is equal to valid(1).
%edes        bufferControlFullStatus This object shows whether the buffer has room to\n         accept new packets or if it is full.\n\n         If the status is spaceAvailable(1), the buffer is\n         accepting new packets normally.  If the status is\n         full(2) and the associated bufferControlFullAction\n         object is wrapWhenFull, the buffer is accepting new\n         packets by deleting enough of the oldest packets\n         to make room for new ones as they arrive.  Otherwise,\n         if the status is full(2) and the\n         bufferControlFullAction object is lockWhenFull,\n         then the buffer has stopped collecting packets.\n\n         When this object is set to full(2) the probe must\n         not later set it to spaceAvailable(1) except in the\n         case of a significant gain in resources such as\n         an increase of bufferControlOctetsGranted.  In\n         particular, the wrap-mode action of deleting old\n         packets to make room for newly arrived packets\n         must not affect the value of this object.
%edes        bufferControlFullAction Controls the action of the buffer when it\n         reaches the full status.  When in the lockWhenFull(1)\n         state and a packet is added to the buffer that\n         fills the buffer, the bufferControlFullStatus will\n         be set to full(2) and this buffer will stop capturing\n         packets.
%eunits      bufferControlCaptureSliceSize Octets
%edes        bufferControlCaptureSliceSize The maximum number of octets of each packet\n         that will be saved in this capture buffer.\n         For example, if a 1500 octet packet is received by\n         the probe and this object is set to 500, then only\n         500 octets of the packet will be stored in the\n         associated capture buffer.  If this variable is set\n         to 0, the capture buffer will save as many octets\n         as is possible.\n\n         This object may not be modified if the associated\n         bufferControlStatus object is equal to valid(1).
%eunits      bufferControlDownloadSliceSize Octets
%edes        bufferControlDownloadSliceSize The maximum number of octets of each packet\n         in this capture buffer that will be returned in\n         an SNMP retrieval of that packet.  For example,\n         if 500 octets of a packet have been stored in the\n         associated capture buffer, the associated\n         bufferControlDownloadOffset is 0, and this\n         object is set to 100, then the captureBufferPacket\n         object that contains the packet will contain only\n         the first 100 octets of the packet.\n\n         A prudent manager will take into account possible\n         interoperability or fragmentation problems that may\n         occur if the download slice size is set too large.\n         In particular, conformant SNMP implementations are not\n         required to accept messages whose length exceeds 484\n         octets, although they are encouraged to support larger\n         datagrams whenever feasible.
%eunits      bufferControlDownloadOffset Octets
%edes        bufferControlDownloadOffset The offset of the first octet of each packet\n         in this capture buffer that will be returned in\n         an SNMP retrieval of that packet.  For example,\n         if 500 octets of a packet have been stored in the\n         associated capture buffer and this object is set to\n         100, then the captureBufferPacket object that\n         contains the packet will contain bytes starting\n         100 octets into the packet.
%eunits      bufferControlMaxOctetsRequested Octets
%edes        bufferControlMaxOctetsRequested The requested maximum number of octets to be\n         saved in this captureBuffer, including any\n         implementation-specific overhead. If this variable\n         is set to -1, the capture buffer will save as many\n         octets as is possible.\n\n         When this object is created or modified, the probe\n         should set bufferControlMaxOctetsGranted as closely\n         to this object as is possible for the particular probe\n         implementation and available resources.  However, if\n         the object has the special value of -1, the probe\n         must set bufferControlMaxOctetsGranted to -1.
%eunits      bufferControlMaxOctetsGranted Octets
%edes        bufferControlMaxOctetsGranted The maximum number of octets that can be\n         saved in this captureBuffer, including overhead.\n         If this variable is -1, the capture buffer will save\n         as many octets as possible.\n\n         When the bufferControlMaxOctetsRequested object is\n         created or modified, the probe should set this object\n         as closely to the requested value as is possible for the\n         particular probe implementation and available resources.\n         However, if the request object has the special value\n\n\n\n\n\n         of -1, the probe must set this object to -1.\n\n         The probe must not lower this value except as a result of\n         a modification to the associated\n         bufferControlMaxOctetsRequested object.\n\n         When this maximum number of octets is reached\n         and a new packet is to be added to this\n         capture buffer and the corresponding\n         bufferControlFullAction is set to wrapWhenFull(2),\n         enough of the oldest packets associated with this\n         capture buffer shall be deleted by the agent so\n         that the new packet can be added.  If the corresponding\n         bufferControlFullAction is set to lockWhenFull(1),\n         the new packet shall be discarded.  In either case,\n         the probe must set bufferControlFullStatus to\n         full(2).\n\n         When the value of this object changes to a value less\n         than the current value, entries are deleted from\n         the captureBufferTable associated with this\n         bufferControlEntry.  Enough of the\n         oldest of these captureBufferEntries shall be\n         deleted by the agent so that the number of octets\n         used remains less than or equal to the new value of\n         this object.\n\n         When the value of this object changes to a value greater\n         than the current value, the number of associated\n         captureBufferEntries may be allowed to grow.
%eunits      bufferControlCapturedPackets Packets
%edes        bufferControlCapturedPackets The number of packets currently in this captureBuffer.
%edes        bufferControlTurnOnTime The value of sysUpTime when this capture buffer was\n         first turned on.
%edes        bufferControlOwner      The entity that configured this entry and is therefore\n         using the resources assigned to it.
%edes        bufferControlStatus     The status of this buffer Control Entry.
%edes        captureBufferTable      A list of packets captured off of a channel.
%edes        captureBufferEntry      A packet captured off of an attached network.  As an\n         example, an instance of the captureBufferPacketData\n         object might be named captureBufferPacketData.3.1783
%edes        captureBufferControlIndex The index of the bufferControlEntry with which\n         this packet is associated.
%edes        captureBufferIndex      An index that uniquely identifies an entry\n         in the captureBuffer table associated with a\n         particular bufferControlEntry.  This index will\n         start at 1 and increase by one for each new packet\n         added with the same captureBufferControlIndex.\n\n         Should this value reach 2147483647, the next packet\n         added with the same captureBufferControlIndex shall\n         cause this value to wrap around to 1.
%edes        captureBufferPacketID   An index that describes the order of packets\n         that are received on a particular interface.\n         The packetID of a packet captured on an\n         interface is defined to be greater than the\n         packetID's of all packets captured previously on\n         the same interface.  As the captureBufferPacketID\n         object has a maximum positive value of 2^31 - 1,\n         any captureBufferPacketID object shall have the\n         value of the associated packet's packetID mod 2^31.
%edes        captureBufferPacketData The data inside the packet, starting at the beginning\n         of the packet plus any offset specified in the\n\n\n\n\n\n         associated bufferControlDownloadOffset, including any\n         link level headers.  The length of the data in this object\n         is the minimum of the length of the captured packet minus\n         the offset, the length of the associated\n         bufferControlCaptureSliceSize minus the offset, and the\n         associated bufferControlDownloadSliceSize.  If this minimum\n         is less than zero, this object shall have a length of zero.
%eunits      captureBufferPacketLength Octets
%edes        captureBufferPacketLength The actual length (off the wire) of the packet stored\n         in this entry, including FCS octets.
%eunits      captureBufferPacketTime Milliseconds
%edes        captureBufferPacketTime The number of milliseconds that had passed since\n         this capture buffer was first turned on when this\n         packet was captured.
%edes        captureBufferPacketStatus A value which indicates the error status of this packet.\n\n         The value of this object is defined in the same way as\n         filterPktStatus.  The value is a sum.  This sum\n         initially takes the value zero.  Then, for each\n         error, E, that has been discovered in this packet,\n         2 raised to a value representing E is added to the sum.\n\n         The errors defined for a packet captured off of an\n         Ethernet interface are as follows:\n\n             bit #    Error\n                 0    Packet is longer than 1518 octets\n\n\n\n\n\n                 1    Packet is shorter than 64 octets\n                 2    Packet experienced a CRC or Alignment error\n                 3    First packet in this capture buffer after\n                      it was detected that some packets were\n                      not processed correctly.\n                 4    Packet's order in buffer is only approximate\n                      (May only be set for packets sent from\n                      the probe)\n\n         For example, an Ethernet fragment would have a\n         value of 6 (2^1 + 2^2).\n\n         As this MIB is expanded to new media types, this object\n         will have other media-specific errors defined.
%edes        eventTable              A list of events to be generated.
%edes        eventEntry              A set of parameters that describe an event to be generated\n         when certain conditions are met.  As an example, an instance\n         of the eventLastTimeSent object might be named\n         eventLastTimeSent.6
%edes        eventIndex              An index that uniquely identifies an entry in the\n         event table.  Each such entry defines one event that\n         is to be generated when the appropriate conditions\n         occur.
%edes        eventDescription        A comment describing this event entry.
%edes        eventType               The type of notification that the probe will make\n         about this event.  In the case of log, an entry is\n         made in the log table for each event.  In the case of\n         snmp-trap, an SNMP trap is sent to one or more\n         management stations.
%edes        eventCommunity          If an SNMP trap is to be sent, it will be sent to\n         the SNMP community specified by this octet string.
%edes        eventLastTimeSent       The value of sysUpTime at the time this event\n         entry last generated an event.  If this entry has\n         not generated any events, this value will be\n         zero.
%edes        eventOwner              The entity that configured this entry and is therefore\n         using the resources assigned to it.\n\n         If this object contains a string starting with 'monitor'\n         and has associated entries in the log table, all connected\n         management stations should retrieve those log entries,\n         as they may have significance to all management stations\n         connected to this device
%edes        eventStatus             The status of this event entry.\n\n         If this object is not equal to valid(1), all associated\n         log entries shall be deleted by the agent.
%edes        logTable                A list of events that have been logged.
%edes        logEntry                A set of data describing an event that has been\n         logged.  For example, an instance of the logDescription\n         object might be named logDescription.6.47
%edes        logEventIndex           The event entry that generated this log\n         entry.  The log identified by a particular\n         value of this index is associated with the same\n         eventEntry as identified by the same value\n         of eventIndex.
%edes        logIndex                An index that uniquely identifies an entry\n         in the log table amongst those generated by the\n         same eventEntries.  These indexes are\n         assigned beginning with 1 and increase by one\n         with each new log entry.  The association\n         between values of logIndex and logEntries\n         is fixed for the lifetime of each logEntry.\n         The agent may choose to delete the oldest\n         instances of logEntry as required because of\n         lack of memory.  It is an implementation-specific\n         matter as to when this deletion may occur.
%edes        logTime                 The value of sysUpTime when this log entry was created.
%edes        logDescription          An implementation dependent description of the\n         event that activated this log entry.
%edes        ringStationControlTable A list of ringStation table control entries.
%edes        ringStationControlEntry A list of parameters that set up the discovery of\n            stations on a particular interface and the\n            collection of statistics about these stations.
%edes        ringStationControlIfIndex The value of this object uniquely identifies the\n            interface on this remote network monitoring device\n            from which ringStation data is collected.  The\n            interface identified by a particular value of this\n            object is the same interface as identified by the\n            same value of the ifIndex object, defined in MIB-\n            II [3].
%edes        ringStationControlTableSize The number of ringStationEntries in the\n            ringStationTable associated with this\n            ringStationControlEntry.
%edes        ringStationControlActiveStations The number of active ringStationEntries in the\n            ringStationTable associated with this\n            ringStationControlEntry.
%edes        ringStationControlRingState The current status of this ring.
%edes        ringStationControlBeaconSender The address of the sender of the last beacon\n            frame received by the probe on this ring.  If no\n            beacon frames have been received, this object\n            shall be equal to six octets of zero.
%edes        ringStationControlBeaconNAUN The address of the NAUN in the last beacon frame\n            received by the probe on this ring.  If no beacon\n            frames have been received, this object shall be\n            equal to six octets of zero.
%edes        ringStationControlActiveMonitor The address of the Active Monitor on this\n            segment.  If this address is unknown, this object\n            shall be equal to six octets of zero.
%edes        ringStationControlOrderChanges The number of add and delete events in the\n            ringStationOrderTable optionally associated with\n            this ringStationControlEntry.
%edes        ringStationControlOwner The entity that configured this entry and is\n            therefore using the resources assigned to it.
%edes        ringStationControlStatus The status of this ringStationControl entry.\n\n            If this object is not equal to valid(1), all\n            associated entries in the ringStationTable shall\n            be deleted by the agent.
%edes        ringStationTable        A list of ring station entries.  An entry will\n            exist for each station that is now or has\n            previously been detected as physically present on\n            this ring.
%edes        ringStationEntry        A collection of statistics for a particular\n            station that has been discovered on a ring\n            monitored by this device.
%edes        ringStationIfIndex      The value of this object uniquely identifies the\n            interface on this remote network monitoring device\n            on which this station was detected.  The interface\n            identified by a particular value of this object is\n            the same interface as identified by the same value\n            of the ifIndex object, defined in MIB-II [3].
%edes        ringStationMacAddress   The physical address of this station.
%edes        ringStationLastNAUN     The physical address of last known NAUN of this\n            station.
%edes        ringStationStationStatus The status of this station on the ring.
%edes        ringStationLastEnterTime The value of sysUpTime at the time this station\n            last entered the ring.  If the time is unknown,\n            this value shall be zero.
%edes        ringStationLastExitTime The value of sysUpTime at the time the probe\n            detected that this station last exited the ring.\n            If the time is unknown, this value shall be zero.
%edes        ringStationDuplicateAddresses The number of times this station experienced a\n            duplicate address error.
%edes        ringStationInLineErrors The total number of line errors reported by this\n            station in error reporting packets detected by the\n            probe.
%edes        ringStationOutLineErrors The total number of line errors reported in error\n            reporting packets sent by the nearest active\n            downstream neighbor of this station and detected\n            by the probe.
%edes        ringStationInternalErrors The total number of adapter internal errors\n            reported by this station in error reporting\n            packets detected by the probe.
%edes        ringStationInBurstErrors The total number of burst errors reported by this\n            station in error reporting packets detected by the\n            probe.
%edes        ringStationOutBurstErrors The total number of burst errors reported in\n            error reporting packets sent by the nearest active\n            downstream neighbor of this station and detected\n            by the probe.
%edes        ringStationACErrors     The total number of AC (Address Copied) errors\n            reported in error reporting packets sent by the\n            nearest active downstream neighbor of this station\n            and detected by the probe.
%edes        ringStationAbortErrors  The total number of abort delimiters reported by\n            this station in error reporting packets detected\n            by the probe.
%edes        ringStationLostFrameErrors The total number of lost frame errors reported by\n            this station in error reporting packets detected\n            by the probe.
%edes        ringStationCongestionErrors The total number of receive congestion errors\n            reported by this station in error reporting\n            packets detected by the probe.
%edes        ringStationFrameCopiedErrors The total number of frame copied errors reported\n            by this station in error reporting packets\n            detected by the probe.
%edes        ringStationFrequencyErrors The total number of frequency errors reported by\n            this station in error reporting packets detected\n            by the probe.
%edes        ringStationTokenErrors  The total number of token errors reported by this\n            station in error reporting frames detected by the\n            probe.
%edes        ringStationInBeaconErrors The total number of beacon frames sent by this\n            station and detected by the probe.
%edes        ringStationOutBeaconErrors The total number of beacon frames detected by the\n            probe that name this station as the NAUN.
%edes        ringStationInsertions   The number of times the probe detected this\n            station inserting onto the ring.
%edes        ringStationOrderTable   A list of ring station entries for stations in\n            the ring poll, ordered by their ring-order.
%edes        ringStationOrderEntry   A collection of statistics for a particular\n            station that is active on a ring monitored by this\n            device.  This table will contain information for\n            every interface that has a\n            ringStationControlStatus equal to valid.
%edes        ringStationOrderIfIndex The value of this object uniquely identifies the\n            interface on this remote network monitoring device\n            on which this station was detected.  The interface\n            identified by a particular value of this object is\n            the same interface as identified by the same value\n            of the ifIndex object, defined in MIB-II [3].
%edes        ringStationOrderOrderIndex This index denotes the location of this station\n            with respect to other stations on the ring.  This\n            index is one more than the number of hops\n            downstream that this station is from the rmon\n            probe.  The rmon probe itself gets the value one.
%edes        ringStationOrderMacAddress The physical address of this station.
%edes        ringStationConfigControlTable A list of ring station configuration control\n            entries.
%edes        ringStationConfigControlEntry This entry controls active management of stations\n            by the probe.  One entry exists in this table for\n            each active station in the ringStationTable.
%edes        ringStationConfigControlIfIndex The value of this object uniquely identifies the\n            interface on this remote network monitoring device\n            on which this station was detected.  The interface\n            identified by a particular value of this object is\n            the same interface as identified by the same value\n            of the ifIndex object, defined in MIB-II [3].
%edes        ringStationConfigControlMacAddress The physical address of this station.
%edes        ringStationConfigControlRemove Setting this object to `removing(2)' causes a\n            Remove Station MAC frame to be sent.  The agent\n            will set this object to `stable(1)' after\n            processing the request.
%edes        ringStationConfigControlUpdateStats Setting this object to `updating(2)' causes the\n            configuration information associate with this\n            entry to be updated.  The agent will set this\n            object to `stable(1)' after processing the\n            request.
%edes        ringStationConfigTable  A list of configuration entries for stations on a\n            ring monitored by this probe.
%edes        ringStationConfigEntry  A collection of statistics for a particular\n            station that has been discovered on a ring\n            monitored by this probe.
%edes        ringStationConfigIfIndex The value of this object uniquely identifies the\n            interface on this remote network monitoring device\n            on which this station was detected.  The interface\n            identified by a particular value of this object is\n            the same interface as identified by the same value\n            of the ifIndex object, defined in MIB-II [3].
%edes        ringStationConfigMacAddress The physical address of this station.
%edes        ringStationConfigUpdateTime The value of sysUpTime at the time this\n            configuration information was last updated\n            (completely).
%edes        ringStationConfigLocation The assigned physical location of this station.
%edes        ringStationConfigMicrocode The microcode EC level of this station.
%edes        ringStationConfigGroupAddress The low-order 4 octets of the group address\n            recognized by this station.
%edes        ringStationConfigFunctionalAddress the functional addresses recognized by this\n            station.
%edes        sourceRoutingStatsTable A list of source routing statistics entries.
%edes        sourceRoutingStatsEntry A collection of source routing statistics kept\n            for a particular Token Ring interface.
%edes        sourceRoutingStatsIfIndex The value of this object uniquely identifies the\n            interface on this remote network monitoring device\n            on which source routing statistics will be\n            detected.  The interface identified by a\n            particular value of this object is the same\n            interface as identified by the same value of the\n            ifIndex object, defined in MIB-II [3].
%edes        sourceRoutingStatsRingNumber The ring number of the ring monitored by this\n            entry.  When any object in this entry is created,\n            the probe will attempt to discover the ring\n            number.  Only after the ring number is discovered\n            will this object be created.  After creating an\n            object in this entry, the management station\n            should poll this object to detect when it is\n            created.  Only after this object is created can\n            the management station set the\n            sourceRoutingStatsStatus entry to valid(1).
%edes        sourceRoutingStatsInFrames The count of frames sent into this ring from\n            another ring.
%edes        sourceRoutingStatsOutFrames The count of frames sent from this ring to\n            another ring.
%edes        sourceRoutingStatsThroughFrames The count of frames sent from another ring,\n            through this ring, to another ring.
%edes        sourceRoutingStatsAllRoutesBroadcastFrames The total number of good frames received that\n            were All Routes Broadcast.
%edes        sourceRoutingStatsSingleRouteBroadcastFrames The total number of good frames received that\n            were Single Route Broadcast.
%edes        sourceRoutingStatsInOctets The count of octets in good frames sent into this\n            ring from another ring.
%edes        sourceRoutingStatsOutOctets The count of octets in good frames sent from this\n            ring to another ring.
%edes        sourceRoutingStatsThroughOctets The count of octets in good frames sent another\n            ring, through this ring, to another ring.
%edes        sourceRoutingStatsAllRoutesBroadcastOctets The total number of octets in good frames\n            received that were All Routes Broadcast.
%edes        sourceRoutingStatsSingleRoutesBroadcastOctets The total number of octets in good frames\n            received that were Single Route Broadcast.
%edes        sourceRoutingStatsLocalLLCFrames The total number of frames received who had no\n            RIF field (or had a RIF field that only included\n            the local ring's number) and were not All Route\n            Broadcast Frames.
%edes        sourceRoutingStats1HopFrames The total number of frames received whose route\n            had 1 hop, were not All Route Broadcast Frames,\n            and whose source or destination were on this ring\n            (i.e. frames that had a RIF field and had this\n            ring number in the first or last entry of the RIF\n            field).
%edes        sourceRoutingStats2HopsFrames The total number of frames received whose route\n            had 2 hops, were not All Route Broadcast Frames,\n            and whose source or destination were on this ring\n            (i.e. frames that had a RIF field and had this\n            ring number in the first or last entry of the RIF\n            field).
%edes        sourceRoutingStats3HopsFrames The total number of frames received whose route\n            had 3 hops, were not All Route Broadcast Frames,\n            and whose source or destination were on this ring\n            (i.e. frames that had a RIF field and had this\n            ring number in the first or last entry of the RIF\n            field).
%edes        sourceRoutingStats4HopsFrames The total number of frames received whose route\n            had 4 hops, were not All Route Broadcast Frames,\n            and whose source or destination were on this ring\n            (i.e. frames that had a RIF field and had this\n            ring number in the first or last entry of the RIF\n            field).
%edes        sourceRoutingStats5HopsFrames The total number of frames received whose route\n            had 5 hops, were not All Route Broadcast Frames,\n            and whose source or destination were on this ring\n            (i.e. frames that had a RIF field and had this\n            ring number in the first or last entry of the RIF\n            field).
%edes        sourceRoutingStats6HopsFrames The total number of frames received whose route\n            had 6 hops, were not All Route Broadcast Frames,\n            and whose source or destination were on this ring\n            (i.e. frames that had a RIF field and had this\n            ring number in the first or last entry of the RIF\n            field).
%edes        sourceRoutingStats7HopsFrames The total number of frames received whose route\n            had 7 hops, were not All Route Broadcast Frames,\n            and whose source or destination were on this ring\n            (i.e. frames that had a RIF field and had this\n            ring number in the first or last entry of the RIF\n            field).
%edes        sourceRoutingStats8HopsFrames The total number of frames received whose route\n            had 8 hops, were not All Route Broadcast Frames,\n            and whose source or destination were on this ring\n            (i.e. frames that had a RIF field and had this\n            ring number in the first or last entry of the RIF\n            field).
%edes        sourceRoutingStatsMoreThan8HopsFrames The total number of frames received whose route\n            had more than 8 hops, were not All Route Broadcast\n            Frames, and whose source or destination were on\n            this ring (i.e. frames that had a RIF field and\n            had this ring number in the first or last entry of\n            the RIF field).
%edes        sourceRoutingStatsOwner The entity that configured this entry and is\n            therefore using the resources assigned to it.
%edes        sourceRoutingStatsStatus The status of this sourceRoutingStats entry.
%edes        ringStationControl2Table Contains the RMON-2 augmentations to RMON-1.\n\n        This table has been deprecated, as it has not had enough\n        independent implementations to demonstrate interoperability\n        to meet the requirements of a Draft Standard.
%edes        ringStationControl2Entry Contains the RMON-2 augmentations to RMON-1.
%edes        ringStationControlDroppedFrames The total number of frames that were received by the probe\n        and therefore not accounted for in the *StatsDropEvents, but\n        that the probe chose not to count for this entry for\n        whatever reason.  Most often, this event occurs when the\n        probe is out of some resources and decides to shed load from\n        this collection.\n\n        This count does not include packets that were not counted\n        because they had MAC-layer errors.\n\n        Note that, unlike the dropEvents counter, this number is the\n        exact number of frames dropped.
%edes        ringStationControlCreateTime The value of sysUpTime when this control entry was last\n        activated.  This can be used by the management station to\n\n\n\n        ensure that the table has not been deleted and recreated\n        between polls.
%edes        sourceRoutingStats2Table Contains the RMON-2 augmentations to RMON-1.\n\n        This table has been deprecated, as it has not had enough\n        independent implementations to demonstrate interoperability\n        to meet the requirements of a Draft Standard.
%edes        sourceRoutingStats2Entry Contains the RMON-2 augmentations to RMON-1.
%edes        sourceRoutingStatsDroppedFrames The total number of frames that were received by the probe\n        and therefore not accounted for in the *StatsDropEvents, but\n        that the probe chose not to count for this entry for\n        whatever reason.  Most often, this event occurs when the\n        probe is out of some resources and decides to shed load from\n        this collection.\n\n        This count does not include packets that were not counted\n        because they had MAC-layer errors.\n\n        Note that, unlike the dropEvents counter, this number is the\n        exact number of frames dropped.
%edes        sourceRoutingStatsCreateTime The value of sysUpTime when this control entry was last\n        activated.  This can be used by the management station to\n        ensure that the table has not been deleted and recreated\n        between polls.
%edes        protocolDirLastChange   The value of sysUpTime at the time the protocol directory\n        was last modified, either through insertions or deletions,\n        or through modifications of the\n        protocolDirAddressMapConfig, protocolDirHostConfig, or\n        protocolDirMatrixConfig.
%edes        protocolDirTable        This table lists the protocols that this agent has the\n        capability to decode and count.  There is one entry in this\n        table for each such protocol.  These protocols represent\n        different network-layer, transport-layer, and higher-layer\n\n\n\n        protocols.  The agent should boot up with this table\n        preconfigured with those protocols that it knows about and\n        wishes to monitor.  Implementations are strongly encouraged to\n        support protocols higher than the network layer (at least for\n        the protocol distribution group), even for implementations\n        that don't support the application-layer groups.
%edes        protocolDirEntry        A conceptual row in the protocolDirTable.\n\n         An example of the indexing of this entry is\n         protocolDirLocalIndex.8.0.0.0.1.0.0.8.0.2.0.0, which is the\n         encoding of a length of 8, followed by 8 subids encoding the\n         protocolDirID of 1.2048, followed by a length of 2 and the\n         2 subids encoding zero-valued parameters.\n\n         Note that some combinations of index values may result in an\n         index that exceeds 128 sub-identifiers in length, which exceeds\n         the maximum for the SNMP protocol.  Implementations should take\n         care to avoid such combinations.
%edes        protocolDirID           A unique identifier for a particular protocol.  Standard\n        identifiers will be defined in such a manner that they\n\n\n\n        can often be used as specifications for new protocols - i.e.,\n        a tree-structured assignment mechanism that matches the\n        protocol encapsulation 'tree' and that has algorithmic\n        assignment mechanisms for certain subtrees.  See RFC 2074 for\n        more details.\n\n        Despite the algorithmic mechanism, the probe will only place\n        entries in here for those protocols it chooses to collect.  In\n        other words, it need not populate this table with all\n        possible ethernet protocol types, nor need it create them on\n        the fly when it sees them.  Whether it does these\n        things is a matter of product definition (cost/benefit,\n        usability) and is up to the designer of the product.\n\n        If an entry is written to this table with a protocolDirID that\n        the agent doesn't understand, either directly or\n        algorithmically, the SET request will be rejected with an\n        inconsistentName or badValue (for SNMPv1) error.
%edes        protocolDirParameters   A set of parameters for the associated protocolDirID.\n        See the associated RMON2 Protocol Identifiers document\n        for a description of the possible parameters.  There\n        will be one octet in this string for each sub-identifier in\n        the protocolDirID, and the parameters will appear here in the\n        same order as the associated sub-identifiers appear in the\n        protocolDirID.\n\n        Every node in the protocolDirID tree has a different, optional\n        set of parameters defined (that is, the definition of\n        parameters for a node is optional).  The proper parameter\n        value for each node is included in this string.  Note that the\n        inclusion of a parameter value in this string for each node is\n        not optional.  What is optional is that a node may have no\n        parameters defined, in which case the parameter field for that\n        node will be zero.
%edes        protocolDirLocalIndex   The locally arbitrary but unique identifier associated\n        with this protocolDir entry.\n\n        The value for each supported protocol must remain constant at\n        least from one re-initialization of the entity's network\n        management system to the next re-initialization, except that\n        if a protocol is deleted and re-created, it must be re-created\n        with a new value that has not been used since the last\n        re-initialization.\n\n        The specific value is meaningful only within a given SNMP\n        entity.  A protocolDirLocalIndex must not be re-used until the\n        next agent restart in the event that the protocol directory\n        entry is deleted.
%edes        protocolDirDescr        A textual description of the protocol encapsulation.\n        A probe may choose to describe only a subset of the\n        entire encapsulation (e.g., only the highest layer).\n\n        This object is intended for human consumption only.\n\n        This object may not be modified if the associated\n        protocolDirStatus object is equal to active(1).
%edes        protocolDirType         This object describes 2 attributes of this protocol\n         directory entry.\n\n         The presence or absence of the 'extensible' bit describes\n         whether this protocol directory entry can be extended\n         by the user by creating protocol directory entries that are\n         children of this protocol.\n\n         An example of an entry that will often allow extensibility is\n\n\n\n         'ip.udp'.  The probe may automatically populate some children\n         of this node, such as 'ip.udp.snmp' and 'ip.udp.dns'.\n         A probe administrator or user may also populate additional\n         children via remote SNMP requests that create entries in this\n         table.  When a child node is added for a protocol for which the\n         probe has no built-in support extending a parent node (for\n         which the probe does have built-in support),\n         that child node is not extendable.  This is termed 'limited\n         extensibility'.\n\n         When a child node is added through this extensibility\n         mechanism, the values of protocolDirLocalIndex and\n         protocolDirType shall be assigned by the agent.\n\n         The other objects in the entry will be assigned by the\n         manager who is creating the new entry.\n\n         This object also describes whether this agent can\n         recognize addresses for this protocol, should it be a\n         network-level protocol.  That is, while a probe may be able\n         to recognize packets of a particular network-layer protocol\n         and count them, it takes additional logic to be able to\n         recognize the addresses in this protocol and to populate\n         network-layer or application-layer tables with the addresses\n         in this protocol.  If this bit is set, the agent will\n         recognize network-layer addresses for this protocol and\n         populate the network- and application-layer host and matrix\n         tables with these protocols.\n\n         Note that when an entry is created, the agent will supply\n         values for the bits that match the capabilities of the agent\n         with respect to this protocol.  Note that since row creations\n         usually exercise the limited extensibility feature, these\n         bits will usually be set to zero.
%edes        protocolDirAddressMapConfig This object describes and configures the probe's support for\n        address mapping for this protocol.  When the probe creates\n        entries in this table for all protocols that it understands,\n\n\n\n        it will set the entry to notSupported(1) if it doesn't have\n        the capability to perform address mapping for the protocol or\n        if this protocol is not a network-layer protocol.  When\n        an entry is created in this table by a management operation as\n        part of the limited extensibility feature, the probe must set\n        this value to notSupported(1), because limited extensibility\n        of the protocolDirTable does not extend to interpreting\n        addresses of the extended protocols.\n\n        If the value of this object is notSupported(1), the probe\n        will not perform address mapping for this protocol and\n        shall not allow this object to be changed to any other value.\n        If the value of this object is supportedOn(3), the probe\n        supports address mapping for this protocol and is configured\n        to perform address mapping for this protocol for all\n        addressMappingControlEntries and all interfaces.\n        If the value of this object is supportedOff(2), the probe\n        supports address mapping for this protocol but is configured\n        to not perform address mapping for this protocol for any\n        addressMappingControlEntries and all interfaces.\n        Whenever this value changes from supportedOn(3) to\n        supportedOff(2), the probe shall delete all related entries in\n        the addressMappingTable.
%edes        protocolDirHostConfig   This object describes and configures the probe's support for\n        the network-layer and application-layer host tables for this\n        protocol.  When the probe creates entries in this table for\n        all protocols that it understands, it will set the entry to\n        notSupported(1) if it doesn't have the capability to track the\n        nlHostTable for this protocol or if the alHostTable is\n        implemented but doesn't have the capability to track this\n        protocol.  Note that if the alHostTable is implemented, the\n        probe may only support a protocol if it is supported in both\n        the nlHostTable and the alHostTable.\n\n        If the associated protocolDirType object has the\n        addressRecognitionCapable bit set, then this is a network-\n        layer protocol for which the probe recognizes addresses, and\n\n\n\n        thus the probe will populate the nlHostTable and alHostTable\n        with addresses it discovers for this protocol.\n\n        If the value of this object is notSupported(1), the probe\n        will not track the nlHostTable or alHostTable for this\n        protocol and shall not allow this object to be changed to any\n        other value.  If the value of this object is supportedOn(3),\n        the probe supports tracking of the nlHostTable and alHostTable\n        for this protocol and is configured to track both tables\n        for this protocol for all control entries and all interfaces.\n        If the value of this object is supportedOff(2), the probe\n        supports tracking of the nlHostTable and alHostTable for this\n        protocol but is configured to not track these tables\n        for any control entries or interfaces.\n        Whenever this value changes from supportedOn(3) to\n        supportedOff(2), the probe shall delete all related entries in\n        the nlHostTable and alHostTable.\n\n        Note that since each alHostEntry references 2 protocol\n        directory entries, one for the network address and one for the\n        type of the highest protocol recognized, an entry will\n        only be created in that table if this value is supportedOn(3)\n        for both protocols.
%edes        protocolDirMatrixConfig This object describes and configures the probe's support for\n        the network-layer and application-layer matrix tables for this\n        protocol.  When the probe creates entries in this table for\n        all protocols that it understands, it will set the entry to\n        notSupported(1) if it doesn't have the capability to track the\n        nlMatrixTables for this protocol or if the alMatrixTables are\n        implemented but don't have the capability to track this\n        protocol.  Note that if the alMatrix tables are implemented,\n        the probe may only support a protocol if it is supported in\n        both of the nlMatrixTables and both of the\n        alMatrixTables.\n\n        If the associated protocolDirType object has the\n        addressRecognitionCapable bit set, then this is a network-\n\n\n\n        layer protocol for which the probe recognizes addresses, and\n        thus the probe will populate both of the nlMatrixTables and\n        both of the alMatrixTables with addresses it discovers for\n        this protocol.\n\n        If the value of this object is notSupported(1), the probe\n        will not track either of the nlMatrixTables or the\n        alMatrixTables for this protocol and shall not allow this\n        object to be changed to any other value.  If the value of this\n        object is supportedOn(3), the probe supports tracking of both\n        of the nlMatrixTables and (if implemented) both of the\n        alMatrixTables for this protocol and is configured to track\n        these tables for this protocol for all control entries and all\n        interfaces.  If the value of this object is supportedOff(2),\n        the probe supports tracking of both of the nlMatrixTables and\n        (if implemented) both of the alMatrixTables for this protocol\n        but is configured to not track these tables for this\n        protocol for any control entries or interfaces.\n        Whenever this value changes from supportedOn(3) to\n        supportedOff(2), the probe shall delete all related entries in\n        the nlMatrixTables and the alMatrixTables.\n\n        Note that since each alMatrixEntry references 2 protocol\n        directory entries, one for the network address and one for the\n        type of the highest protocol recognized, an entry will\n        only be created in that table if this value is supportedOn(3)\n        for both protocols.
%edes        protocolDirOwner        The entity that configured this entry and is\n        therefore using the resources assigned to it.
%edes        protocolDirStatus       The status of this protocol directory entry.\n\n        An entry may not exist in the active state unless all\n        objects in the entry have an appropriate value.\n\n\n\n\n        If this object is not equal to active(1), all associated\n        entries in the nlHostTable, nlMatrixSDTable, nlMatrixDSTable,\n        alHostTable, alMatrixSDTable, and alMatrixDSTable shall be\n        deleted.
%edes        protocolDistControlTable Controls the setup of protocol type distribution statistics\n        tables.\n\n        Implementations are encouraged to add an entry per monitored\n        interface upon initialization so that a default collection\n        of protocol statistics is available.\n\n        Rationale:\n        This table controls collection of very basic statistics\n        for any or all of the protocols detected on a given interface.\n        An NMS can use this table to quickly determine bandwidth\n        allocation utilized by different protocols.\n\n        A media-specific statistics collection could also\n        be configured (e.g., etherStats, trPStats) to easily obtain\n        total frame, octet, and droppedEvents for the same\n        interface.
%edes        protocolDistControlEntry A conceptual row in the protocolDistControlTable.\n\n         An example of the indexing of this entry is\n         protocolDistControlDroppedFrames.7
%edes        protocolDistControlIndex A unique index for this protocolDistControlEntry.
%edes        protocolDistControlDataSource The source of data for the this protocol distribution.\n\n        The statistics in this group reflect all packets\n        on the local network segment attached to the\n        identified interface.\n\n        This object may not be modified if the associated\n        protocolDistControlStatus object is equal to active(1).
%edes        protocolDistControlDroppedFrames The total number of frames that were received by the probe\n        and therefore not accounted for in the *StatsDropEvents, but\n        that the probe chose not to count for this entry for\n        whatever reason.  Most often, this event occurs when the probe\n        is out of some resources and decides to shed load from this\n        collection.\n\n        This count does not include packets that were not counted\n        because they had MAC-layer errors.\n\n\n\n        Note that, unlike the dropEvents counter, this number is the\n        exact number of frames dropped.
%edes        protocolDistControlCreateTime The value of sysUpTime when this control entry was last\n        activated.  This can be used by the management station to\n        ensure that the table has not been deleted and recreated\n        between polls.
%edes        protocolDistControlOwner The entity that configured this entry and is\n        therefore using the resources assigned to it.
%edes        protocolDistControlStatus The status of this row.\n\n        An entry may not exist in the active state unless all\n        objects in the entry have an appropriate value.\n\n        If this object is not equal to active(1), all associated\n        entries in the protocolDistStatsTable shall be deleted.
%edes        protocolDistStatsTable  An entry is made in this table for every protocol in the\n        protocolDirTable that has been seen in at least one packet.\n        Counters are updated in this table for every protocol type\n        that is encountered when parsing a packet, but no counters are\n\n\n\n        updated for packets with MAC-layer errors.\n\n        Note that if a protocolDirEntry is deleted, all associated\n        entries in this table are removed.
%edes        protocolDistStatsEntry  A conceptual row in the protocolDistStatsTable.\n\n        The index is composed of the protocolDistControlIndex of the\n        associated protocolDistControlEntry, followed by the\n        protocolDirLocalIndex of the associated protocol that this\n        entry represents.  In other words, the index identifies the\n        protocol distribution an entry is a part of and the\n        particular protocol that it represents.\n\n        An example of the indexing of this entry is\n        protocolDistStatsPkts.1.18
%edes        protocolDistStatsPkts   The number of packets of this protocol type received\n        without errors.  Note that this is the number of\n        link-layer packets, so if a single network-layer packet\n        is fragmented into several link-layer frames, this counter\n        is incremented several times.
%edes        protocolDistStatsOctets The number of octets in packets of this protocol type\n\n\n\n        received since it was added to the protocolDistStatsTable\n        (excluding framing bits, but including FCS octets), except for\n        those octets in packets that contained errors.\n\n        Note that this doesn't count just those octets in the\n        particular protocol frames but includes the entire packet\n        that contained the protocol.
%edes        addressMapInserts       The number of times an address mapping entry has been\n        inserted into the addressMapTable.  If an entry is inserted,\n        then deleted, and then inserted, this counter will be\n        incremented by 2.\n\n        Note that the table size can be determined by subtracting\n        addressMapDeletes from addressMapInserts.
%edes        addressMapDeletes       The number of times an address mapping entry has been\n        deleted from the addressMapTable (for any reason).  If\n        an entry is deleted, then inserted, and then deleted, this\n        counter will be incremented by 2.\n\n        Note that the table size can be determined by subtracting\n        addressMapDeletes from addressMapInserts.
%edes        addressMapMaxDesiredEntries The maximum number of entries that are desired in the\n        addressMapTable.  The probe will not create more than\n        this number of entries in the table but may choose to create\n        fewer entries in this table for any reason, including the lack\n        of resources.\n\n        If this object is set to a value less than the current number\n        of entries, enough entries are chosen in an\n        implementation-dependent manner and deleted so that the number\n        of entries in the table equals the value of this object.\n\n        If this value is set to -1, the probe may create any number\n        of entries in this table.\n\n        This object may be used to control how resources are allocated\n        on the probe for the various RMON functions.
%edes        addressMapControlTable  A table to control the collection of mappings from network\n         layer address to physical address to interface.\n\n        Note that this is not like the typical RMON\n        controlTable and dataTable in which each entry creates\n        its own data table.  Each entry in this table enables the\n        discovery of addresses on a new interface and the placement\n        of address mappings into the central addressMapTable.\n\n        Implementations are encouraged to add an entry per monitored\n        interface upon initialization so that a default collection\n        of address mappings is available.
%edes        addressMapControlEntry  A conceptual row in the addressMapControlTable.\n\n        An example of the indexing of this entry is\n        addressMapControlDroppedFrames.1
%edes        addressMapControlIndex  A unique index for this entry in the addressMapControlTable.
%edes        addressMapControlDataSource The source of data for this addressMapControlEntry.
%edes        addressMapControlDroppedFrames The total number of frames that were received by the probe\n        and therefore not accounted for in the *StatsDropEvents, but\n        that the probe chose not to count for this entry for\n        whatever reason.  Most often, this event occurs when the probe\n        is out of some resources and decides to shed load from this\n        collection.\n\n        This count does not include packets that were not counted\n        because they had MAC-layer errors.\n\n        Note that, unlike the dropEvents counter, this number is the\n        exact number of frames dropped.
%edes        addressMapControlOwner  The entity that configured this entry and is\n        therefore using the resources assigned to it.
%edes        addressMapControlStatus The status of this addressMap control entry.\n\n        An entry may not exist in the active state unless all\n        objects in the entry have an appropriate value.\n\n        If this object is not equal to active(1), all associated\n        entries in the addressMapTable shall be deleted.
%edes        addressMapTable         A table of mappings from network layer address to physical\n        address to interface.\n\n        The probe will add entries to this table based on the source\n        MAC and network addresses seen in packets without MAC-level\n        errors.  The probe will populate this table for all protocols\n        in the protocol directory table whose value of\n        protocolDirAddressMapConfig is equal to supportedOn(3), and\n        will delete any entries whose protocolDirEntry is deleted or\n        has a protocolDirAddressMapConfig value of supportedOff(2).
%edes        addressMapEntry         A conceptual row in the addressMapTable.\n\n        The protocolDirLocalIndex in the index identifies the network\n        layer protocol of the addressMapNetworkAddress.\n\n\n\n\n        An example of the indexing of this entry is\n        addressMapSource.783495.18.4.128.2.6.6.11.1.3.6.1.2.1.2.2.1.1.1.\n\n        Note that some combinations of index values may result in an\n        index that exceeds 128 sub-identifiers in length, which exceeds\n        the maximum for the SNMP protocol.  Implementations should take\n        care to avoid such combinations.
%edes        addressMapTimeMark      A TimeFilter for this entry.  See the TimeFilter textual\n        convention to see how this works.
%edes        addressMapNetworkAddress The network address for this relation.\n\n        This is represented as an octet string with\n        specific semantics and length as identified\n        by the protocolDirLocalIndex component of the\n        index.\n\n        For example, if the protocolDirLocalIndex indicates an\n        encapsulation of ip, this object is encoded as a length\n        octet of 4, followed by the 4 octets of the IP address,\n        in network byte order.
%edes        addressMapSource        The interface or port on which the associated network\n         address was most recently seen.\n\n        If this address mapping was discovered on an interface, this\n        object shall identify the instance of the ifIndex\n        object, defined in [RFC2863], for the desired interface.\n        For example, if an entry were to receive data from\n        interface #1, this object would be set to ifIndex.1.\n\n        If this address mapping was discovered on a port, this\n        object shall identify the instance of the rptrGroupPortIndex\n        object, defined in [RFC2108], for the desired port.\n        For example, if an entry were to receive data from\n        group #1, port #1, this object would be set to\n        rptrGroupPortIndex.1.1.\n\n        Note that while the dataSource associated with this entry\n        may only point to index objects, this object may at times\n        point to repeater port objects.  This situation occurs when\n        the dataSource points to an interface that is a locally\n        attached repeater and the agent has additional information\n        about the source port of traffic seen on that repeater.
%edes        addressMapPhysicalAddress The last source physical address on which the associated\n        network address was seen.  If the protocol of the associated\n        network address was encapsulated inside of a network-level or\n        higher protocol, this will be the address of the next-lower\n        protocol with the addressRecognitionCapable bit enabled and\n        will be formatted as specified for that protocol.
%edes        addressMapLastChange    The value of sysUpTime at the time this entry was last\n        created or the values of the physical address changed.\n\n\n\n\n        This can be used to help detect duplicate address problems, in\n        which case this object will be updated frequently.
%edes        hlHostControlTable      A list of higher-layer (i.e., non-MAC) host table control\n        entries.\n\n        These entries will enable the collection of the network- and\n        application-level host tables indexed by network addresses.\n        Both the network- and application-level host tables are\n        controlled by this table so that they will both be created\n        and deleted at the same time, further increasing the ease with\n        which they can be implemented as a single datastore.  (Note that\n        if an implementation stores application-layer host records in\n        memory, it can derive network-layer host records from them.)\n\n        Entries in the nlHostTable will be created on behalf of each\n        entry in this table.  Additionally, if this probe implements\n        the alHostTable, entries in the alHostTable will be created on\n        behalf of each entry in this table.\n\n        Implementations are encouraged to add an entry per monitored\n        interface upon initialization so that a default collection\n        of host statistics is available.
%edes        hlHostControlEntry      A conceptual row in the hlHostControlTable.\n\n        An example of the indexing of this entry is\n\n\n\n        hlHostControlNlDroppedFrames.1
%edes        hlHostControlIndex      An index that uniquely identifies an entry in the\n        hlHostControlTable.  Each such entry defines\n        a function that discovers hosts on a particular\n        interface and places statistics about them in the\n        nlHostTable, and optionally in the alHostTable, on\n        behalf of this hlHostControlEntry.
%edes        hlHostControlDataSource The source of data for the associated host tables.\n\n        The statistics in this group reflect all packets\n        on the local network segment attached to the\n        identified interface.\n\n        This object may not be modified if the associated\n        hlHostControlStatus object is equal to active(1).
%edes        hlHostControlNlDroppedFrames The total number of frames that were received by the probe\n        and therefore not accounted for in the *StatsDropEvents, but\n        that the probe chose not to count for the associated\n        nlHost entries for whatever reason.  Most often, this event\n        occurs when the probe is out of some resources and decides to\n        shed load from this collection.\n\n        This count does not include packets that were not counted\n        because they had MAC-layer errors.\n\n        Note that if the nlHostTable is inactive because no protocols\n        are enabled in the protocol directory, this value should be 0.\n\n        Note that, unlike the dropEvents counter, this number is the\n        exact number of frames dropped.
%edes        hlHostControlNlInserts  The number of times an nlHost entry has been\n        inserted into the nlHost table.  If an entry is inserted, then\n        deleted, and then inserted, this counter will be incremented\n        by 2.\n\n        To allow for efficient implementation strategies, agents may\n        delay updating this object for short periods of time.  For\n        example, an implementation strategy may allow internal\n        data structures to differ from those visible via SNMP for\n        short periods of time.  This counter may reflect the internal\n        data structures for those short periods of time.\n\n        Note that the table size can be determined by subtracting\n        hlHostControlNlDeletes from hlHostControlNlInserts.
%edes        hlHostControlNlDeletes  The number of times an nlHost entry has been\n\n\n\n        deleted from the nlHost table (for any reason).  If an entry\n        is deleted, then inserted, and then deleted, this counter will\n        be incremented by 2.\n\n        To allow for efficient implementation strategies, agents may\n        delay updating this object for short periods of time.  For\n        example, an implementation strategy may allow internal\n        data structures to differ from those visible via SNMP for\n        short periods of time.  This counter may reflect the internal\n        data structures for those short periods of time.\n\n        Note that the table size can be determined by subtracting\n        hlHostControlNlDeletes from hlHostControlNlInserts.
%edes        hlHostControlNlMaxDesiredEntries The maximum number of entries that are desired in the\n        nlHostTable on behalf of this control entry.  The probe will\n        not create more than this number of associated entries in the\n        table but may choose to create fewer entries in this table\n        for any reason, including the lack of resources.\n\n        If this object is set to a value less than the current number\n        of entries, enough entries are chosen in an\n        implementation-dependent manner and deleted so that the number\n        of entries in the table equals the value of this object.\n\n        If this value is set to -1, the probe may create any number\n        of entries in this table.  If the associated\n        hlHostControlStatus object is equal to 'active', this\n        object may not be modified.\n\n        This object may be used to control how resources are allocated\n        on the probe for the various RMON functions.
%edes        hlHostControlAlDroppedFrames The total number of frames that were received by the probe\n        and therefore not accounted for in the *StatsDropEvents, but\n        that the probe chose not to count for the associated\n\n\n\n        alHost entries for whatever reason.  Most often, this event\n        occurs when the probe is out of some resources and decides to\n        shed load from this collection.\n\n        This count does not include packets that were not counted\n        because they had MAC-layer errors.\n\n        Note that if the alHostTable is not implemented or is inactive\n        because no protocols are enabled in the protocol directory,\n        this value should be 0.\n\n        Note that, unlike the dropEvents counter, this number is the\n        exact number of frames dropped.
%edes        hlHostControlAlInserts  The number of times an alHost entry has been\n        inserted into the alHost table.  If an entry is inserted, then\n        deleted, and then inserted, this counter will be incremented\n        by 2.\n\n        To allow for efficient implementation strategies, agents may\n        delay updating this object for short periods of time.  For\n        example, an implementation strategy may allow internal\n        data structures to differ from those visible via SNMP for\n        short periods of time.  This counter may reflect the internal\n        data structures for those short periods of time.\n\n        Note that the table size can be determined by subtracting\n        hlHostControlAlDeletes from hlHostControlAlInserts.
%edes        hlHostControlAlDeletes  The number of times an alHost entry has been\n        deleted from the alHost table (for any reason).  If an entry\n        is deleted, then inserted, and then deleted, this counter will\n        be incremented by 2.\n\n        To allow for efficient implementation strategies, agents may\n        delay updating this object for short periods of time.  For\n\n\n\n        example, an implementation strategy may allow internal\n        data structures to differ from those visible via SNMP for\n        short periods of time.  This counter may reflect the internal\n        data structures for those short periods of time.\n\n        Note that the table size can be determined by subtracting\n        hlHostControlAlDeletes from hlHostControlAlInserts.
%edes        hlHostControlAlMaxDesiredEntries The maximum number of entries that are desired in the alHost\n        table on behalf of this control entry.  The probe will not\n        create more than this number of associated entries in the\n        table but may choose to create fewer entries in this table\n        for any reason, including the lack of resources.\n\n        If this object is set to a value less than the current number\n        of entries, enough entries are chosen in an\n        implementation-dependent manner and deleted so that the number\n        of entries in the table equals the value of this object.\n\n        If this value is set to -1, the probe may create any number\n        of entries in this table.  If the associated\n        hlHostControlStatus object is equal to 'active', this\n        object may not be modified.\n\n        This object may be used to control how resources are allocated\n        on the probe for the various RMON functions.
%edes        hlHostControlOwner      The entity that configured this entry and is\n        therefore using the resources assigned to it.
%edes        hlHostControlStatus     The status of this hlHostControlEntry.\n\n        An entry may not exist in the active state unless all\n        objects in the entry have an appropriate value.\n\n        If this object is not equal to active(1), all associated\n        entries in the nlHostTable and alHostTable shall be deleted.
%edes        nlHostTable             A collection of statistics for a particular network layer\n        address that has been discovered on an interface of this\n        device.\n\n        The probe will populate this table for all network layer\n        protocols in the protocol directory table whose value of\n        protocolDirHostConfig is equal to supportedOn(3), and\n        will delete any entries whose protocolDirEntry is deleted or\n        has a protocolDirHostConfig value of supportedOff(2).\n\n        The probe will add to this table all addresses seen\n        as the source or destination address in all packets with no\n        MAC errors, and will increment octet and packet counts in the\n        table for all packets with no MAC errors.
%edes        nlHostEntry             A conceptual row in the nlHostTable.\n\n        The hlHostControlIndex value in the index identifies the\n        hlHostControlEntry on whose behalf this entry was created.\n        The protocolDirLocalIndex value in the index identifies the\n        network layer protocol of the nlHostAddress.\n\n        An example of the indexing of this entry is\n        nlHostOutPkts.1.783495.18.4.128.2.6.6.\n\n        Note that some combinations of index values may result in an\n        index that exceeds 128 sub-identifiers in length, which exceeds\n        the maximum for the SNMP protocol.  Implementations should take\n\n\n\n        care to avoid such combinations.
%edes        nlHostTimeMark          A TimeFilter for this entry.  See the TimeFilter textual\n        convention to see how this works.
%edes        nlHostAddress           The network address for this nlHostEntry.\n\n        This is represented as an octet string with\n        specific semantics and length as identified\n        by the protocolDirLocalIndex component of the index.\n\n        For example, if the protocolDirLocalIndex indicates an\n        encapsulation of IP, this object is encoded as a length\n        octet of 4, followed by the 4 octets of the IP address,\n        in network byte order.
%edes        nlHostInPkts            The number of packets without errors transmitted to\n\n\n\n        this address since it was added to the nlHostTable.  Note that\n        this is the number of link-layer packets, so if a single\n        network-layer packet is fragmented into several link-layer\n        frames, this counter is incremented several times.
%edes        nlHostOutPkts           The number of packets without errors transmitted by\n        this address since it was added to the nlHostTable.  Note that\n        this is the number of link-layer packets, so if a single\n        network-layer packet is fragmented into several link-layer\n        frames, this counter is incremented several times.
%edes        nlHostInOctets          The number of octets transmitted to this address\n        since it was added to the nlHostTable (excluding\n        framing bits, but including FCS octets), excluding\n        octets in packets that contained errors.\n\n        Note that this doesn't count just those octets in the particular\n        protocol frames but includes the entire packet that contained\n        the protocol.
%edes        nlHostOutOctets         The number of octets transmitted by this address\n        since it was added to the nlHostTable (excluding\n        framing bits, but including FCS octets), excluding\n        octets in packets that contained errors.\n\n        Note that this doesn't count just those octets in the particular\n        protocol frames but includes the entire packet that contained\n        the protocol.
%edes        nlHostOutMacNonUnicastPkts The number of packets without errors transmitted by this\n        address that were directed to any MAC broadcast addresses\n        or to any MAC multicast addresses since this host was\n        added to the nlHostTable.  Note that this is the number of\n        link-layer packets, so if a single network-layer packet is\n        fragmented into several link-layer frames, this counter is\n        incremented several times.
%edes        nlHostCreateTime        The value of sysUpTime when this entry was last activated.\n        This can be used by the management station to ensure that the\n        entry has not been deleted and recreated between polls.
%edes        hlMatrixControlTable    A list of higher-layer (i.e., non-MAC) matrix control entries.\n\n        These entries will enable the collection of the network- and\n        application-level matrix tables containing conversation\n        statistics indexed by pairs of network addresses.\n        Both the network- and application-level matrix tables are\n        controlled by this table so that they will both be created\n        and deleted at the same time, further increasing the ease with\n        which they can be implemented as a single datastore.  (Note that\n        if an implementation stores application-layer matrix records\n\n\n\n        in memory, it can derive network-layer matrix records from\n        them.)\n\n        Entries in the nlMatrixSDTable and nlMatrixDSTable will be\n        created on behalf of each entry in this table.  Additionally,\n        if this probe implements the alMatrix tables, entries in the\n        alMatrix tables will be created on behalf of each entry in\n        this table.
%edes        hlMatrixControlEntry    A conceptual row in the hlMatrixControlTable.\n\n        An example of indexing of this entry is\n        hlMatrixControlNlDroppedFrames.1
%edes        hlMatrixControlIndex    An index that uniquely identifies an entry in the\n        hlMatrixControlTable.  Each such entry defines\n        a function that discovers conversations on a particular\n        interface and places statistics about them in the\n        nlMatrixSDTable and the nlMatrixDSTable, and optionally the\n        alMatrixSDTable and alMatrixDSTable, on behalf of this\n\n\n\n        hlMatrixControlEntry.
%edes        hlMatrixControlDataSource The source of the data for the associated matrix tables.\n\n        The statistics in this group reflect all packets\n        on the local network segment attached to the\n        identified interface.\n\n        This object may not be modified if the associated\n        hlMatrixControlStatus object is equal to active(1).
%edes        hlMatrixControlNlDroppedFrames The total number of frames that were received by the probe\n        and therefore not accounted for in the *StatsDropEvents, but\n        that the probe chose not to count for this entry for\n        whatever reason.  Most often, this event occurs when the probe\n        is out of some resources and decides to shed load from this\n        collection.\n\n        This count does not include packets that were not counted\n        because they had MAC-layer errors.\n\n        Note that if the nlMatrixTables are inactive because no\n        protocols are enabled in the protocol directory, this value\n        should be 0.\n\n        Note that, unlike the dropEvents counter, this number is the\n        exact number of frames dropped.
%edes        hlMatrixControlNlInserts The number of times an nlMatrix entry has been\n        inserted into the nlMatrix tables.  If an entry is inserted,\n\n\n\n        then deleted, and then inserted, this counter will be\n        incremented by 2.  The addition of a conversation into both\n        the nlMatrixSDTable and nlMatrixDSTable shall be counted as\n        two insertions (even though every addition into one table must\n        be accompanied by an insertion into the other).\n\n        To allow for efficient implementation strategies, agents may\n        delay updating this object for short periods of time.  For\n        example, an implementation strategy may allow internal\n        data structures to differ from those visible via SNMP for\n        short periods of time.  This counter may reflect the internal\n        data structures for those short periods of time.\n\n        Note that the sum of then nlMatrixSDTable and nlMatrixDSTable\n        sizes can be determined by subtracting\n        hlMatrixControlNlDeletes from hlMatrixControlNlInserts.
%edes        hlMatrixControlNlDeletes The number of times an nlMatrix entry has been\n        deleted from the nlMatrix tables (for any reason).  If an\n        entry is deleted, then inserted, and then deleted, this\n        counter will be incremented by 2.  The deletion of a\n        conversation from both the nlMatrixSDTable and nlMatrixDSTable\n        shall be counted as two deletions (even though every deletion\n        from one table must be accompanied by a deletion from the\n        other).\n\n        To allow for efficient implementation strategies, agents may\n        delay updating this object for short periods of time.  For\n        example, an implementation strategy may allow internal\n        data structures to differ from those visible via SNMP for\n        short periods of time.  This counter may reflect the internal\n        data structures for those short periods of time.\n\n        Note that the table size can be determined by subtracting\n        hlMatrixControlNlDeletes from hlMatrixControlNlInserts.
%edes        hlMatrixControlNlMaxDesiredEntries The maximum number of entries that are desired in the\n        nlMatrix tables on behalf of this control entry.  The probe\n        will not create more than this number of associated entries in\n        the table but may choose to create fewer entries in this\n        table for any reason, including the lack of resources.\n\n        If this object is set to a value less than the current number\n        of entries, enough entries are chosen in an\n        implementation-dependent manner and deleted so that the number\n        of entries in the table equals the value of this object.\n\n        If this value is set to -1, the probe may create any number\n        of entries in this table.  If the associated\n        hlMatrixControlStatus object is equal to 'active', this\n        object may not be modified.\n\n        This object may be used to control how resources are allocated\n        on the probe for the various RMON functions.
%edes        hlMatrixControlAlDroppedFrames The total number of frames that were received by the probe\n        and therefore not accounted for in the *StatsDropEvents, but\n        that the probe chose not to count for this entry for\n        whatever reason.  Most often, this event occurs when the probe\n        is out of some resources and decides to shed load from this\n        collection.\n\n        This count does not include packets that were not counted\n        because they had MAC-layer errors.\n\n        Note that if the alMatrixTables are not implemented or are\n        inactive because no protocols are enabled in the protocol\n        directory, this value should be 0.\n\n        Note that, unlike the dropEvents counter, this number is the\n        exact number of frames dropped.
%edes        hlMatrixControlAlInserts The number of times an alMatrix entry has been\n        inserted into the alMatrix tables.  If an entry is inserted,\n        then deleted, and then inserted, this counter will be\n        incremented by 2.  The addition of a conversation into both\n        the alMatrixSDTable and alMatrixDSTable shall be counted as\n        two insertions (even though every addition into one table must\n        be accompanied by an insertion into the other).\n\n        To allow for efficient implementation strategies, agents may\n        delay updating this object for short periods of time.  For\n        example, an implementation strategy may allow internal\n        data structures to differ from those visible via SNMP for\n        short periods of time.  This counter may reflect the internal\n        data structures for those short periods of time.\n\n        Note that the table size can be determined by subtracting\n        hlMatrixControlAlDeletes from hlMatrixControlAlInserts.
%edes        hlMatrixControlAlDeletes The number of times an alMatrix entry has been\n        deleted from the alMatrix tables.  If an entry is deleted,\n        then inserted, and then deleted, this counter will be\n        incremented by 2.  The deletion of a conversation from both\n        the alMatrixSDTable and alMatrixDSTable shall be counted as\n        two deletions (even though every deletion from one table must\n        be accompanied by a deletion from the other).\n\n        To allow for efficient implementation strategies, agents may\n        delay updating this object for short periods of time.  For\n        example, an implementation strategy may allow internal\n        data structures to differ from those visible via SNMP for\n        short periods of time.  This counter may reflect the internal\n        data structures for those short periods of time.\n\n        Note that the table size can be determined by subtracting\n        hlMatrixControlAlDeletes from hlMatrixControlAlInserts.
%edes        hlMatrixControlAlMaxDesiredEntries The maximum number of entries that are desired in the\n        alMatrix tables on behalf of this control entry.  The probe\n        will not create more than this number of associated entries in\n        the table but may choose to create fewer entries in this\n        table for any reason, including the lack of resources.\n\n        If this object is set to a value less than the current number\n        of entries, enough entries are chosen in an\n        implementation-dependent manner and deleted so that the number\n        of entries in the table equals the value of this object.\n\n        If this value is set to -1, the probe may create any number\n        of entries in this table.  If the associated\n        hlMatrixControlStatus object is equal to 'active', this\n        object may not be modified.\n\n        This object may be used to control how resources are allocated\n        on the probe for the various RMON functions.
%edes        hlMatrixControlOwner    The entity that configured this entry and is\n        therefore using the resources assigned to it.
%edes        hlMatrixControlStatus   The status of this hlMatrixControlEntry.\n\n        An entry may not exist in the active state unless all\n        objects in the entry have an appropriate value.\n\n        If this object is not equal to active(1), all\n        associated entries in the nlMatrixSDTable,\n        nlMatrixDSTable, alMatrixSDTable, and alMatrixDSTable\n        shall be deleted by the agent.
%edes        nlMatrixSDTable         A list of traffic matrix entries that collect statistics for\n        conversations between two network-level addresses.  This table\n        is indexed first by the source address and then by the\n        destination address to make it convenient to collect all\n        conversations from a particular address.\n\n        The probe will populate this table for all network layer\n        protocols in the protocol directory table whose value of\n        protocolDirMatrixConfig is equal to supportedOn(3), and\n        will delete any entries whose protocolDirEntry is deleted or\n        has a protocolDirMatrixConfig value of supportedOff(2).\n\n        The probe will add to this table all pairs of addresses\n        seen in all packets with no MAC errors and will increment\n        octet and packet counts in the table for all packets with no\n        MAC errors.\n\n        Further, this table will only contain entries that have a\n        corresponding entry in the nlMatrixDSTable with the same\n        source address and destination address.
%edes        nlMatrixSDEntry         A conceptual row in the nlMatrixSDTable.\n\n        The hlMatrixControlIndex value in the index identifies the\n        hlMatrixControlEntry on whose behalf this entry was created.\n        The protocolDirLocalIndex value in the index identifies the\n        network-layer protocol of the nlMatrixSDSourceAddress and\n        nlMatrixSDDestAddress.\n\n        An example of the indexing of this table is\n        nlMatrixSDPkts.1.783495.18.4.128.2.6.6.4.128.2.6.7.\n\n        Note that some combinations of index values may result in an\n        index that exceeds 128 sub-identifiers in length, which exceeds\n        the maximum for the SNMP protocol.  Implementations should take\n        care to avoid such combinations.
%edes        nlMatrixSDTimeMark      A TimeFilter for this entry.  See the TimeFilter textual\n        convention to see how this works.
%edes        nlMatrixSDSourceAddress The network source address for this nlMatrixSDEntry.\n\n        This is represented as an octet string with\n        specific semantics and length as identified\n        by the protocolDirLocalIndex component of the index.\n\n        For example, if the protocolDirLocalIndex indicates an\n        encapsulation of IP, this object is encoded as a length\n        octet of 4, followed by the 4 octets of the IP address,\n        in network byte order.
%edes        nlMatrixSDDestAddress   The network destination address for this\n        nlMatrixSDEntry.\n\n        This is represented as an octet string with\n        specific semantics and length as identified\n        by the protocolDirLocalIndex component of the index.\n\n        For example, if the protocolDirLocalIndex indicates an\n\n\n\n        encapsulation of IP, this object is encoded as a length\n        octet of 4, followed by the 4 octets of the IP address,\n        in network byte order.
%edes        nlMatrixSDPkts          The number of packets without errors transmitted from the\n        source address to the destination address since this entry was\n        added to the nlMatrixSDTable.  Note that this is the number of\n        link-layer packets, so if a single network-layer packet is\n        fragmented into several link-layer frames, this counter is\n        incremented several times.
%edes        nlMatrixSDOctets        The number of octets transmitted from the source address to\n        the destination address since this entry was added to the\n        nlMatrixSDTable (excluding framing bits, but\n        including FCS octets), excluding octets in packets that\n        contained errors.\n\n        Note that this doesn't count just those octets in the particular\n        protocol frames but includes the entire packet that contained\n        the protocol.
%edes        nlMatrixSDCreateTime    The value of sysUpTime when this entry was last activated.\n        This can be used by the management station to ensure that the\n        entry has not been deleted and recreated between polls.
%edes        nlMatrixDSTable         A list of traffic matrix entries that collect statistics for\n        conversations between two network-level addresses.  This table\n        is indexed first by the destination address and then by the\n        source address to make it convenient to collect all\n        conversations to a particular address.\n\n        The probe will populate this table for all network layer\n        protocols in the protocol directory table whose value of\n        protocolDirMatrixConfig is equal to supportedOn(3), and\n        will delete any entries whose protocolDirEntry is deleted or\n        has a protocolDirMatrixConfig value of supportedOff(2).\n\n        The probe will add to this table all pairs of addresses\n        seen in all packets with no MAC errors and will increment\n        octet and packet counts in the table for all packets with no\n        MAC errors.\n\n        Further, this table will only contain entries that have a\n        corresponding entry in the nlMatrixSDTable with the same\n        source address and destination address.
%edes        nlMatrixDSEntry         A conceptual row in the nlMatrixDSTable.\n\n        The hlMatrixControlIndex value in the index identifies the\n        hlMatrixControlEntry on whose behalf this entry was created.\n        The protocolDirLocalIndex value in the index identifies the\n        network-layer protocol of the nlMatrixDSSourceAddress and\n        nlMatrixDSDestAddress.\n\n        An example of the indexing of this table is\n        nlMatrixDSPkts.1.783495.18.4.128.2.6.7.4.128.2.6.6.\n\n        Note that some combinations of index values may result in an\n        index that exceeds 128 sub-identifiers in length, which exceeds\n        the maximum for the SNMP protocol.  Implementations should take\n        care to avoid such combinations.
%edes        nlMatrixDSTimeMark      A TimeFilter for this entry.  See the TimeFilter textual\n        convention to see how this works.
%edes        nlMatrixDSSourceAddress The network source address for this nlMatrixDSEntry.\n\n        This is represented as an octet string with\n        specific semantics and length as identified\n        by the protocolDirLocalIndex component of the index.\n\n        For example, if the protocolDirLocalIndex indicates an\n        encapsulation of IP, this object is encoded as a length\n        octet of 4, followed by the 4 octets of the IP address,\n        in network byte order.
%edes        nlMatrixDSDestAddress   The network destination address for this\n        nlMatrixDSEntry.\n\n        This is represented as an octet string with\n        specific semantics and length as identified\n\n\n\n        by the protocolDirLocalIndex component of the index.\n\n        For example, if the protocolDirLocalIndex indicates an\n        encapsulation of IP, this object is encoded as a length\n        octet of 4, followed by the 4 octets of the IP address,\n        in network byte order.
%edes        nlMatrixDSPkts          The number of packets without errors transmitted from the\n        source address to the destination address since this entry was\n        added to the nlMatrixDSTable.  Note that this is the number of\n        link-layer packets, so if a single network-layer packet is\n        fragmented into several link-layer frames, this counter is\n        incremented several times.
%edes        nlMatrixDSOctets        The number of octets transmitted from the source address\n        to the destination address since this entry was added to the\n        nlMatrixDSTable (excluding framing bits, but\n        including FCS octets), excluding octets in packets that\n        contained errors.\n\n        Note that this doesn't count just those octets in the particular\n        protocol frames but includes the entire packet that contained\n        the protocol.
%edes        nlMatrixDSCreateTime    The value of sysUpTime when this entry was last activated.\n        This can be used by the management station to ensure that the\n        entry has not been deleted and recreated between polls.
%edes        nlMatrixTopNControlTable A set of parameters that control the creation of a\n        report of the top N matrix entries according to\n        a selected metric.
%edes        nlMatrixTopNControlEntry A conceptual row in the nlMatrixTopNControlTable.\n\n        An example of the indexing of this table is\n        nlMatrixTopNControlDuration.3
%edes        nlMatrixTopNControlIndex An index that uniquely identifies an entry\n        in the nlMatrixTopNControlTable.  Each such\n        entry defines one topN report prepared for\n        one interface.
%edes        nlMatrixTopNControlMatrixIndex The nlMatrix[SD/DS] table for which a topN report will be\n        prepared on behalf of this entry.  The nlMatrix[SD/DS] table\n        is identified by the value of the hlMatrixControlIndex\n        for that table - that value is used here to identify the\n        particular table.\n\n        This object may not be modified if the associated\n        nlMatrixTopNControlStatus object is equal to active(1).
%edes        nlMatrixTopNControlRateBase The variable for each nlMatrix[SD/DS] entry that the\n        nlMatrixTopNEntries are sorted by, as well as a control\n        for the table that the results will be reported in.\n\n        This object may not be modified if the associated\n        nlMatrixTopNControlStatus object is equal to active(1).\n\n        If this value is less than or equal to 2, when the report\n        is prepared, entries are created in the nlMatrixTopNTable\n        associated with this object.\n        If this value is greater than or equal to 3, when the report\n        is prepared, entries are created in the\n        nlMatrixTopNHighCapacityTable associated with this object.
%edes        nlMatrixTopNControlTimeRemaining The number of seconds left in the report currently\n        being collected.  When this object is modified by\n        the management station, a new collection is started,\n        possibly aborting a currently running report.  The\n        new value is used as the requested duration of this\n\n\n\n        report and is immediately loaded into the associated\n        nlMatrixTopNControlDuration object.\n\n        When the report finishes, the probe will automatically\n        start another collection with the same initial value\n        of nlMatrixTopNControlTimeRemaining.  Thus, the management\n        station may simply read the resulting reports repeatedly,\n        checking the startTime and duration each time to ensure that a\n        report was not missed or that the report parameters were not\n        changed.\n\n        While the value of this object is non-zero, it decrements\n        by one per second until it reaches zero.  At the time\n        that this object decrements to zero, the report is made\n        accessible in the nlMatrixTopNTable, overwriting any report\n        that may be there.\n\n        When this object is modified by the management station, any\n        associated entries in the nlMatrixTopNTable shall be deleted.\n\n        (Note that this is a different algorithm than the one used\n        in the hostTopNTable).
%edes        nlMatrixTopNControlGeneratedReports The number of reports that have been generated by this entry.
%edes        nlMatrixTopNControlDuration The number of seconds that this report has collected\n        during the last sampling interval.\n\n        When the associated nlMatrixTopNControlTimeRemaining object is\n        set, this object shall be set by the probe to the\n        same value and shall not be modified until the next\n        time the nlMatrixTopNControlTimeRemaining is set.\n\n        This value shall be zero if no reports have been\n        requested for this nlMatrixTopNControlEntry.
%edes        nlMatrixTopNControlRequestedSize The maximum number of matrix entries requested for this report.\n\n        When this object is created or modified, the probe\n        should set nlMatrixTopNControlGrantedSize as closely to this\n        object as possible for the particular probe\n        implementation and available resources.
%edes        nlMatrixTopNControlGrantedSize The maximum number of matrix entries in this report.\n\n        When the associated nlMatrixTopNControlRequestedSize object is\n        created or modified, the probe should set this\n        object as closely to the requested value as\n        possible for the particular implementation and\n        available resources.  The probe must not lower this\n        value except as a side-effect of a set to the associated\n        nlMatrixTopNControlRequestedSize object.\n\n        If the value of nlMatrixTopNControlRateBase is equal to\n        nlMatrixTopNPkts, when the next topN report is generated,\n        matrix entries with the highest value of nlMatrixTopNPktRate\n        shall be placed in this table in decreasing order of this rate\n        until there is no more room or until there are no more\n        matrix entries.\n\n        If the value of nlMatrixTopNControlRateBase is equal to\n        nlMatrixTopNOctets, when the next topN report is generated,\n        matrix entries with the highest value of nlMatrixTopNOctetRate\n        shall be placed in this table in decreasing order of this rate\n        until there is no more room or until there are no more\n        matrix entries.\n\n        It is an implementation-specific matter how entries with the\n        same value of nlMatrixTopNPktRate or nlMatrixTopNOctetRate are\n        sorted.  It is also an implementation-specific matter as to\n\n\n\n        whether zero-valued entries are available.
%edes        nlMatrixTopNControlStartTime The value of sysUpTime when this topN report was\n        last started.  In other words, this is the time that\n        the associated nlMatrixTopNControlTimeRemaining object was\n        modified to start the requested report or the time\n        the report was last automatically (re)started.\n\n        This object may be used by the management station to\n        determine whether a report was missed.
%edes        nlMatrixTopNControlOwner The entity that configured this entry and is\n        therefore using the resources assigned to it.
%edes        nlMatrixTopNControlStatus The status of this nlMatrixTopNControlEntry.\n\n        An entry may not exist in the active state unless all\n        objects in the entry have an appropriate value.\n\n        If this object is not equal to active(1), all\n        associated entries in the nlMatrixTopNTable shall be deleted\n        by the agent.
%edes        nlMatrixTopNTable       A set of statistics for those network-layer matrix entries\n\n\n\n        that have counted the highest number of octets or packets.
%edes        nlMatrixTopNEntry       A conceptual row in the nlMatrixTopNTable.\n\n        The nlMatrixTopNControlIndex value in the index identifies the\n        nlMatrixTopNControlEntry on whose behalf this entry was\n        created.\n\n        An example of the indexing of this table is\n        nlMatrixTopNPktRate.3.10
%edes        nlMatrixTopNIndex       An index that uniquely identifies an entry in\n        the nlMatrixTopNTable among those in the same report.\n        This index is between 1 and N, where N is the\n        number of entries in this report.\n\n        If the value of nlMatrixTopNControlRateBase is equal to\n        nlMatrixTopNPkts, increasing values of nlMatrixTopNIndex shall\n        be assigned to entries with decreasing values of\n        nlMatrixTopNPktRate until index N is assigned or there are no\n        more nlMatrixTopNEntries.\n\n        If the value of nlMatrixTopNControlRateBase is equal to\n        nlMatrixTopNOctets, increasing values of nlMatrixTopNIndex\n\n\n\n        shall be assigned to entries with decreasing values of\n        nlMatrixTopNOctetRate until index N is assigned or there are\n        no more nlMatrixTopNEntries.
%edes        nlMatrixTopNProtocolDirLocalIndex The protocolDirLocalIndex of the network-layer protocol of\n        this entry's network address.
%edes        nlMatrixTopNSourceAddress The network-layer address of the source host in this\n        conversation.\n\n        This is represented as an octet string with\n        specific semantics and length as identified\n        by the associated nlMatrixTopNProtocolDirLocalIndex.\n\n        For example, if the protocolDirLocalIndex indicates an\n        encapsulation of IP, this object is encoded as a length\n        octet of 4, followed by the 4 octets of the IP address,\n        in network byte order.
%edes        nlMatrixTopNDestAddress The network-layer address of the destination host in this\n        conversation.\n\n        This is represented as an octet string with\n        specific semantics and length as identified\n        by the associated nlMatrixTopNProtocolDirLocalIndex.\n\n        For example, if the nlMatrixTopNProtocolDirLocalIndex\n        indicates an encapsulation of IP, this object is encoded as a\n        length octet of 4, followed by the 4 octets of the IP address,\n        in network byte order.
%edes        nlMatrixTopNPktRate     The number of packets seen from the source host\n        to the destination host during this sampling interval, counted\n        using the rules for counting the nlMatrixSDPkts object.\n        If the value of nlMatrixTopNControlRateBase is\n        nlMatrixTopNPkts, this variable will be used to sort this\n        report.
%edes        nlMatrixTopNReversePktRate The number of packets seen from the destination host to the\n        source host during this sampling interval, counted\n        using the rules for counting the nlMatrixSDPkts object.  (Note\n        that the corresponding nlMatrixSDPkts object selected is the\n        one whose source address is equal to nlMatrixTopNDestAddress\n        and whose destination address is equal to\n        nlMatrixTopNSourceAddress.)\n\n        Note that if the value of nlMatrixTopNControlRateBase is equal\n        to nlMatrixTopNPkts, the sort of topN entries is based\n        entirely on nlMatrixTopNPktRate, and not on the value of this\n        object.
%edes        nlMatrixTopNOctetRate   The number of octets seen from the source host\n        to the destination host during this sampling interval, counted\n        using the rules for counting the nlMatrixSDOctets object.  If\n        the value of nlMatrixTopNControlRateBase is\n        nlMatrixTopNOctets, this variable will be used to sort this\n        report.
%edes        nlMatrixTopNReverseOctetRate The number of octets seen from the destination host to the\n        source host during this sampling interval, counted\n        using the rules for counting the nlMatrixDSOctets object.  (Note\n        that the corresponding nlMatrixSDOctets object selected is the\n        one whose source address is equal to nlMatrixTopNDestAddress\n        and whose destination address is equal to\n        nlMatrixTopNSourceAddress.)\n\n        Note that if the value of nlMatrixTopNControlRateBase is equal\n        to nlMatrixTopNOctets, the sort of topN entries is based\n        entirely on nlMatrixTopNOctetRate, and not on the value of\n        this object.
%edes        alHostTable             A collection of statistics for a particular protocol from a\n        particular network address that has been discovered on an\n        interface of this device.\n\n        The probe will populate this table for all protocols in the\n        protocol directory table whose value of\n        protocolDirHostConfig is equal to supportedOn(3), and\n        will delete any entries whose protocolDirEntry is deleted or\n        has a protocolDirHostConfig value of supportedOff(2).\n\n\n\n        The probe will add to this table all addresses\n        seen as the source or destination address in all packets with\n        no MAC errors and will increment octet and packet counts in\n        the table for all packets with no MAC errors.  Further,\n        entries will only be added to this table if their address\n        exists in the nlHostTable and will be deleted from this table\n        if their address is deleted from the nlHostTable.
%edes        alHostEntry             A conceptual row in the alHostTable.\n\n        The hlHostControlIndex value in the index identifies the\n        hlHostControlEntry on whose behalf this entry was created.\n        The first protocolDirLocalIndex value in the index identifies\n        the network-layer protocol of the address.\n        The nlHostAddress value in the index identifies the network-\n        layer address of this entry.\n        The second protocolDirLocalIndex value in the index identifies\n        the protocol that is counted by this entry.\n\n        An example of the indexing in this entry is\n        alHostOutPkts.1.783495.18.4.128.2.6.6.34.\n\n        Note that some combinations of index values may result in an\n        index that exceeds 128 sub-identifiers in length, which exceeds\n        the maximum for the SNMP protocol.  Implementations should take\n        care to avoid such combinations.
%edes        alHostTimeMark          A TimeFilter for this entry.  See the TimeFilter textual\n        convention to see how this works.
%edes        alHostInPkts            The number of packets of this protocol type without errors\n        transmitted to this address since it was added to the\n        alHostTable.  Note that this is the number of link-layer\n        packets, so if a single network-layer packet is fragmented\n        into several link-layer frames, this counter is incremented\n        several times.
%edes        alHostOutPkts           The number of packets of this protocol type without errors\n        transmitted by this address since it was added to the\n        alHostTable.  Note that this is the number of link-layer\n        packets, so if a single network-layer packet is fragmented\n        into several link-layer frames, this counter is incremented\n        several times.
%edes        alHostInOctets          The number of octets transmitted to this address\n        of this protocol type since it was added to the\n        alHostTable (excluding framing bits, but including\n        FCS octets), excluding octets in packets that\n        contained errors.\n\n        Note that this doesn't count just those octets in the particular\n        protocol frames but includes the entire packet that contained\n        the protocol.
%edes        alHostOutOctets         The number of octets transmitted by this address\n        of this protocol type since it was added to the\n        alHostTable (excluding framing bits, but including\n        FCS octets), excluding octets in packets that\n        contained errors.\n\n        Note that this doesn't count just those octets in the particular\n        protocol frames but includes the entire packet that contained\n        the protocol.
%edes        alHostCreateTime        The value of sysUpTime when this entry was last activated.\n        This can be used by the management station to ensure that the\n        entry has not been deleted and recreated between polls.
%edes        alMatrixSDTable         A list of application traffic matrix entries that collect\n        statistics for conversations of a particular protocol between\n        two network-level addresses.  This table is indexed first by\n        the source address and then by the destination address to make\n        it convenient to collect all statistics from a particular\n        address.\n\n        The probe will populate this table for all protocols in the\n        protocol directory table whose value of\n\n\n\n        protocolDirMatrixConfig is equal to supportedOn(3), and\n        will delete any entries whose protocolDirEntry is deleted or\n        has a protocolDirMatrixConfig value of supportedOff(2).\n\n        The probe will add to this table all pairs of addresses for\n        all protocols seen in all packets with no MAC errors and will\n        increment octet and packet counts in the table for all packets\n        with no MAC errors.  Further, entries will only be added to\n        this table if their address pair exists in the nlMatrixSDTable\n        and will be deleted from this table if the address pair is\n        deleted from the nlMatrixSDTable.
%edes        alMatrixSDEntry         A conceptual row in the alMatrixSDTable.\n\n        The hlMatrixControlIndex value in the index identifies the\n        hlMatrixControlEntry on whose behalf this entry was created.\n        The first protocolDirLocalIndex value in the index identifies\n        the network-layer protocol of the nlMatrixSDSourceAddress and\n        nlMatrixSDDestAddress.\n        The nlMatrixSDSourceAddress value in the index identifies the\n        network-layer address of the source host in this conversation.\n        The nlMatrixSDDestAddress value in the index identifies the\n        network-layer address of the destination host in this\n        conversation.\n        The second protocolDirLocalIndex value in the index identifies\n        the protocol that is counted by this entry.\n\n        An example of the indexing of this entry is\n        alMatrixSDPkts.1.783495.18.4.128.2.6.6.4.128.2.6.7.34.\n\n        Note that some combinations of index values may result in an\n        index that exceeds 128 sub-identifiers in length, which exceeds\n        the maximum for the SNMP protocol.  Implementations should take\n        care to avoid such combinations.
%edes        alMatrixSDTimeMark      A TimeFilter for this entry.  See the TimeFilter textual\n        convention to see how this works.
%edes        alMatrixSDPkts          The number of packets of this protocol type without errors\n        transmitted from the source address to the destination address\n        since this entry was added to the alMatrixSDTable.  Note that\n        this is the number of link-layer packets, so if a single\n        network-layer packet is fragmented into several link-layer\n        frames, this counter is incremented several times.
%edes        alMatrixSDOctets        The number of octets in packets of this protocol type\n        transmitted from the source address to the destination address\n        since this entry was added to the alMatrixSDTable (excluding\n        framing bits, but including FCS octets), excluding octets\n        in packets that contained errors.\n\n        Note that this doesn't count just those octets in the particular\n        protocol frames but includes the entire packet that contained\n        the protocol.
%edes        alMatrixSDCreateTime    The value of sysUpTime when this entry was last activated.\n        This can be used by the management station to ensure that the\n        entry has not been deleted and recreated between polls.
%edes        alMatrixDSTable         A list of application traffic matrix entries that collect\n        statistics for conversations of a particular protocol between\n        two network-level addresses.  This table is indexed first by\n        the destination address and then by the source address to make\n        it convenient to collect all statistics to a particular\n        address.\n\n        The probe will populate this table for all protocols in the\n        protocol directory table whose value of\n        protocolDirMatrixConfig is equal to supportedOn(3), and\n        will delete any entries whose protocolDirEntry is deleted or\n        has a protocolDirMatrixConfig value of supportedOff(2).\n\n        The probe will add to this table all pairs of addresses for\n        all protocols seen in all packets with no MAC errors and will\n        increment octet and packet counts in the table for all packets\n        with no MAC errors.  Further, entries will only be added to\n        this table if their address pair exists in the nlMatrixDSTable\n        and will be deleted from this table if the address pair is\n        deleted from the nlMatrixDSTable.
%edes        alMatrixDSEntry         A conceptual row in the alMatrixDSTable.\n\n        The hlMatrixControlIndex value in the index identifies the\n        hlMatrixControlEntry on whose behalf this entry was created.\n        The first protocolDirLocalIndex value in the index identifies\n        the network-layer protocol of the alMatrixDSSourceAddress and\n        alMatrixDSDestAddress.\n        The nlMatrixDSDestAddress value in the index identifies the\n        network-layer address of the destination host in this\n\n\n\n        conversation.\n        The nlMatrixDSSourceAddress value in the index identifies the\n        network-layer address of the source host in this conversation.\n        The second protocolDirLocalIndex value in the index identifies\n        the protocol that is counted by this entry.\n\n        An example of the indexing of this entry is\n        alMatrixDSPkts.1.783495.18.4.128.2.6.7.4.128.2.6.6.34.\n\n        Note that some combinations of index values may result in an\n        index that exceeds 128 sub-identifiers in length, which exceeds\n        the maximum for the SNMP protocol.  Implementations should take\n        care to avoid such combinations.
%edes        alMatrixDSTimeMark      A TimeFilter for this entry.  See the TimeFilter textual\n        convention to see how this works.
%edes        alMatrixDSPkts          The number of packets of this protocol type without errors\n        transmitted from the source address to the destination address\n        since this entry was added to the alMatrixDSTable.  Note that\n        this is the number of link-layer packets, so if a single\n        network-layer packet is fragmented into several link-layer\n        frames, this counter is incremented several times.
%edes        alMatrixDSOctets        The number of octets in packets of this protocol type\n        transmitted from the source address to the destination address\n        since this entry was added to the alMatrixDSTable (excluding\n        framing bits, but including FCS octets), excluding octets\n        in packets that contained errors.\n\n        Note that this doesn't count just those octets in the particular\n        protocol frames but includes the entire packet that contained\n        the protocol.
%edes        alMatrixDSCreateTime    The value of sysUpTime when this entry was last activated.\n        This can be used by the management station to ensure that the\n        entry has not been deleted and recreated between polls.
%edes        alMatrixTopNControlTable A set of parameters that control the creation of a\n        report of the top N matrix entries according to\n        a selected metric.
%edes        alMatrixTopNControlEntry A conceptual row in the alMatrixTopNControlTable.\n\n        An example of the indexing of this table is\n        alMatrixTopNControlDuration.3
%edes        alMatrixTopNControlIndex An index that uniquely identifies an entry\n        in the alMatrixTopNControlTable.  Each such\n        entry defines one topN report prepared for\n        one interface.
%edes        alMatrixTopNControlMatrixIndex The alMatrix[SD/DS] table for which a topN report will be\n        prepared on behalf of this entry.  The alMatrix[SD/DS] table\n        is identified by the value of the hlMatrixControlIndex\n        for that table - that value is used here to identify the\n        particular table.\n\n        This object may not be modified if the associated\n        alMatrixTopNControlStatus object is equal to active(1).
%edes        alMatrixTopNControlRateBase This object controls which alMatrix[SD/DS] entry that the\n        alMatrixTopNEntries are sorted by, which view of the matrix\n        table that will be used, as well as which table the results\n        will be reported in.\n\n        The values alMatrixTopNTerminalsPkts,\n        alMatrixTopNTerminalsOctets,\n        alMatrixTopNTerminalsHighCapacityPkts, and\n        alMatrixTopNTerminalsHighCapacityOctets cause collection\n        only from protocols that have no child protocols that are\n        counted.  The values alMatrixTopNAllPkts,\n        alMatrixTopNAllOctets, alMatrixTopNAllHighCapacityPkts, and\n        alMatrixTopNAllHighCapacityOctets cause collection from all\n        alMatrix entries.\n\n        This object may not be modified if the associated\n        alMatrixTopNControlStatus object is equal to active(1).
%edes        alMatrixTopNControlTimeRemaining The number of seconds left in the report currently\n        being collected.  When this object is modified by\n        the management station, a new collection is started,\n        possibly aborting a currently running report.  The\n        new value is used as the requested duration of this\n        report and is immediately loaded into the associated\n        alMatrixTopNControlDuration object.\n\n        When the report finishes, the probe will automatically\n        start another collection with the same initial value\n        of alMatrixTopNControlTimeRemaining.  Thus, the management\n        station may simply read the resulting reports repeatedly,\n        checking the startTime and duration each time to ensure that a\n        report was not missed or that the report parameters were not\n        changed.\n\n        While the value of this object is non-zero, it decrements\n        by one per second until it reaches zero.  At the time\n\n\n\n        that this object decrements to zero, the report is made\n        accessible in the alMatrixTopNTable, overwriting any report\n        that may be there.\n\n        When this object is modified by the management station, any\n        associated entries in the alMatrixTopNTable shall be deleted.\n\n        (Note that this is a different algorithm than the one used\n        in the hostTopNTable).
%edes        alMatrixTopNControlGeneratedReports The number of reports that have been generated by this entry.
%edes        alMatrixTopNControlDuration The number of seconds that this report has collected\n        during the last sampling interval.\n\n        When the associated alMatrixTopNControlTimeRemaining object\n        is set, this object shall be set by the probe to the\n        same value and shall not be modified until the next\n        time the alMatrixTopNControlTimeRemaining is set.\n\n        This value shall be zero if no reports have been\n        requested for this alMatrixTopNControlEntry.
%edes        alMatrixTopNControlRequestedSize The maximum number of matrix entries requested for this report.\n\n        When this object is created or modified, the probe\n        should set alMatrixTopNControlGrantedSize as closely to this\n        object as possible for the particular probe\n        implementation and available resources.
%edes        alMatrixTopNControlGrantedSize The maximum number of matrix entries in this report.\n\n        When the associated alMatrixTopNControlRequestedSize object\n        is created or modified, the probe should set this\n        object as closely to the requested value as\n        possible for the particular implementation and\n        available resources. The probe must not lower this\n        value except as a side-effect of a set to the associated\n        alMatrixTopNControlRequestedSize object.\n\n        If the value of alMatrixTopNControlRateBase is equal to\n        alMatrixTopNTerminalsPkts or alMatrixTopNAllPkts, when the\n        next topN report is generated, matrix entries with the highest\n        value of alMatrixTopNPktRate shall be placed in this table in\n        decreasing order of this rate until there is no more room or\n        until there are no more matrix entries.\n\n        If the value of alMatrixTopNControlRateBase is equal to\n        alMatrixTopNTerminalsOctets or alMatrixTopNAllOctets, when the\n        next topN report is generated, matrix entries with the highest\n        value of alMatrixTopNOctetRate shall be placed in this table\n        in decreasing order of this rate until there is no more room\n        or until there are no more matrix entries.\n\n        It is an implementation-specific matter how entries with the\n        same value of alMatrixTopNPktRate or alMatrixTopNOctetRate are\n        sorted.  It is also an implementation-specific matter as to\n        whether zero-valued entries are available.
%edes        alMatrixTopNControlStartTime The value of sysUpTime when this topN report was\n        last started.  In other words, this is the time that\n        the associated alMatrixTopNControlTimeRemaining object\n        was modified to start the requested report or the time\n        the report was last automatically (re)started.\n\n\n\n        This object may be used by the management station to\n        determine whether a report was missed.
%edes        alMatrixTopNControlOwner The entity that configured this entry and is\n        therefore using the resources assigned to it.
%edes        alMatrixTopNControlStatus The status of this alMatrixTopNControlEntry.\n\n        An entry may not exist in the active state unless all\n        objects in the entry have an appropriate value.\n\n        If this object is not equal to active(1), all\n        associated entries in the alMatrixTopNTable shall be\n        deleted by the agent.
%edes        alMatrixTopNTable       A set of statistics for those application-layer matrix\n        entries that have counted the highest number of octets or\n        packets.
%edes        alMatrixTopNEntry       A conceptual row in the alMatrixTopNTable.\n\n        The alMatrixTopNControlIndex value in the index identifies\n        the alMatrixTopNControlEntry on whose behalf this entry was\n        created.\n\n\n\n        An example of the indexing of this table is\n        alMatrixTopNPktRate.3.10
%edes        alMatrixTopNIndex       An index that uniquely identifies an entry in\n        the alMatrixTopNTable among those in the same report.\n\n        This index is between 1 and N, where N is the\n        number of entries in this report.\n\n        If the value of alMatrixTopNControlRateBase is equal to\n        alMatrixTopNTerminalsPkts or alMatrixTopNAllPkts, increasing\n        values of alMatrixTopNIndex shall be assigned to entries with\n        decreasing values of alMatrixTopNPktRate until index N is\n        assigned or there are no more alMatrixTopNEntries.\n\n        If the value of alMatrixTopNControlRateBase is equal to\n        alMatrixTopNTerminalsOctets or alMatrixTopNAllOctets,\n        increasing values of alMatrixTopNIndex shall be assigned to\n        entries with decreasing values of alMatrixTopNOctetRate until\n        index N is assigned or there are no more alMatrixTopNEntries.
%edes        alMatrixTopNProtocolDirLocalIndex The protocolDirLocalIndex of the network-layer protocol of\n        this entry's network address.
%edes        alMatrixTopNSourceAddress The network-layer address of the source host in this\n        conversation.\n\n        This is represented as an octet string with\n        specific semantics and length as identified\n        by the associated alMatrixTopNProtocolDirLocalIndex.\n\n        For example, if the alMatrixTopNProtocolDirLocalIndex\n        indicates an encapsulation of IP, this object is encoded as a\n        length octet of 4, followed by the 4 octets of the IP address,\n        in network byte order.
%edes        alMatrixTopNDestAddress The network-layer address of the destination host in this\n        conversation.\n\n        This is represented as an octet string with\n        specific semantics and length as identified\n        by the associated alMatrixTopNProtocolDirLocalIndex.\n\n        For example, if the alMatrixTopNProtocolDirLocalIndex\n        indicates an encapsulation of IP, this object is encoded as a\n        length octet of 4, followed by the 4 octets of the IP address,\n        in network byte order.
%edes        alMatrixTopNAppProtocolDirLocalIndex The type of the protocol counted by this matrix entry.
%edes        alMatrixTopNPktRate     The number of packets seen of this protocol from the source\n        host to the destination host during this sampling interval,\n        counted using the rules for counting the alMatrixSDPkts\n        object.\n\n        If the value of alMatrixTopNControlRateBase is\n        alMatrixTopNTerminalsPkts or alMatrixTopNAllPkts, this\n        variable will be used to sort this report.
%edes        alMatrixTopNReversePktRate The number of packets seen of this protocol from the\n        destination host to the source host during this sampling\n        interval, counted using the rules for counting the\n        alMatrixDSPkts object.  (Note that the corresponding\n        alMatrixSDPkts object selected is the one whose source address\n        is equal to alMatrixTopNDestAddress and whose destination\n        address is equal to alMatrixTopNSourceAddress.)\n\n        Note that if the value of alMatrixTopNControlRateBase is equal\n        to alMatrixTopNTerminalsPkts or alMatrixTopNAllPkts, the sort\n        of topN entries is based entirely on alMatrixTopNPktRate, and\n        not on the value of this object.
%edes        alMatrixTopNOctetRate   The number of octets seen of this protocol from the source\n        host to the destination host during this sampling interval,\n        counted using the rules for counting the alMatrixSDOctets\n        object.\n\n        If the value of alMatrixTopNControlRateBase is\n        alMatrixTopNTerminalsOctets or alMatrixTopNAllOctets, this\n        variable will be used to sort this report.
%edes        alMatrixTopNReverseOctetRate The number of octets seen of this protocol from the\n        destination host to the source host during this sampling\n        interval, counted using the rules for counting the\n        alMatrixDSOctets object.  (Note that the corresponding\n        alMatrixSDOctets object selected is the one whose source\n        address is equal to alMatrixTopNDestAddress and whose\n        destination address is equal to alMatrixTopNSourceAddress.)\n\n        Note that if the value of alMatrixTopNControlRateBase is equal\n        to alMatrixTopNTerminalsOctets or alMatrixTopNAllOctets, the\n        sort of topN entries is based entirely on\n        alMatrixTopNOctetRate, and not on the value of this object.
%edes        usrHistoryControlTable  A list of data-collection configuration entries.
%edes        usrHistoryControlEntry  A list of parameters that set up a group of user-defined\n        MIB objects to be sampled periodically (called a\n        bucket-group).\n\n        For example, an instance of usrHistoryControlInterval\n        might be named usrHistoryControlInterval.1
%edes        usrHistoryControlIndex  An index that uniquely identifies an entry in the\n        usrHistoryControlTable.  Each such entry defines a\n        set of samples at a particular interval for a specified\n        set of MIB instances available from the managed system.
%edes        usrHistoryControlObjects The number of MIB objects to be collected\n        in the portion of usrHistoryTable associated with this\n        usrHistoryControlEntry.\n\n        This object may not be modified if the associated instance\n        of usrHistoryControlStatus is equal to active(1).
%edes        usrHistoryControlBucketsRequested The requested number of discrete time intervals\n        over which data is to be saved in the part of the\n        usrHistoryTable associated with this usrHistoryControlEntry.\n\n        When this object is created or modified, the probe\n        should set usrHistoryControlBucketsGranted as closely to\n        this object as possible for the particular probe\n        implementation and available resources.
%edes        usrHistoryControlBucketsGranted The number of discrete sampling intervals\n        over which data shall be saved in the part of\n        the usrHistoryTable associated with this\n        usrHistoryControlEntry.\n\n        When the associated usrHistoryControlBucketsRequested\n        object is created or modified, the probe should set\n        this object as closely to the requested value as\n        possible for the particular probe implementation and\n        available resources.  The probe must not lower this\n        value except as a result of a modification to the associated\n        usrHistoryControlBucketsRequested object.\n\n        The associated usrHistoryControlBucketsRequested object\n        should be set before or at the same time as this object\n        to allow the probe to accurately estimate the resources\n        required for this usrHistoryControlEntry.\n\n        There will be times when the actual number of buckets\n        associated with this entry is less than the value of\n        this object.  In this case, at the end of each sampling\n        interval, a new bucket will be added to the usrHistoryTable.\n\n        When the number of buckets reaches the value of this object\n        and a new bucket is to be added to the usrHistoryTable,\n        the oldest bucket associated with this usrHistoryControlEntry\n        shall be deleted by the agent so that the new bucket can be\n        added.\n\n        When the value of this object changes to a value less than\n        the current value, entries are deleted from the\n        usrHistoryTable associated with this usrHistoryControlEntry.\n        Enough of the oldest of these entries shall be deleted by the\n        agent so that their number remains less than or equal to the\n        new value of this object.\n\n        When the value of this object changes to a value greater\n        than the current value, the number of associated usrHistory\n        entries may be allowed to grow.
%edes        usrHistoryControlInterval The interval in seconds over which the data is\n        sampled for each bucket in the part of the usrHistory\n        table associated with this usrHistoryControlEntry.\n\n        Because the counters in a bucket may overflow at their\n        maximum value with no indication, a prudent manager will\n        take into account the possibility of overflow in any of\n        the associated counters.  It is important to consider the\n        minimum time in which any counter could overflow on a\n        particular media type and to set the usrHistoryControlInterval\n        object to a value less than this interval.\n\n        This object may not be modified if the associated\n        usrHistoryControlStatus object is equal to active(1).
%edes        usrHistoryControlOwner  The entity that configured this entry and is\n        therefore using the resources assigned to it.
%edes        usrHistoryControlStatus The status of this variable history control entry.\n\n        An entry may not exist in the active state unless all\n        objects in the entry have an appropriate value.\n\n        If this object is not equal to active(1), all associated\n        entries in the usrHistoryTable shall be deleted.
%edes        usrHistoryObjectTable   A list of data-collection configuration entries.
%edes        usrHistoryObjectEntry   A list of MIB instances to be sampled periodically.\n\n        Entries in this table are created when an associated\n        usrHistoryControlObjects object is created.\n\n        The usrHistoryControlIndex value in the index is\n        that of the associated usrHistoryControlEntry.\n\n        For example, an instance of usrHistoryObjectVariable might be\n        usrHistoryObjectVariable.1.3
%edes        usrHistoryObjectIndex   An index used to uniquely identify an entry in the\n        usrHistoryObject table.  Each such entry defines a\n        MIB instance to be collected periodically.
%edes        usrHistoryObjectVariable The object identifier of the particular variable to be\n\n\n\n        sampled.\n\n        Only variables that resolve to an ASN.1 primitive type of\n        Integer32 (Integer32, Counter, Gauge, or TimeTicks) may be\n        sampled.\n\n        Because SNMP access control is articulated entirely in terms\n        of the contents of MIB views, no access control mechanism\n        exists that can restrict the value of this object to identify\n        only those objects that exist in a particular MIB view.\n        Because there is thus no acceptable means of restricting the\n        read access that could be obtained through the user history\n        mechanism, the probe must only grant write access to this\n        object in those views that have read access to all objects on\n        the probe.  See USM [RFC3414] and VACM [RFC3415] for more\n        information.\n\n        During a set operation, if the supplied variable name is not\n        available in the selected MIB view, a badValue error must be\n        returned.\n\n        This object may not be modified if the associated\n        usrHistoryControlStatus object is equal to active(1).
%edes        usrHistoryObjectSampleType The method of sampling the selected variable for storage in\n        the usrHistoryTable.\n\n        If the value of this object is absoluteValue(1), the value of\n        the selected variable will be copied directly into the history\n        bucket.\n\n        If the value of this object is deltaValue(2), the value of the\n        selected variable at the last sample will be subtracted from\n        the current value, and the difference will be stored in the\n        history bucket.  If the associated usrHistoryObjectVariable\n        instance could not be obtained at the previous sample\n        interval, then a delta sample is not possible, and the value\n        of the associated usrHistoryValStatus object for this interval\n        will be valueNotAvailable(1).\n\n\n\n        This object may not be modified if the associated\n        usrHistoryControlStatus object is equal to active(1).
%edes        usrHistoryTable         A list of user-defined history entries.
%edes        usrHistoryEntry         A historical sample of user-defined variables.  This sample\n        is associated with the usrHistoryControlEntry that set up the\n        parameters for a regular collection of these samples.\n\n        The usrHistoryControlIndex value in the index identifies the\n        usrHistoryControlEntry on whose behalf this entry was created.\n        The usrHistoryObjectIndex value in the index identifies the\n        usrHistoryObjectEntry on whose behalf this entry was created.\n\n        For example, an instance of usrHistoryAbsValue, which represents\n        the 14th sample of a variable collected as specified by\n        usrHistoryControlEntry.1 and usrHistoryObjectEntry.1.5,\n        would be named usrHistoryAbsValue.1.14.5
%edes        usrHistorySampleIndex   An index that uniquely identifies the particular sample this\n        entry represents among all samples associated with the same\n        usrHistoryControlEntry.  This index starts at 1 and increases\n        by one as each new sample is taken.
%edes        usrHistoryIntervalStart The value of sysUpTime at the start of the interval over\n        which this sample was measured.  If the probe keeps track of\n        the time of day, it should start the first sample of the\n        history at a time such that when the next hour of the day\n        begins, a sample is started at that instant.\n\n        Note that following this rule may require that the probe delay\n        collecting the first sample of the history, as each sample\n        must be of the same interval.  Also note that the sample that\n        is currently being collected is not accessible in this table\n        until the end of its interval.
%edes        usrHistoryIntervalEnd   The value of sysUpTime at the end of the interval over which\n        this sample was measured.
%edes        usrHistoryAbsValue      The absolute value (i.e., unsigned value) of the\n        user-specified statistic during the last sampling period.  The\n        value during the current sampling period is not made available\n        until the period is completed.\n\n        To obtain the true value for this sampling interval, the\n        associated instance of usrHistoryValStatus must be checked,\n        and usrHistoryAbsValue adjusted as necessary.\n\n\n\n\n        If the MIB instance could not be accessed during the sampling\n        interval, then this object will have a value of zero, and the\n        associated instance of usrHistoryValStatus will be set to\n        'valueNotAvailable(1)'.\n\n        The access control check prescribed in the definition of\n        usrHistoryObjectVariable SHOULD be checked for each sampling\n        interval.  If this check determines that access should not be\n        allowed, then this object will have a value of zero, and the\n        associated instance of usrHistoryValStatus will be set to\n        'valueNotAvailable(1)'.
%edes        usrHistoryValStatus     This object indicates the validity and sign of the data in\n        the associated instance of usrHistoryAbsValue.\n\n        If the MIB instance could not be accessed during the sampling\n        interval, then 'valueNotAvailable(1)' will be returned.\n\n        If the sample is valid and the actual value of the sample is\n        greater than or equal to zero, then 'valuePositive(2)' is\n        returned.\n\n        If the sample is valid and the actual value of the sample is\n        less than zero, 'valueNegative(3)' will be returned.  The\n        associated instance of usrHistoryAbsValue should be multiplied\n        by -1 to obtain the true sample value.
%edes        probeCapabilities       An indication of the RMON MIB groups supported\n        on at least one interface by this probe.
%edes        probeSoftwareRev        The software revision of this device.  This string will have\n        a zero length if the revision is unknown.
%edes        probeHardwareRev        The hardware revision of this device.  This string will have\n        a zero length if the revision is unknown.
%edes        probeDateTime           Probe's current date and time.\n\n         field  octets  contents                  range\n         -----  ------  --------                  -----\n           1      1-2   year                      0..65536\n           2       3    month                     1..12\n           3       4    day                       1..31\n           4       5    hour                      0..23\n           5       6    minutes                   0..59\n           6       7    seconds                   0..60\n                         (use 60 for leap-second)\n           7       8    deci-seconds              0..9\n           8       9    direction from UTC        '+' / '-'\n           9      10    hours from UTC            0..11\n          10      11    minutes from UTC          0..59\n\n         For example, Tuesday May 26, 1992 at 1:30:15 PM\n         EDT would be displayed as:\n\n                     1992-5-26,13:30:15.0,-4:0\n\n         Note that if only local time is known, then\n         time zone information (fields 8-10) is not\n         present, and that if no time information is known, the\n         null string is returned.
%edes        probeResetControl       Setting this object to warmBoot(2) causes the device to\n        restart the application software with current configuration\n        parameters saved in non-volatile memory.  Setting this\n        object to coldBoot(3) causes the device to reinitialize\n        configuration parameters in non-volatile memory to default\n        values and to restart the application software.  When the device\n        is running normally, this variable has a value of\n        running(1).
%edes        probeDownloadFile       The file name to be downloaded from the TFTP server when a\n        download is next requested via this MIB.  This value is set to\n        the zero-length string when no file name has been specified.\n\n        This object has been deprecated, as it has not had enough\n        independent implementations to demonstrate interoperability to\n        meet the requirements of a Draft Standard.
%edes        probeDownloadTFTPServer The IP address of the TFTP server that contains the boot\n        image to load when a download is next requested via this MIB.\n        This value is set to '0.0.0.0' when no IP address has been\n\n\n\n        specified.\n\n        This object has been deprecated, as it has not had enough\n        independent implementations to demonstrate interoperability to\n        meet the requirements of a Draft Standard.
%edes        probeDownloadAction     When this object is set to downloadToRAM(3) or\n        downloadToPROM(2), the device will discontinue its\n        normal operation and begin download of the image specified\n        by probeDownloadFile from the server specified by\n        probeDownloadTFTPServer using the TFTP protocol.  If\n        downloadToRAM(3) is specified, the new image is copied\n        to RAM only (the old image remains unaltered in the flash\n        EPROM).  If downloadToPROM(2) is specified,\n        the new image is written to the flash EPROM\n        memory after its checksum has been verified to be correct.\n        When the download process is completed, the device will\n        warm boot to restart the newly loaded application.\n        When the device is not downloading, this object will have\n        a value of notDownloading(1).\n\n        This object has been deprecated, as it has not had enough\n        independent implementations to demonstrate interoperability to\n        meet the requirements of a Draft Standard.
%edes        probeDownloadStatus     The status of the last download procedure, if any.  This\n        object will have a value of downloadStatusUnknown(2) if no\n        download process has been performed.\n\n        This object has been deprecated, as it has not had enough\n        independent implementations to demonstrate interoperability to\n        meet the requirements of a Draft Standard.
%edes        serialConfigTable       A table of serial interface configuration entries.  This data\n        will be stored in non-volatile memory and preserved across\n        probe resets or power loss.\n\n        This table has been deprecated, as it has not had enough\n        independent implementations to demonstrate interoperability to\n        meet the requirements of a Draft Standard.
%edes        serialConfigEntry       A set of configuration parameters for a particular\n        serial interface on this device.  If the device has no serial\n        interfaces, this table is empty.\n\n        The index is composed of the ifIndex assigned to this serial\n        line interface.
%edes        serialMode              The type of incoming connection to be expected on this\n         serial interface.
%edes        serialProtocol          The type of data link encapsulation to be used on this\n        serial interface.
%edes        serialTimeout           This timeout value is used when the Management Station has\n        initiated the conversation over the serial link.  This variable\n        represents the number of seconds of inactivity allowed before\n        terminating the connection on this serial interface.  Use the\n        serialDialoutTimeout in the case where the probe has initiated\n        the connection for the purpose of sending a trap.
%edes        serialModemInitString   A control string that controls how a modem attached to this\n        serial interface should be initialized.  The initialization\n        is performed once during startup and again after each\n        connection is terminated if the associated serialMode has the\n        value of modem(2).\n\n        A control string that is appropriate for a wide variety of\n        modems is: '^s^MATE0Q0V1X4 S0=1 S2=43^M'.
%edes        serialModemHangUpString A control string that specifies how to disconnect a modem\n         connection on this serial interface.  This object is only\n         meaningful if the associated serialMode has the value\n         of modem(2).\n\n         A control string that is appropriate for a wide variety of\n         modems is: '^d2^s+++^d2^sATH0^M^d2'.
%edes        serialModemConnectResp  An ASCII string containing substrings that describe the\n        expected modem connection response code and associated bps\n        rate.  The substrings are delimited by the first character\n        in the string, for example:\n           /CONNECT/300/CONNECT 1200/1200/CONNECT 2400/2400/\n           CONNECT 4800/4800/CONNECT 9600/9600\n        will be interpreted as:\n            response code    bps rate\n            CONNECT            300\n            CONNECT 1200      1200\n            CONNECT 2400      2400\n            CONNECT 4800      4800\n            CONNECT 9600      9600\n        The agent will use the information in this string to adjust\n        the bps rate of this serial interface once a modem connection\n        is established.\n\n        A value that is appropriate for a wide variety of modems is:\n\n\n\n        '/CONNECT/300/CONNECT 1200/1200/CONNECT 2400/2400/\n         CONNECT 4800/4800/CONNECT 9600/9600/CONNECT 14400/14400/\n        CONNECT 19200/19200/CONNECT 38400/38400/'.
%edes        serialModemNoConnectResp An ASCII string containing response codes that may be\n        generated by a modem to report the reason why a connection\n        attempt has failed.  The response codes are delimited by\n        the first character in the string, for example:\n           /NO CARRIER/BUSY/NO DIALTONE/NO ANSWER/ERROR/\n\n        If one of these response codes is received via this serial\n        interface while attempting to make a modem connection,\n        the agent will issue the hang up command as specified by\n        serialModemHangUpString.\n\n        A value that is appropriate for a wide variety of modems is:\n        '/NO CARRIER/BUSY/NO DIALTONE/NO ANSWER/ERROR/'.
%edes        serialDialoutTimeout    This timeout value is used when the probe initiates the\n        serial connection with the intention of contacting a\n        management station.  This variable represents the number\n        of seconds of inactivity allowed before terminating the\n        connection on this serial interface.
%edes        serialStatus            The status of this serialConfigEntry.\n\n        An entry may not exist in the active state unless all\n        objects in the entry have an appropriate value.
%edes        netConfigTable          A table of netConfigEntries.\n\n        This table has been deprecated, as it has not had enough\n        independent implementations to demonstrate interoperability to\n        meet the requirements of a Draft Standard.
%edes        netConfigEntry          A set of configuration parameters for a particular\n        network interface on this device.  If the device has no network\n        interface, this table is empty.\n\n        The index is composed of the ifIndex assigned to the\n        corresponding interface.
%edes        netConfigIPAddress      The IP address of this Net interface.  The default value\n        for this object is 0.0.0.0.  If either the netConfigIPAddress\n        or netConfigSubnetMask is 0.0.0.0, then when the device\n        boots, it may use BOOTP to try to figure out what these\n        values should be.  If BOOTP fails before the device\n        can talk on the network, this value must be configured\n        (e.g., through a terminal attached to the device).  If BOOTP is\n        used, care should be taken to not send BOOTP broadcasts too\n        frequently and to eventually send them very infrequently if no\n        replies are received.
%edes        netConfigSubnetMask     The subnet mask of this Net interface.  The default value\n        for this object is 0.0.0.0.  If either the netConfigIPAddress\n        or netConfigSubnetMask is 0.0.0.0, then when the device\n        boots, it may use BOOTP to try to figure out what these\n        values should be.  If BOOTP fails before the device\n        can talk on the network, this value must be configured\n        (e.g., through a terminal attached to the device).  If BOOTP is\n        used, care should be taken to not send BOOTP broadcasts too\n        frequently and to eventually send them very infrequently if no\n        replies are received.
%edes        netConfigStatus         The status of this netConfigEntry.\n\n        An entry may not exist in the active state unless all\n        objects in the entry have an appropriate value.
%edes        netDefaultGateway       The IP Address of the default gateway.  If this value is\n        undefined or unknown, it shall have the value 0.0.0.0.
%edes        trapDestTable           A list of trap destination entries.
%edes        trapDestEntry           This entry includes a destination IP address to which\n        traps are sent for this community.
%edes        trapDestIndex           A value that uniquely identifies this trapDestEntry.
%edes        trapDestCommunity       A community to which this destination address belongs.\n        This entry is associated with any eventEntries in the RMON\n        MIB whose value of eventCommunity is equal to the value of\n        this object.  Every time an associated event entry sends a\n        trap due to an event, that trap will be sent to each\n\n\n\n        address in the trapDestTable with a trapDestCommunity equal\n        to eventCommunity, as long as no access control mechanism\n        precludes it (e.g., VACM).\n\n        This object may not be modified if the associated\n        trapDestStatus object is equal to active(1).
%edes        trapDestProtocol        The protocol with which this trap is to be sent.
%edes        trapDestAddress         The destination address for traps on behalf of this entry.\n\n        If the associated trapDestProtocol object is equal to ip(1),\n        the encoding of this object is the same as the snmpUDPAddress\n        textual convention in RFC 3417, 'Transport Mappings for the\n         Simple Network Management Protocol (SNMP)' [RFC3417]:\n          -- for a SnmpUDPAddress of length 6:\n          --\n          -- octets   contents        encoding\n          --  1-4     IP-address      network-byte order\n          --  5-6     UDP-port        network-byte order\n\n        If the associated trapDestProtocol object is equal to ipx(2),\n        the encoding of this object is the same as the snmpIPXAddress\n        textual convention in RFC 3417, 'Transport Mappings for the\n         Simple Network Management Protocol (SNMP)' [RFC3417]:\n          -- for a SnmpIPXAddress of length 12:\n          --\n          -- octets   contents            encoding\n          --  1-4     network-number      network-byte order\n          --  5-10    physical-address    network-byte order\n          -- 11-12    socket-number       network-byte order\n\n        This object may not be modified if the associated\n\n\n\n        trapDestStatus object is equal to active(1).
%edes        trapDestOwner           The entity that configured this entry and is\n        therefore using the resources assigned to it.
%edes        trapDestStatus          The status of this trap destination entry.\n\n        An entry may not exist in the active state unless all\n        objects in the entry have an appropriate value.
%edes        serialConnectionTable   A list of serialConnectionEntries.\n\n        This table has been deprecated, as it has not had enough\n        independent implementations to demonstrate interoperability\n        to meet the requirements of a Draft Standard.
%edes        serialConnectionEntry   Configuration for a SLIP link over a serial line.
%edes        serialConnectIndex      A value that uniquely identifies this serialConnection\n        entry.
%edes        serialConnectDestIpAddress The IP Address that can be reached at the other end of this\n        serial connection.\n\n        This object may not be modified if the associated\n        serialConnectStatus object is equal to active(1).
%edes        serialConnectType       The type of outgoing connection to be made.  If this object\n        has the value direct(1), then a direct serial connection\n        is assumed.  If this object has the value modem(2),\n        then serialConnectDialString will be used to make a modem\n        connection.  If this object has the value switch(3),\n        then serialConnectSwitchConnectSeq will be used to establish\n        the connection over a serial data switch, and\n        serialConnectSwitchDisconnectSeq will be used to terminate\n        the connection.  If this object has the value\n        modem-switch(4), then a modem connection will be made first,\n        followed by the switch connection.\n\n        This object may not be modified if the associated\n        serialConnectStatus object is equal to active(1).
%edes        serialConnectDialString A control string that specifies how to dial the phone\n        number in order to establish a modem connection.  The\n        string should include the dialing prefix and suffix.  For\n        example: '^s^MATD9,888-1234^M' will instruct the Probe\n        to send a carriage return, followed by the dialing prefix\n        'ATD', the phone number '9,888-1234', and a carriage\n        return as the dialing suffix.\n\n        This object may not be modified if the associated\n        serialConnectStatus object is equal to active(1).
%edes        serialConnectSwitchConnectSeq A control string that specifies how to establish a\n        data switch connection.\n\n        This object may not be modified if the associated\n        serialConnectStatus object is equal to active(1).
%edes        serialConnectSwitchDisconnectSeq A control string that specifies how to terminate a\n        data switch connection.\n\n        This object may not be modified if the associated\n        serialConnectStatus object is equal to active(1).
%edes        serialConnectSwitchResetSeq A control string that specifies how to reset a data\n        switch in the event of a timeout.\n\n        This object may not be modified if the associated\n        serialConnectStatus object is equal to active(1).
%edes        serialConnectOwner      The entity that configured this entry and is\n        therefore using the resources assigned to it.
%edes        serialConnectStatus     The status of this serialConnectionEntry.\n\n        If the manager attempts to set this object to active(1) when\n        the serialConnectType is set to modem(2) or modem-switch(4)\n        and the serialConnectDialString is a zero-length string or\n        cannot be correctly parsed as a ConnectString, the set\n        request will be rejected with badValue(3).\n\n        If the manager attempts to set this object to active(1) when\n        the serialConnectType is set to switch(3) or modem-switch(4)\n        and the serialConnectSwitchConnectSeq,\n        the serialConnectSwitchDisconnectSeq, or\n\n\n\n        the serialConnectSwitchResetSeq is a zero-length string\n        or cannot be correctly parsed as a ConnectString, the set\n        request will be rejected with badValue(3).\n\n        An entry may not exist in the active state unless all\n        objects in the entry have an appropriate value.
%edes        protocolDirectoryGroup  Lists the inventory of protocols the probe has the\n        capability of monitoring and allows the addition, deletion,\n        and configuration of entries in this list.
%edes        protocolDistributionGroup Collects the relative amounts of octets and packets for the\n        different protocols detected on a network segment.
%edes        addressMapGroup         Lists MAC address to network address bindings discovered by\n        the probe and what interface they were last seen on.
%edes        nlHostGroup             Counts the amount of traffic sent from and to each network\n        address discovered by the probe.  Note that while the\n        hlHostControlTable also has objects that control an optional\n        alHostTable, implementation of the alHostTable is not\n        required to fully implement this group.
%edes        nlMatrixGroup           Counts the amount of traffic sent between each pair of\n        network addresses discovered by the probe.  Note that while\n        the hlMatrixControlTable also has objects that control\n        optional alMatrixTables, implementation of the\n        alMatrixTables is not required to fully implement this\n        group.
%edes        alHostGroup             Counts the amount of traffic, by protocol, sent from and to\n        each network address discovered by the probe.  Implementation\n        of this group requires implementation of the Network-Layer\n        Host Group.
%edes        alMatrixGroup           Counts the amount of traffic, by protocol, sent between each\n        pair of network addresses discovered by the\n        probe.  Implementation of this group requires implementation\n        of the Network-Layer Matrix Group.
%edes        usrHistoryGroup         The usrHistoryGroup provides user-defined collection of\n        historical information from MIB objects on the probe.
%edes        probeInformationGroup   This group describes various operating parameters of the\n        probe and controls the local time of the probe.
%est                 probeConfigurationGroup deprecated
%edes        probeConfigurationGroup This group controls the configuration of various operating\n        parameters of the probe.  This group is not referenced by any\n        MODULE-COMPLIANCE macro because it is 'grandfathered' from\n        more recent MIB review rules that would require it.
%edes        rmon1EnhancementGroup   This group adds some enhancements to RMON-1 that help\n        management stations.
%edes        rmon1EthernetEnhancementGroup This group adds some enhancements to RMON-1 that help\n        management stations.
%est                 rmon1TokenRingEnhancementGroup deprecated
%edes        rmon1TokenRingEnhancementGroup This group adds some enhancements to RMON-1 that help\n        management stations.  This group is not referenced by any\n        MODULE-COMPLIANCE macro because it is 'grandfathered' from\n        more recent MIB review rules that would require it.
%edes        rmonEtherStatsGroup     The RMON Ethernet Statistics Group.
%edes        rmonHistoryControlGroup The RMON History Control Group.
%edes        rmonEthernetHistoryGroup The RMON Ethernet History Group.
%edes        rmonAlarmGroup          The RMON Alarm Group.
%edes        rmonHostGroup           The RMON Host Group.
%edes        rmonHostTopNGroup       The RMON Host Top 'N' Group.
%edes        rmonMatrixGroup         The RMON Matrix Group.
%edes        rmonFilterGroup         The RMON Filter Group.
%edes        rmonPacketCaptureGroup  The RMON Packet Capture Group.
%edes        rmonEventGroup          The RMON Event Group.
%edes        rmonNotificationGroup   The RMON Notification Group.
%edes        newRoot                 The newRoot trap indicates that the sending agent has\n           become the new root of the Spanning Tree; the trap is\n           sent by a bridge soon after its election as the new\n\n           root, e.g., upon expiration of the Topology Change Timer,\n           immediately subsequent to its election.  Implementation\n           of this trap is optional.
%edes        topologyChange          A topologyChange trap is sent by a bridge when any of\n           its configured ports transitions from the Learning state\n           to the Forwarding state, or from the Forwarding state to\n           the Blocking state.  The trap is not sent if a newRoot\n           trap is sent for the same transition.  Implementation of\n           this trap is optional.
%edes        dot1dBaseBridgeAddress  The MAC address used by this bridge when it must be\n           referred to in a unique fashion.  It is recommended\n           that this be the numerically smallest MAC address of\n           all ports that belong to this bridge.  However, it is only\n\n           required to be unique.  When concatenated with\n           dot1dStpPriority, a unique BridgeIdentifier is formed,\n           which is used in the Spanning Tree Protocol.
%eref        dot1dBaseBridgeAddress  IEEE 802.1D-1998: clauses 14.4.1.1.3 and 7.12.5
%eunits      dot1dBaseNumPorts       ports
%edes        dot1dBaseNumPorts       The number of ports controlled by this bridging\n           entity.
%eref        dot1dBaseNumPorts       IEEE 802.1D-1998: clause 14.4.1.1.3
%edes        dot1dBaseType           Indicates what type of bridging this bridge can\n           perform.  If a bridge is actually performing a\n           certain type of bridging, this will be indicated by\n           entries in the port table for the given type.
%edes        dot1dBasePortTable      A table that contains generic information about every\n           port that is associated with this bridge.  Transparent,\n           source-route, and srt ports are included.
%edes        dot1dBasePortEntry      A list of information for each port of the bridge.
%eref        dot1dBasePortEntry      IEEE 802.1D-1998: clause 14.4.2, 14.6.1
%edes        dot1dBasePort           The port number of the port for which this entry\n           contains bridge management information.
%edes        dot1dBasePortIfIndex    The value of the instance of the ifIndex object,\n           defined in IF-MIB, for the interface corresponding\n           to this port.
%edes        dot1dBasePortCircuit    For a port that (potentially) has the same value of\n           dot1dBasePortIfIndex as another port on the same bridge.\n           This object contains the name of an object instance\n           unique to this port.  For example, in the case where\n           multiple ports correspond one-to-one with multiple X.25\n           virtual circuits, this value might identify an (e.g.,\n           the first) object instance associated with the X.25\n           virtual circuit corresponding to this port.\n\n           For a port which has a unique value of\n           dot1dBasePortIfIndex, this object can have the value\n           { 0 0 }.
%edes        dot1dBasePortDelayExceededDiscards The number of frames discarded by this port due\n           to excessive transit delay through the bridge.  It\n           is incremented by both transparent and source\n           route bridges.
%eref        dot1dBasePortDelayExceededDiscards IEEE 802.1D-1998: clause 14.6.1.1.3
%edes        dot1dBasePortMtuExceededDiscards The number of frames discarded by this port due\n           to an excessive size.  It is incremented by both\n           transparent and source route bridges.
%eref        dot1dBasePortMtuExceededDiscards IEEE 802.1D-1998: clause 14.6.1.1.3
%edes        dot1dStpProtocolSpecification An indication of what version of the Spanning Tree\n           Protocol is being run.  The value 'decLb100(2)'\n           indicates the DEC LANbridge 100 Spanning Tree protocol.\n           IEEE 802.1D implementations will return 'ieee8021d(3)'.\n           If future versions of the IEEE Spanning Tree Protocol\n           that are incompatible with the current version\n           are released a new value will be defined.
%edes        dot1dStpPriority        The value of the write-able portion of the Bridge ID\n           (i.e., the first two octets of the (8 octet long) Bridge\n           ID).  The other (last) 6 octets of the Bridge ID are\n           given by the value of dot1dBaseBridgeAddress.\n           On bridges supporting IEEE 802.1t or IEEE 802.1w,\n           permissible values are 0-61440, in steps of 4096.
%eref        dot1dStpPriority        IEEE 802.1D-1998 clause 8.10.2, Table 8-4,\n           IEEE 802.1t clause 8.10.2, Table 8-4, clause 14.3.
%eunits      dot1dStpTimeSinceTopologyChange centi-seconds
%edes        dot1dStpTimeSinceTopologyChange The time (in hundredths of a second) since the\n           last time a topology change was detected by the\n           bridge entity.\n           For RSTP, this reports the time since the tcWhile\n           timer for any port on this Bridge was nonzero.
%eref        dot1dStpTimeSinceTopologyChange IEEE 802.1D-1998 clause 14.8.1.1.,\n           IEEE 802.1w clause 14.8.1.1.
%edes        dot1dStpTopChanges      The total number of topology changes detected by\n           this bridge since the management entity was last\n           reset or initialized.
%eref        dot1dStpTopChanges      IEEE 802.1D-1998 clause 14.8.1.1.
%edes        dot1dStpDesignatedRoot  The bridge identifier of the root of the spanning\n           tree, as determined by the Spanning Tree Protocol,\n           as executed by this node.  This value is used as\n           the Root Identifier parameter in all Configuration\n           Bridge PDUs originated by this node.
%eref        dot1dStpDesignatedRoot  IEEE 802.1D-1998: clause 8.5.3.1
%edes        dot1dStpRootCost        The cost of the path to the root as seen from\n           this bridge.
%eref        dot1dStpRootCost        IEEE 802.1D-1998: clause 8.5.3.2
%edes        dot1dStpRootPort        The port number of the port that offers the lowest\n           cost path from this bridge to the root bridge.
%eref        dot1dStpRootPort        IEEE 802.1D-1998: clause 8.5.3.3
%eunits      dot1dStpMaxAge          centi-seconds
%edes        dot1dStpMaxAge          The maximum age of Spanning Tree Protocol information\n           learned from the network on any port before it is\n           discarded, in units of hundredths of a second.  This is\n           the actual value that this bridge is currently using.
%eref        dot1dStpMaxAge          IEEE 802.1D-1998: clause 8.5.3.4
%eunits      dot1dStpHelloTime       centi-seconds
%edes        dot1dStpHelloTime       The amount of time between the transmission of\n           Configuration bridge PDUs by this node on any port when\n           it is the root of the spanning tree, or trying to become\n           so, in units of hundredths of a second.  This is the\n           actual value that this bridge is currently using.
%eref        dot1dStpHelloTime       IEEE 802.1D-1998: clause 8.5.3.5
%eunits      dot1dStpHoldTime        centi-seconds
%edes        dot1dStpHoldTime        This time value determines the interval length\n           during which no more than two Configuration bridge\n           PDUs shall be transmitted by this node, in units\n           of hundredths of a second.
%eref        dot1dStpHoldTime        IEEE 802.1D-1998: clause 8.5.3.14
%eunits      dot1dStpForwardDelay    centi-seconds
%edes        dot1dStpForwardDelay    This time value, measured in units of hundredths of a\n           second, controls how fast a port changes its spanning\n           state when moving towards the Forwarding state.  The\n           value determines how long the port stays in each of the\n           Listening and Learning states, which precede the\n           Forwarding state.  This value is also used when a\n           topology change has been detected and is underway, to\n           age all dynamic entries in the Forwarding Database.\n           [Note that this value is the one that this bridge is\n           currently using, in contrast to\n           dot1dStpBridgeForwardDelay, which is the value that this\n           bridge and all others would start using if/when this\n           bridge were to become the root.]
%eref        dot1dStpForwardDelay    IEEE 802.1D-1998: clause 8.5.3.6
%eunits      dot1dStpBridgeMaxAge    centi-seconds
%edes        dot1dStpBridgeMaxAge    The value that all bridges use for MaxAge when this\n           bridge is acting as the root.  Note that 802.1D-1998\n           specifies that the range for this parameter is related\n           to the value of dot1dStpBridgeHelloTime.  The\n           granularity of this timer is specified by 802.1D-1998 to\n           be 1 second.  An agent may return a badValue error if a\n           set is attempted to a value that is not a whole number\n           of seconds.
%eref        dot1dStpBridgeMaxAge    IEEE 802.1D-1998: clause 8.5.3.8
%eunits      dot1dStpBridgeHelloTime centi-seconds
%edes        dot1dStpBridgeHelloTime The value that all bridges use for HelloTime when this\n           bridge is acting as the root.  The granularity of this\n           timer is specified by 802.1D-1998 to be 1 second.  An\n           agent may return a badValue error if a set is attempted\n\n           to a value that is not a whole number of seconds.
%eref        dot1dStpBridgeHelloTime IEEE 802.1D-1998: clause 8.5.3.9
%eunits      dot1dStpBridgeForwardDelay centi-seconds
%edes        dot1dStpBridgeForwardDelay The value that all bridges use for ForwardDelay when\n           this bridge is acting as the root.  Note that\n           802.1D-1998 specifies that the range for this parameter\n           is related to the value of dot1dStpBridgeMaxAge.  The\n           granularity of this timer is specified by 802.1D-1998 to\n           be 1 second.  An agent may return a badValue error if a\n           set is attempted to a value that is not a whole number\n           of seconds.
%eref        dot1dStpBridgeForwardDelay IEEE 802.1D-1998: clause 8.5.3.10
%edes        dot1dStpPortTable       A table that contains port-specific information\n           for the Spanning Tree Protocol.
%edes        dot1dStpPortEntry       A list of information maintained by every port about\n           the Spanning Tree Protocol state for that port.
%edes        dot1dStpPort            The port number of the port for which this entry\n           contains Spanning Tree Protocol management information.
%eref        dot1dStpPort            IEEE 802.1D-1998: clause 14.8.2.1.2
%edes        dot1dStpPortPriority    The value of the priority field that is contained in\n           the first (in network byte order) octet of the (2 octet\n           long) Port ID.  The other octet of the Port ID is given\n           by the value of dot1dStpPort.\n           On bridges supporting IEEE 802.1t or IEEE 802.1w,\n           permissible values are 0-240, in steps of 16.
%eref        dot1dStpPortPriority    IEEE 802.1D-1998 clause 8.10.2, Table 8-4,\n\n           IEEE 802.1t clause 8.10.2, Table 8-4, clause 14.3.
%edes        dot1dStpPortState       The port's current state, as defined by application of\n           the Spanning Tree Protocol.  This state controls what\n           action a port takes on reception of a frame.  If the\n           bridge has detected a port that is malfunctioning, it\n           will place that port into the broken(6) state.  For\n           ports that are disabled (see dot1dStpPortEnable), this\n           object will have a value of disabled(1).
%eref        dot1dStpPortState       IEEE 802.1D-1998: clause 8.5.5.2
%edes        dot1dStpPortEnable      The enabled/disabled status of the port.
%eref        dot1dStpPortEnable      IEEE 802.1D-1998: clause 8.5.5.2
%edes        dot1dStpPortPathCost    The contribution of this port to the path cost of\n           paths towards the spanning tree root which include\n           this port.  802.1D-1998 recommends that the default\n           value of this parameter be in inverse proportion to\n\n           the speed of the attached LAN.\n\n           New implementations should support dot1dStpPortPathCost32.\n           If the port path costs exceeds the maximum value of this\n           object then this object should report the maximum value,\n           namely 65535.  Applications should try to read the\n           dot1dStpPortPathCost32 object if this object reports\n           the maximum value.
%eref        dot1dStpPortPathCost    IEEE 802.1D-1998: clause 8.5.5.3
%edes        dot1dStpPortDesignatedRoot The unique Bridge Identifier of the Bridge\n           recorded as the Root in the Configuration BPDUs\n           transmitted by the Designated Bridge for the\n           segment to which the port is attached.
%eref        dot1dStpPortDesignatedRoot IEEE 802.1D-1998: clause 8.5.5.4
%edes        dot1dStpPortDesignatedCost The path cost of the Designated Port of the segment\n           connected to this port.  This value is compared to the\n           Root Path Cost field in received bridge PDUs.
%eref        dot1dStpPortDesignatedCost IEEE 802.1D-1998: clause 8.5.5.5
%edes        dot1dStpPortDesignatedBridge The Bridge Identifier of the bridge that this\n           port considers to be the Designated Bridge for\n           this port's segment.
%eref        dot1dStpPortDesignatedBridge IEEE 802.1D-1998: clause 8.5.5.6
%edes        dot1dStpPortDesignatedPort The Port Identifier of the port on the Designated\n           Bridge for this port's segment.
%eref        dot1dStpPortDesignatedPort IEEE 802.1D-1998: clause 8.5.5.7
%edes        dot1dStpPortForwardTransitions The number of times this port has transitioned\n           from the Learning state to the Forwarding state.
%edes        dot1dStpPortPathCost32  The contribution of this port to the path cost of\n           paths towards the spanning tree root which include\n           this port.  802.1D-1998 recommends that the default\n           value of this parameter be in inverse proportion to\n           the speed of the attached LAN.\n\n           This object replaces dot1dStpPortPathCost to support\n           IEEE 802.1t.
%eref        dot1dStpPortPathCost32  IEEE 802.1t clause 8.10.2, Table 8-5.
%edes        dot1dTpLearnedEntryDiscards The total number of Forwarding Database entries that\n           have been or would have been learned, but have been\n           discarded due to a lack of storage space in the\n           Forwarding Database.  If this counter is increasing, it\n           indicates that the Forwarding Database is regularly\n           becoming full (a condition that has unpleasant\n           performance effects on the subnetwork).  If this counter\n           has a significant value but is not presently increasing,\n           it indicates that the problem has been occurring but is\n           not persistent.
%eref        dot1dTpLearnedEntryDiscards IEEE 802.1D-1998: clause 14.7.1.1.3
%eunits      dot1dTpAgingTime        seconds
%edes        dot1dTpAgingTime        The timeout period in seconds for aging out\n           dynamically-learned forwarding information.\n           802.1D-1998 recommends a default of 300 seconds.
%eref        dot1dTpAgingTime        IEEE 802.1D-1998: clause 14.7.1.1.3
%edes        dot1dTpFdbTable         A table that contains information about unicast\n           entries for which the bridge has forwarding and/or\n           filtering information.  This information is used\n           by the transparent bridging function in\n           determining how to propagate a received frame.
%edes        dot1dTpFdbEntry         Information about a specific unicast MAC address\n           for which the bridge has some forwarding and/or\n           filtering information.
%edes        dot1dTpFdbAddress       A unicast MAC address for which the bridge has\n           forwarding and/or filtering information.
%eref        dot1dTpFdbAddress       IEEE 802.1D-1998: clause 7.9.1, 7.9.2
%edes        dot1dTpFdbPort          Either the value '0', or the port number of the port on\n           which a frame having a source address equal to the value\n           of the corresponding instance of dot1dTpFdbAddress has\n           been seen.  A value of '0' indicates that the port\n           number has not been learned, but that the bridge does\n           have some forwarding/filtering information about this\n           address (e.g., in the dot1dStaticTable).  Implementors\n           are encouraged to assign the port value to this object\n           whenever it is learned, even for addresses for which the\n           corresponding value of dot1dTpFdbStatus is not\n           learned(3).
%edes        dot1dTpFdbStatus        The status of this entry.  The meanings of the\n           values are:\n               other(1) - none of the following.  This would\n                   include the case where some other MIB object\n                   (not the corresponding instance of\n                   dot1dTpFdbPort, nor an entry in the\n                   dot1dStaticTable) is being used to determine if\n                   and how frames addressed to the value of the\n                   corresponding instance of dot1dTpFdbAddress are\n                   being forwarded.\n               invalid(2) - this entry is no longer valid (e.g.,\n                   it was learned but has since aged out), but has\n                   not yet been flushed from the table.\n               learned(3) - the value of the corresponding instance\n                   of dot1dTpFdbPort was learned, and is being\n                   used.\n               self(4) - the value of the corresponding instance of\n                   dot1dTpFdbAddress represents one of the bridge's\n                   addresses.  The corresponding instance of\n                   dot1dTpFdbPort indicates which of the bridge's\n                   ports has this address.\n               mgmt(5) - the value of the corresponding instance of\n                   dot1dTpFdbAddress is also the value of an\n                   existing instance of dot1dStaticAddress.
%edes        dot1dTpPortTable        A table that contains information about every port that\n           is associated with this transparent bridge.
%edes        dot1dTpPortEntry        A list of information for each port of a transparent\n           bridge.
%edes        dot1dTpPort             The port number of the port for which this entry\n           contains Transparent bridging management information.
%eunits      dot1dTpPortMaxInfo      bytes
%edes        dot1dTpPortMaxInfo      The maximum size of the INFO (non-MAC) field that\n\n           this port will receive or transmit.
%eunits      dot1dTpPortInFrames     frames
%edes        dot1dTpPortInFrames     The number of frames that have been received by this\n           port from its segment.  Note that a frame received on the\n           interface corresponding to this port is only counted by\n           this object if and only if it is for a protocol being\n           processed by the local bridging function, including\n           bridge management frames.
%eref        dot1dTpPortInFrames     IEEE 802.1D-1998: clause 14.6.1.1.3
%eunits      dot1dTpPortOutFrames    frames
%edes        dot1dTpPortOutFrames    The number of frames that have been transmitted by this\n           port to its segment.  Note that a frame transmitted on\n           the interface corresponding to this port is only counted\n           by this object if and only if it is for a protocol being\n           processed by the local bridging function, including\n           bridge management frames.
%eref        dot1dTpPortOutFrames    IEEE 802.1D-1998: clause 14.6.1.1.3
%eunits      dot1dTpPortInDiscards   frames
%edes        dot1dTpPortInDiscards   Count of received valid frames that were discarded\n           (i.e., filtered) by the Forwarding Process.
%eref        dot1dTpPortInDiscards   IEEE 802.1D-1998: clause 14.6.1.1.3
%edes        dot1dTpHCPortTable      A table that contains information about every high-\n        capacity port that is associated with this transparent\n        bridge.
%edes        dot1dTpHCPortEntry      Statistics information for each high-capacity port of a\n        transparent bridge.
%edes        dot1dTpHCPortInFrames   The number of frames that have been received by this\n        port from its segment.  Note that a frame received on\n        the interface corresponding to this port is only counted\n        by this object if and only if it is for a protocol being\n        processed by the local bridging function, including\n        bridge management frames.
%eref        dot1dTpHCPortInFrames   ISO/IEC 15802-3 Section 14.6.1.1.3
%edes        dot1dTpHCPortOutFrames  The number of frames that have been transmitted by this\n        port to its segment.  Note that a frame transmitted on\n        the interface corresponding to this port is only counted\n        by this object if and only if it is for a protocol being\n        processed by the local bridging function, including\n        bridge management frames.
%eref        dot1dTpHCPortOutFrames  ISO/IEC 15802-3 Section 14.6.1.1.3
%edes        dot1dTpHCPortInDiscards Count of valid frames that have been received by this\n        port from its segment that were discarded (i.e.,\n        filtered) by the Forwarding Process.
%eref        dot1dTpHCPortInDiscards ISO/IEC 15802-3 Section 14.6.1.1.3
%edes        dot1dTpPortOverflowTable A table that contains the most-significant bits of\n        statistics counters for ports that are associated with this\n        transparent bridge that are on high-capacity interfaces, as\n        defined in the conformance clauses for this table.  This table\n        is provided as a way to read 64-bit counters for agents that\n        support only SNMPv1.\n\n        Note that the reporting of most-significant and\n        least-significant counter bits separately runs the risk of\n        missing an overflow of the lower bits in the interval between\n        sampling.  The manager must be aware of this possibility, even\n        within the same varbindlist, when interpreting the results of\n        a request or asynchronous notification.
%edes        dot1dTpPortOverflowEntry The most significant bits of statistics counters for a high-\n        capacity interface of a transparent bridge.  Each object is\n        associated with a corresponding object in dot1dTpPortTable\n        that indicates the least significant bits of the counter.
%edes        dot1dTpPortInOverflowFrames The number of times the associated dot1dTpPortInFrames\n        counter has overflowed.
%eref        dot1dTpPortInOverflowFrames ISO/IEC 15802-3 Section 14.6.1.1.3
%edes        dot1dTpPortOutOverflowFrames The number of times the associated dot1dTpPortOutFrames\n        counter has overflowed.
%eref        dot1dTpPortOutOverflowFrames ISO/IEC 15802-3 Section 14.6.1.1.3
%edes        dot1dTpPortInOverflowDiscards The number of times the associated\n        dot1dTpPortInDiscards counter has overflowed.
%eref        dot1dTpPortInOverflowDiscards ISO/IEC 15802-3 Section 14.6.1.1.3
%edes        dot1dStaticTable        A table containing filtering information configured\n           into the bridge by (local or network) management\n           specifying the set of ports to which frames received\n           from specific ports and containing specific destination\n           addresses are allowed to be forwarded.  The value of\n           zero in this table, as the port number from which frames\n           with a specific destination address are received, is\n           used to specify all ports for which there is no specific\n           entry in this table for that particular destination\n           address.  Entries are valid for unicast and for\n           group/broadcast addresses.
%eref        dot1dStaticTable        IEEE 802.1D-1998: clause 14.7.2
%edes        dot1dStaticEntry        Filtering information configured into the bridge by\n           (local or network) management specifying the set of\n           ports to which frames received from a specific port and\n           containing a specific destination address are allowed to\n           be forwarded.
%eref        dot1dStaticEntry        IEEE 802.1D-1998: clause 14.7.2
%edes        dot1dStaticAddress      The destination MAC address in a frame to which this\n           entry's filtering information applies.  This object can\n           take the value of a unicast address, a group address, or\n           the broadcast address.
%eref        dot1dStaticAddress      IEEE 802.1D-1998: clause 7.9.1, 7.9.2
%edes        dot1dStaticReceivePort  Either the value '0', or the port number of the port\n           from which a frame must be received in order for this\n           entry's filtering information to apply.  A value of zero\n           indicates that this entry applies on all ports of the\n           bridge for which there is no other applicable entry.
%edes        dot1dStaticAllowedToGoTo The set of ports to which frames received from a\n           specific port and destined for a specific MAC address,\n           are allowed to be forwarded.  Each octet within the\n           value of this object specifies a set of eight ports,\n           with the first octet specifying ports 1 through 8, the\n           second octet specifying ports 9 through 16, etc.  Within\n           each octet, the most significant bit represents the\n           lowest numbered port, and the least significant bit\n           represents the highest numbered port.  Thus, each port\n           of the bridge is represented by a single bit within the\n           value of this object.  If that bit has a value of '1',\n           then that port is included in the set of ports; the port\n           is not included if its bit has a value of '0'.  (Note\n           that the setting of the bit corresponding to the port\n           from which a frame is received is irrelevant.)  The\n           default value of this object is a string of ones of\n           appropriate length.\n\n           The value of this object may exceed the required minimum\n           maximum message size of some SNMP transport (484 bytes,\n           in the case of SNMP over UDP, see RFC 3417, section 3.2).\n           SNMP engines on bridges supporting a large number of\n           ports must support appropriate maximum message sizes.
%edes        dot1dStaticStatus       This object indicates the status of this entry.\n           The default value is permanent(3).\n               other(1) - this entry is currently in use but the\n                   conditions under which it will remain so are\n                   different from each of the following values.\n               invalid(2) - writing this value to the object\n                   removes the corresponding entry.\n               permanent(3) - this entry is currently in use and\n                   will remain so after the next reset of the\n                   bridge.\n               deleteOnReset(4) - this entry is currently in use\n                   and will remain so until the next reset of the\n                   bridge.\n               deleteOnTimeout(5) - this entry is currently in use\n                   and will remain so until it is aged out.
%edes        dot1dDeviceCapabilities Indicates the optional parts of IEEE 802.1D and 802.1Q\n        that are implemented by this device and are manageable\n        through this MIB.  Capabilities that are allowed on a\n        per-port basis are indicated in dot1dPortCapabilities.\n\n        dot1dExtendedFilteringServices(0),\n                              -- can perform filtering of\n                              -- individual multicast addresses\n                              -- controlled by GMRP.\n        dot1dTrafficClasses(1),\n                              -- can map user priority to\n                              -- multiple traffic classes.\n        dot1qStaticEntryIndividualPort(2),\n                              -- dot1qStaticUnicastReceivePort &\n                              -- dot1qStaticMulticastReceivePort\n                              -- can represent non-zero entries.\n        dot1qIVLCapable(3),   -- Independent VLAN Learning (IVL).\n        dot1qSVLCapable(4),   -- Shared VLAN Learning (SVL).\n        dot1qHybridCapable(5),\n                              -- both IVL & SVL simultaneously.\n        dot1qConfigurablePvidTagging(6),\n                              -- whether the implementation\n                              -- supports the ability to\n                              -- override the default PVID\n                              -- setting and its egress status\n                              -- (VLAN-Tagged or Untagged) on\n                              -- each port.\n        dot1dLocalVlanCapable(7)\n                              -- can support multiple local\n                              -- bridges, outside of the scope\n                              -- of 802.1Q defined VLANs.
%eref        dot1dDeviceCapabilities ISO/IEC 15802-3 Section 5.2,\n        IEEE 802.1Q/D11 Section 5.2, 12.10.1.1.3/b/2
%edes        dot1dTrafficClassesEnabled The value true(1) indicates that Traffic Classes are\n        enabled on this bridge.  When false(2), the bridge\n        operates with a single priority level for all traffic.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1dGmrpStatus         The administrative status requested by management for\n        GMRP.  The value enabled(1) indicates that GMRP should\n        be enabled on this device, in all VLANs, on all ports\n        for which it has not been specifically disabled.  When\n        disabled(2), GMRP is disabled, in all VLANs and on all\n        ports, and all GMRP packets will be forwarded\n        transparently.  This object affects both Applicant and\n        Registrar state machines.  A transition from disabled(2)\n        to enabled(1) will cause a reset of all GMRP state\n        machines on all ports.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1dPortCapabilitiesTable A table that contains capabilities information about\n        every port that is associated with this bridge.
%edes        dot1dPortCapabilitiesEntry A set of capabilities information about this port\n        indexed by dot1dBasePort.
%edes        dot1dPortCapabilities   Indicates the parts of IEEE 802.1D and 802.1Q that are\n        optional on a per-port basis, that are implemented by\n        this device, and that are manageable through this MIB.\n\n        dot1qDot1qTagging(0), -- supports 802.1Q VLAN tagging of\n                              -- frames and GVRP.\n        dot1qConfigurableAcceptableFrameTypes(1),\n                              -- allows modified values of\n                              -- dot1qPortAcceptableFrameTypes.\n        dot1qIngressFiltering(2)\n                              -- supports the discarding of any\n                              -- frame received on a Port whose\n                              -- VLAN classification does not\n                              -- include that Port in its Member\n                              -- set.
%eref        dot1dPortCapabilities   ISO/IEC 15802-3 Section 5.2,\n        IEEE 802.1Q/D11 Section 5.2
%edes        dot1dPortPriorityTable  A table that contains information about every port that\n        is associated with this transparent bridge.
%edes        dot1dPortPriorityEntry  A list of Default User Priorities for each port of a\n        transparent bridge.  This is indexed by dot1dBasePort.
%edes        dot1dPortDefaultUserPriority The default ingress User Priority for this port.  This\n        only has effect on media, such as Ethernet, that do not\n        support native User Priority.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1dPortNumTrafficClasses The number of egress traffic classes supported on this\n        port.  This object may optionally be read-only.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1dUserPriorityRegenTable A list of Regenerated User Priorities for each received\n        User Priority on each port of a bridge.  The Regenerated\n        User Priority value may be used to index the Traffic\n        Class Table for each input port.  This only has effect\n        on media that support native User Priority.  The default\n        values for Regenerated User Priorities are the same as\n        the User Priorities.
%eref        dot1dUserPriorityRegenTable ISO/IEC 15802-3 Section 6.4
%edes        dot1dUserPriorityRegenEntry A mapping of incoming User Priority to a Regenerated\n        User Priority.
%edes        dot1dUserPriority       The User Priority for a frame received on this port.
%edes        dot1dRegenUserPriority  The Regenerated User Priority that the incoming User\n        Priority is mapped to for this port.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1dTrafficClassTable  A table mapping evaluated User Priority to Traffic\n        Class, for forwarding by the bridge.  Traffic class is a\n        number in the range (0..(dot1dPortNumTrafficClasses-1)).
%eref        dot1dTrafficClassTable  ISO/IEC 15802-3 Table 7-2
%edes        dot1dTrafficClassEntry  User Priority to Traffic Class mapping.
%edes        dot1dTrafficClassPriority The Priority value determined for the received frame.\n        This value is equivalent to the priority indicated in\n        the tagged frame received, or one of the evaluated\n        priorities, determined according to the media-type.\n\n        For untagged frames received from Ethernet media, this\n        value is equal to the dot1dPortDefaultUserPriority value\n        for the ingress port.\n\n        For untagged frames received from non-Ethernet media,\n        this value is equal to the dot1dRegenUserPriority value\n        for the ingress port and media-specific user priority.
%edes        dot1dTrafficClass       The Traffic Class the received frame is mapped to.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1dPortOutboundAccessPriorityTable A table mapping Regenerated User Priority to Outbound\n        Access Priority.  This is a fixed mapping for all port\n        types, with two options for 802.5 Token Ring.
%eref        dot1dPortOutboundAccessPriorityTable ISO/IEC 15802-3 Table 7-3
%edes        dot1dPortOutboundAccessPriorityEntry Regenerated User Priority to Outbound Access Priority\n        mapping.
%edes        dot1dPortOutboundAccessPriority The Outbound Access Priority the received frame is\n        mapped to.
%edes        dot1dPortGarpTable      A table of GARP control information about every bridge\n        port.  This is indexed by dot1dBasePort.
%edes        dot1dPortGarpEntry      GARP control information for a bridge port.
%edes        dot1dPortGarpJoinTime   The GARP Join time, in centiseconds.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1dPortGarpLeaveTime  The GARP Leave time, in centiseconds.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1dPortGarpLeaveAllTime The GARP LeaveAll time, in centiseconds.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1dPortGmrpTable      A table of GMRP control and status information about\n        every bridge port.  Augments the dot1dBasePortTable.
%edes        dot1dPortGmrpEntry      GMRP control and status information for a bridge port.
%edes        dot1dPortGmrpStatus     The administrative state of GMRP operation on this port.  The\n        value enabled(1) indicates that GMRP is enabled on this port\n        in all VLANs as long as dot1dGmrpStatus is also enabled(1).\n        A value of disabled(2) indicates that GMRP is disabled on\n        this port in all VLANs: any GMRP packets received will\n        be silently discarded, and no GMRP registrations will be\n        propagated from other ports.  Setting this to a value of\n        enabled(1) will be stored by the agent but will only take\n        effect on the GMRP protocol operation if dot1dGmrpStatus\n        also indicates the value enabled(1).  This object affects\n        all GMRP Applicant and Registrar state machines on this\n        port.  A transition from disabled(2) to enabled(1) will\n        cause a reset of all GMRP state machines on this port.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1dPortGmrpFailedRegistrations The total number of failed GMRP registrations, for any\n        reason, in all VLANs, on this port.
%edes        dot1dPortGmrpLastPduOrigin The Source MAC Address of the last GMRP message\n        received on this port.
%edes        dot1dPortRestrictedGroupRegistration The state of Restricted Group Registration on this port.\n         If the value of this control is true(1), then creation\n         of a new dynamic entry is permitted only if there is a\n         Static Filtering Entry for the VLAN concerned, in which\n         the Registrar Administrative Control value is Normal\n         Registration.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%eref        dot1dPortRestrictedGroupRegistration IEEE 802.1t clause 10.3.2.3, 14.10.1.3.
%edes        pBridgeExtCapGroup      A collection of objects indicating the optional\n        capabilities of the device.
%edes        pBridgeDeviceGmrpGroup  A collection of objects providing device-level control\n        for the Multicast Filtering extended bridge services.
%edes        pBridgeDevicePriorityGroup A collection of objects providing device-level control\n        for the Priority services.
%edes        pBridgeDefaultPriorityGroup A collection of objects defining the User Priority\n        applicable to each port for media that do not support\n        native User Priority.
%edes        pBridgeRegenPriorityGroup A collection of objects defining the User Priorities\n        applicable to each port for media that support native\n        User Priority.
%edes        pBridgePriorityGroup    A collection of objects defining the traffic classes\n        within a bridge for each evaluated User Priority.
%edes        pBridgeAccessPriorityGroup A collection of objects defining the media-dependent\n        outbound access level for each priority.
%edes        pBridgePortGarpGroup    A collection of objects providing port level control\n        and status information for GARP operation.
%est                 pBridgePortGmrpGroup deprecated
%edes        pBridgePortGmrpGroup    A collection of objects providing port level control\n        and status information for GMRP operation.
%edes        pBridgeHCPortGroup      A collection of objects providing 64-bit statistics\n         counters for high-capacity bridge ports.
%edes        pBridgePortOverflowGroup A collection of objects providing overflow statistics\n        counters for high-capacity bridge ports.
%edes        pBridgePortGmrpGroup2   A collection of objects providing port level control\n        and status information for GMRP operation.
%edes        dot1qVlanVersionNumber  The version number of IEEE 802.1Q that this device\n        supports.
%eref        dot1qVlanVersionNumber  IEEE 802.1Q/D11 Section 12.10.1.1
%edes        dot1qMaxVlanId          The maximum IEEE 802.1Q VLAN-ID that this device\n        supports.
%eref        dot1qMaxVlanId          IEEE 802.1Q/D11 Section 9.3.2.3
%edes        dot1qMaxSupportedVlans  The maximum number of IEEE 802.1Q VLANs that this\n        device supports.
%eref        dot1qMaxSupportedVlans  IEEE 802.1Q/D11 Section 12.10.1.1
%edes        dot1qNumVlans           The current number of IEEE 802.1Q VLANs that are\n        configured in this device.
%eref        dot1qNumVlans           IEEE 802.1Q/D11 Section 12.7.1.1
%edes        dot1qGvrpStatus         The administrative status requested by management for\n        GVRP.  The value enabled(1) indicates that GVRP should\n        be enabled on this device, on all ports for which it has\n        not been specifically disabled.  When disabled(2), GVRP\n        is disabled on all ports, and all GVRP packets will be\n        forwarded transparently.  This object affects all GVRP\n        Applicant and Registrar state machines.  A transition\n        from disabled(2) to enabled(1) will cause a reset of all\n        GVRP state machines on all ports.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1qFdbTable           A table that contains configuration and control\n        information for each Filtering Database currently\n        operating on this device.  Entries in this table appear\n        automatically when VLANs are assigned FDB IDs in the\n        dot1qVlanCurrentTable.
%edes        dot1qFdbEntry           Information about a specific Filtering Database.
%edes        dot1qFdbId              The identity of this Filtering Database.
%edes        dot1qFdbDynamicCount    The current number of dynamic entries in this\n        Filtering Database.
%eref        dot1qFdbDynamicCount    IEEE 802.1Q/D11 Section 12.7.1.1.3
%edes        dot1qTpFdbTable         A table that contains information about unicast entries\n        for which the device has forwarding and/or filtering\n        information.  This information is used by the\n        transparent bridging function in determining how to\n        propagate a received frame.
%eref        dot1qTpFdbTable         IEEE 802.1Q/D11 Section 12.7.7
%edes        dot1qTpFdbEntry         Information about a specific unicast MAC address for\n        which the device has some forwarding and/or filtering\n        information.
%edes        dot1qTpFdbAddress       A unicast MAC address for which the device has\n        forwarding and/or filtering information.
%edes        dot1qTpFdbPort          Either the value '0', or the port number of the port on\n        which a frame having a source address equal to the value\n        of the corresponding instance of dot1qTpFdbAddress has\n        been seen.  A value of '0' indicates that the port\n        number has not been learned but that the device does\n        have some forwarding/filtering information about this\n        address (e.g., in the dot1qStaticUnicastTable).\n        Implementors are encouraged to assign the port value to\n        this object whenever it is learned, even for addresses\n        for which the corresponding value of dot1qTpFdbStatus is\n        not learned(3).
%edes        dot1qTpFdbStatus        The status of this entry.  The meanings of the values\n        are:\n            other(1) - none of the following.  This may include\n                the case where some other MIB object (not the\n                corresponding instance of dot1qTpFdbPort, nor an\n                entry in the dot1qStaticUnicastTable) is being\n                used to determine if and how frames addressed to\n                the value of the corresponding instance of\n                dot1qTpFdbAddress are being forwarded.\n            invalid(2) - this entry is no longer valid (e.g., it\n                was learned but has since aged out), but has not\n                yet been flushed from the table.\n            learned(3) - the value of the corresponding instance\n                of dot1qTpFdbPort was learned and is being used.\n            self(4) - the value of the corresponding instance of\n                dot1qTpFdbAddress represents one of the device's\n                addresses.  The corresponding instance of\n                dot1qTpFdbPort indicates which of the device's\n                ports has this address.\n            mgmt(5) - the value of the corresponding instance of\n                dot1qTpFdbAddress is also the value of an\n                existing instance of dot1qStaticAddress.
%edes        dot1qTpGroupTable       A table containing filtering information for VLANs\n        configured into the bridge by (local or network)\n        management, or learned dynamically, specifying the set of\n        ports to which frames received on a VLAN for this FDB\n        and containing a specific Group destination address are\n        allowed to be forwarded.
%edes        dot1qTpGroupEntry       Filtering information configured into the bridge by\n        management, or learned dynamically, specifying the set of\n        ports to which frames received on a VLAN and containing\n        a specific Group destination address are allowed to be\n        forwarded.  The subset of these ports learned dynamically\n        is also provided.
%edes        dot1qTpGroupAddress     The destination Group MAC address in a frame to which\n        this entry's filtering information applies.
%edes        dot1qTpGroupEgressPorts The complete set of ports, in this VLAN, to which\n        frames destined for this Group MAC address are currently\n        being explicitly forwarded.  This does not include ports\n        for which this address is only implicitly forwarded, in\n        the dot1qForwardAllPorts list.
%edes        dot1qTpGroupLearnt      The subset of ports in dot1qTpGroupEgressPorts that\n        were learned by GMRP or some other dynamic mechanism, in\n        this Filtering database.
%edes        dot1qForwardAllTable    A table containing forwarding information for each\n        VLAN, specifying the set of ports to which forwarding of\n        all multicasts applies, configured statically by\n        management or dynamically by GMRP.  An entry appears in\n        this table for all VLANs that are currently\n        instantiated.
%eref        dot1qForwardAllTable    IEEE 802.1Q/D11 Section 12.7.2, 12.7.7
%edes        dot1qForwardAllEntry    Forwarding information for a VLAN, specifying the set\n        of ports to which all multicasts should be forwarded,\n        configured statically by management or dynamically by\n        GMRP.
%edes        dot1qForwardAllPorts    The complete set of ports in this VLAN to which all\n        multicast group-addressed frames are to be forwarded.\n        This includes ports for which this need has been\n        determined dynamically by GMRP, or configured statically\n        by management.
%edes        dot1qForwardAllStaticPorts The set of ports configured by management in this VLAN\n        to which all multicast group-addressed frames are to be\n        forwarded.  Ports entered in this list will also appear\n        in the complete set shown by dot1qForwardAllPorts.  This\n        value will be restored after the device is reset.  This\n        only applies to ports that are members of the VLAN,\n        defined by dot1qVlanCurrentEgressPorts.  A port may not\n        be added in this set if it is already a member of the\n        set of ports in dot1qForwardAllForbiddenPorts.  The\n        default value is a string of ones of appropriate length,\n        to indicate the standard behaviour of using basic\n        filtering services, i.e., forward all multicasts to all\n        ports.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1qForwardAllForbiddenPorts The set of ports configured by management in this VLAN\n        for which the Service Requirement attribute Forward All\n        Multicast Groups may not be dynamically registered by\n        GMRP.  This value will be restored after the device is\n        reset.  A port may not be added in this set if it is\n        already a member of the set of ports in\n        dot1qForwardAllStaticPorts.  The default value is a\n        string of zeros of appropriate length.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1qForwardUnregisteredTable A table containing forwarding information for each\n        VLAN, specifying the set of ports to which forwarding of\n        multicast group-addressed frames for which no\n        more specific forwarding information applies.  This is\n        configured statically by management and determined\n        dynamically by GMRP.  An entry appears in this table for\n        all VLANs that are currently instantiated.
%eref        dot1qForwardUnregisteredTable IEEE 802.1Q/D11 Section 12.7.2, 12.7.7
%edes        dot1qForwardUnregisteredEntry Forwarding information for a VLAN, specifying the set\n        of ports to which all multicasts for which there is no\n        more specific forwarding information shall be forwarded.\n        This is configured statically by management or\n        dynamically by GMRP.
%edes        dot1qForwardUnregisteredPorts The complete set of ports in this VLAN to which\n        multicast group-addressed frames for which there is no\n        more specific forwarding information will be forwarded.\n        This includes ports for which this need has been\n        determined dynamically by GMRP, or configured statically\n        by management.
%edes        dot1qForwardUnregisteredStaticPorts The set of ports configured by management, in this\n        VLAN, to which multicast group-addressed frames for\n        which there is no more specific forwarding information\n        are to be forwarded.  Ports entered in this list will\n        also appear in the complete set shown by\n        dot1qForwardUnregisteredPorts.  This value will be\n        restored after the device is reset.  A port may not be\n        added in this set if it is already a member of the set\n        of ports in dot1qForwardUnregisteredForbiddenPorts.  The\n        default value is a string of zeros of appropriate\n        length, although this has no effect with the default\n        value of dot1qForwardAllStaticPorts.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1qForwardUnregisteredForbiddenPorts The set of ports configured by management in this VLAN\n        for which the Service Requirement attribute Forward\n        Unregistered Multicast Groups may not be dynamically\n        registered by GMRP.  This value will be restored after\n        the device is reset.  A port may not be added in this\n        set if it is already a member of the set of ports in\n        dot1qForwardUnregisteredStaticPorts.  The default value\n        is a string of zeros of appropriate length.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1qStaticUnicastTable A table containing filtering information for Unicast\n        MAC addresses for each Filtering Database, configured\n        into the device by (local or network) management\n        specifying the set of ports to which frames received\n        from specific ports and containing specific unicast\n        destination addresses are allowed to be forwarded.  A\n        value of zero in this table (as the port number from\n        which frames with a specific destination address are\n        received) is used to specify all ports for which there\n        is no specific entry in this table for that particular\n        destination address.  Entries are valid for unicast\n        addresses only.
%eref        dot1qStaticUnicastTable IEEE 802.1Q/D11 Section 12.7.7,\n        ISO/IEC 15802-3 Section 7.9.1
%edes        dot1qStaticUnicastEntry Filtering information configured into the device by\n        (local or network) management specifying the set of\n        ports to which frames received from a specific port and\n        containing a specific unicast destination address are\n        allowed to be forwarded.
%edes        dot1qStaticUnicastAddress The destination MAC address in a frame to which this\n        entry's filtering information applies.  This object must\n        take the value of a unicast address.
%edes        dot1qStaticUnicastReceivePort Either the value '0' or the port number of the port\n        from which a frame must be received in order for this\n        entry's filtering information to apply.  A value of zero\n        indicates that this entry applies on all ports of the\n        device for which there is no other applicable entry.
%edes        dot1qStaticUnicastAllowedToGoTo The set of ports for which a frame with a specific\n        unicast address will be flooded in the event that it\n        has not been learned.  It also specifies the set of\n        ports on which a specific unicast address may be dynamically\n        learned.  The dot1qTpFdbTable will have an equivalent\n        entry with a dot1qTpFdbPort value of '0' until this\n        address has been learned, at which point it will be updated\n        with the port the address has been seen on.  This only\n        applies to ports that are members of the VLAN, defined\n        by dot1qVlanCurrentEgressPorts.  The default value of\n        this object is a string of ones of appropriate length.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%eref        dot1qStaticUnicastAllowedToGoTo IEEE 802.1Q/D11 Table 8-5, ISO/IEC 15802-3 Table 7-5
%edes        dot1qStaticUnicastStatus This object indicates the status of this entry.\n            other(1) - this entry is currently in use, but\n                the conditions under which it will remain\n                so differ from the following values.\n            invalid(2) - writing this value to the object\n                removes the corresponding entry.\n            permanent(3) - this entry is currently in use\n                and will remain so after the next reset of\n                the bridge.\n            deleteOnReset(4) - this entry is currently in\n                use and will remain so until the next\n                reset of the bridge.\n            deleteOnTimeout(5) - this entry is currently in\n                use and will remain so until it is aged out.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1qStaticMulticastTable A table containing filtering information for Multicast\n        and Broadcast MAC addresses for each VLAN, configured\n        into the device by (local or network) management\n        specifying the set of ports to which frames received\n        from specific ports and containing specific Multicast\n        and Broadcast destination addresses are allowed to be\n        forwarded.  A value of zero in this table (as the port\n        number from which frames with a specific destination\n        address are received) is used to specify all ports for\n        which there is no specific entry in this table for that\n        particular destination address.  Entries are valid for\n        Multicast and Broadcast addresses only.
%eref        dot1qStaticMulticastTable IEEE 802.1Q/D11 Section 12.7.7,\n        ISO/IEC 15802-3 Section 7.9.1
%edes        dot1qStaticMulticastEntry Filtering information configured into the device by\n        (local or network) management specifying the set of\n        ports to which frames received from this specific port\n        for this VLAN and containing this Multicast or Broadcast\n        destination address are allowed to be forwarded.
%edes        dot1qStaticMulticastAddress The destination MAC address in a frame to which this\n        entry's filtering information applies.  This object must\n        take the value of a Multicast or Broadcast address.
%edes        dot1qStaticMulticastReceivePort Either the value '0' or the port number of the port\n        from which a frame must be received in order for this\n        entry's filtering information to apply.  A value of zero\n        indicates that this entry applies on all ports of the\n        device for which there is no other applicable entry.
%edes        dot1qStaticMulticastStaticEgressPorts The set of ports to which frames received from a\n        specific port and destined for a specific Multicast or\n        Broadcast MAC address must be forwarded, regardless of\n        any dynamic information, e.g., from GMRP.  A port may not\n        be added in this set if it is already a member of the\n        set of ports in dot1qStaticMulticastForbiddenEgressPorts.\n        The default value of this object is a string of ones of\n        appropriate length.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1qStaticMulticastForbiddenEgressPorts The set of ports to which frames received from a\n        specific port and destined for a specific Multicast or\n        Broadcast MAC address must not be forwarded, regardless\n        of any dynamic information, e.g., from GMRP.  A port may\n        not be added in this set if it is already a member of the\n        set of ports in dot1qStaticMulticastStaticEgressPorts.\n        The default value of this object is a string of zeros of\n        appropriate length.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1qStaticMulticastStatus This object indicates the status of this entry.\n            other(1) - this entry is currently in use, but\n                the conditions under which it will remain\n                so differ from the following values.\n            invalid(2) - writing this value to the object\n                removes the corresponding entry.\n            permanent(3) - this entry is currently in use\n                and will remain so after the next reset of\n                the bridge.\n            deleteOnReset(4) - this entry is currently in\n                use and will remain so until the next\n                reset of the bridge.\n            deleteOnTimeout(5) - this entry is currently in\n                use and will remain so until it is aged out.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1qVlanNumDeletes     The number of times a VLAN entry has been deleted from\n        the dot1qVlanCurrentTable (for any reason).  If an entry\n        is deleted, then inserted, and then deleted, this\n        counter will be incremented by 2.
%edes        dot1qVlanCurrentTable   A table containing current configuration information\n        for each VLAN currently configured into the device by\n        (local or network) management, or dynamically created\n        as a result of GVRP requests received.
%edes        dot1qVlanCurrentEntry   Information for a VLAN configured into the device by\n        (local or network) management, or dynamically created\n        as a result of GVRP requests received.
%edes        dot1qVlanTimeMark       A TimeFilter for this entry.  See the TimeFilter\n        textual convention to see how this works.
%edes        dot1qVlanIndex          The VLAN-ID or other identifier referring to this VLAN.
%edes        dot1qVlanFdbId          The Filtering Database used by this VLAN.  This is one\n        of the dot1qFdbId values in the dot1qFdbTable.  This\n        value is allocated automatically by the device whenever\n        the VLAN is created: either dynamically by GVRP, or by\n        management, in dot1qVlanStaticTable.  Allocation of this\n        value follows the learning constraints defined for this\n        VLAN in dot1qLearningConstraintsTable.
%edes        dot1qVlanCurrentEgressPorts The set of ports that are transmitting traffic for\n        this VLAN as either tagged or untagged frames.
%eref        dot1qVlanCurrentEgressPorts IEEE 802.1Q/D11 Section 12.10.2.1
%edes        dot1qVlanCurrentUntaggedPorts The set of ports that are transmitting traffic for\n        this VLAN as untagged frames.
%eref        dot1qVlanCurrentUntaggedPorts IEEE 802.1Q/D11 Section 12.10.2.1
%edes        dot1qVlanStatus         This object indicates the status of this entry.\n            other(1) - this entry is currently in use, but the\n                conditions under which it will remain so differ\n                from the following values.\n            permanent(2) - this entry, corresponding to an entry\n                in dot1qVlanStaticTable, is currently in use and\n                will remain so after the next reset of the\n                device.  The port lists for this entry include\n                ports from the equivalent dot1qVlanStaticTable\n                entry and ports learned dynamically.\n            dynamicGvrp(3) - this entry is currently in use\n                and will remain so until removed by GVRP.  There\n                is no static entry for this VLAN, and it will be\n                removed when the last port leaves the VLAN.
%edes        dot1qVlanCreationTime   The value of sysUpTime when this VLAN was created.
%edes        dot1qVlanStaticTable    A table containing static configuration information for\n        each VLAN configured into the device by (local or\n        network) management.  All entries are permanent and will\n        be restored after the device is reset.
%edes        dot1qVlanStaticEntry    Static information for a VLAN configured into the\n        device by (local or network) management.
%edes        dot1qVlanStaticName     An administratively assigned string, which may be used\n        to identify the VLAN.
%eref        dot1qVlanStaticName     IEEE 802.1Q/D11 Section 12.10.2.1
%edes        dot1qVlanStaticEgressPorts The set of ports that are permanently assigned to the\n        egress list for this VLAN by management.  Changes to a\n        bit in this object affect the per-port, per-VLAN\n        Registrar control for Registration Fixed for the\n        relevant GVRP state machine on each port.  A port may\n        not be added in this set if it is already a member of\n        the set of ports in dot1qVlanForbiddenEgressPorts.  The\n        default value of this object is a string of zeros of\n        appropriate length, indicating not fixed.
%eref        dot1qVlanStaticEgressPorts IEEE 802.1Q/D11 Section 12.7.7.3, 11.2.3.2.3
%edes        dot1qVlanForbiddenEgressPorts The set of ports that are prohibited by management\n        from being included in the egress list for this VLAN.\n        Changes to this object that cause a port to be included\n        or excluded affect the per-port, per-VLAN Registrar\n        control for Registration Forbidden for the relevant GVRP\n        state machine on each port.  A port may not be added in\n        this set if it is already a member of the set of ports\n        in dot1qVlanStaticEgressPorts.  The default value of\n        this object is a string of zeros of appropriate length,\n        excluding all ports from the forbidden set.
%eref        dot1qVlanForbiddenEgressPorts IEEE 802.1Q/D11 Section 12.7.7.3, 11.2.3.2.3
%edes        dot1qVlanStaticUntaggedPorts The set of ports that should transmit egress packets\n        for this VLAN as untagged.  The default value of this\n        object for the default VLAN (dot1qVlanIndex = 1) is a string\n        of appropriate length including all ports.  There is no\n        specified default for other VLANs.  If a device agent cannot\n        support the set of ports being set, then it will reject the\n        set operation with an error.  For example, a\n        manager might attempt to set more than one VLAN to be untagged\n        on egress where the device does not support this IEEE 802.1Q\n        option.
%eref        dot1qVlanStaticUntaggedPorts IEEE 802.1Q/D11 Section 12.10.2.1
%edes        dot1qVlanStaticRowStatus This object indicates the status of this entry.
%edes        dot1qNextFreeLocalVlanIndex The next available value for dot1qVlanIndex of a local\n        VLAN entry in dot1qVlanStaticTable.  This will report\n        values >=4096 if a new Local VLAN may be created or else\n        the value 0 if this is not possible.\n\n        A row creation operation in this table for an entry with a local\n        VlanIndex value may fail if the current value of this object\n        is not used as the index.  Even if the value read is used,\n        there is no guarantee that it will still be the valid index\n        when the create operation is attempted; another manager may\n        have already got in during the intervening time interval.\n        In this case, dot1qNextFreeLocalVlanIndex should be re-read\n        and the creation re-tried with the new value.\n\n        This value will automatically change when the current value is\n        used to create a new row.
%edes        dot1qPortVlanTable      A table containing per-port control and status\n        information for VLAN configuration in the device.
%edes        dot1qPortVlanEntry      Information controlling VLAN configuration for a port\n        on the device.  This is indexed by dot1dBasePort.
%edes        dot1qPvid               The PVID, the VLAN-ID assigned to untagged frames or\n        Priority-Tagged frames received on this port.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%eref        dot1qPvid               IEEE 802.1Q/D11 Section 12.10.1.1
%edes        dot1qPortAcceptableFrameTypes When this is admitOnlyVlanTagged(2), the device will\n        discard untagged frames or Priority-Tagged frames\n        received on this port.  When admitAll(1), untagged\n        frames or Priority-Tagged frames received on this port\n        will be accepted and assigned to a VID based on the\n        PVID and VID Set for this port.\n\n        This control does not affect VLAN-independent Bridge\n        Protocol Data Unit (BPDU) frames, such as GVRP and\n        Spanning Tree Protocol (STP).  It does affect VLAN-\n        dependent BPDU frames, such as GMRP.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%eref        dot1qPortAcceptableFrameTypes IEEE 802.1Q/D11 Section 12.10.1.3
%edes        dot1qPortIngressFiltering When this is true(1), the device will discard incoming\n        frames for VLANs that do not include this Port in its\n        Member set.  When false(2), the port will accept all\n        incoming frames.\n\n        This control does not affect VLAN-independent BPDU\n        frames, such as GVRP and STP.  It does affect VLAN-\n        dependent BPDU frames, such as GMRP.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%eref        dot1qPortIngressFiltering IEEE 802.1Q/D11 Section 12.10.1.4
%edes        dot1qPortGvrpStatus     The state of GVRP operation on this port.  The value\n        enabled(1) indicates that GVRP is enabled on this port,\n        as long as dot1qGvrpStatus is also enabled for this\n        device.  When disabled(2) but dot1qGvrpStatus is still\n        enabled for the device, GVRP is disabled on this port:\n        any GVRP packets received will be silently discarded, and\n        no GVRP registrations will be propagated from other\n        ports.  This object affects all GVRP Applicant and\n        Registrar state machines on this port.  A transition\n        from disabled(2) to enabled(1) will cause a reset of all\n        GVRP state machines on this port.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1qPortGvrpFailedRegistrations The total number of failed GVRP registrations, for any\n        reason, on this port.
%edes        dot1qPortGvrpLastPduOrigin The Source MAC Address of the last GVRP message\n        received on this port.
%edes        dot1qPortRestrictedVlanRegistration The state of Restricted VLAN Registration on this port.\n         If the value of this control is true(1), then creation\n         of a new dynamic VLAN entry is permitted only if there\n         is a Static VLAN Registration Entry for the VLAN concerned,\n         in which the Registrar Administrative Control value for\n         this port is Normal Registration.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%eref        dot1qPortRestrictedVlanRegistration IEEE 802.1u clause 11.2.3.2.3, 12.10.1.7.
%edes        dot1qPortVlanStatisticsTable A table containing per-port, per-VLAN statistics for\n        traffic received.  Separate objects are provided for both the\n        most-significant and least-significant bits of statistics\n        counters for ports that are associated with this transparent\n        bridge.  The most-significant bit objects are only required on\n        high-capacity interfaces, as defined in the conformance clauses\n        for these objects.  This mechanism is provided as a way to read\n        64-bit counters for agents that support only SNMPv1.\n\n        Note that the reporting of most-significant and least-\n        significant counter bits separately runs the risk of missing\n        an overflow of the lower bits in the interval between sampling.\n        The manager must be aware of this possibility, even within the\n        same varbindlist, when interpreting the results of a request or\n        asynchronous notification.
%edes        dot1qPortVlanStatisticsEntry Traffic statistics for a VLAN on an interface.
%edes        dot1qTpVlanPortInFrames The number of valid frames received by this port from\n        its segment that were classified as belonging to this\n        VLAN.  Note that a frame received on this port is\n        counted by this object if and only if it is for a\n        protocol being processed by the local forwarding process\n        for this VLAN.  This object includes received bridge\n        management frames classified as belonging to this VLAN\n        (e.g., GMRP, but not GVRP or STP.
%eref        dot1qTpVlanPortInFrames IEEE 802.1Q/D11 Section 12.6.1.1.3(a)
%edes        dot1qTpVlanPortOutFrames The number of valid frames transmitted by this port to\n        its segment from the local forwarding process for this\n        VLAN.  This includes bridge management frames originated\n        by this device that are classified as belonging to this\n        VLAN (e.g., GMRP, but not GVRP or STP).
%eref        dot1qTpVlanPortOutFrames IEEE 802.1Q/D11 Section 12.6.1.1.3(d)
%edes        dot1qTpVlanPortInDiscards The number of valid frames received by this port from\n        its segment that were classified as belonging to this\n        VLAN and that were discarded due to VLAN-related reasons.\n        Specifically, the IEEE 802.1Q counters for Discard\n        Inbound and Discard on Ingress Filtering.
%eref        dot1qTpVlanPortInDiscards IEEE 802.1Q/D11 Section 12.6.1.1.3
%edes        dot1qTpVlanPortInOverflowFrames The number of times the associated\n        dot1qTpVlanPortInFrames counter has overflowed.
%eref        dot1qTpVlanPortInOverflowFrames ISO/IEC 15802-3 Section 14.6.1.1.3
%edes        dot1qTpVlanPortOutOverflowFrames The number of times the associated\n        dot1qTpVlanPortOutFrames counter has overflowed.
%eref        dot1qTpVlanPortOutOverflowFrames ISO/IEC 15802-3 Section 14.6.1.1.3
%edes        dot1qTpVlanPortInOverflowDiscards The number of times the associated\n        dot1qTpVlanPortInDiscards counter has overflowed.
%eref        dot1qTpVlanPortInOverflowDiscards ISO/IEC 15802-3 Section 14.6.1.1.3
%edes        dot1qPortVlanHCStatisticsTable A table containing per-port, per-VLAN statistics for\n        traffic on high-capacity interfaces.
%edes        dot1qPortVlanHCStatisticsEntry Traffic statistics for a VLAN on a high-capacity\n        interface.
%edes        dot1qTpVlanPortHCInFrames The number of valid frames received by this port from\n        its segment that were classified as belonging to this\n        VLAN.  Note that a frame received on this port is\n        counted by this object if and only if it is for a\n        protocol being processed by the local forwarding process\n        for this VLAN.  This object includes received bridge\n        management frames classified as belonging to this VLAN\n        (e.g., GMRP, but not GVRP or STP).
%eref        dot1qTpVlanPortHCInFrames IEEE 802.1Q/D11 Section 12.6.1.1.3(a)
%edes        dot1qTpVlanPortHCOutFrames The number of valid frames transmitted by this port to\n        its segment from the local forwarding process for this\n        VLAN.  This includes bridge management frames originated\n        by this device that are classified as belonging to this\n        VLAN (e.g., GMRP, but not GVRP or STP).
%eref        dot1qTpVlanPortHCOutFrames IEEE 802.1Q/D11 Section 12.6.1.1.3(d)
%edes        dot1qTpVlanPortHCInDiscards The number of valid frames received by this port from\n        its segment that were classified as belonging to this\n        VLAN and that were discarded due to VLAN-related reasons.\n        Specifically, the IEEE 802.1Q counters for Discard\n        Inbound and Discard on Ingress Filtering.
%eref        dot1qTpVlanPortHCInDiscards IEEE 802.1Q/D11 Section 12.6.1.1.3
%edes        dot1qLearningConstraintsTable A table containing learning constraints for sets of\n        Shared and Independent VLANs.
%eref        dot1qLearningConstraintsTable IEEE 802.1Q/D11 Section 12.10.3.1
%edes        dot1qLearningConstraintsEntry A learning constraint defined for a VLAN.
%edes        dot1qConstraintVlan     The index of the row in dot1qVlanCurrentTable for the\n        VLAN constrained by this entry.
%edes        dot1qConstraintSet      The identity of the constraint set to which\n        dot1qConstraintVlan belongs.  These values may be chosen\n        by the management station.
%edes        dot1qConstraintType     The type of constraint this entry defines.\n            independent(1) - the VLAN, dot1qConstraintVlan,\n                uses a filtering database independent from all\n                other VLANs in the same set, defined by\n                dot1qConstraintSet.\n            shared(2) - the VLAN, dot1qConstraintVlan, shares\n                the same filtering database as all other VLANs\n                in the same set, defined by dot1qConstraintSet.
%edes        dot1qConstraintStatus   The status of this entry.
%edes        dot1qConstraintSetDefault The identity of the constraint set to which a VLAN\n        belongs, if there is not an explicit entry for that VLAN\n        in dot1qLearningConstraintsTable.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1qConstraintTypeDefault The type of constraint set to which a VLAN belongs, if\n        there is not an explicit entry for that VLAN in\n        dot1qLearningConstraintsTable.  The types are as defined\n        for dot1qConstraintType.\n\n        The value of this object MUST be retained across\n        reinitializations of the management system.
%edes        dot1vProtocolGroupTable A table that contains mappings from Protocol\n         Templates to Protocol Group Identifiers used for\n         Port-and-Protocol-based VLAN Classification.
%eref        dot1vProtocolGroupTable IEEE 802.1v clause 8.6.4
%edes        dot1vProtocolGroupEntry A mapping from a Protocol Template to a Protocol\n         Group Identifier.
%edes        dot1vProtocolTemplateFrameType The data-link encapsulation format or the\n         'detagged_frame_type' in a Protocol Template.
%eref        dot1vProtocolTemplateFrameType IEEE 802.1v clause 8.6.2
%edes        dot1vProtocolTemplateProtocolValue The identification of the protocol above the data-link\n         layer in a Protocol Template.  Depending on the\n         frame type, the octet string will have one of the\n         following values:\n\n         For 'ethernet', 'rfc1042' and 'snap8021H',\n             this is the 16-bit (2-octet) IEEE 802.3 Type Field.\n         For 'snapOther',\n             this is the 40-bit (5-octet) PID.\n         For 'llcOther',\n             this is the 2-octet IEEE 802.2 Link Service Access\n             Point (LSAP) pair: first octet for Destination Service\n             Access Point (DSAP) and second octet for Source Service\n             Access Point (SSAP).
%eref        dot1vProtocolTemplateProtocolValue IEEE 802.1v clause 8.6.2
%edes        dot1vProtocolGroupId    Represents a group of protocols that are associated\n         together when assigning a VID to a frame.
%eref        dot1vProtocolGroupId    IEEE 802.1v clause 8.6.3, 12.10.2.1
%edes        dot1vProtocolGroupRowStatus This object indicates the status of this entry.
%edes        dot1vProtocolPortTable  A table that contains VID sets used for\n         Port-and-Protocol-based VLAN Classification.
%eref        dot1vProtocolPortTable  IEEE 802.1v clause 8.4.4
%edes        dot1vProtocolPortEntry  A VID set for a port.
%edes        dot1vProtocolPortGroupId Designates a group of protocols in the Protocol\n         Group Database.
%eref        dot1vProtocolPortGroupId IEEE 802.1v clause 8.6.3, 12.10.1.2
%edes        dot1vProtocolPortGroupVid The VID associated with a group of protocols for\n         each port.
%eref        dot1vProtocolPortGroupVid IEEE 802.1v clause 8.4.4, 12.10.1.2
%edes        dot1vProtocolPortRowStatus This object indicates the status of this entry.
%edes        qBridgeBaseGroup        A collection of objects providing device-level control\n        and status information for the Virtual LAN bridge\n        services.
%edes        qBridgeFdbUnicastGroup  A collection of objects providing information about all\n        unicast addresses, learned dynamically or statically\n        configured by management, in each Filtering Database.
%edes        qBridgeFdbMulticastGroup A collection of objects providing information about all\n        multicast addresses, learned dynamically or statically\n        configured by management, in each Filtering Database.
%edes        qBridgeServiceRequirementsGroup A collection of objects providing information about\n        service requirements, learned dynamically or statically\n        configured by management, in each Filtering Database.
%edes        qBridgeFdbStaticGroup   A collection of objects providing information about\n        unicast and multicast addresses statically configured by\n        management, in each Filtering Database or VLAN.
%edes        qBridgeVlanGroup        A collection of objects providing information about\n        all VLANs currently configured on this device.
%edes        qBridgeVlanStaticGroup  A collection of objects providing information about\n        VLANs statically configured by management.
%est                 qBridgePortGroup deprecated
%edes        qBridgePortGroup        A collection of objects providing port-level VLAN\n        control and status information for all ports.
%edes        qBridgeVlanStatisticsGroup A collection of objects providing per-port packet\n        statistics for all VLANs currently configured on this\n        device.
%edes        qBridgeVlanStatisticsOverflowGroup A collection of objects providing overflow counters for\n        per-port packet statistics for all VLANs currently configured\n        on this device for high-capacity interfaces, defined as those\n        that have the value of the corresponding instance of\n        ifSpeed greater than 650,000,000 bits/second.
%edes        qBridgeVlanHCStatisticsGroup A collection of objects providing per-port packet\n        statistics for all VLANs currently configured on this\n        device for high-capacity interfaces, defined as those\n        that have the value of the corresponding instance of\n        ifSpeed greater than 650,000,000 bits/second.
%edes        qBridgeLearningConstraintsGroup A collection of objects defining the Filtering Database\n        constraints all VLANs have with each other.
%edes        qBridgeLearningConstraintDefaultGroup A collection of objects defining the default Filtering\n        Database constraints for VLANs that have no specific\n        constraints defined.
%edes        qBridgeClassificationDeviceGroup VLAN classification information for the bridge.
%edes        qBridgeClassificationPortGroup VLAN classification information for individual ports.
%edes        qBridgePortGroup2       A collection of objects providing port-level VLAN\n        control and status information for all ports.
%edes        dot1dBaseBridgeGroup    Bridge level information for this device.
%edes        dot1dBasePortGroup      Information for each port on this device.
%edes        dot1dStpBridgeGroup     Bridge level Spanning Tree data for this device.
%edes        dot1dStpPortGroup       Spanning Tree data for each port on this device.
%edes        dot1dStpPortGroup2      Spanning Tree data for each port on this device.
%edes        dot1dStpPortGroup3      Spanning Tree data for devices supporting 32-bit\n            path costs.
%edes        dot1dTpBridgeGroup      Bridge level Transparent Bridging data.
%edes        dot1dTpFdbGroup         Filtering Database information for the Bridge.
%edes        dot1dTpGroup            Dynamic Filtering Database information for each port of\n           the Bridge.
%edes        dot1dStaticGroup        Static Filtering Database information for each port of\n           the Bridge.
%edes        dot1dNotificationGroup  Group of objects describing notifications (traps).
%edes        hrSystemUptime          The amount of time since this host was last\n        initialized.  Note that this is different from\n        sysUpTime in the SNMPv2-MIB [RFC1907] because\n        sysUpTime is the uptime of the network management\n        portion of the system.
%edes        hrSystemDate            The host's notion of the local date and time of day.
%edes        hrSystemInitialLoadDevice The index of the hrDeviceEntry for the device from\n        which this host is configured to load its initial\n        operating system configuration (i.e., which operating\n        system code and/or boot parameters).\n\n        Note that writing to this object just changes the\n        configuration that will be used the next time the\n        operating system is loaded and does not actually cause\n        the reload to occur.
%edes        hrSystemInitialLoadParameters This object contains the parameters (e.g. a pathname\n        and parameter) supplied to the load device when\n        requesting the initial operating system configuration\n        from that device.\n\n     Note that writing to this object just changes the\n     configuration that will be used the next time the\n     operating system is loaded and does not actually cause\n     the reload to occur.
%edes        hrSystemNumUsers        The number of user sessions for which this host is\n        storing state information.  A session is a collection\n        of processes requiring a single act of user\n        authentication and possibly subject to collective job\n        control.
%edes        hrSystemProcesses       The number of process contexts currently loaded or\n        running on this system.
%edes        hrSystemMaxProcesses    The maximum number of process contexts this system\n        can support.  If there is no fixed maximum, the value\n        should be zero.  On systems that have a fixed maximum,\n        this object can help diagnose failures that occur when\n        this maximum is reached.
%edes        hrStorageOther          The storage type identifier used when no other defined\n        type is appropriate.
%edes        hrStorageRam            The storage type identifier used for RAM.
%edes        hrStorageVirtualMemory  The storage type identifier used for virtual memory,\n        temporary storage of swapped or paged memory.
%edes        hrStorageFixedDisk      The storage type identifier used for non-removable\n        rigid rotating magnetic storage devices.
%edes        hrStorageRemovableDisk  The storage type identifier used for removable rigid\n        rotating magnetic storage devices.
%edes        hrStorageFloppyDisk     The storage type identifier used for non-rigid rotating\n        magnetic storage devices.
%edes        hrStorageCompactDisc    The storage type identifier used for read-only rotating\n        optical storage devices.
%edes        hrStorageRamDisk        The storage type identifier used for a file system that\n        is stored in RAM.
%edes        hrStorageFlashMemory    The storage type identifier used for flash memory.
%edes        hrStorageNetworkDisk    The storage type identifier used for a\n        networked file system.
%eunits      hrMemorySize            KBytes
%edes        hrMemorySize            The amount of physical read-write main memory,\n        typically RAM, contained by the host.
%edes        hrStorageTable          The (conceptual) table of logical storage areas on\n        the host.\n\n        An entry shall be placed in the storage table for each\n        logical area of storage that is allocated and has\n        fixed resource limits.  The amount of storage\n        represented in an entity is the amount actually usable\n        by the requesting entity, and excludes loss due to\n        formatting or file system reference information.\n\n        These entries are associated with logical storage\n        areas, as might be seen by an application, rather than\n        physical storage entities which are typically seen by\n        an operating system.  Storage such as tapes and\n        floppies without file systems on them are typically\n        not allocated in chunks by the operating system to\n        requesting applications, and therefore shouldn't\n        appear in this table.  Examples of valid storage for\n        this table include disk partitions, file systems, ram\n        (for some architectures this is further segmented into\n        regular memory, extended memory, and so on), backing\n        store for virtual memory (`swap space').\n\n        This table is intended to be a useful diagnostic for\n        `out of memory' and `out of buffers' types of\n        failures.  In addition, it can be a useful performance\n        monitoring tool for tracking memory, disk, or buffer\n        usage.
%edes        hrStorageEntry          A (conceptual) entry for one logical storage area on\n        the host.  As an example, an instance of the\n        hrStorageType object might be named hrStorageType.3
%edes        hrStorageIndex          A unique value for each logical storage area\n        contained by the host.
%edes        hrStorageType           The type of storage represented by this entry.
%edes        hrStorageDescr          A description of the type and instance of the storage\n        described by this entry.
%eunits      hrStorageAllocationUnits Bytes
%edes        hrStorageAllocationUnits The size, in bytes, of the data objects allocated\n        from this pool.  If this entry is monitoring sectors,\n        blocks, buffers, or packets, for example, this number\n        will commonly be greater than one.  Otherwise this\n        number will typically be one.
%edes        hrStorageSize           The size of the storage represented by this entry, in\n        units of hrStorageAllocationUnits. This object is\n        writable to allow remote configuration of the size of\n        the storage area in those cases where such an\n        operation makes sense and is possible on the\n        underlying system. For example, the amount of main\n        memory allocated to a buffer pool might be modified or\n        the amount of disk space allocated to virtual memory\n        might be modified.
%edes        hrStorageUsed           The amount of the storage represented by this entry\n        that is allocated, in units of\n        hrStorageAllocationUnits.
%edes        hrStorageAllocationFailures The number of requests for storage represented by\n        this entry that could not be honored due to not enough\n        storage.  It should be noted that as this object has a\n        SYNTAX of Counter32, that it does not have a defined\n        initial value.  However, it is recommended that this\n        object be initialized to zero, even though management\n        stations must not depend on such an initialization.
%edes        hrDeviceOther           The device type identifier used when no other defined\n        type is appropriate.
%edes        hrDeviceUnknown         The device type identifier used when the device type is\n        unknown.
%edes        hrDeviceProcessor       The device type identifier used for a CPU.
%edes        hrDeviceNetwork         The device type identifier used for a network interface.
%edes        hrDevicePrinter         The device type identifier used for a printer.
%edes        hrDeviceDiskStorage     The device type identifier used for a disk drive.
%edes        hrDeviceVideo           The device type identifier used for a video device.
%edes        hrDeviceAudio           The device type identifier used for an audio device.
%edes        hrDeviceCoprocessor     The device type identifier used for a co-processor.
%edes        hrDeviceKeyboard        The device type identifier used for a keyboard device.
%edes        hrDeviceModem           The device type identifier used for a modem.
%edes        hrDeviceParallelPort    The device type identifier used for a parallel port.
%edes        hrDevicePointing        The device type identifier used for a pointing device\n        (e.g., a mouse).
%edes        hrDeviceSerialPort      The device type identifier used for a serial port.
%edes        hrDeviceTape            The device type identifier used for a tape storage device.
%edes        hrDeviceClock           The device type identifier used for a clock device.
%edes        hrDeviceVolatileMemory  The device type identifier used for a volatile memory\n        storage device.
%edes        hrDeviceNonVolatileMemory The device type identifier used for a non-volatile memory\n\n        storage device.
%edes        hrDeviceTable           The (conceptual) table of devices contained by the\n        host.
%edes        hrDeviceEntry           A (conceptual) entry for one device contained by the\n        host.  As an example, an instance of the hrDeviceType\n        object might be named hrDeviceType.3
%edes        hrDeviceIndex           A unique value for each device contained by the host.\n        The value for each device must remain constant at\n        least from one re-initialization of the agent to the\n        next re-initialization.
%edes        hrDeviceType            An indication of the type of device.\n\n        If this value is\n        `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry\n        exists in the hrProcessorTable which corresponds to\n        this device.\n\n        If this value is\n        `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry\n        exists in the hrNetworkTable which corresponds to this\n        device.\n\n        If this value is\n        `hrDevicePrinter { hrDeviceTypes 5 }', then an entry\n        exists in the hrPrinterTable which corresponds to this\n        device.\n\n        If this value is\n        `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an\n        entry exists in the hrDiskStorageTable which\n        corresponds to this device.
%edes        hrDeviceDescr           A textual description of this device, including the\n        device's manufacturer and revision, and optionally,\n        its serial number.
%edes        hrDeviceID              The product ID for this device.
%edes        hrDeviceStatus          The current operational state of the device described\n        by this row of the table.  A value unknown(1)\n        indicates that the current state of the device is\n        unknown.  running(2) indicates that the device is up\n        and running and that no unusual error conditions are\n        known.  The warning(3) state indicates that agent has\n        been informed of an unusual error condition by the\n        operational software (e.g., a disk device driver) but\n        that the device is still 'operational'.  An example\n        would be a high number of soft errors on a disk.  A\n        value of testing(4), indicates that the device is not\n        available for use because it is in the testing state.\n        The state of down(5) is used only when the agent has\n        been informed that the device is not available for any\n        use.
%edes        hrDeviceErrors          The number of errors detected on this device.  It\n        should be noted that as this object has a SYNTAX of\n        Counter32, that it does not have a defined initial\n        value.  However, it is recommended that this object be\n        initialized to zero, even though management stations\n        must not depend on such an initialization.
%edes        hrProcessorTable        The (conceptual) table of processors contained by the\n        host.\n\n        Note that this table is potentially sparse: a\n        (conceptual) entry exists only if the correspondent\n        value of the hrDeviceType object is\n        `hrDeviceProcessor'.
%edes        hrProcessorEntry        A (conceptual) entry for one processor contained by\n        the host.  The hrDeviceIndex in the index represents\n        the entry in the hrDeviceTable that corresponds to the\n        hrProcessorEntry.\n\n        As an example of how objects in this table are named,\n        an instance of the hrProcessorFrwID object might be\n        named hrProcessorFrwID.3
%edes        hrProcessorFrwID        The product ID of the firmware associated with the\n        processor.
%edes        hrProcessorLoad         The average, over the last minute, of the percentage\n        of time that this processor was not idle.\n        Implementations may approximate this one minute\n        smoothing period if necessary.
%edes        hrNetworkTable          The (conceptual) table of network devices contained\n        by the host.\n\n        Note that this table is potentially sparse: a\n        (conceptual) entry exists only if the correspondent\n        value of the hrDeviceType object is\n        `hrDeviceNetwork'.
%edes        hrNetworkEntry          A (conceptual) entry for one network device contained\n        by the host.  The hrDeviceIndex in the index\n        represents the entry in the hrDeviceTable that\n        corresponds to the hrNetworkEntry.\n\n        As an example of how objects in this table are named,\n        an instance of the hrNetworkIfIndex object might be\n        named hrNetworkIfIndex.3
%edes        hrNetworkIfIndex        The value of ifIndex which corresponds to this\n        network device. If this device is not represented in\n        the ifTable, then this value shall be zero.
%edes        hrPrinterTable          The (conceptual) table of printers local to the host.\n\n        Note that this table is potentially sparse: a\n        (conceptual) entry exists only if the correspondent\n        value of the hrDeviceType object is\n        `hrDevicePrinter'.
%edes        hrPrinterEntry          A (conceptual) entry for one printer local to the\n        host.  The hrDeviceIndex in the index represents the\n        entry in the hrDeviceTable that corresponds to the\n        hrPrinterEntry.\n\n        As an example of how objects in this table are named,\n        an instance of the hrPrinterStatus object might be\n        named hrPrinterStatus.3
%edes        hrPrinterStatus         The current status of this printer device.
%edes        hrPrinterDetectedErrorState This object represents any error conditions detected\n        by the printer.  The error conditions are encoded as\n        bits in an octet string, with the following\n        definitions:\n\n             Condition         Bit #\n\n             lowPaper              0\n\n             noPaper               1\n             lowToner              2\n             noToner               3\n             doorOpen              4\n             jammed                5\n             offline               6\n             serviceRequested      7\n             inputTrayMissing      8\n             outputTrayMissing     9\n             markerSupplyMissing  10\n             outputNearFull       11\n             outputFull           12\n             inputTrayEmpty       13\n             overduePreventMaint  14\n\n        Bits are numbered starting with the most significant\n        bit of the first byte being bit 0, the least\n        significant bit of the first byte being bit 7, the\n        most significant bit of the second byte being bit 8,\n        and so on.  A one bit encodes that the condition was\n        detected, while a zero bit encodes that the condition\n        was not detected.\n\n        This object is useful for alerting an operator to\n        specific warning or error conditions that may occur,\n        especially those requiring human intervention.
%edes        hrDiskStorageTable      The (conceptual) table of long-term storage devices\n        contained by the host.  In particular, disk devices\n        accessed remotely over a network are not included\n        here.\n\n        Note that this table is potentially sparse: a\n        (conceptual) entry exists only if the correspondent\n        value of the hrDeviceType object is\n        `hrDeviceDiskStorage'.
%edes        hrDiskStorageEntry      A (conceptual) entry for one long-term storage device\n        contained by the host.  The hrDeviceIndex in the index\n        represents the entry in the hrDeviceTable that\n        corresponds to the hrDiskStorageEntry. As an example,\n        an instance of the hrDiskStorageCapacity object might\n        be named hrDiskStorageCapacity.3
%edes        hrDiskStorageAccess     An indication if this long-term storage device is\n        readable and writable or only readable.  This should\n        reflect the media type, any write-protect mechanism,\n        and any device configuration that affects the entire\n        device.
%edes        hrDiskStorageMedia      An indication of the type of media used in this long-\n        term storage device.
%edes        hrDiskStorageRemoveble  Denotes whether or not the disk media may be removed\n        from the drive.
%eunits      hrDiskStorageCapacity   KBytes
%edes        hrDiskStorageCapacity   The total size for this long-term storage device. If\n        the media is removable and is currently removed, this\n        value should be zero.
%edes        hrPartitionTable        The (conceptual) table of partitions for long-term\n        storage devices contained by the host.  In particular,\n        partitions accessed remotely over a network are not\n        included here.
%edes        hrPartitionEntry        A (conceptual) entry for one partition.  The\n        hrDeviceIndex in the index represents the entry in the\n        hrDeviceTable that corresponds to the\n        hrPartitionEntry.\n\n        As an example of how objects in this table are named,\n        an instance of the hrPartitionSize object might be\n        named hrPartitionSize.3.1
%edes        hrPartitionIndex        A unique value for each partition on this long-term\n        storage device.  The value for each long-term storage\n        device must remain constant at least from one re-\n        initialization of the agent to the next re-\n        initialization.
%edes        hrPartitionLabel        A textual description of this partition.
%edes        hrPartitionID           A descriptor which uniquely represents this partition\n        to the responsible operating system.  On some systems,\n        this might take on a binary representation.
%eunits      hrPartitionSize         KBytes
%edes        hrPartitionSize         The size of this partition.
%edes        hrPartitionFSIndex      The index of the file system mounted on this\n        partition.  If no file system is mounted on this\n        partition, then this value shall be zero.  Note that\n        multiple partitions may point to one file system,\n        denoting that that file system resides on those\n        partitions.  Multiple file systems may not reside on\n        one partition.
%edes        hrFSTable               The (conceptual) table of file systems local to this\n        host or remotely mounted from a file server.  File\n        systems that are in only one user's environment on a\n        multi-user system will not be included in this table.
%edes        hrFSEntry               A (conceptual) entry for one file system local to\n        this host or remotely mounted from a file server.\n        File systems that are in only one user's environment\n        on a multi-user system will not be included in this\n        table.\n\n        As an example of how objects in this table are named,\n        an instance of the hrFSMountPoint object might be\n        named hrFSMountPoint.3
%edes        hrFSIndex               A unique value for each file system local to this\n        host.  The value for each file system must remain\n        constant at least from one re-initialization of the\n        agent to the next re-initialization.
%edes        hrFSMountPoint          The path name of the root of this file system.
%edes        hrFSRemoteMountPoint    A description of the name and/or address of the\n        server that this file system is mounted from.  This\n        may also include parameters such as the mount point on\n        the remote file system.  If this is not a remote file\n        system, this string should have a length of zero.
%edes        hrFSType                The value of this object identifies the type of this\n        file system.
%edes        hrFSAccess              An indication if this file system is logically\n        configured by the operating system to be readable and\n        writable or only readable.  This does not represent\n        any local access-control policy, except one that is\n        applied to the file system as a whole.
%edes        hrFSBootable            A flag indicating whether this file system is\n        bootable.
%edes        hrFSStorageIndex        The index of the hrStorageEntry that represents\n        information about this file system.  If there is no\n        such information available, then this value shall be\n        zero.  The relevant storage entry will be useful in\n        tracking the percent usage of this file system and\n        diagnosing errors that may occur when it runs out of\n        space.
%edes        hrFSLastFullBackupDate  The last date at which this complete file system was\n\n        copied to another storage device for backup.  This\n        information is useful for ensuring that backups are\n        being performed regularly.\n\n        If this information is not known, then this variable\n        shall have the value corresponding to January 1, year\n        0000, 00:00:00.0, which is encoded as\n        (hex)'00 00 01 01 00 00 00 00'.
%edes        hrFSLastPartialBackupDate The last date at which a portion of this file system\n        was copied to another storage device for backup.  This\n        information is useful for ensuring that backups are\n        being performed regularly.\n\n        If this information is not known, then this variable\n        shall have the value corresponding to January 1, year\n        0000, 00:00:00.0, which is encoded as\n        (hex)'00 00 01 01 00 00 00 00'.
%edes        hrFSOther               The file system type identifier used when no other\n        defined type is appropriate.
%edes        hrFSUnknown             The file system type identifier used when the type of\n        file system is unknown.
%edes        hrFSBerkeleyFFS         The file system type identifier used for the\n        Berkeley Fast File System.
%edes        hrFSSys5FS              The file system type identifier used for the\n        System V File System.
%edes        hrFSFat                 The file system type identifier used for\n        DOS's FAT file system.
%edes        hrFSHPFS                The file system type identifier used for OS/2's\n        High Performance File System.
%edes        hrFSHFS                 The file system type identifier used for the\n        Macintosh Hierarchical File System.
%edes        hrFSMFS                 The file system type identifier used for the\n        Macintosh File System.
%edes        hrFSNTFS                The file system type identifier used for the\n        Windows NT File System.
%edes        hrFSVNode               The file system type identifier used for the\n        VNode File System.
%edes        hrFSJournaled           The file system type identifier used for the\n        Journaled File System.
%edes        hrFSiso9660             The file system type identifier used for the\n        ISO 9660 File System for CD's.
%edes        hrFSRockRidge           The file system type identifier used for the\n        RockRidge File System for CD's.
%edes        hrFSNFS                 The file system type identifier used for the\n        NFS File System.
%edes        hrFSNetware             The file system type identifier used for the\n        Netware File System.
%edes        hrFSAFS                 The file system type identifier used for the\n        Andrew File System.
%edes        hrFSDFS                 The file system type identifier used for the\n        OSF DCE Distributed File System.
%edes        hrFSAppleshare          The file system type identifier used for the\n        AppleShare File System.
%edes        hrFSRFS                 The file system type identifier used for the\n        RFS File System.
%edes        hrFSDGCFS               The file system type identifier used for the\n        Data General DGCFS.
%edes        hrFSBFS                 The file system type identifier used for the\n        SVR4 Boot File System.
%edes        hrFSFAT32               The file system type identifier used for the\n        Windows FAT32 File System.
%edes        hrFSLinuxExt2           The file system type identifier used for the\n        Linux EXT2 File System.
%edes        hrSWOSIndex             The value of the hrSWRunIndex for the hrSWRunEntry\n        that represents the primary operating system running\n        on this host.  This object is useful for quickly and\n        uniquely identifying that primary operating system.
%edes        hrSWRunTable            The (conceptual) table of software running on the\n        host.
%edes        hrSWRunEntry            A (conceptual) entry for one piece of software\n        running on the host Note that because the installed\n        software table only contains information for software\n        stored locally on this host, not every piece of\n        running software will be found in the installed\n        software table.  This is true of software that was\n        loaded and run from a non-local source, such as a\n        network-mounted file system.\n\n        As an example of how objects in this table are named,\n        an instance of the hrSWRunName object might be named\n        hrSWRunName.1287
%edes        hrSWRunIndex            A unique value for each piece of software running on\n        the host.  Wherever possible, this should be the\n        system's native, unique identification number.
%edes        hrSWRunName             A textual description of this running piece of\n        software, including the manufacturer, revision,  and\n        the name by which it is commonly known.  If this\n        software was installed locally, this should be the\n        same string as used in the corresponding\n        hrSWInstalledName.
%edes        hrSWRunID               The product ID of this running piece of software.
%edes        hrSWRunPath             A description of the location on long-term storage\n        (e.g. a disk drive) from which this software was\n        loaded.
%edes        hrSWRunParameters       A description of the parameters supplied to this\n        software when it was initially loaded.
%edes        hrSWRunType             The type of this software.
%edes        hrSWRunStatus           The status of this running piece of software.\n        Setting this value to invalid(4) shall cause this\n        software to stop running and to be unloaded. Sets to\n        other values are not valid.
%edes        hrSWRunPerfTable        The (conceptual) table of running software\n        performance metrics.
%edes        hrSWRunPerfEntry        A (conceptual) entry containing software performance\n        metrics.  As an example, an instance of the\n        hrSWRunPerfCPU object might be named\n        hrSWRunPerfCPU.1287
%edes        hrSWRunPerfCPU          The number of centi-seconds of the total system's CPU\n        resources consumed by this process.  Note that on a\n        multi-processor system, this value may increment by\n        more than one centi-second in one centi-second of real\n        (wall clock) time.
%eunits      hrSWRunPerfMem          KBytes
%edes        hrSWRunPerfMem          The total amount of real system memory allocated to\n        this process.
%edes        hrSWInstalledLastChange The value of sysUpTime when an entry in the\n        hrSWInstalledTable was last added, renamed, or\n        deleted.  Because this table is likely to contain many\n        entries, polling of this object allows a management\n        station to determine when re-downloading of the table\n        might be useful.
%edes        hrSWInstalledLastUpdateTime The value of sysUpTime when the hrSWInstalledTable\n        was last completely updated.  Because caching of this\n        data will be a popular implementation strategy,\n        retrieval of this object allows a management station\n        to obtain a guarantee that no data in this table is\n        older than the indicated time.
%edes        hrSWInstalledTable      The (conceptual) table of software installed on this\n        host.
%edes        hrSWInstalledEntry      A (conceptual) entry for a piece of software\n        installed on this host.\n\n        As an example of how objects in this table are named,\n        an instance of the hrSWInstalledName object might be\n        named hrSWInstalledName.96
%edes        hrSWInstalledIndex      A unique value for each piece of software installed\n        on the host.  This value shall be in the range from 1\n        to the number of pieces of software installed on the\n        host.
%edes        hrSWInstalledName       A textual description of this installed piece of\n        software, including the manufacturer, revision, the\n        name by which it is commonly known, and optionally,\n        its serial number.
%edes        hrSWInstalledID         The product ID of this installed piece of software.
%edes        hrSWInstalledType       The type of this software.
%edes        hrSWInstalledDate       The last-modification date of this application as it\n        would appear in a directory listing.\n\n        If this information is not known, then this variable\n        shall have the value corresponding to January 1, year\n        0000, 00:00:00.0, which is encoded as\n        (hex)'00 00 01 01 00 00 00 00'.
%edes        hrSystemGroup           The Host Resources System Group.
%edes        hrStorageGroup          The Host Resources Storage Group.
%edes        hrDeviceGroup           The Host Resources Device Group.
%edes        hrSWRunGroup            The Host Resources Running Software Group.
%edes        hrSWRunPerfGroup        The Host Resources Running Software\n            Performance Group.
%edes        hrSWInstalledGroup      The Host Resources Installed Software Group.
%edes        ifXTable                A list of interface entries.  The number of entries is\n            given by the value of ifNumber.  This table contains\n            additional objects for the interface table.
%edes        ifXEntry                An entry containing additional management information\n            applicable to a particular interface.
%edes        ifName                  The textual name of the interface.  The value of this\n            object should be the name of the interface as assigned by\n            the local device and should be suitable for use in commands\n            entered at the device's `console'.  This might be a text\n            name, such as `le0' or a simple port number, such as `1',\n            depending on the interface naming syntax of the device.  If\n            several entries in the ifTable together represent a single\n            interface as named by the device, then each will have the\n            same value of ifName.  Note that for an agent which responds\n            to SNMP queries concerning an interface on some other\n            (proxied) device, then the value of ifName for such an\n            interface is the proxied device's local name for it.\n\n            If there is no local name, or this object is otherwise not\n            applicable, then this object contains a zero-length string.
%edes        ifInMulticastPkts       The number of packets, delivered by this sub-layer to a\n            higher (sub-)layer, which were addressed to a multicast\n            address at this sub-layer.  For a MAC layer protocol, this\n            includes both Group and Functional addresses.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifInBroadcastPkts       The number of packets, delivered by this sub-layer to a\n            higher (sub-)layer, which were addressed to a broadcast\n            address at this sub-layer.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifOutMulticastPkts      The total number of packets that higher-level protocols\n            requested be transmitted, and which were addressed to a\n            multicast address at this sub-layer, including those that\n            were discarded or not sent.  For a MAC layer protocol, this\n            includes both Group and Functional addresses.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifOutBroadcastPkts      The total number of packets that higher-level protocols\n            requested be transmitted, and which were addressed to a\n            broadcast address at this sub-layer, including those that\n            were discarded or not sent.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifHCInOctets            The total number of octets received on the interface,\n            including framing characters.  This object is a 64-bit\n            version of ifInOctets.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifHCInUcastPkts         The number of packets, delivered by this sub-layer to a\n            higher (sub-)layer, which were not addressed to a multicast\n            or broadcast address at this sub-layer.  This object is a\n            64-bit version of ifInUcastPkts.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifHCInMulticastPkts     The number of packets, delivered by this sub-layer to a\n            higher (sub-)layer, which were addressed to a multicast\n            address at this sub-layer.  For a MAC layer protocol, this\n            includes both Group and Functional addresses.  This object\n            is a 64-bit version of ifInMulticastPkts.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifHCInBroadcastPkts     The number of packets, delivered by this sub-layer to a\n            higher (sub-)layer, which were addressed to a broadcast\n            address at this sub-layer.  This object is a 64-bit version\n            of ifInBroadcastPkts.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifHCOutOctets           The total number of octets transmitted out of the\n            interface, including framing characters.  This object is a\n            64-bit version of ifOutOctets.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifHCOutUcastPkts        The total number of packets that higher-level protocols\n            requested be transmitted, and which were not addressed to a\n            multicast or broadcast address at this sub-layer, including\n            those that were discarded or not sent.  This object is a\n            64-bit version of ifOutUcastPkts.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifHCOutMulticastPkts    The total number of packets that higher-level protocols\n            requested be transmitted, and which were addressed to a\n            multicast address at this sub-layer, including those that\n            were discarded or not sent.  For a MAC layer protocol, this\n            includes both Group and Functional addresses.  This object\n            is a 64-bit version of ifOutMulticastPkts.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifHCOutBroadcastPkts    The total number of packets that higher-level protocols\n            requested be transmitted, and which were addressed to a\n            broadcast address at this sub-layer, including those that\n            were discarded or not sent.  This object is a 64-bit version\n            of ifOutBroadcastPkts.\n\n            Discontinuities in the value of this counter can occur at\n            re-initialization of the management system, and at other\n            times as indicated by the value of\n            ifCounterDiscontinuityTime.
%edes        ifLinkUpDownTrapEnable  Indicates whether linkUp/linkDown traps should be generated\n            for this interface.\n\n            By default, this object should have the value enabled(1) for\n            interfaces which do not operate on 'top' of any other\n            interface (as defined in the ifStackTable), and disabled(2)\n            otherwise.
%edes        ifHighSpeed             An estimate of the interface's current bandwidth in units\n            of 1,000,000 bits per second.  If this object reports a\n            value of `n' then the speed of the interface is somewhere in\n            the range of `n-500,000' to `n+499,999'.  For interfaces\n            which do not vary in bandwidth or for those where no\n            accurate estimation can be made, this object should contain\n            the nominal bandwidth.  For a sub-layer which has no concept\n            of bandwidth, this object should be zero.
%edes        ifPromiscuousMode       This object has a value of false(2) if this interface only\n            accepts packets/frames that are addressed to this station.\n            This object has a value of true(1) when the station accepts\n            all packets/frames transmitted on the media.  The value\n            true(1) is only legal on certain types of media.  If legal,\n            setting this object to a value of true(1) may require the\n            interface to be reset before becoming effective.\n\n            The value of ifPromiscuousMode does not affect the reception\n            of broadcast and multicast packets/frames by the interface.
%edes        ifConnectorPresent      This object has the value 'true(1)' if the interface\n            sublayer has a physical connector and the value 'false(2)'\n            otherwise.
%edes        ifAlias                 This object is an 'alias' name for the interface as\n            specified by a network manager, and provides a non-volatile\n            'handle' for the interface.\n\n            On the first instantiation of an interface, the value of\n            ifAlias associated with that interface is the zero-length\n            string.  As and when a value is written into an instance of\n            ifAlias through a network management set operation, then the\n            agent must retain the supplied value in the ifAlias instance\n            associated with the same interface for as long as that\n            interface remains instantiated, including across all re-\n            initializations/reboots of the network management system,\n            including those which result in a change of the interface's\n            ifIndex value.\n\n            An example of the value which a network manager might store\n            in this object for a WAN interface is the (Telco's) circuit\n            number/identifier of the interface.\n\n            Some agents may support write-access only for interfaces\n            having particular values of ifType.  An agent which supports\n            write access to this object is required to keep the value in\n            non-volatile storage, but it may limit the length of new\n            values depending on how much storage is already occupied by\n            the current values for other interfaces.
%edes        ifCounterDiscontinuityTime The value of sysUpTime on the most recent occasion at which\n            any one or more of this interface's counters suffered a\n            discontinuity.  The relevant counters are the specific\n            instances associated with this interface of any Counter32 or\n\n            Counter64 object contained in the ifTable or ifXTable.  If\n            no such discontinuities have occurred since the last re-\n            initialization of the local management subsystem, then this\n            object contains a zero value.
%edes        ifStackTable            The table containing information on the relationships\n            between the multiple sub-layers of network interfaces.  In\n            particular, it contains information on which sub-layers run\n            'on top of' which other sub-layers, where each sub-layer\n            corresponds to a conceptual row in the ifTable.  For\n            example, when the sub-layer with ifIndex value x runs over\n            the sub-layer with ifIndex value y, then this table\n            contains:\n\n              ifStackStatus.x.y=active\n\n            For each ifIndex value, I, which identifies an active\n            interface, there are always at least two instantiated rows\n            in this table associated with I.  For one of these rows, I\n            is the value of ifStackHigherLayer; for the other, I is the\n            value of ifStackLowerLayer.  (If I is not involved in\n            multiplexing, then these are the only two rows associated\n            with I.)\n\n            For example, two rows exist even for an interface which has\n            no others stacked on top or below it:\n\n              ifStackStatus.0.x=active\n              ifStackStatus.x.0=active 
%edes        ifStackEntry            Information on a particular relationship between two sub-\n            layers, specifying that one sub-layer runs on 'top' of the\n            other sub-layer.  Each sub-layer corresponds to a conceptual\n            row in the ifTable.
%edes        ifStackHigherLayer      The value of ifIndex corresponding to the higher sub-layer\n            of the relationship, i.e., the sub-layer which runs on 'top'\n            of the sub-layer identified by the corresponding instance of\n            ifStackLowerLayer.  If there is no higher sub-layer (below\n            the internetwork layer), then this object has the value 0.
%edes        ifStackLowerLayer       The value of ifIndex corresponding to the lower sub-layer\n            of the relationship, i.e., the sub-layer which runs 'below'\n            the sub-layer identified by the corresponding instance of\n            ifStackHigherLayer.  If there is no lower sub-layer, then\n            this object has the value 0.
%edes        ifStackStatus           The status of the relationship between two sub-layers.\n\n            Changing the value of this object from 'active' to\n            'notInService' or 'destroy' will likely have consequences up\n            and down the interface stack.  Thus, write access to this\n            object is likely to be inappropriate for some types of\n            interfaces, and many implementations will choose not to\n            support write-access for any type of interface.
%edes        ifTestTable             This table contains one entry per interface.  It defines\n            objects which allow a network manager to instruct an agent\n            to test an interface for various faults.  Tests for an\n            interface are defined in the media-specific MIB for that\n            interface.  After invoking a test, the object ifTestResult\n            can be read to determine the outcome.  If an agent can not\n            perform the test, ifTestResult is set to so indicate.  The\n            object ifTestCode can be used to provide further test-\n            specific or interface-specific (or even enterprise-specific)\n            information concerning the outcome of the test.  Only one\n            test can be in progress on each interface at any one time.\n            If one test is in progress when another test is invoked, the\n            second test is rejected.  Some agents may reject a test when\n            a prior test is active on another interface.\n\n            Before starting a test, a manager-station must first obtain\n            'ownership' of the entry in the ifTestTable for the\n            interface to be tested.  This is accomplished with the\n            ifTestId and ifTestStatus objects as follows:\n\n          try_again:\n              get (ifTestId, ifTestStatus)\n              while (ifTestStatus != notInUse)\n                  /*\n                   * Loop while a test is running or some other\n                   * manager is configuring a test.\n                   */\n                  short delay\n                  get (ifTestId, ifTestStatus)\n              }\n\n              /*\n               * Is not being used right now -- let's compete\n               * to see who gets it.\n               */\n              lock_value = ifTestId\n\n              if ( set(ifTestId = lock_value, ifTestStatus = inUse,\n\n                       ifTestOwner = 'my-IP-address') == FAILURE)\n                  /*\n                   * Another manager got the ifTestEntry -- go\n                   * try again\n                   */\n                  goto try_again;\n\n              /*\n               * I have the lock\n               */\n              set up any test parameters.\n\n              /*\n               * This starts the test\n               */\n              set(ifTestType = test_to_run);\n\n              wait for test completion by polling ifTestResult\n\n              when test completes, agent sets ifTestResult\n                   agent also sets ifTestStatus = 'notInUse'\n\n              retrieve any additional test results, and ifTestId\n\n              if (ifTestId == lock_value+1) results are valid\n\n            A manager station first retrieves the value of the\n            appropriate ifTestId and ifTestStatus objects, periodically\n            repeating the retrieval if necessary, until the value of\n            ifTestStatus is 'notInUse'.  The manager station then tries\n            to set the same ifTestId object to the value it just\n            retrieved, the same ifTestStatus object to 'inUse', and the\n            corresponding ifTestOwner object to a value indicating\n            itself.  If the set operation succeeds then the manager has\n            obtained ownership of the ifTestEntry, and the value of the\n            ifTestId object is incremented by the agent (per the\n            semantics of TestAndIncr).  Failure of the set operation\n            indicates that some other manager has obtained ownership of\n            the ifTestEntry.\n\n            Once ownership is obtained, any test parameters can be\n            setup, and then the test is initiated by setting ifTestType.\n            On completion of the test, the agent sets ifTestStatus to\n            'notInUse'.  Once this occurs, the manager can retrieve the\n            results.  In the (rare) event that the invocation of tests\n            by two network managers were to overlap, then there would be\n            a possibility that the first test's results might be\n            overwritten by the second test's results prior to the first\n\n            results being read.  This unlikely circumstance can be\n            detected by a network manager retrieving ifTestId at the\n            same time as retrieving the test results, and ensuring that\n            the results are for the desired request.\n\n            If ifTestType is not set within an abnormally long period of\n            time after ownership is obtained, the agent should time-out\n            the manager, and reset the value of the ifTestStatus object\n            back to 'notInUse'.  It is suggested that this time-out\n            period be 5 minutes.\n\n            In general, a management station must not retransmit a\n            request to invoke a test for which it does not receive a\n            response; instead, it properly inspects an agent's MIB to\n            determine if the invocation was successful.  Only if the\n            invocation was unsuccessful, is the invocation request\n            retransmitted.\n\n            Some tests may require the interface to be taken off-line in\n            order to execute them, or may even require the agent to\n            reboot after completion of the test.  In these\n            circumstances, communication with the management station\n            invoking the test may be lost until after completion of the\n            test.  An agent is not required to support such tests.\n            However, if such tests are supported, then the agent should\n            make every effort to transmit a response to the request\n            which invoked the test prior to losing communication.  When\n            the agent is restored to normal service, the results of the\n            test are properly made available in the appropriate objects.\n            Note that this requires that the ifIndex value assigned to\n            an interface must be unchanged even if the test causes a\n            reboot.  An agent must reject any test for which it cannot,\n            perhaps due to resource constraints, make available at least\n            the minimum amount of information after that test\n            completes.
%edes        ifTestEntry             An entry containing objects for invoking tests on an\n            interface.
%edes        ifTestId                This object identifies the current invocation of the\n            interface's test.
%edes        ifTestStatus            This object indicates whether or not some manager currently\n            has the necessary 'ownership' required to invoke a test on\n            this interface.  A write to this object is only successful\n            when it changes its value from 'notInUse(1)' to 'inUse(2)'.\n            After completion of a test, the agent resets the value back\n            to 'notInUse(1)'.
%edes        ifTestType              A control variable used to start and stop operator-\n            initiated interface tests.  Most OBJECT IDENTIFIER values\n            assigned to tests are defined elsewhere, in association with\n            specific types of interface.  However, this document assigns\n            a value for a full-duplex loopback test, and defines the\n            special meanings of the subject identifier:\n\n                noTest  OBJECT IDENTIFIER ::= { 0 0 }\n\n            When the value noTest is written to this object, no action\n            is taken unless a test is in progress, in which case the\n            test is aborted.  Writing any other value to this object is\n\n            only valid when no test is currently in progress, in which\n            case the indicated test is initiated.\n\n            When read, this object always returns the most recent value\n            that ifTestType was set to.  If it has not been set since\n            the last initialization of the network management subsystem\n            on the agent, a value of noTest is returned.
%edes        ifTestResult            This object contains the result of the most recently\n            requested test, or the value none(1) if no tests have been\n            requested since the last reset.  Note that this facility\n            provides no provision for saving the results of one test\n            when starting another, as could be required if used by\n            multiple managers concurrently.
%edes        ifTestCode              This object contains a code which contains more specific\n            information on the test result, for example an error-code\n            after a failed test.  Error codes and other values this\n            object may take are specific to the type of interface and/or\n            test.  The value may have the semantics of either the\n            AutonomousType or InstancePointer textual conventions as\n            defined in RFC 2579.  The identifier:\n\n                testCodeUnknown  OBJECT IDENTIFIER ::= { 0 0 }\n\n            is defined for use if no additional result code is\n            available.
%edes        ifTestOwner             The entity which currently has the 'ownership' required to\n            invoke a test on this interface.
%edes        ifRcvAddressTable       This table contains an entry for each address (broadcast,\n            multicast, or uni-cast) for which the system will receive\n            packets/frames on a particular interface, except as follows:\n\n            - for an interface operating in promiscuous mode, entries\n            are only required for those addresses for which the system\n            would receive frames were it not operating in promiscuous\n            mode.\n\n            - for 802.5 functional addresses, only one entry is\n            required, for the address which has the functional address\n            bit ANDed with the bit mask of all functional addresses for\n            which the interface will accept frames.\n\n            A system is normally able to use any unicast address which\n            corresponds to an entry in this table as a source address.
%edes        ifRcvAddressEntry       A list of objects identifying an address for which the\n            system will accept packets/frames on the particular\n            interface identified by the index value ifIndex.
%edes        ifRcvAddressAddress     An address for which the system will accept packets/frames\n            on this entry's interface.
%edes        ifRcvAddressStatus      This object is used to create and delete rows in the\n            ifRcvAddressTable.
%edes        ifRcvAddressType        This object has the value nonVolatile(3) for those entries\n            in the table which are valid and will not be deleted by the\n            next restart of the managed system.  Entries having the\n            value volatile(2) are valid and exist, but have not been\n            saved, so that will not exist after the next restart of the\n            managed system.  Entries having the value other(1) are valid\n            and exist but are not classified as to whether they will\n            continue to exist after the next restart.
%edes        ifTableLastChange       The value of sysUpTime at the time of the last creation or\n            deletion of an entry in the ifTable.  If the number of\n            entries has been unchanged since the last re-initialization\n            of the local network management subsystem, then this object\n            contains a zero value.
%edes        ifStackLastChange       The value of sysUpTime at the time of the last change of\n            the (whole) interface stack.  A change of the interface\n            stack is defined to be any creation, deletion, or change in\n            value of any instance of ifStackStatus.  If the interface\n            stack has been unchanged since the last re-initialization of\n            the local network management subsystem, then this object\n            contains a zero value.
%est                 ifGeneralGroup   deprecated
%edes        ifGeneralGroup          A collection of objects deprecated in favour of\n            ifGeneralInformationGroup.
%edes        ifFixedLengthGroup      A collection of objects providing information specific to\n            non-high speed (non-high speed interfaces transmit and\n            receive at speeds less than or equal to 20,000,000\n            bits/second) character-oriented or fixed-length-transmission\n            network interfaces.
%edes        ifHCFixedLengthGroup    A collection of objects providing information specific to\n            high speed (greater than 20,000,000 bits/second) character-\n            oriented or fixed-length-transmission network interfaces.
%edes        ifPacketGroup           A collection of objects providing information specific to\n            non-high speed (non-high speed interfaces transmit and\n            receive at speeds less than or equal to 20,000,000\n            bits/second) packet-oriented network interfaces.
%edes        ifHCPacketGroup         A collection of objects providing information specific to\n            high speed (greater than 20,000,000 bits/second but less\n            than or equal to 650,000,000 bits/second) packet-oriented\n            network interfaces.
%edes        ifVHCPacketGroup        A collection of objects providing information specific to\n            higher speed (greater than 650,000,000 bits/second) packet-\n            oriented network interfaces.
%edes        ifRcvAddressGroup       A collection of objects providing information on the\n            multiple addresses which an interface receives.
%est                 ifTestGroup      deprecated
%edes        ifTestGroup             A collection of objects providing the ability to invoke\n            tests on an interface.
%est                 ifStackGroup     deprecated
%edes        ifStackGroup            The previous collection of objects providing information on\n            the layering of MIB-II interfaces.
%edes        ifGeneralInformationGroup A collection of objects providing information applicable to\n            all network interfaces.
%edes        ifStackGroup2           A collection of objects providing information on the\n            layering of MIB-II interfaces.
%est                 ifOldObjectsGroup deprecated
%edes        ifOldObjectsGroup       The collection of objects deprecated from the original MIB-\n            II interfaces group.
%edes        ifCounterDiscontinuityGroup A collection of objects providing information specific to\n            interface counter discontinuities.
%edes        linkUpDownNotificationsGroup The notifications which indicate specific changes in the\n            value of ifOperStatus.
%edes        entPhysicalTable        This table contains one row per physical entity.  There is\n            always at least one row for an 'overall' physical entity.
%edes        entPhysicalEntry        Information about a particular physical entity.\n\n            Each entry provides objects (entPhysicalDescr,\n            entPhysicalVendorType, and entPhysicalClass) to help an NMS\n            identify and characterize the entry and objects\n            (entPhysicalContainedIn and entPhysicalParentRelPos) to help\n            an NMS relate the particular entry to other entries in this\n            table.
%edes        entPhysicalIndex        The index for this entry.
%edes        entPhysicalDescr        A textual description of physical entity.  This object\n            should contain a string that identifies the manufacturer's\n            name for the physical entity and should be set to a\n            distinct value for each version or model of the physical\n            entity.
%edes        entPhysicalVendorType   An indication of the vendor-specific hardware type of the\n            physical entity.  Note that this is different from the\n            definition of MIB-II's sysObjectID.\n\n            An agent should set this object to an enterprise-specific\n            registration identifier value indicating the specific\n            equipment type in detail.  The associated instance of\n            entPhysicalClass is used to indicate the general type of\n            hardware device.\n\n            If no vendor-specific registration identifier exists for\n            this physical entity, or the value is unknown by this agent,\n            then the value { 0 0 } is returned.
%edes        entPhysicalContainedIn  The value of entPhysicalIndex for the physical entity that\n            'contains' this physical entity.  A value of zero indicates\n            this physical entity is not contained in any other physical\n            entity.  Note that the set of 'containment' relationships\n            define a strict hierarchy; that is, recursion is not\n            allowed.\n\n            In the event that a physical entity is contained by more\n            than one physical entity (e.g., double-wide modules), this\n            object should identify the containing entity with the lowest\n            value of entPhysicalIndex.
%edes        entPhysicalClass        An indication of the general hardware type of the physical\n            entity.\n\n            An agent should set this object to the standard enumeration\n            value that most accurately indicates the general class of\n            the physical entity, or the primary class if there is more\n            than one entity.\n\n            If no appropriate standard registration identifier exists\n            for this physical entity, then the value 'other(1)' is\n            returned.  If the value is unknown by this agent, then the\n            value 'unknown(2)' is returned.
%edes        entPhysicalParentRelPos An indication of the relative position of this 'child'\n            component among all its 'sibling' components.  Sibling\n            components are defined as entPhysicalEntries that share the\n            same instance values of each of the entPhysicalContainedIn\n            and entPhysicalClass objects.\n\n\n\n\n            An NMS can use this object to identify the relative ordering\n            for all sibling components of a particular parent\n            (identified by the entPhysicalContainedIn instance in each\n            sibling entry).\n\n            If possible, this value should match any external labeling\n            of the physical component.  For example, for a container\n            (e.g., card slot) labeled as 'slot #3',\n            entPhysicalParentRelPos should have the value '3'.  Note\n            that the entPhysicalEntry for the module plugged in slot 3\n            should have an entPhysicalParentRelPos value of '1'.\n\n            If the physical position of this component does not match\n            any external numbering or clearly visible ordering, then\n            user documentation or other external reference material\n            should be used to determine the parent-relative position.\n            If this is not possible, then the agent should assign a\n            consistent (but possibly arbitrary) ordering to a given set\n            of 'sibling' components, perhaps based on internal\n            representation of the components.\n\n            If the agent cannot determine the parent-relative position\n            for some reason, or if the associated value of\n            entPhysicalContainedIn is '0', then the value '-1' is\n            returned.  Otherwise, a non-negative integer is returned,\n            indicating the parent-relative position of this physical\n            entity.\n\n            Parent-relative ordering normally starts from '1' and\n            continues to 'N', where 'N' represents the highest\n            positioned child entity.  However, if the physical entities\n            (e.g., slots) are labeled from a starting position of zero,\n            then the first sibling should be associated with an\n            entPhysicalParentRelPos value of '0'.  Note that this\n            ordering may be sparse or dense, depending on agent\n            implementation.\n\n            The actual values returned are not globally meaningful, as\n            each 'parent' component may use different numbering\n            algorithms.  The ordering is only meaningful among siblings\n            of the same parent component.\n\n            The agent should retain parent-relative position values\n            across reboots, either through algorithmic assignment or use\n            of non-volatile storage.
%edes        entPhysicalName         The textual name of the physical entity.  The value of this\n            object should be the name of the component as assigned by\n            the local device and should be suitable for use in commands\n            entered at the device's 'console'.  This might be a text\n            name (e.g., 'console') or a simple component number (e.g.,\n            port or module number, such as '1'), depending on the\n            physical component naming syntax of the device.\n\n            If there is no local name, or if this object is otherwise\n            not applicable, then this object contains a zero-length\n            string.\n\n            Note that the value of entPhysicalName for two physical\n            entities will be the same in the event that the console\n            interface does not distinguish between them, e.g., slot-1\n            and the card in slot-1.
%edes        entPhysicalHardwareRev  The vendor-specific hardware revision string for the\n            physical entity.  The preferred value is the hardware\n            revision identifier actually printed on the component itself\n            (if present).\n\n            Note that if revision information is stored internally in a\n            non-printable (e.g., binary) format, then the agent must\n            convert such information to a printable format in an\n            implementation-specific manner.\n\n            If no specific hardware revision string is associated with\n            the physical component, or if this information is unknown to\n            the agent, then this object will contain a zero-length\n            string.
%edes        entPhysicalFirmwareRev  The vendor-specific firmware revision string for the\n            physical entity.\n\n            Note that if revision information is stored internally in a\n            non-printable (e.g., binary) format, then the agent must\n            convert such information to a printable format in an\n            implementation-specific manner.\n\n            If no specific firmware programs are associated with the\n            physical component, or if this information is unknown to the\n            agent, then this object will contain a zero-length string.
%edes        entPhysicalSoftwareRev  The vendor-specific software revision string for the\n            physical entity.\n\n            Note that if revision information is stored internally in a\n            non-printable (e.g., binary) format, then the agent must\n            convert such information to a printable format in an\n            implementation-specific manner.\n\n            If no specific software programs are associated with the\n            physical component, or if this information is unknown to the\n            agent, then this object will contain a zero-length string.
%edes        entPhysicalSerialNum    The vendor-specific serial number string for the physical\n            entity.  The preferred value is the serial number string\n            actually printed on the component itself (if present).\n\n            On the first instantiation of a physical entity, the value\n            of entPhysicalSerialNum associated with that entity is set\n            to the correct vendor-assigned serial number, if this\n            information is available to the agent.  If a serial number\n            is unknown or non-existent, the entPhysicalSerialNum will be\n            set to a zero-length string instead.\n\n\n\n\n            Note that implementations that can correctly identify the\n            serial numbers of all installed physical entities do not\n            need to provide write access to the entPhysicalSerialNum\n            object.  Agents that cannot provide non-volatile storage\n            for the entPhysicalSerialNum strings are not required to\n            implement write access for this object.\n\n            Not every physical component will have a serial number, or\n            even need one.  Physical entities for which the associated\n            value of the entPhysicalIsFRU object is equal to 'false(2)'\n            (e.g., the repeater ports within a repeater module) do not\n            need their own unique serial numbers.  An agent does not\n            have to provide write access for such entities and may\n            return a zero-length string.\n\n            If write access is implemented for an instance of\n            entPhysicalSerialNum and a value is written into the\n            instance, the agent must retain the supplied value in the\n            entPhysicalSerialNum instance (associated with the same\n            physical entity) for as long as that entity remains\n            instantiated.  This includes instantiations across all\n            re-initializations/reboots of the network management system,\n            including those resulting in a change of the physical\n            entity's entPhysicalIndex value.
%edes        entPhysicalMfgName      The name of the manufacturer of this physical component.\n            The preferred value is the manufacturer name string actually\n            printed on the component itself (if present).\n\n            Note that comparisons between instances of the\n            entPhysicalModelName, entPhysicalFirmwareRev,\n            entPhysicalSoftwareRev, and the entPhysicalSerialNum\n            objects are only meaningful amongst entPhysicalEntries with\n            the same value of entPhysicalMfgName.\n\n            If the manufacturer name string associated with the physical\n            component is unknown to the agent, then this object will\n            contain a zero-length string.
%edes        entPhysicalModelName    The vendor-specific model name identifier string associated\n            with this physical component.  The preferred value is the\n            customer-visible part number, which may be printed on the\n            component itself.\n\n            If the model name string associated with the physical\n            component is unknown to the agent, then this object will\n            contain a zero-length string.
%edes        entPhysicalAlias        This object is an 'alias' name for the physical entity, as\n            specified by a network manager, and provides a non-volatile\n            'handle' for the physical entity.\n\n            On the first instantiation of a physical entity, the value\n            of entPhysicalAlias associated with that entity is set to\n            the zero-length string.  However, the agent may set the\n            value to a locally unique default value, instead of a\n            zero-length string.\n\n            If write access is implemented for an instance of\n            entPhysicalAlias and a value is written into the instance,\n            the agent must retain the supplied value in the\n            entPhysicalAlias instance (associated with the same physical\n            entity) for as long as that entity remains instantiated.\n            This includes instantiations across all\n            re-initializations/reboots of the network management system,\n            including those resulting in a change of the physical\n            entity's entPhysicalIndex value.
%edes        entPhysicalAssetID      This object is a user-assigned asset tracking identifier\n            (as specified by a network manager) for the physical entity\n            and provides non-volatile storage of this information.\n\n            On the first instantiation of a physical entity, the value\n            of entPhysicalAssetID associated with that entity is set to\n            the zero-length string.\n\n            Not every physical component will have an asset tracking\n            identifier or even need one.  Physical entities for which\n            the associated value of the entPhysicalIsFRU object is equal\n            to 'false(2)' (e.g., the repeater ports within a repeater\n            module) do not need their own unique asset tracking\n            identifier.  An agent does not have to provide write access\n            for such entities and may instead return a zero-length\n            string.\n\n            If write access is implemented for an instance of\n            entPhysicalAssetID and a value is written into the\n            instance, the agent must retain the supplied value in the\n            entPhysicalAssetID instance (associated with the same\n            physical entity) for as long as that entity remains\n            instantiated.  This includes instantiations across all\n            re-initializations/reboots of the network management system,\n            including those resulting in a change of the physical\n            entity's entPhysicalIndex value.\n\n            If no asset tracking information is associated with the\n            physical component, then this object will contain a\n            zero-length string.
%edes        entPhysicalIsFRU        This object indicates whether or not this physical entity\n            is considered a 'field replaceable unit' by the vendor.\n            If this object contains the value 'true(1)', then this\n            entPhysicalEntry identifies a field replaceable unit.  For\n            all entPhysicalEntries that represent components\n            permanently contained within a field replaceable unit, the\n            value 'false(2)' should be returned for this object.
%edes        entPhysicalMfgDate      This object contains the date of manufacturing of the\n            managed entity.  If the manufacturing date is unknown or\n            not supported, the object is not instantiated.  The special\n            value '0000000000000000'H may also be returned in this\n            case.
%edes        entPhysicalUris         This object contains identification\n            information about the physical entity.  The object\n            contains URIs; therefore, the syntax of this object\n            must conform to RFC 3986, Section 3.\n\n            Multiple URIs may be present and are separated by white\n            space characters.  Leading and trailing white space\n            characters are ignored.\n\n            If no URI identification information is known\n            about the physical entity, the object is not\n            instantiated.  A zero-length octet string may also be\n            returned in this case.
%eref        entPhysicalUris         RFC 3986, Uniform Resource Identifiers (URI): Generic\n            Syntax, Section 2, August 1998.
%edes        entPhysicalUUID         This object contains identification information\n            about the physical entity.  The object contains a\n            Universally Unique Identifier, the syntax of this object\n            must conform to RFC 4122, Section 4.1.\n\n            A zero-length octet string is returned if no UUID\n            information is known.
%eref        entPhysicalUUID         RFC 4122, A Universally Unique IDentifier (UUID) URN\n            Namespace, Section 4.1, July 2005.
%edes        entLogicalTable         This table contains one row per logical entity.  For agents\n            that implement more than one naming scope, at least one\n            entry must exist.  Agents that instantiate all MIB objects\n            within a single naming scope are not required to implement\n            this table.
%edes        entLogicalEntry         Information about a particular logical entity.  Entities\n            may be managed by this agent or other SNMP agents (possibly)\n            in the same chassis.
%edes        entLogicalIndex         The value of this object uniquely identifies the logical\n            entity.  The value should be a small positive integer; index\n            values for different logical entities are not necessarily\n            contiguous.
%edes        entLogicalDescr         A textual description of the logical entity.  This object\n            should contain a string that identifies the manufacturer's\n            name for the logical entity and should be set to a distinct\n            value for each version of the logical entity.
%edes        entLogicalType          An indication of the type of logical entity.  This will\n            typically be the OBJECT IDENTIFIER name of the node in the\n            SMI's naming hierarchy that represents the major MIB\n            module, or the majority of the MIB modules, supported by the\n            logical entity.  For example:\n               a logical entity of a regular host/router -> mib-2\n               a logical entity of a 802.1d bridge -> dot1dBridge\n               a logical entity of a 802.3 repeater -> snmpDot3RptrMgmt\n            If an appropriate node in the SMI's naming hierarchy cannot\n            be identified, the value 'mib-2' should be used.
%edes        entLogicalCommunity     An SNMPv1 or SNMPv2c community string, which can be used to\n            access detailed management information for this logical\n            entity.  The agent should allow read access with this\n            community string (to an appropriate subset of all managed\n            objects) and may also return a community string based on the\n            privileges of the request used to read this object.  Note\n            that an agent may return a community string with read-only\n            privileges, even if this object is accessed with a\n\n\n\n            read-write community string.  However, the agent must take\n            care not to return a community string that allows more\n            privileges than the community string used to access this\n            object.\n\n            A compliant SNMP agent may wish to conserve naming scopes by\n            representing multiple logical entities in a single 'default'\n            naming scope.  This is possible when the logical entities,\n            represented by the same value of entLogicalCommunity, have\n            no object instances in common.  For example, 'bridge1' and\n            'repeater1' may be part of the main naming scope, but at\n            least one additional community string is needed to represent\n            'bridge2' and 'repeater2'.\n\n            Logical entities 'bridge1' and 'repeater1' would be\n            represented by sysOREntries associated with the 'default'\n            naming scope.\n\n            For agents not accessible via SNMPv1 or SNMPv2c, the value\n            of this object is the empty string.  This object may also\n            contain an empty string if a community string has not yet\n            been assigned by the agent or if no community string with\n            suitable access rights can be returned for a particular SNMP\n            request.\n\n            Note that this object is deprecated.  Agents that implement\n            SNMPv3 access should use the entLogicalContextEngineID and\n            entLogicalContextName objects to identify the context\n            associated with each logical entity.  SNMPv3 agents may\n            return a zero-length string for this object or may continue\n            to return a community string (e.g., tri-lingual agent\n            support).
%edes        entLogicalTAddress      The transport service address by which the logical entity\n            receives network management traffic, formatted according to\n            the corresponding value of entLogicalTDomain.\n\n            For snmpUDPDomain, a TAddress is 6 octets long: the initial\n            4 octets contain the IP-address in network-byte order, and\n            the last 2 contain the UDP port in network-byte order.\n            Consult RFC 3417 for further information on snmpUDPDomain.
%eref        entLogicalTAddress      Transport Mappings for the Simple Network Management\n            Protocol (SNMP), STD 62, RFC 3417.
%edes        entLogicalTDomain       Indicates the kind of transport service by which the\n            logical entity receives network management traffic.\n            Possible values for this object are presently found in\n            RFC 3417.
%eref        entLogicalTDomain       Transport Mappings for the Simple Network Management\n            Protocol (SNMP), STD 62, RFC 3417.
%edes        entLogicalContextEngineID The authoritative contextEngineID that can be used to send\n            an SNMP message concerning information held by this logical\n            entity to the address specified by the associated\n            'entLogicalTAddress/entLogicalTDomain' pair.\n\n            This object, together with the associated\n            entLogicalContextName object, defines the context associated\n            with a particular logical entity and allows access to SNMP\n            engines identified by a contextEngineID and contextName\n            pair.\n\n            If no value has been configured by the agent, a zero-length\n            string is returned, or the agent may choose not to\n            instantiate this object at all.
%edes        entLogicalContextName   The contextName that can be used to send an SNMP message\n            concerning information held by this logical entity to the\n            address specified by the associated\n            'entLogicalTAddress/entLogicalTDomain' pair.\n\n            This object, together with the associated\n            entLogicalContextEngineID object, defines the context\n            associated with a particular logical entity and allows\n            access to SNMP engines identified by a contextEngineID and\n            contextName pair.\n\n            If no value has been configured by the agent, a zero-length\n            string is returned, or the agent may choose not to\n            instantiate this object at all.
%edes        entLPMappingTable       This table contains zero or more rows of logical entity to\n            physical equipment associations.  For each logical entity\n            known by this agent, there are zero or more mappings to the\n            physical resources, which are used to realize that logical\n            entity.\n\n            An agent should limit the number and nature of entries in\n            this table such that only meaningful and non-redundant\n            information is returned.  For example, in a system that\n            contains a single power supply, mappings between logical\n            entities and the power supply are not useful and should not\n            be included.\n\n            Also, only the most appropriate physical component, which is\n            closest to the root of a particular containment tree, should\n            be identified in an entLPMapping entry.\n\n            For example, suppose a bridge is realized on a particular\n            module, and all ports on that module are ports on this\n            bridge.  A mapping between the bridge and the module would\n            be useful, but additional mappings between the bridge and\n            each of the ports on that module would be redundant (because\n            the entPhysicalContainedIn hierarchy can provide the same\n            information).  On the other hand, if more than one bridge\n            were utilizing ports on this module, then mappings between\n            each bridge and the ports it used would be appropriate.\n\n\n\n            Also, in the case of a single backplane repeater, a mapping\n            for the backplane to the single repeater entity is not\n            necessary.
%edes        entLPMappingEntry       Information about a particular logical-entity-to-physical-\n            equipment association.  Note that the nature of the\n            association is not specifically identified in this entry.\n            It is expected that sufficient information exists in the\n            MIB modules used to manage a particular logical entity to\n            infer how physical component information is utilized.
%edes        entLPPhysicalIndex      The value of this object identifies the index value of a\n            particular entPhysicalEntry associated with the indicated\n            entLogicalEntity.
%edes        entAliasMappingTable    This table contains zero or more rows, representing\n            mappings of logical entities and physical components to\n            external MIB identifiers.  Each physical port in the system\n            may be associated with a mapping to an external identifier,\n            which itself is associated with a particular logical\n\n\n\n\n\n\n            entity's naming scope.  A 'wildcard' mechanism is provided\n            to indicate that an identifier is associated with more than\n            one logical entity.
%edes        entAliasMappingEntry    Information about a particular binding between a\n            logical entity/physical component pair and an external\n            identifier.  Each logical entity/physical component pair\n            may be associated with one alias mapping.\n            The logical entity index may also be used as\n            a 'wildcard' (refer to the entAliasLogicalIndexOrZero object\n            DESCRIPTION clause for details.)\n\n            Note that only entPhysicalIndex values that represent\n            physical ports (i.e., associated entPhysicalClass value is\n            'port(10)') are permitted to exist in this table.
%edes        entAliasLogicalIndexOrZero The value of this object identifies the logical entity\n            that defines the naming scope for the associated instance\n            of the entAliasMappingIdentifier object.\n\n            If this object has a non-zero value, then it identifies the\n            logical entity named by the same value of entLogicalIndex.\n\n            If this object has a value of zero, then the mapping between\n            the physical component and the alias identifier for this\n            entAliasMapping entry is associated with all unspecified\n            logical entities.  That is, a value of zero (the default\n            mapping) identifies any logical entity that does not have\n            an explicit entry in this table for a particular\n            entPhysicalIndex/entAliasMappingIdentifier pair.\n\n\n\n            For example, to indicate that a particular interface (e.g.,\n            physical component 33) is identified by the same value of\n            ifIndex for all logical entities, the following instance\n            might exist:\n\n                    entAliasMappingIdentifier.33.0 = ifIndex.5\n\n            In the event an entPhysicalEntry is associated differently\n            for some logical entities, additional entAliasMapping\n            entries may exist, e.g.:\n\n                    entAliasMappingIdentifier.33.0 = ifIndex.6\n                    entAliasMappingIdentifier.33.4 =  ifIndex.1\n                    entAliasMappingIdentifier.33.5 =  ifIndex.1\n                    entAliasMappingIdentifier.33.10 = ifIndex.12\n\n            Note that entries with non-zero entAliasLogicalIndexOrZero\n            index values have precedence over zero-indexed entries.  In\n            this example, all logical entities except 4, 5, and 10\n            associate physical entity 33 with ifIndex.6.
%edes        entAliasMappingIdentifier The value of this object identifies a particular conceptual\n            row associated with the indicated entPhysicalIndex and\n            entLogicalIndex pair.\n\n            Because only physical ports are modeled in this table, only\n            entries that represent interfaces or ports are allowed.  If\n            an ifEntry exists on behalf of a particular physical port,\n            then this object should identify the associated ifEntry.\n            For repeater ports, the appropriate row in the\n            'rptrPortGroupTable' should be identified instead.\n\n            For example, suppose a physical port was represented by\n            entPhysicalEntry.3, entLogicalEntry.15 existed for a\n            repeater, and entLogicalEntry.22 existed for a bridge.  Then\n            there might be two related instances of\n            entAliasMappingIdentifier:\n\n               entAliasMappingIdentifier.3.15 == rptrPortGroupIndex.5.2\n               entAliasMappingIdentifier.3.22 == ifIndex.17\n\n\n\n\n\n            It is possible that other mappings (besides interfaces and\n            repeater ports) may be defined in the future, as required.\n\n            Bridge ports are identified by examining the Bridge MIB and\n            appropriate ifEntries associated with each 'dot1dBasePort'\n            and are thus not represented in this table.
%edes        entPhysicalContainsTable A table that exposes the container/'containee'\n            relationships between physical entities.  This table\n            provides all the information found by constructing the\n            virtual containment tree for a given entPhysicalTable, but\n            in a more direct format.\n\n            In the event a physical entity is contained by more than one\n            other physical entity (e.g., double-wide modules), this\n            table should include these additional mappings, which cannot\n            be represented in the entPhysicalTable virtual containment\n            tree.
%edes        entPhysicalContainsEntry A single container/'containee' relationship.
%edes        entPhysicalChildIndex   The value of entPhysicalIndex for the contained physical\n            entity.
%edes        entLastChangeTime       The value of sysUpTime at the time a conceptual row is\n            created, modified, or deleted in any of these tables:\n                    - entPhysicalTable\n                    - entLogicalTable\n                    - entLPMappingTable\n                    - entAliasMappingTable\n                    - entPhysicalContainsTable\n            
%edes        entConfigChange         An entConfigChange notification is generated when the value\n            of entLastChangeTime changes.  It can be utilized by an NMS\n            to trigger logical/physical entity table maintenance polls.\n\n            An agent should not generate more than one entConfigChange\n            'notification-event' in a given time interval (five seconds\n            is the suggested default).  A 'notification-event' is the\n            transmission of a single trap or inform PDU to a list of\n            notification destinations.\n\n            If additional configuration changes occur within the\n            throttling period, then notification-events for these\n            changes should be suppressed by the agent until the current\n            throttling period expires.  At the end of a throttling\n            period, one notification-event should be generated if any\n            configuration changes occurred since the start of the\n            throttling period.  In such a case, another throttling\n            period is started right away.\n\n\n\n\n\n\n\n            An NMS should periodically check the value of\n            entLastChangeTime to detect any missed entConfigChange\n            notification-events, e.g., due to throttling or transmission\n            loss.
%edes        entityPhysicalGroup     The collection of objects used to represent physical\n            system components for which a single agent provides\n            management information.
%est                 entityLogicalGroup deprecated
%edes        entityLogicalGroup      The collection of objects used to represent the list of\n            logical entities for which a single agent provides\n            management information.
%edes        entityMappingGroup      The collection of objects used to represent the\n            associations between multiple logical entities, physical\n            components, interfaces, and port identifiers for which a\n            single agent provides management information.
%edes        entityGeneralGroup      The collection of objects used to represent general entity\n            information for which a single agent provides management\n            information.
%edes        entityNotificationsGroup The collection of notifications used to indicate Entity MIB\n            data consistency and general status information.
%edes        entityPhysical2Group    The collection of objects used to represent physical\n            system components for which a single agent provides\n            management information.  This group augments the objects\n            contained in the entityPhysicalGroup.
%edes        entityLogical2Group     The collection of objects used to represent the\n            list of logical entities for which a single SNMP entity\n            provides management information.
%edes        entityPhysical3Group    The collection of objects used to represent physical\n            system components for which a single agent provides\n            management information.  This group augments the objects\n            contained in the entityPhysicalGroup.
%edes        entityPhysical4Group    The collection of objects used to represent physical\n            system components for which a single agent provides\n            management information.  This group augments the objects\n            contained in the entityPhysicalGroup and\n            entityPhysicalCRGroup.
%edes        entityPhysicalCRGroup   The collection of objects used to represent physical\n            system components for constrained resourced devices,\n            for which a single agent provides management\n            information.
%edes        intSrvIfAttribTable     The reservable attributes of the system's  in-\n           terfaces.
%edes        intSrvIfAttribEntry     The reservable attributes of  a  given  inter-\n           face.
%eunits      intSrvIfAttribAllocatedBits Bits per second
%edes        intSrvIfAttribAllocatedBits The number of bits/second currently  allocated\n           to reserved sessions on the interface.
%eunits      intSrvIfAttribMaxAllocatedBits Bits per second
%edes        intSrvIfAttribMaxAllocatedBits The maximum number of bits/second that may  be\n           allocated  to  reserved  sessions on the inter-\n           face.
%eunits      intSrvIfAttribAllocatedBuffer Bytes
%edes        intSrvIfAttribAllocatedBuffer The amount of buffer space  required  to  hold\n           the simultaneous burst of all reserved flows on\n           the interface.
%edes        intSrvIfAttribFlows     The number of reserved flows currently  active\n           on  this  interface.  A flow can be created ei-\n           ther from a reservation protocol (such as  RSVP\n           or ST-II) or via configuration information.
%eunits      intSrvIfAttribPropagationDelay microseconds
%edes        intSrvIfAttribPropagationDelay The amount of propagation delay that this  in-\n           terface  introduces  in addition to that intro-\n           diced by bit propagation delays.
%edes        intSrvIfAttribStatus    'active' on interfaces that are configured for\n           RSVP.
%edes        intSrvFlowTable         Information describing the reserved flows  us-\n           ing the system's interfaces.
%edes        intSrvFlowEntry         Information describing the use of a given  in-\n           terface   by   a   given   flow.   The  counter\n           intSrvFlowPoliced starts counting  at  the  in-\n           stallation of the flow.
%edes        intSrvFlowNumber        The number of this flow.  This is for SNMP In-\n           dexing purposes only and has no relation to any\n           protocol value.
%edes        intSrvFlowType          The type of session (IP4, IP6, IP6  with  flow\n           information, etc).
%edes        intSrvFlowOwner         The process that installed this  flow  in  the\n           queue policy database.
%edes        intSrvFlowDestAddr      The destination address used by all senders in\n           this  session.   This object may not be changed\n           when the value of the RowStatus object is  'ac-\n           tive'.
%edes        intSrvFlowSenderAddr    The source address of the sender  selected  by\n           this  reservation.  The value of all zeroes in-\n           dicates 'all senders'.  This object may not  be\n           changed  when the value of the RowStatus object\n           is 'active'.
%edes        intSrvFlowDestAddrLength The length of the destination address in bits.\n           This  is  the CIDR Prefix Length, which for IP4\n           hosts and multicast addresses is 32 bits.  This\n           object may not be changed when the value of the\n           RowStatus object is 'active'.
%edes        intSrvFlowSenderAddrLength The length of the sender's  address  in  bits.\n           This  is  the CIDR Prefix Length, which for IP4\n           hosts and multicast addresses is 32 bits.  This\n           object may not be changed when the value of the\n           RowStatus object is 'active'.
%edes        intSrvFlowProtocol      The IP Protocol used by a session.   This  ob-\n           ject  may  not be changed when the value of the\n           RowStatus object is 'active'.
%edes        intSrvFlowDestPort      The UDP or TCP port number used as a  destina-\n           tion  port for all senders in this session.  If\n           the  IP   protocol   in   use,   specified   by\n           intSrvResvFwdProtocol,  is 50 (ESP) or 51 (AH),\n           this  represents  a  virtual  destination  port\n           number.   A value of zero indicates that the IP\n           protocol in use does not have ports.  This  ob-\n           ject  may  not be changed when the value of the\n           RowStatus object is 'active'.
%edes        intSrvFlowPort          The UDP or TCP port number used  as  a  source\n           port  for  this sender in this session.  If the\n           IP    protocol    in    use,    specified    by\n           intSrvResvFwdProtocol  is  50 (ESP) or 51 (AH),\n           this represents a generalized  port  identifier\n           (GPI).   A  value of zero indicates that the IP\n           protocol in use does not have ports.  This  ob-\n           ject  may  not be changed when the value of the\n           RowStatus object is 'active'.
%edes        intSrvFlowFlowId        The flow ID that  this  sender  is  using,  if\n           this  is  an IPv6 session.
%edes        intSrvFlowInterface     The ifIndex value of the  interface  on  which\n           this reservation exists.
%edes        intSrvFlowIfAddr        The IP Address on the ifEntry  on  which  this\n           reservation  exists.  This is present primarily\n           to support those interfaces which layer  multi-\n           ple IP Addresses on the interface.
%eunits      intSrvFlowRate          bits per second
%edes        intSrvFlowRate          The Reserved Rate of the sender's data stream.\n           If this is a Controlled Load service flow, this\n           rate is derived from the Tspec  rate  parameter\n           (r).   If  this  is  a Guaranteed service flow,\n           this rate is derived from  the  Rspec  clearing\n           rate parameter (R).
%eunits      intSrvFlowBurst         bytes
%edes        intSrvFlowBurst         The size of the largest  burst  expected  from\n           the sender at a time.\n\n           If this is less than  the  sender's  advertised\n           burst  size, the receiver is asking the network\n           to provide flow pacing  beyond  what  would  be\n           provided  under normal circumstances. Such pac-\n           ing is at the network's option.
%edes        intSrvFlowWeight        The weight used  to  prioritize  the  traffic.\n           Note  that the interpretation of this object is\n           implementation-specific,   as   implementations\n           vary in their use of weighting procedures.
%edes        intSrvFlowQueue         The number of the queue used by this  traffic.\n           Note  that the interpretation of this object is\n           implementation-specific,   as   implementations\n           vary in their use of queue identifiers.
%edes        intSrvFlowMinTU         The minimum message size for  this  flow.  The\n           policing  algorithm will treat smaller messages\n           as though they are this size.
%edes        intSrvFlowMaxTU         The maximum datagram size for this  flow  that\n           will conform to the traffic specification. This\n           value cannot exceed the MTU of the interface.
%edes        intSrvFlowBestEffort    The number of packets that  were  remanded  to\n           best effort service.
%edes        intSrvFlowPoliced       The number of packets policed since the incep-\n           tion of the flow's service.
%edes        intSrvFlowDiscard       If 'true', the flow  is  to  incur  loss  when\n           traffic is policed.  If 'false', policed traff-\n           ic is treated as best effort traffic.
%edes        intSrvFlowService       The QoS service being applied to this flow.
%edes        intSrvFlowOrder         In the event of ambiguity, the order in  which\n           the  classifier  should  make  its comparisons.\n           The row with intSrvFlowOrder=0 is tried  first,\n           and  comparisons  proceed  in  the order of in-\n           creasing value.  Non-serial implementations  of\n           the classifier should emulate this behavior.
%edes        intSrvFlowStatus        'active' for all active  flows.   This  object\n           may be used to install static classifier infor-\n           mation, delete classifier information,  or  au-\n           thorize such.
%edes        intSrvFlowNewIndex      This  object  is  used  to  assign  values  to\n           intSrvFlowNumber  as described in 'Textual Con-\n           ventions  for  SNMPv2'.   The  network  manager\n           reads  the  object,  and  then writes the value\n           back in the SET that creates a new instance  of\n           intSrvFlowEntry.   If  the  SET  fails with the\n           code 'inconsistentValue', then the process must\n           be  repeated; If the SET succeeds, then the ob-\n           ject is incremented, and the  new  instance  is\n           created according to the manager's directions.
%edes        intSrvIfAttribGroup     These objects are required  for  Systems  sup-\n           porting the Integrated Services Architecture.
%edes        intSrvFlowsGroup        These objects are required  for  Systems  sup-\n           porting the Integrated Services Architecture.
%edes        diffServDataPathTable   The data path table contains RowPointers indicating the start of\n       the functional data path for each interface and traffic direction\n       in this device. These may merge, or be separated into parallel\n       data paths.
%edes        diffServDataPathEntry   An entry in the data path table indicates the start of a single\n       Differentiated Services Functional Data Path in this device.\n\n       These are associated with individual interfaces, logical or\n       physical, and therefore are instantiated by ifIndex. Therefore,\n       the interface index must have been assigned, according to the\n       procedures applicable to that, before it can be meaningfully\n       used. Generally, this means that the interface must exist.\n\n       When diffServDataPathStorage is of type nonVolatile, however,\n       this may reflect the configuration for an interface whose ifIndex\n       has been assigned but for which the supporting implementation is\n       not currently present.
%edes        diffServDataPathIfDirection IfDirection specifies whether the reception or transmission path\n       for this interface is in view.
%edes        diffServDataPathStart   This selects the first Differentiated Services Functional Data\n       Path Element to handle traffic for this data path. This\n       RowPointer should point to an instance of one of:\n         diffServClfrEntry\n         diffServMeterEntry\n         diffServActionEntry\n         diffServAlgDropEntry\n         diffServQEntry\n\n       A value of zeroDotZero in this attribute indicates that no\n       Differentiated Services treatment is performed on traffic of this\n       data path. A pointer with the value zeroDotZero normally\n       terminates a functional data path.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the treatment is as if this\n       attribute contains a value of zeroDotZero.
%edes        diffServDataPathStorage The storage type for this conceptual row.  Conceptual rows\n       having the value 'permanent' need not allow write-access to any\n       columnar objects in the row.
%edes        diffServDataPathStatus  The status of this conceptual row. All writable objects in this\n       row may be modified at any time.
%edes        diffServClfrNextFree    This object contains an unused value for diffServClfrId, or a\n       zero to indicate that none exist.
%edes        diffServClfrTable       This table enumerates all the diffserv classifier functional\n       data path elements of this device.  The actual classification\n       definitions are defined in diffServClfrElementTable entries\n       belonging to each classifier.\n\n       An entry in this table, pointed to by a RowPointer specifying an\n       instance of diffServClfrStatus, is frequently used as the name\n       for a set of classifier elements, which all use the index\n       diffServClfrId. Per the semantics of the classifier element\n       table, these entries constitute one or more unordered sets of\n       tests which may be simultaneously applied to a message to\n\n       classify it.\n\n       The primary function of this table is to ensure that the value of\n       diffServClfrId is unique before attempting to use it in creating\n       a diffServClfrElementEntry. Therefore, the diffServClfrEntry must\n       be created on the same SET as the diffServClfrElementEntry, or\n       before the diffServClfrElementEntry is created.
%edes        diffServClfrEntry       An entry in the classifier table describes a single classifier.\n       All classifier elements belonging to the same classifier use the\n       classifier's diffServClfrId as part of their index.
%edes        diffServClfrId          An index that enumerates the classifier entries.  Managers\n       should obtain new values for row creation in this table by\n       reading diffServClfrNextFree.
%edes        diffServClfrStorage     The storage type for this conceptual row.  Conceptual rows\n       having the value 'permanent' need not allow write-access to any\n       columnar objects in the row.
%edes        diffServClfrStatus      The status of this conceptual row. All writable objects in this\n       row may be modified at any time. Setting this variable to\n       'destroy' when the MIB contains one or more RowPointers pointing\n       to it results in destruction being delayed until the row is no\n       longer used.
%edes        diffServClfrElementNextFree This object contains an unused value for diffServClfrElementId,\n       or a zero to indicate that none exist.
%edes        diffServClfrElementTable The classifier element table enumerates the relationship between\n       classification patterns and subsequent downstream Differentiated\n       Services Functional Data Path elements.\n       diffServClfrElementSpecific points to a filter that specifies the\n       classification parameters. A classifier may use filter tables of\n       different types together.\n\n       One example of a filter table defined in this MIB is\n       diffServMultiFieldClfrTable, for IP Multi-Field Classifiers\n       (MFCs). Such an entry might identify anything from a single\n       micro-flow (an identifiable sub-session packet stream directed\n       from one sending transport to the receiving transport or\n       transports), or aggregates of those such as the traffic from a\n       host, traffic for an application, or traffic between two hosts\n       using an application and a given DSCP. The standard Behavior\n       Aggregate used in the Differentiated Services Architecture is\n       encoded as a degenerate case of such an aggregate - the traffic\n       using a particular DSCP value.\n\n       Filter tables for other filter types may be defined elsewhere.
%edes        diffServClfrElementEntry An entry in the classifier element table describes a single\n       element of the classifier.
%edes        diffServClfrElementId   An index that enumerates the Classifier Element entries.\n       Managers obtain new values for row creation in this table by\n       reading diffServClfrElementNextFree.
%edes        diffServClfrElementPrecedence The relative order in which classifier elements are applied:\n       higher numbers represent classifier element with higher\n       precedence.  Classifier elements with the same order must be\n       unambiguous i.e. they must define non-overlapping patterns, and\n       are considered to be applied simultaneously to the traffic\n       stream. Classifier elements with different order may overlap in\n       their filters:  the classifier element with the highest order\n       that matches is taken.\n\n       On a given interface, there must be a complete classifier in\n       place at all times in the ingress direction.  This means one or\n       more filters must match any possible pattern. There is no such\n\n       requirement in the egress direction.
%edes        diffServClfrElementNext This attribute provides one branch of the fan-out functionality\n       of a classifier described in the Informal Differentiated Services\n       Model section 4.1.\n\n       This selects the next Differentiated Services Functional Data\n       Path Element to handle traffic for this data path. This\n       RowPointer should point to an instance of one of:\n         diffServClfrEntry\n         diffServMeterEntry\n         diffServActionEntry\n         diffServAlgDropEntry\n         diffServQEntry\n\n       A value of zeroDotZero in this attribute indicates no further\n       Differentiated Services treatment is performed on traffic of this\n       data path. The use of zeroDotZero is the normal usage for the\n       last functional data path element of the current data path.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the treatment is as if this\n       attribute contains a value of zeroDotZero.
%edes        diffServClfrElementSpecific A pointer to a valid entry in another table, filter table, that\n       describes the applicable classification parameters, e.g. an entry\n       in diffServMultiFieldClfrTable.\n\n       The value zeroDotZero is interpreted to match anything not\n       matched by another classifier element - only one such entry may\n       exist for each classifier.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n\n       becomes inactive by other means, the element is ignored.
%edes        diffServClfrElementStorage The storage type for this conceptual row.  Conceptual rows\n       having the value 'permanent' need not allow write-access to any\n       columnar objects in the row.
%edes        diffServClfrElementStatus The status of this conceptual row. All writable objects in this\n       row may be modified at any time. Setting this variable to\n       'destroy' when the MIB contains one or more RowPointers pointing\n       to it results in destruction being delayed until the row is no\n       longer used.
%edes        diffServMultiFieldClfrNextFree This object contains an unused value for\n       diffServMultiFieldClfrId, or a zero to indicate that none exist.
%edes        diffServMultiFieldClfrTable A table of IP Multi-field Classifier filter entries that a\n\n       system may use to identify IP traffic.
%edes        diffServMultiFieldClfrEntry An IP Multi-field Classifier entry describes a single filter.
%edes        diffServMultiFieldClfrId An index that enumerates the MultiField Classifier filter\n       entries.  Managers obtain new values for row creation in this\n       table by reading diffServMultiFieldClfrNextFree.
%edes        diffServMultiFieldClfrAddrType The type of IP address used by this classifier entry.  While\n       other types of addresses are defined in the InetAddressType\n\n       textual convention, and DNS names, a classifier can only look at\n       packets on the wire. Therefore, this object is limited to IPv4\n       and IPv6 addresses.
%edes        diffServMultiFieldClfrDstAddr The IP address to match against the packet's destination IP\n       address. This may not be a DNS name, but may be an IPv4 or IPv6\n       prefix.  diffServMultiFieldClfrDstPrefixLength indicates the\n       number of bits that are relevant.
%eunits      diffServMultiFieldClfrDstPrefixLength bits
%edes        diffServMultiFieldClfrDstPrefixLength The length of the CIDR Prefix carried in\n       diffServMultiFieldClfrDstAddr. In IPv4 addresses, a length of 0\n       indicates a match of any address; a length of 32 indicates a\n       match of a single host address, and a length between 0 and 32\n       indicates the use of a CIDR Prefix. IPv6 is similar, except that\n       prefix lengths range from 0..128.
%edes        diffServMultiFieldClfrSrcAddr The IP address to match against the packet's source IP address.\n       This may not be a DNS name, but may be an IPv4 or IPv6 prefix.\n       diffServMultiFieldClfrSrcPrefixLength indicates the number of\n       bits that are relevant.
%eunits      diffServMultiFieldClfrSrcPrefixLength bits
%edes        diffServMultiFieldClfrSrcPrefixLength The length of the CIDR Prefix carried in\n       diffServMultiFieldClfrSrcAddr. In IPv4 addresses, a length of 0\n       indicates a match of any address; a length of 32 indicates a\n       match of a single host address, and a length between 0 and 32\n       indicates the use of a CIDR Prefix. IPv6 is similar, except that\n       prefix lengths range from 0..128.
%edes        diffServMultiFieldClfrDscp The value that the DSCP in the packet must have to match this\n       entry. A value of -1 indicates that a specific DSCP value has not\n       been defined and thus all DSCP values are considered a match.
%edes        diffServMultiFieldClfrFlowId The flow identifier in an IPv6 header.
%edes        diffServMultiFieldClfrProtocol The IP protocol to match against the IPv4 protocol number or the\n       IPv6 Next- Header number in the packet. A value of 255 means\n       match all.  Note the protocol number of 255 is reserved by IANA,\n       and Next-Header number of 0 is used in IPv6.
%edes        diffServMultiFieldClfrDstL4PortMin The minimum value that the layer-4 destination port number in\n       the packet must have in order to match this classifier entry.
%edes        diffServMultiFieldClfrDstL4PortMax The maximum value that the layer-4 destination port number in\n       the packet must have in order to match this classifier entry.\n       This value must be equal to or greater than the value specified\n       for this entry in diffServMultiFieldClfrDstL4PortMin.
%edes        diffServMultiFieldClfrSrcL4PortMin The minimum value that the layer-4 source port number in the\n       packet must have in order to match this classifier entry.
%edes        diffServMultiFieldClfrSrcL4PortMax The maximum value that the layer-4 source port number in the\n       packet must have in order to match this classifier entry. This\n       value must be equal to or greater than the value specified for\n       this entry in diffServMultiFieldClfrSrcL4PortMin.
%edes        diffServMultiFieldClfrStorage The storage type for this conceptual row.  Conceptual rows\n       having the value 'permanent' need not allow write-access to any\n       columnar objects in the row.
%edes        diffServMultiFieldClfrStatus The status of this conceptual row. All writable objects in this\n       row may be modified at any time. Setting this variable to\n       'destroy' when the MIB contains one or more RowPointers pointing\n       to it results in destruction being delayed until the row is no\n       longer used.
%edes        diffServMeterNextFree   This object contains an unused value for diffServMeterId, or a\n       zero to indicate that none exist.
%edes        diffServMeterTable      This table enumerates specific meters that a system may use to\n       police a stream of traffic. The traffic stream to be metered is\n       determined by the Differentiated Services Functional Data Path\n       Element(s) upstream of the meter i.e. by the object(s) that point\n       to each entry in this table.  This may include all traffic on an\n       interface.\n\n       Specific meter details are to be found in table entry referenced\n       by diffServMeterSpecific.
%edes        diffServMeterEntry      An entry in the meter table describes a single conformance level\n       of a meter.
%edes        diffServMeterId         An index that enumerates the Meter entries.  Managers obtain new\n       values for row creation in this table by reading\n       diffServMeterNextFree.
%edes        diffServMeterSucceedNext If the traffic does conform, this selects the next\n       Differentiated Services Functional Data Path element to handle\n       traffic for this data path. This RowPointer should point to an\n       instance of one of:\n         diffServClfrEntry\n         diffServMeterEntry\n         diffServActionEntry\n         diffServAlgDropEntry\n         diffServQEntry\n\n       A value of zeroDotZero in this attribute indicates that no\n       further Differentiated Services treatment is performed on traffic\n       of this data path. The use of zeroDotZero is the normal usage for\n       the last functional data path element of the current data path.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the treatment is as if this\n       attribute contains a value of zeroDotZero.
%edes        diffServMeterFailNext   If the traffic does not conform, this selects the next\n       Differentiated Services Functional Data Path element to handle\n       traffic for this data path. This RowPointer should point to an\n       instance of one of:\n         diffServClfrEntry\n         diffServMeterEntry\n\n         diffServActionEntry\n         diffServAlgDropEntry\n         diffServQEntry\n\n       A value of zeroDotZero in this attribute indicates no further\n       Differentiated Services treatment is performed on traffic of this\n       data path. The use of zeroDotZero is the normal usage for the\n       last functional data path element of the current data path.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the treatment is as if this\n       attribute contains a value of zeroDotZero.
%edes        diffServMeterSpecific   This indicates the behavior of the meter by pointing to an entry\n       containing detailed parameters. Note that entries in that\n       specific table must be managed explicitly.\n\n       For example, diffServMeterSpecific may point to an entry in\n       diffServTBParamTable, which contains an instance of a single set\n       of Token Bucket parameters.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the meter always succeeds.
%edes        diffServMeterStorage    The storage type for this conceptual row.  Conceptual rows\n       having the value 'permanent' need not allow write-access to any\n       columnar objects in the row.
%edes        diffServMeterStatus     The status of this conceptual row. All writable objects in this\n       row may be modified at any time. Setting this variable to\n       'destroy' when the MIB contains one or more RowPointers pointing\n       to it results in destruction being delayed until the row is no\n       longer used.
%edes        diffServTBParamNextFree This object contains an unused value for diffServTBParamId, or a\n       zero to indicate that none exist.
%edes        diffServTBParamTable    This table enumerates a single set of token bucket meter\n       parameters that a system may use to police a stream of traffic.\n       Such meters are modeled here as having a single rate and a single\n       burst size. Multiple entries are used when multiple rates/burst\n       sizes are needed.
%edes        diffServTBParamEntry    An entry that describes a single set of token bucket\n       parameters.
%edes        diffServTBParamId       An index that enumerates the Token Bucket Parameter entries.\n       Managers obtain new values for row creation in this table by\n       reading diffServTBParamNextFree.
%edes        diffServTBParamType     The Metering algorithm associated with the Token Bucket\n       parameters.  zeroDotZero indicates this is unknown.\n\n       Standard values for generic algorithms:\n       diffServTBParamSimpleTokenBucket, diffServTBParamAvgRate,\n       diffServTBParamSrTCMBlind, diffServTBParamSrTCMAware,\n       diffServTBParamTrTCMBlind, diffServTBParamTrTCMAware, and\n       diffServTBParamTswTCM are specified in this MIB as OBJECT-\n       IDENTITYs; additional values may be further specified in other\n       MIBs.
%eunits      diffServTBParamRate     kilobits per second
%edes        diffServTBParamRate     The token-bucket rate, in kilobits per second (kbps). This\n       attribute is used for:\n       1. CIR in RFC 2697 for srTCM\n       2. CIR and PIR in RFC 2698 for trTCM\n       3. CTR and PTR in RFC 2859 for TSWTCM\n       4. AverageRate in RFC 3290.
%eunits      diffServTBParamBurstSize Bytes
%edes        diffServTBParamBurstSize The maximum number of bytes in a single transmission burst. This\n       attribute is used for:\n       1. CBS and EBS in RFC 2697 for srTCM\n       2. CBS and PBS in RFC 2698 for trTCM\n       3. Burst Size in RFC 3290.
%eunits      diffServTBParamInterval microseconds
%edes        diffServTBParamInterval The time interval used with the token bucket.  For:\n       1. Average Rate Meter, the Informal Differentiated Services Model\n          section 5.2.1, - Delta.\n       2. Simple Token Bucket Meter, the Informal Differentiated\n          Services Model section 5.1, - time interval t.\n       3. RFC 2859 TSWTCM, - AVG_INTERVAL.\n       4. RFC 2697 srTCM, RFC 2698 trTCM, - token bucket update time\n          interval.
%edes        diffServTBParamStorage  The storage type for this conceptual row.  Conceptual rows\n       having the value 'permanent' need not allow write-access to any\n       columnar objects in the row.
%edes        diffServTBParamStatus   The status of this conceptual row. All writable objects in this\n       row may be modified at any time. Setting this variable to\n       'destroy' when the MIB contains one or more RowPointers pointing\n       to it results in destruction being delayed until the row is no\n       longer used.
%edes        diffServActionNextFree  This object contains an unused value for diffServActionId, or a\n       zero to indicate that none exist.
%edes        diffServActionTable     The Action Table enumerates actions that can be performed to a\n       stream of traffic. Multiple actions can be concatenated. For\n       example, traffic exiting from a meter may be counted, marked, and\n       potentially dropped before entering a queue.\n\n       Specific actions are indicated by diffServActionSpecific which\n       points to an entry of a specific action type parameterizing the\n       action in detail.
%edes        diffServActionEntry     Each entry in the action table allows description of one\n       specific action to be applied to traffic.
%edes        diffServActionId        An index that enumerates the Action entries.  Managers obtain\n       new values for row creation in this table by reading\n       diffServActionNextFree.
%edes        diffServActionInterface The interface index (value of ifIndex) that this action occurs\n       on. This may be derived from the diffServDataPathStartEntry's\n       index by extension through the various RowPointers. However, as\n       this may be difficult for a network management station, it is\n       placed here as well.  If this is indeterminate, the value is\n       zero.\n\n       This is of especial relevance when reporting the counters which\n       may apply to traffic crossing an interface:\n          diffServCountActOctets,\n          diffServCountActPkts,\n          diffServAlgDropOctets,\n          diffServAlgDropPkts,\n          diffServAlgRandomDropOctets, and\n          diffServAlgRandomDropPkts.\n\n       It is also especially relevant to the queue and scheduler which\n       may be subsequently applied.
%edes        diffServActionNext      This selects the next Differentiated Services Functional Data\n       Path Element to handle traffic for this data path. This\n       RowPointer should point to an instance of one of:\n         diffServClfrEntry\n         diffServMeterEntry\n         diffServActionEntry\n         diffServAlgDropEntry\n         diffServQEntry\n\n       A value of zeroDotZero in this attribute indicates no further\n       Differentiated Services treatment is performed on traffic of this\n       data path. The use of zeroDotZero is the normal usage for the\n       last functional data path element of the current data path.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the treatment is as if this\n       attribute contains a value of zeroDotZero.
%edes        diffServActionSpecific  A pointer to an object instance providing additional information\n       for the type of action indicated by this action table entry.\n\n       For the standard actions defined by this MIB module, this should\n       point to either a diffServDscpMarkActEntry or a\n       diffServCountActEntry. For other actions, it may point to an\n       object instance defined in some other MIB.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the Meter should be treated as\n       if it were not present.  This may lead to incorrect policy\n       behavior.
%edes        diffServActionStorage   The storage type for this conceptual row.  Conceptual rows\n       having the value 'permanent' need not allow write-access to any\n       columnar objects in the row.
%edes        diffServActionStatus    The status of this conceptual row. All writable objects in this\n       row may be modified at any time. Setting this variable to\n       'destroy' when the MIB contains one or more RowPointers pointing\n       to it results in destruction being delayed until the row is no\n       longer used.
%edes        diffServDscpMarkActTable This table enumerates specific DSCPs used for marking or\n       remarking the DSCP field of IP packets. The entries of this table\n       may be referenced by a diffServActionSpecific attribute.
%edes        diffServDscpMarkActEntry An entry in the DSCP mark action table that describes a single\n       DSCP used for marking.
%edes        diffServDscpMarkActDscp The DSCP that this Action will store into the DSCP field of the\n       subject. It is quite possible that the only packets subject to\n       this Action are already marked with this DSCP. Note also that\n       Differentiated Services processing may result in packet being\n       marked on both ingress to a network and on egress from it, and\n       that ingress and egress can occur in the same router.
%edes        diffServCountActNextFree This object contains an unused value for\n       diffServCountActId, or a zero to indicate that none exist.
%edes        diffServCountActTable   This table contains counters for all the traffic passing through\n       an action element.
%edes        diffServCountActEntry   An entry in the count action table describes a single set of\n       traffic counters.
%edes        diffServCountActId      An index that enumerates the Count Action entries.  Managers\n       obtain new values for row creation in this table by reading\n\n       diffServCountActNextFree.
%edes        diffServCountActOctets  The number of octets at the Action data path element.\n\n       Discontinuities in the value of this counter can occur at re-\n       initialization of the management system and at other times as\n       indicated by the value of ifCounterDiscontinuityTime on the\n       relevant interface.
%edes        diffServCountActPkts    The number of packets at the Action data path element.\n\n       Discontinuities in the value of this counter can occur at re-\n       initialization of the management system and at other times as\n       indicated by the value of ifCounterDiscontinuityTime on the\n       relevant interface.
%edes        diffServCountActStorage The storage type for this conceptual row.  Conceptual rows\n       having the value 'permanent' need not allow write-access to any\n       columnar objects in the row.
%edes        diffServCountActStatus  The status of this conceptual row. All writable objects in this\n       row may be modified at any time. Setting this variable to\n       'destroy' when the MIB contains one or more RowPointers pointing\n\n       to it results in destruction being delayed until the row is no\n       longer used.
%edes        diffServAlgDropNextFree This object contains an unused value for diffServAlgDropId, or a\n       zero to indicate that none exist.
%edes        diffServAlgDropTable    The algorithmic drop table contains entries describing an\n       element that drops packets according to some algorithm.
%edes        diffServAlgDropEntry    An entry describes a process that drops packets according to\n       some algorithm. Further details of the algorithm type are to be\n       found in diffServAlgDropType and with more detail parameter entry\n       pointed to by diffServAlgDropSpecific when necessary.
%edes        diffServAlgDropId       An index that enumerates the Algorithmic Dropper entries.\n       Managers obtain new values for row creation in this table by\n       reading diffServAlgDropNextFree.
%edes        diffServAlgDropType     The type of algorithm used by this dropper. The value other(1)\n       requires further specification in some other MIB module.\n\n       In the tailDrop(2) algorithm, diffServAlgDropQThreshold\n       represents the maximum depth of the queue, pointed to by\n       diffServAlgDropQMeasure, beyond which all newly arriving packets\n       will be dropped.\n\n       In the headDrop(3) algorithm, if a packet arrives when the\n       current depth of the queue, pointed to by\n       diffServAlgDropQMeasure, is at diffServAlgDropQThreshold, packets\n       currently at the head of the queue are dropped to make room for\n       the new packet to be enqueued at the tail of the queue.\n\n       In the randomDrop(4) algorithm, on packet arrival, an Active\n       Queue Management algorithm is executed which may randomly drop a\n       packet. This algorithm may be proprietary, and it may drop either\n       the arriving packet or another packet in the queue.\n       diffServAlgDropSpecific points to a diffServRandomDropEntry that\n       describes the algorithm. For this algorithm,\n\n       diffServAlgDropQThreshold is understood to be the absolute\n       maximum size of the queue and additional parameters are described\n       in diffServRandomDropTable.\n\n       The alwaysDrop(5) algorithm is as its name specifies; always\n       drop. In this case, the other configuration values in this Entry\n       are not meaningful; There is no useful 'next' processing step,\n       there is no queue, and parameters describing the queue are not\n       useful. Therefore, diffServAlgDropNext, diffServAlgDropMeasure,\n       and diffServAlgDropSpecific are all zeroDotZero.
%edes        diffServAlgDropNext     This selects the next Differentiated Services Functional Data\n       Path Element to handle traffic for this data path. This\n       RowPointer should point to an instance of one of:\n         diffServClfrEntry\n         diffServMeterEntry\n         diffServActionEntry\n         diffServQEntry\n\n       A value of zeroDotZero in this attribute indicates no further\n       Differentiated Services treatment is performed on traffic of this\n       data path. The use of zeroDotZero is the normal usage for the\n       last functional data path element of the current data path.\n\n       When diffServAlgDropType is alwaysDrop(5), this object is\n       ignored.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the treatment is as if this\n       attribute contains a value of zeroDotZero.
%edes        diffServAlgDropQMeasure Points to an entry in the diffServQTable to indicate the queue\n       that a drop algorithm is to monitor when deciding whether to drop\n       a packet. If the row pointed to does not exist, the algorithmic\n       dropper element is considered inactive.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the treatment is as if this\n       attribute contains a value of zeroDotZero.
%eunits      diffServAlgDropQThreshold Bytes
%edes        diffServAlgDropQThreshold A threshold on the depth in bytes of the queue being measured at\n       which a trigger is generated to the dropping algorithm, unless\n       diffServAlgDropType is alwaysDrop(5) where this object is\n       ignored.\n\n       For the tailDrop(2) or headDrop(3) algorithms, this represents\n       the depth of the queue, pointed to by diffServAlgDropQMeasure, at\n       which the drop action will take place. Other algorithms will need\n       to define their own semantics for this threshold.
%edes        diffServAlgDropSpecific Points to a table entry that provides further detail regarding a\n       drop algorithm.\n\n       Entries with diffServAlgDropType equal to other(1) may have this\n       point to a table defined in another MIB module.\n\n       Entries with diffServAlgDropType equal to randomDrop(4) must have\n       this point to an entry in diffServRandomDropTable.\n\n       For all other algorithms specified in this MIB, this should take\n       the value zeroDotZero.\n\n       The diffServAlgDropType is authoritative for the type of the drop\n       algorithm and the specific parameters for the drop algorithm\n       needs to be evaluated based on the diffServAlgDropType.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the treatment is as if this\n       attribute contains a value of zeroDotZero.
%edes        diffServAlgDropOctets   The number of octets that have been deterministically dropped by\n       this drop process.\n\n       Discontinuities in the value of this counter can occur at re-\n       initialization of the management system and at other times as\n       indicated by the value of ifCounterDiscontinuityTime on the\n       relevant interface.
%edes        diffServAlgDropPkts     The number of packets that have been deterministically dropped\n       by this drop process.\n\n       Discontinuities in the value of this counter can occur at re-\n       initialization of the management system and at other times as\n       indicated by the value of ifCounterDiscontinuityTime on the\n       relevant interface.
%edes        diffServAlgRandomDropOctets The number of octets that have been randomly dropped by this\n       drop process.  This counter applies, therefore, only to random\n       droppers.\n\n       Discontinuities in the value of this counter can occur at re-\n       initialization of the management system and at other times as\n       indicated by the value of ifCounterDiscontinuityTime on the\n       relevant interface.
%edes        diffServAlgRandomDropPkts The number of packets that have been randomly dropped by this\n       drop process. This counter applies, therefore, only to random\n       droppers.\n\n       Discontinuities in the value of this counter can occur at re-\n       initialization of the management system and at other times as\n       indicated by the value of ifCounterDiscontinuityTime on the\n       relevant interface.
%edes        diffServAlgDropStorage  The storage type for this conceptual row.  Conceptual rows\n       having the value 'permanent' need not allow write-access to any\n       columnar objects in the row.
%edes        diffServAlgDropStatus   The status of this conceptual row. All writable objects in this\n       row may be modified at any time. Setting this variable to\n       'destroy' when the MIB contains one or more RowPointers pointing\n       to it results in destruction being delayed until the row is no\n       longer used.
%edes        diffServRandomDropNextFree This object contains an unused value for diffServRandomDropId,\n       or a zero to indicate that none exist.
%edes        diffServRandomDropTable The random drop table contains entries describing a process that\n       drops packets randomly. Entries in this table are pointed to by\n       diffServAlgDropSpecific.
%edes        diffServRandomDropEntry An entry describes a process that drops packets according to a\n       random algorithm.
%edes        diffServRandomDropId    An index that enumerates the Random Drop entries.  Managers\n       obtain new values for row creation in this table by reading\n       diffServRandomDropNextFree.
%eunits      diffServRandomDropMinThreshBytes bytes
%edes        diffServRandomDropMinThreshBytes The average queue depth in bytes, beyond which traffic has a\n       non-zero probability of being dropped. Changes in this variable\n       may or may not be reflected in the reported value of\n       diffServRandomDropMinThreshPkts.
%eunits      diffServRandomDropMinThreshPkts packets
%edes        diffServRandomDropMinThreshPkts The average queue depth in packets, beyond which traffic has a\n       non-zero probability of being dropped. Changes in this variable\n       may or may not be reflected in the reported value of\n       diffServRandomDropMinThreshBytes.
%eunits      diffServRandomDropMaxThreshBytes bytes
%edes        diffServRandomDropMaxThreshBytes The average queue depth beyond which traffic has a probability\n       indicated by diffServRandomDropProbMax of being dropped or\n       marked. Note that this differs from the physical queue limit,\n       which is stored in diffServAlgDropQThreshold. Changes in this\n       variable may or may not be reflected in the reported value of\n       diffServRandomDropMaxThreshPkts.
%eunits      diffServRandomDropMaxThreshPkts packets
%edes        diffServRandomDropMaxThreshPkts The average queue depth beyond which traffic has a probability\n       indicated by diffServRandomDropProbMax of being dropped or\n       marked. Note that this differs from the physical queue limit,\n       which is stored in diffServAlgDropQThreshold. Changes in this\n       variable may or may not be reflected in the reported value of\n       diffServRandomDropMaxThreshBytes.
%edes        diffServRandomDropProbMax The worst case random drop probability, expressed in drops per\n       thousand packets.\n\n       For example, if in the worst case every arriving packet may be\n       dropped (100%) for a period, this has the value 1000.\n       Alternatively, if in the worst case only one percent (1%) of\n       traffic may be dropped, it has the value 10.
%edes        diffServRandomDropWeight The weighting of past history in affecting the Exponentially\n       Weighted Moving Average function that calculates the current\n       average queue depth.  The equation uses\n       diffServRandomDropWeight/65536 as the coefficient for the new\n       sample in the equation, and (65536 -\n       diffServRandomDropWeight)/65536 as the coefficient of the old\n       value.\n\n       Implementations may limit the values of diffServRandomDropWeight\n       to a subset of the possible range of values, such as powers of\n       two. Doing this would facilitate implementation of the\n       Exponentially Weighted Moving Average using shift instructions or\n       registers.
%edes        diffServRandomDropSamplingRate The number of times per second the queue is sampled for queue\n       average calculation.  A value of zero is used to mean that the\n       queue is sampled approximately each time a packet is enqueued (or\n       dequeued).
%edes        diffServRandomDropStorage The storage type for this conceptual row.  Conceptual rows\n       having the value 'permanent' need not allow write-access to any\n       columnar objects in the row.
%edes        diffServRandomDropStatus The status of this conceptual row. All writable objects in this\n       row may be modified at any time. Setting this variable to\n       'destroy' when the MIB contains one or more RowPointers pointing\n       to it results in destruction being delayed until the row is no\n       longer used.
%edes        diffServQNextFree       This object contains an unused value for diffServQId, or a zero\n       to indicate that none exist.
%edes        diffServQTable          The Queue Table enumerates the individual queues.  Note that the\n       MIB models queuing systems as composed of individual queues, one\n       per class of traffic, even though they may in fact be structured\n       as classes of traffic scheduled using a common calendar queue, or\n       in other ways.
%edes        diffServQEntry          An entry in the Queue Table describes a single queue or class of\n       traffic.
%edes        diffServQId             An index that enumerates the Queue entries.  Managers obtain new\n       values for row creation in this table by reading\n       diffServQNextFree.
%edes        diffServQNext           This selects the next Differentiated Services Scheduler.  The\n       RowPointer must point to a diffServSchedulerEntry.\n\n       A value of zeroDotZero in this attribute indicates an incomplete\n       diffServQEntry instance. In such a case, the entry has no\n       operational effect, since it has no parameters to give it\n       meaning.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the treatment is as if this\n       attribute contains a value of zeroDotZero.
%edes        diffServQMinRate        This RowPointer indicates the diffServMinRateEntry that the\n       scheduler, pointed to by diffServQNext, should use to service\n       this queue.\n\n       If the row pointed to is zeroDotZero, the minimum rate and\n       priority is unspecified.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the treatment is as if this\n       attribute contains a value of zeroDotZero.
%edes        diffServQMaxRate        This RowPointer indicates the diffServMaxRateEntry that the\n       scheduler, pointed to by diffServQNext, should use to service\n       this queue.\n\n       If the row pointed to is zeroDotZero, the maximum rate is the\n       line speed of the interface.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the treatment is as if this\n       attribute contains a value of zeroDotZero.
%edes        diffServQStorage        The storage type for this conceptual row.  Conceptual rows\n       having the value 'permanent' need not allow write-access to any\n       columnar objects in the row.
%edes        diffServQStatus         The status of this conceptual row. All writable objects in this\n       row may be modified at any time. Setting this variable to\n       'destroy' when the MIB contains one or more RowPointers pointing\n       to it results in destruction being delayed until the row is no\n       longer used.
%edes        diffServSchedulerNextFree This object contains an unused value for diffServSchedulerId, or\n       a zero to indicate that none exist.
%edes        diffServSchedulerTable  The Scheduler Table enumerates packet schedulers. Multiple\n       scheduling algorithms can be used on a given data path, with each\n       algorithm described by one diffServSchedulerEntry.
%edes        diffServSchedulerEntry  An entry in the Scheduler Table describing a single instance of\n       a scheduling algorithm.
%edes        diffServSchedulerId     An index that enumerates the Scheduler entries.  Managers obtain\n       new values for row creation in this table by reading\n       diffServSchedulerNextFree.
%edes        diffServSchedulerNext   This selects the next Differentiated Services Functional Data\n       Path Element to handle traffic for this data path. This normally\n       is null (zeroDotZero), or points to a diffServSchedulerEntry or a\n       diffServQEntry.\n\n       However, this RowPointer may also point to an instance of:\n         diffServClfrEntry,\n         diffServMeterEntry,\n         diffServActionEntry,\n         diffServAlgDropEntry.\n\n       It would point another diffServSchedulerEntry when implementing\n       multiple scheduler methods for the same data path, such as having\n       one set of queues scheduled by WRR and that group participating\n       in a priority scheduling system in which other queues compete\n       with it in that way.  It might also point to a second scheduler\n       in a hierarchical scheduling system.\n\n       If the row pointed to is zeroDotZero, no further Differentiated\n       Services treatment is performed on traffic of this data path.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the treatment is as if this\n       attribute contains a value of zeroDotZero.
%edes        diffServSchedulerMethod The scheduling algorithm used by this Scheduler. zeroDotZero\n       indicates that this is unknown.  Standard values for generic\n       algorithms: diffServSchedulerPriority, diffServSchedulerWRR, and\n       diffServSchedulerWFQ are specified in this MIB; additional values\n\n       may be further specified in other MIBs.
%edes        diffServSchedulerMinRate This RowPointer indicates the entry in diffServMinRateTable\n       which indicates the priority or minimum output rate from this\n       scheduler. This attribute is used only when there is more than\n       one level of scheduler.\n\n       When it has the value zeroDotZero, it indicates that no minimum\n       rate or priority is imposed.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the treatment is as if this\n       attribute contains a value of zeroDotZero.
%edes        diffServSchedulerMaxRate This RowPointer indicates the entry in diffServMaxRateTable\n       which indicates the maximum output rate from this scheduler.\n       When more than one maximum rate applies (eg, when a multi-rate\n       shaper is in view), it points to the first of those rate entries.\n       This attribute is used only when there is more than one level of\n       scheduler.\n\n       When it has the value zeroDotZero, it indicates that no maximum\n       rate is imposed.\n\n       Setting this to point to a target that does not exist results in\n       an inconsistentValue error.  If the row pointed to is removed or\n       becomes inactive by other means, the treatment is as if this\n       attribute contains a value of zeroDotZero.
%edes        diffServSchedulerStorage The storage type for this conceptual row.  Conceptual rows\n       having the value 'permanent' need not allow write-access to any\n       columnar objects in the row.
%edes        diffServSchedulerStatus The status of this conceptual row. All writable objects in this\n       row may be modified at any time. Setting this variable to\n       'destroy' when the MIB contains one or more RowPointers pointing\n       to it results in destruction being delayed until the row is no\n       longer used.
%edes        diffServMinRateNextFree This object contains an unused value for diffServMinRateId, or a\n       zero to indicate that none exist.
%edes        diffServMinRateTable    The Minimum Rate Parameters Table enumerates individual sets of\n       scheduling parameter that can be used/reused by Queues and\n       Schedulers.
%edes        diffServMinRateEntry    An entry in the Minimum Rate Parameters Table describes a single\n       set of scheduling parameters for use by one or more queues or\n       schedulers.
%edes        diffServMinRateId       An index that enumerates the Scheduler Parameter entries.\n       Managers obtain new values for row creation in this table by\n       reading diffServMinRateNextFree.
%edes        diffServMinRatePriority The priority of this input to the associated scheduler, relative\n\n       to the scheduler's other inputs. A queue or scheduler with a\n       larger numeric value will be served before another with a smaller\n       numeric value.
%eunits      diffServMinRateAbsolute kilobits per second
%edes        diffServMinRateAbsolute The minimum absolute rate, in kilobits/sec, that a downstream\n       scheduler element should allocate to this queue. If the value is\n       zero, then there is effectively no minimum rate guarantee. If the\n       value is non-zero, the scheduler will assure the servicing of\n       this queue to at least this rate.\n\n       Note that this attribute value and that of\n       diffServMinRateRelative are coupled: changes to one will affect\n       the value of the other. They are linked by the following\n       equation, in that setting one will change the other:\n\n         diffServMinRateRelative =\n                 (diffServMinRateAbsolute*1000000)/ifSpeed\n\n       or, if appropriate:\n\n         diffServMinRateRelative = diffServMinRateAbsolute/ifHighSpeed
%eref        diffServMinRateAbsolute ifSpeed, ifHighSpeed, Interface MIB, RFC 2863
%edes        diffServMinRateRelative The minimum rate that a downstream scheduler element should\n       allocate to this queue, relative to the maximum rate of the\n       interface as reported by ifSpeed or ifHighSpeed, in units of\n       1/1000 of 1. If the value is zero, then there is effectively no\n       minimum rate guarantee. If the value is non-zero, the scheduler\n       will assure the servicing of this queue to at least this rate.\n\n       Note that this attribute value and that of\n       diffServMinRateAbsolute are coupled: changes to one will affect\n       the value of the other. They are linked by the following\n       equation, in that setting one will change the other:\n\n         diffServMinRateRelative =\n                 (diffServMinRateAbsolute*1000000)/ifSpeed\n\n       or, if appropriate:\n\n         diffServMinRateRelative = diffServMinRateAbsolute/ifHighSpeed
%eref        diffServMinRateRelative ifSpeed, ifHighSpeed, Interface MIB, RFC 2863
%edes        diffServMinRateStorage  The storage type for this conceptual row.  Conceptual rows\n       having the value 'permanent' need not allow write-access to any\n       columnar objects in the row.
%edes        diffServMinRateStatus   The status of this conceptual row. All writable objects in this\n       row may be modified at any time. Setting this variable to\n       'destroy' when the MIB contains one or more RowPointers pointing\n       to it results in destruction being delayed until the row is no\n       longer used.
%edes        diffServMaxRateNextFree This object contains an unused value for diffServMaxRateId, or a\n       zero to indicate that none exist.
%edes        diffServMaxRateTable    The Maximum Rate Parameter Table enumerates individual sets of\n       scheduling parameter that can be used/reused by Queues and\n       Schedulers.
%edes        diffServMaxRateEntry    An entry in the Maximum Rate Parameter Table describes a single\n       set of scheduling parameters for use by one or more queues or\n       schedulers.
%edes        diffServMaxRateId       An index that enumerates the Maximum Rate Parameter entries.\n       Managers obtain new values for row creation in this table by\n       reading diffServMaxRateNextFree.
%edes        diffServMaxRateLevel    An index that indicates which level of a multi-rate shaper is\n       being given its parameters. A multi-rate shaper has some number\n       of rate levels. Frame Relay's dual rate specification refers to a\n       'committed' and an 'excess' rate; ATM's dual rate specification\n       refers to a 'mean' and a 'peak' rate. This table is generalized\n       to support an arbitrary number of rates. The committed or mean\n       rate is level 1, the peak rate (if any) is the highest level rate\n       configured, and if there are other rates they are distributed in\n       monotonically increasing order between them.
%eunits      diffServMaxRateAbsolute kilobits per second
%edes        diffServMaxRateAbsolute The maximum rate in kilobits/sec that a downstream scheduler\n       element should allocate to this queue. If the value is zero, then\n       there is effectively no maximum rate limit and that the scheduler\n       should attempt to be work conserving for this queue. If the value\n       is non-zero, the scheduler will limit the servicing of this queue\n       to, at most, this rate in a non-work-conserving manner.\n\n       Note that this attribute value and that of\n       diffServMaxRateRelative are coupled: changes to one will affect\n       the value of the other. They are linked by the following\n\n       equation, in that setting one will change the other:\n\n         diffServMaxRateRelative =\n                 (diffServMaxRateAbsolute*1000000)/ifSpeed\n\n       or, if appropriate:\n\n         diffServMaxRateRelative = diffServMaxRateAbsolute/ifHighSpeed
%eref        diffServMaxRateAbsolute ifSpeed, ifHighSpeed, Interface MIB, RFC 2863
%edes        diffServMaxRateRelative The maximum rate that a downstream scheduler element should\n       allocate to this queue, relative to the maximum rate of the\n       interface as reported by ifSpeed or ifHighSpeed, in units of\n       1/1000 of 1. If the value is zero, then there is effectively no\n       maximum rate limit and the scheduler should attempt to be work\n       conserving for this queue. If the value is non-zero, the\n       scheduler will limit the servicing of this queue to, at most,\n       this rate in a non-work-conserving manner.\n\n       Note that this attribute value and that of\n       diffServMaxRateAbsolute are coupled: changes to one will affect\n       the value of the other. They are linked by the following\n       equation, in that setting one will change the other:\n\n         diffServMaxRateRelative =\n                 (diffServMaxRateAbsolute*1000000)/ifSpeed\n\n       or, if appropriate:\n\n         diffServMaxRateRelative = diffServMaxRateAbsolute/ifHighSpeed
%eref        diffServMaxRateRelative ifSpeed, ifHighSpeed, Interface MIB, RFC 2863
%eunits      diffServMaxRateThreshold Bytes
%edes        diffServMaxRateThreshold The number of bytes of queue depth at which the rate of a\n\n       multi-rate scheduler will increase to the next output rate. In\n       the last conceptual row for such a shaper, this threshold is\n       ignored and by convention is zero.
%eref        diffServMaxRateThreshold Adaptive rate Shaper, RFC 2963
%edes        diffServMaxRateStorage  The storage type for this conceptual row.  Conceptual rows\n       having the value 'permanent' need not allow write-access to any\n       columnar objects in the row.
%edes        diffServMaxRateStatus   The status of this conceptual row. All writable objects in this\n       row may be modified at any time. Setting this variable to\n       'destroy' when the MIB contains one or more RowPointers pointing\n       to it results in destruction being delayed until the row is no\n       longer used.
%edes        diffServTBParamSimpleTokenBucket Two Parameter Token Bucket Meter as described in the Informal\n       Differentiated Services Model section 5.2.3.
%edes        diffServTBParamAvgRate  Average Rate Meter as described in the Informal Differentiated\n       Services Model section 5.2.1.
%edes        diffServTBParamSrTCMBlind Single Rate Three Color Marker Metering as defined by RFC 2697,\n       in the `Color Blind' mode as described by the RFC.
%eref        diffServTBParamSrTCMBlind RFC 2697
%edes        diffServTBParamSrTCMAware Single Rate Three Color Marker Metering as defined by RFC 2697,\n       in the `Color Aware' mode as described by the RFC.
%eref        diffServTBParamSrTCMAware RFC 2697
%edes        diffServTBParamTrTCMBlind Two Rate Three Color Marker Metering as defined by RFC 2698, in\n       the `Color Blind' mode as described by the RFC.
%eref        diffServTBParamTrTCMBlind RFC 2698
%edes        diffServTBParamTrTCMAware Two Rate Three Color Marker Metering as defined by RFC 2698, in\n       the `Color Aware' mode as described by the RFC.
%eref        diffServTBParamTrTCMAware RFC 2698
%edes        diffServTBParamTswTCM   Time Sliding Window Three Color Marker Metering as defined by\n       RFC 2859.
%eref        diffServTBParamTswTCM   RFC 2859
%edes        diffServSchedulerPriority For use with diffServSchedulerMethod to indicate the Priority\n       scheduling method.  This is defined as an algorithm in which the\n       presence of data in a queue or set of queues absolutely precludes\n       dequeue from another queue or set of queues of lower priority.\n       Note that attributes from diffServMinRateEntry of the\n       queues/schedulers feeding this scheduler are used when\n       determining the next packet to schedule.
%edes        diffServSchedulerWRR    For use with diffServSchedulerMethod to indicate the Weighted\n       Round Robin scheduling method, defined as any algorithm in which\n       a set of queues are visited in a fixed order, and varying amounts\n       of traffic are removed from each queue in turn to implement an\n       average output rate by class. Notice attributes from\n       diffServMinRateEntry of the queues/schedulers feeding this\n       scheduler are used when determining the next packet to schedule.
%edes        diffServSchedulerWFQ    For use with diffServSchedulerMethod to indicate the Weighted\n       Fair Queuing scheduling method, defined as any algorithm in which\n       a set of queues are conceptually visited in some order, to\n       implement an average output rate by class. Notice attributes from\n       diffServMinRateEntry of the queues/schedulers feeding this\n       scheduler are used when determining the next packet to schedule.
%edes        transportDomainUdpIpv4  The UDP over IPv4 transport domain.  The corresponding\n         transport address is of type TransportAddressIPv4 for\n         global IPv4 addresses.
%edes        transportDomainUdpIpv6  The UDP over IPv6 transport domain.  The corresponding\n         transport address is of type TransportAddressIPv6 for\n         global IPv6 addresses.
%edes        transportDomainUdpIpv4z The UDP over IPv4 transport domain.  The corresponding\n         transport address is of type TransportAddressIPv4z for\n         scoped IPv4 addresses with a zone index.
%edes        transportDomainUdpIpv6z The UDP over IPv6 transport domain.  The corresponding\n         transport address is of type TransportAddressIPv6z for\n         scoped IPv6 addresses with a zone index.
%edes        transportDomainTcpIpv4  The TCP over IPv4 transport domain.  The corresponding\n         transport address is of type TransportAddressIPv4 for\n         global IPv4 addresses.
%edes        transportDomainTcpIpv6  The TCP over IPv6 transport domain.  The corresponding\n         transport address is of type TransportAddressIPv6 for\n         global IPv6 addresses.
%edes        transportDomainTcpIpv4z The TCP over IPv4 transport domain.  The corresponding\n         transport address is of type TransportAddressIPv4z for\n         scoped IPv4 addresses with a zone index.
%edes        transportDomainTcpIpv6z The TCP over IPv6 transport domain.  The corresponding\n         transport address is of type TransportAddressIPv6z for\n         scoped IPv6 addresses with a zone index.
%edes        transportDomainSctpIpv4 The SCTP over IPv4 transport domain.  The corresponding\n         transport address is of type TransportAddressIPv4 for\n         global IPv4 addresses. This transport domain usually\n         represents the primary address on multihomed SCTP\n         endpoints.
%edes        transportDomainSctpIpv6 The SCTP over IPv6 transport domain.  The corresponding\n         transport address is of type TransportAddressIPv6 for\n         global IPv6 addresses. This transport domain usually\n         represents the primary address on multihomed SCTP\n         endpoints.
%edes        transportDomainSctpIpv4z The SCTP over IPv4 transport domain.  The corresponding\n         transport address is of type TransportAddressIPv4z for\n         scoped IPv4 addresses with a zone index. This transport\n         domain usually represents the primary address on\n         multihomed SCTP endpoints.
%edes        transportDomainSctpIpv6z The SCTP over IPv6 transport domain.  The corresponding\n         transport address is of type TransportAddressIPv6z for\n         scoped IPv6 addresses with a zone index. This transport\n         domain usually represents the primary address on\n         multihomed SCTP endpoints.
%edes        transportDomainLocal    The Posix Local IPC transport domain. The corresponding\n         transport address is of type TransportAddressLocal.\n\n         The Posix Local IPC transport domain incorporates the\n         well-known UNIX domain sockets.
%edes        transportDomainUdpDns   The UDP transport domain using fully qualified domain\n         names. The corresponding transport address is of type\n         TransportAddressDns.
%edes        transportDomainTcpDns   The TCP transport domain using fully qualified domain\n         names. The corresponding transport address is of type\n         TransportAddressDns.
%edes        transportDomainSctpDns  The SCTP transport domain using fully qualified domain\n         names. The corresponding transport address is of type\n         TransportAddressDns.
%edes        isisDatabaseOverload    This notification is generated when the system\n             enters or leaves the Overload state.  The number\n             of times this has been generated and cleared is kept\n             track of by isisSysStatLSPDbaseOloads.
%edes        isisManualAddressDrops  This notification is generated when one of the\n             manual areaAddresses assigned to this system is\n             ignored when computing routes.  The object\n             isisNotificationAreaAddress describes the area that\n             has been dropped.\n\n             The number of times this event has been generated\n             is counted by isisSysStatManAddrDropFromAreas.\n\n             The agent must throttle the generation of\n             consecutive isisManualAddressDrops notifications\n             so that there is at least a 5-second gap between\n             notifications of this type.  When notifications\n             are throttled, they are dropped, not queued for\n             sending at a future time.
%edes        isisCorruptedLSPDetected This notification is generated when we find that\n             an LSP that was stored in memory has become\n             corrupted.  The number of times this has been\n             generated is counted by isisSysCorrLSPs.\n\n             We forward an LSP ID.  We may have independent\n             knowledge of the ID, but in some implementations\n             there is a chance that the ID itself will be\n             corrupted.
%edes        isisAttemptToExceedMaxSequence When the sequence number on an LSP we generate\n             wraps the 32-bit sequence counter, we purge and\n             wait to re-announce this information.  This\n             notification describes that event.  Since these\n             should not be generated rapidly, we generate\n             an event each time this happens.\n\n             While the first 6 bytes of the LSPID are ours,\n             the other two contain useful information.
%edes        isisIDLenMismatch       A notification sent when we receive a PDU\n             with a different value for the System ID Length.\n             This notification includes an index to identify\n             the circuit where we saw the PDU and the header of\n             the PDU, which may help a network manager identify\n             the source of the confusion.\n\n             The agent must throttle the generation of\n             consecutive isisIDLenMismatch notifications\n             so that there is at least a 5-second gap between\n             notifications of this type.  When notifications\n             are throttled, they are dropped, not queued for\n             sending at a future time.
%edes        isisMaxAreaAddressesMismatch A notification sent when we receive a PDU\n             with a different value for the Maximum Area\n             Addresses.  This notification includes the\n             header of the packet, which may help a\n             network manager identify the source of the\n             confusion.\n\n             The agent must throttle the generation of\n             consecutive isisMaxAreaAddressesMismatch\n             notifications so that there is at least a 5-second\n             gap between notifications of this type.  When\n             notifications are throttled, they are dropped, not\n             queued for sending at a future time.
%edes        isisOwnLSPPurge         A notification sent when we receive a PDU\n             with our systemID and zero age.  This\n             notification includes the circuit Index\n             and router ID from the LSP, if available,\n             which may help a network manager\n             identify the source of the confusion.
%edes        isisSequenceNumberSkip  When we receive an LSP with our System ID\n             and different contents, we may need to reissue\n             the LSP with a higher sequence number.\n\n             We send this notification if we need to increase\n             the sequence number by more than one.  If two\n             Intermediate Systems are configured with the same\n             System ID, this notification will fire.
%edes        isisAuthenticationTypeFailure A notification sent when we receive a PDU\n             with the wrong authentication type field.\n             This notification includes the header of the\n             packet, which may help a network manager\n             identify the source of the confusion.\n\n             The agent must throttle the generation of\n             consecutive isisAuthenticationTypeFailure\n             notifications so that there is at least a 5-second\n             gap between notifications of this type.  When\n             notifications are throttled, they are dropped, not\n             queued for sending at a future time.
%edes        isisAuthenticationFailure A notification sent when we receive a PDU\n             with an incorrect authentication information\n             field.  This notification includes the header\n             of the packet, which may help a network manager\n             identify the source of the confusion.\n\n             The agent must throttle the generation of\n             consecutive isisAuthenticationFailure\n             notifications so that there is at least a 5-second\n             gap between notifications of this type.  When\n             notifications are throttled, they are dropped, not\n             queued for sending at a future time.
%edes        isisVersionSkew         A notification sent when we receive a Hello\n             PDU from an IS running a different version\n             of the protocol.  This notification includes\n             the header of the packet, which may help a\n             network manager identify the source of the\n             confusion.\n\n             The agent must throttle the generation of\n             consecutive isisVersionSkew notifications\n             so that there is at least a 5-second gap\n             between notifications of this type.  When\n             notifications are throttled, they are dropped, not\n             queued for sending at a future time.
%edes        isisAreaMismatch        A notification sent when we receive a Hello\n             PDU from an IS that does not share any\n             area address.  This notification includes\n             the header of the packet, which may help a\n             network manager identify the source of the\n             confusion.\n\n             The agent must throttle the generation of\n             consecutive isisAreaMismatch notifications\n             so that there is at least a 5-second gap\n             between notifications of this type.  When\n             notifications are throttled, they are dropped, not\n             queued for sending at a future time.
%edes        isisRejectedAdjacency   A notification sent when we receive a Hello\n             PDU from an IS but do not establish an\n             adjacency for some reason.\n\n             The agent must throttle the generation of\n             consecutive isisRejectedAdjacency notifications\n             so that there is at least a 5-second gap\n             between notifications of this type.  When\n             notifications are throttled, they are dropped, not\n             queued for sending at a future time.
%edes        isisLSPTooLargeToPropagate A notification sent when we attempt to propagate\n             an LSP that is larger than the dataLinkBlockSize\n             for the circuit.\n\n             The agent must throttle the generation of\n             consecutive isisLSPTooLargeToPropagate notifications\n             so that there is at least a 5-second gap\n             between notifications of this type.  When\n             notifications are throttled, they are dropped, not\n\n             queued for sending at a future time.
%edes        isisOrigLSPBuffSizeMismatch A notification sent when a Level 1 LSP or Level\n             2 LSP is received that is larger than the local\n             value for isisSysLevelOrigLSPBuffSize, or when an\n             LSP is received that contains the supported Buffer Size\n             option and the value in the PDU option field does\n             not match the local value for isisSysLevelOrigLSPBuffSize.\n             We pass up the size from the option field and the\n             size of the LSP when one of them exceeds our configuration.\n\n             The agent must throttle the generation of\n             consecutive isisOrigLSPBuffSizeMismatch notifications\n             so that there is at least a 5-second gap\n             between notifications of this type.  When\n             notifications are throttled, they are dropped, not\n             queued for sending at a future time.
%edes        isisProtocolsSupportedMismatch A notification sent when a non-pseudonode\n             segment 0 LSP is received that has no matching\n             protocols supported.  This may be because the system\n             does not generate the field, or because there are no\n             common elements.  The list of protocols supported\n             should be included in the notification: it may be\n\n             empty if the TLV is not supported, or if the\n             TLV is empty.\n\n             The agent must throttle the generation of\n             consecutive isisProtocolsSupportedMismatch\n             notifications so that there is at least a 5-second\n             gap between notifications of this type.  When\n             notifications are throttled, they are dropped, not\n             queued for sending at a future time.
%edes        isisAdjacencyChange     A notification sent when an adjacency changes\n             state, entering or leaving state up.\n             The first 6 bytes of the isisPduLspId are the\n             SystemID of the adjacent IS.\n             The isisAdjState is the new state of the adjacency.
%edes        isisLSPErrorDetected    This notification is generated when we receive\n             an LSP with a parse error.  The isisCircIfIndex\n             holds an index of the circuit on which the PDU\n             arrived.  The isisPduFragment holds the start of the\n             LSP, and the isisErrorOffset points to the problem.\n\n             If the problem is a malformed TLV, isisErrorOffset\n             points to the start of the TLV, and isisErrorTLVType\n\n             holds the value of the type.\n\n             If the problem is with the LSP header, isisErrorOffset\n             points to the suspicious byte.\n\n             The number of such LSPs is accumulated in\n             isisSysStatLSPErrors.
%edes        isisSysVersion          The version number of the IS-IS protocol that\n             is implemented.
%eref        isisSysVersion          {ISIS.aoi version (1)}
%edes        isisSysLevelType        At which levels is the Intermediate System\n             running? This object may not be modified when\n             the isisSysAdminState variable is in state 'on'\n             for this Intermediate System.\n\n             Configured values MUST survive an agent reboot.
%eref        isisSysLevelType        {ISIS.aoi iSType (2)}
%edes        isisSysID               The ID for this Intermediate System.\n             This value is appended to each of the\n             area addresses to form the Network Entity Titles.\n             The derivation of a value for this object is\n             implementation specific.  Some implementations may\n             automatically assign values and not permit an\n             SNMP write, while others may require the value\n             to be set manually.\n\n             Configured values MUST survive an agent reboot.
%eref        isisSysID               {ISIS.aoi systemId (119)}
%edes        isisSysMaxPathSplits    Maximum number of paths with equal routing metric value\n             which it is permitted to split between.  This object\n             may not be modified when the isisSysAdminState variable\n             is in state 'on' for this Intermediate System.\n\n             Configured values MUST survive an agent reboot.
%eref        isisSysMaxPathSplits    {ISIS.aoi maximumPathSplits (3)}
%eunits      isisSysMaxLSPGenInt     seconds
%edes        isisSysMaxLSPGenInt     Maximum interval, in seconds, between generated LSPs\n             by this Intermediate System.  This object follows\n             the ResettingTimer behavior.  The value must be\n             greater than any value configured for\n             isisSysLevelMinLSPGenInt, and should be at least 300\n             seconds less than isisSysMaxAge.\n\n             Configured values MUST survive an agent reboot.
%eref        isisSysMaxLSPGenInt     {ISIS.aoi maximumLSPGenerationInterval (6)}
%eunits      isisSysPollESHelloRate  seconds
%edes        isisSysPollESHelloRate  The value, in seconds, to be used for the suggested ES\n             configuration timer in ISH PDUs when soliciting the ES\n             configuration.\n\n             Configured values MUST survive an agent reboot.
%eref        isisSysPollESHelloRate  {ISIS.aoi pollESHelloRate (13)}
%eunits      isisSysWaitTime         seconds
%edes        isisSysWaitTime         Number of seconds to delay in state 'waiting' before\n             entering the state 'on'.  This object follows the\n             ResettingTimer behavior.\n\n             Configured values MUST survive an agent reboot.
%eref        isisSysWaitTime         {ISIS.aoi waitingTime (15)}
%edes        isisSysAdminState       The administrative state of this Intermediate\n             System.  Setting this object to the value 'on'\n             when its current value is 'off' enables\n             the Intermediate System.\n\n             Configured values MUST survive an agent reboot.
%edes        isisSysL2toL1Leaking    If true, allow the router to leak L2 routes into L1.\n\n             Configured values MUST survive an agent reboot.
%eunits      isisSysMaxAge           seconds
%edes        isisSysMaxAge           Value to place in RemainingLifeTime field of\n             the LSPs we generate.\n             This should be at least 300 seconds greater than\n             isisSysMaxLSPGenInt.\n\n             Configured values MUST survive an agent reboot.
%eunits      isisSysReceiveLSPBufferSize bytes
%edes        isisSysReceiveLSPBufferSize Size of the largest buffer we are designed or\n             configured to store.  This should be at least\n             as big as the maximum isisSysLevelOrigLSPBuffSize\n             supported by the system.\n\n             If resources allow, we will store and flood LSPs\n             larger than isisSysReceiveLSPBufferSize, as this\n             can help avoid problems in networks with different\n             values for isisSysLevelOrigLSPBuffSize.\n\n             Configured values MUST survive an agent reboot.
%edes        isisSysProtSupported    This attribute contains the set of protocols\n             supported by this Intermediate System.
%edes        isisSysNotificationEnable If this object is set to true(1), then it enables\n             the emission of IS-IS Notifications.  If it is\n             set to false(2), these notifications are not sent.\n\n             Configured values MUST survive an agent reboot.
%edes        isisManAreaAddrTable    The set of manual area addresses configured on this\n             Intermediate System.\n\n             At least one row in which the value of\n             isisManAreaAddrExistState is active must be present.\n             The maximum number of rows in this table for\n\n             which the object isisManAreaAddrExistState has the\n             value active is 3.\n\n             An attempt to create more than 3 rows of\n             isisManAreaAddrEntry with state 'active' in one\n             instance of the IS-IS protocol should\n             return inconsistentValue.
%eref        isisManAreaAddrTable    {ISIS.aoi manualAreaAddresses (10)}
%edes        isisManAreaAddrEntry    Each entry contains one area address manually configured\n             on this system.\n\n             Dynamically created rows MUST survive an agent reboot.
%edes        isisManAreaAddr         A manually configured area address for this system.\n\n             Note: An index for the entry {1, {49.0001} active} in\n             this table would be the ordered pair\n             (1, (0x03 0x49 0x00 0x01)), as the length of an octet\n             string is part of the OID.
%edes        isisManAreaAddrExistState The state of the isisManAreaAddrEntry.  If the\n             isisSysAdminState for this Intermediate System is 'on' and\n             an attempt is made to set this object to the value\n             'destroy' or 'notInService' when this is the only\n             isisManAreaAddrEntry in state 'active' for this\n             Intermediate System should return inconsistentValue.\n\n             A row entry cannot be modified when the value of this\n             object is 'active'.
%edes        isisAreaAddrTable       The union of the sets of area addresses reported in all\n             Level 1 LSPs with fragment number zero generated by this\n             Intermediate System, or received from other Intermediate\n             Systems that are reachable via Level 1 routing.
%eref        isisAreaAddrTable       {ISIS.aoi areaAddresses (18)}
%edes        isisAreaAddrEntry       Each entry contains one area address reported in a\n             Level 1 LSP generated or received by this Intermediate\n             System.\n\n             Dynamically learned rows do not survive an agent reboot.
%edes        isisAreaAddr            An area address reported in a Level 1 LSP.
%edes        isisSummAddrTable       The set of IP summary addresses to use in forming\n             summary TLVs originated by this Intermediate System.\n\n             An administrator may use a summary address to combine\n             and modify IP Reachability announcements.  If the\n             Intermediate system can reach any subset of the summary\n             address, the summary address MUST be announced instead,\n             at the configured metric.
%edes        isisSummAddrEntry       Each entry contains one IP summary address.\n\n             Dynamically created rows MUST survive an agent reboot.\n\n             Implementers need to be aware that if the total number\n             of elements (octets or sub-identifiers) in\n             isisSummAddress and isisSummAddrPrefixLen is too great,\n             then OIDs of column instances in this table will have\n             more than 128 subidentifiers and cannot be accessed\n             using SNMPv1, SNMPv2c, or SNMPv3.
%edes        isisSummAddressType     The Type of IP address for this summary address.
%edes        isisSummAddress         The IP Address value for this summary address.\n             The address must not contain any set host bits\n             (bits set after the address prefix determined by\n             isisSummAddrPrefixLen).\n\n             The type of this address is determined by the value of\n             the isisSummAddressType object.
%edes        isisSummAddrPrefixLen   The Length of the IP NetMask for this summary address.\n\n             The values for the index objects isisSummAddress and\n\n             isisSummAddrPrefixLen must be consistent.  When the value\n             of isisSummAddress (excluding the zone index, if one\n             is present) is x, then the bitwise logical-AND\n             of x with the value of the mask formed from the\n             corresponding index object isisSummAddrPrefixLen MUST be\n             equal to x.  If not, then the index pair is not\n             consistent, and an inconsistentName error must be\n             returned on SET or CREATE requests.
%edes        isisSummAddrExistState  The existence state of this summary address.  Support\n             for 'createAndWait' and 'notInService' is not required.\n\n             A row entry cannot be modified when the value of this\n             object is 'active'.
%edes        isisSummAddrMetric      The metric value to announce this summary\n             address within LSPs generated by this system.
%edes        isisSummAddrFullMetric  The wide metric value to announce this summary\n             address within LSPs generated by this system.
%edes        isisRedistributeAddrTable This table provides criteria to decide if a route should\n             be leaked from L2 to L1 when Domain Wide Prefix leaking is\n             enabled.\n\n             Addresses that match the summary mask in the table MUST\n             be announced at L1 by routers when isisSysL2toL1Leaking\n             is enabled.  Routes that fall into the ranges specified\n             are announced as is, without being summarized.  Routes\n             that do not match a summary mask are not announced.
%edes        isisRedistributeAddrEntry Each entry contains one configured IP summary\n             address to manage leaking L2 addresses into L1.\n\n             Dynamically created rows MUST survive an agent reboot.\n\n             Implementers need to be aware that if the total number\n             of elements (octets or sub-identifiers) in\n             isisRedistributeAddrAddress and\n             isisRedistributeAddrPrefixLen is too great, then OIDs\n             of column instances in this table will have more than\n             128 subidentifiers and cannot be accessed using SNMPv1,\n             SNMPv2c, or SNMPv3.
%edes        isisRedistributeAddrType The Type of IP address for this summary address.
%edes        isisRedistributeAddrAddress The IP Address value for this summary address.\n             The type of this address is determined by the\n             value of the isisRedistributeAddrType object.\n             The address must not contain any set host bits -\n             bits set after the address prefix determined by\n             isisRedistributeAddrPrefixLen.
%edes        isisRedistributeAddrPrefixLen The Length of the IP NetMask for this summary address.\n\n             The values for the index objects\n             isisRedistributeAddrAddress and\n             isisRedistributeAddrPrefixLen must be consistent.\n             When the value of isisRedistributeAddrAddress\n             (excluding the zone index, if one is present) is x,\n             then the bitwise logical-AND of x with the value of\n             the mask formed from the corresponding index object\n             isisRedistributeAddrPrefixLen MUST be equal to x.\n             If not, then the index pair is not consistent, and an\n             inconsistentName error must be returned on SET or\n             CREATE requests.
%edes        isisRedistributeAddrExistState The existence state of this summary address.  Support\n\n             for createAndWait and notInService is not required.\n\n             A row entry cannot be modified when the value of this\n             object is 'active'.
%edes        isisRouterTable         The set of hostnames and router ID.
%edes        isisRouterEntry         Each entry tracks information about one Intermediate\n             System at one level.\n\n             Dynamically learned rows do not survive an agent reboot.
%edes        isisRouterSysID         The System ID of the Intermediate System.
%edes        isisRouterLevel         The level at which the information about this\n             Intermediate System was received.
%edes        isisRouterHostName      The hostname listed in the LSP, or a zero-length\n             string if none.
%edes        isisRouterID            The Router ID found in the LSP, or zero if none.
%edes        isisSysLevelTable       Level specific information about the System.
%edes        isisSysLevelEntry       Each row describes variables configured for Area or Domain.\n\n             Configured values MUST survive an agent reboot.
%edes        isisSysLevelIndex       The level that this entry describes.
%edes        isisSysLevelOrigLSPBuffSize The maximum size of LSPs and SNPs originated by\n             this Intermediate System at this level.  This\n             object may not be modified when the isisSysAdminState\n             variable is in state 'on' for this Intermediate System.
%eref        isisSysLevelOrigLSPBuffSize {ISIS.aoi originatingL1LSPBufferSize (9)}
%eunits      isisSysLevelMinLSPGenInt seconds
%edes        isisSysLevelMinLSPGenInt Minimum interval, in seconds, between successive\n             generation of LSPs with the same LSPID at this level\n             by this Intermediate System.
%eref        isisSysLevelMinLSPGenInt {ISIS.aoi minimumLSPGenerationInterval (11)}
%edes        isisSysLevelState       The state of the database at this level.\n             The value 'off' indicates that IS-IS is not active at\n             this level.\n             The value 'on' indicates that IS-IS is active at this\n             level and is not overloaded.\n             The value 'waiting' indicates a database that is low on\n             an essential resource, such as memory.\n             The administrator may force the state to 'overloaded'\n             by setting the object isisSysLevelSetOverload.\n             If the state is 'waiting' or 'overloaded', we\n             originate LSPs with the overload bit set.
%eref        isisSysLevelState       {ISIS.aoi l1State (17)}
%edes        isisSysLevelSetOverload Administratively set the overload bit for the level.\n             The overload bit MUST continue to be set if the\n             implementation runs out of memory, independent of\n             this variable.  It may also be set manually independent\n             of this variable, using the isisSysLevelSetOverloadUntil\n             object.
%eunits      isisSysLevelSetOverloadUntil Seconds until clearing manually set Overload Bit
%edes        isisSysLevelSetOverloadUntil If this object is non-zero, the overload bit is set at\n             this level when the isisSysAdminState variable goes to\n             state 'on' for this Intermediate System.  The overload bit\n             remains set for isisSysLevelSetOverloadUntil seconds.\n             When isisSysLevelSetOverloadUntil seconds have elapsed,\n             the overload flag remains set if the implementation has\n             run out of memory, or if it is set manually using the\n             isisSysLevelSetOverload object.\n\n             If isisSysLevelSetOverload is false, the system clears\n             the overload bit when isisSysLevelSetOverloadUntil seconds\n             have elapsed, if the system has not run out of memory.
%edes        isisSysLevelMetricStyle Which style of metric do we generate in our LSPs\n             at this level?
%edes        isisSysLevelSPFConsiders Which style of metric do we consider in our\n             SPF computation at this level?
%edes        isisSysLevelTEEnabled   Do we do Traffic Engineering at this level?
%edes        isisNextCircIndex       This object is used to assist a management\n             application in creating new rows in the\n             isisCircTable.  If it is possible to create\n             a new instance of isisCircEntry, then this\n             object will contain a non-zero value that\n             is not in use as the index of any row in the\n             isisCircTable.  The network manager reads the\n             value of this object and then (if the\n             value read is non-zero) attempts to create\n             the corresponding instance of isisCircEntry.\n             If the set request fails with the code\n             'inconsistentValue', then the process must be\n             repeated;  if the set request succeeds, then\n             the agent will change the value of this object\n             according to an implementation-specific\n             algorithm.
%edes        isisCircTable           The table of circuits used by this\n             Intermediate System.
%edes        isisCircEntry           An isisCircEntry exists for each circuit configured\n             for Integrated IS-IS on this system.\n\n             Dynamically created rows MUST survive an agent reboot.
%edes        isisCircIndex           An index used to uniquely identify this circuit.\n             When creating a row in this table, the\n             isisNextCircIndex object should be retrieved,\n             and its value should be specified as the value\n             of this index using a SET operation.  A retrieved\n             value of zero(0) indicates that no rows can be\n             created at this time.
%edes        isisCircIfIndex         The value of ifIndex for the interface to which this\n             circuit corresponds.  This object cannot be modified\n             after creation.
%edes        isisCircAdminState      The administrative state of the circuit.
%edes        isisCircExistState      The existence state of this circuit.  Setting the state\n             to 'notInService' halts the generation and processing of\n             IS-IS protocol PDUs on this circuit.  Setting the state\n             to destroy will also erase any configuration associated\n             with the circuit.  Support for 'createAndWait' and\n             'notInService' is not required.\n\n             A row entry cannot be modified when the value of this\n             object is 'active'.
%edes        isisCircType            The type of the circuit.  This object follows the\n             ReplaceOnlyWhileDisabled behavior.  The type specified\n             must be compatible with the type of the interface defined\n\n             by the value of isisCircIfIndex.
%eref        isisCircType            {ISIS.aoi type (33)}
%edes        isisCircExtDomain       If true, suppress normal transmission of and\n             interpretation of Intra-domain IS-IS PDUs on this\n             circuit.
%eref        isisCircExtDomain       {ISIS.aoi externalDomain (46)}
%edes        isisCircLevelType       Indicates which type of packets will be sent and\n             accepted on this circuit.  The values set will be\n             saved, but the values used will be modified by\n             the settings of isisSysLevelType.  Thus, if the\n             isisSysTpe is level2 and the isisCircLevelType\n             for a circuit is level1, the circuit will not send\n             or receive IS-IS packets.  This object follows the\n             ReplaceOnlyWhileDisabled behavior.
%edes        isisCircPassiveCircuit  Should we include this interface in LSPs, even if\n             it is not running the IS-IS Protocol?
%edes        isisCircMeshGroupEnabled Is this port a member of a mesh group, or is it\n             blocked?  Circuits in the same mesh group act as a\n             virtual multiaccess network.  LSPs seen on one circuit\n             in a mesh group will not be flooded to another circuit\n             in the same mesh group.
%eref        isisCircMeshGroupEnabled { RFC 2973 }
%edes        isisCircMeshGroup       Circuits in the same mesh group act as a virtual\n             multiaccess network.  LSPs seen on one circuit in\n             a mesh group will not be flooded to another circuit\n             in the same mesh group.  If isisCircMeshGroupEnabled\n             is inactive or blocked, this value is ignored.
%eref        isisCircMeshGroup       { RFC 2973 }
%edes        isisCircSmallHellos     Can we send unpadded hellos on LAN circuits?  False\n             means the LAN Hellos must be padded.\n             Implementations should allow the administrator to read\n             this value.  An implementation need not be able to\n             support unpadded hellos to be conformant.
%edes        isisCircLastUpTime      How long the circuit has been enabled, measured in\n             hundredths of seconds since the last re-initialization\n             of the network management subsystem; 0 if the\n             circuit has never been 'on'.
%edes        isisCirc3WayEnabled     Is this circuit enabled to run 3Way handshake?
%edes        isisCircExtendedCircID  The value to be used as the extended circuit ID in\n             3Way handshake.  This value is only used if\n             isisCirc3WayEnabled is true, and it must be unique\n             across all circuits on this IS.
%edes        isisCircLevelTable      Level specific information about circuits used by IS-IS.
%edes        isisCircLevelEntry      An isisCircLevelEntry exists for each level on\n             each circuit configured for Integrated IS-IS on\n             this system.\n\n             Configured values MUST survive an agent reboot.
%edes        isisCircLevelIndex      The level that this entry describes.
%edes        isisCircLevelMetric     The metric value of this circuit for this level.
%eref        isisCircLevelMetric     {ISIS.aoi l1DefaultMetric (35)}
%edes        isisCircLevelWideMetric The wide metric value of this circuit for this level.
%edes        isisCircLevelISPriority The priority for becoming the LAN-Designated\n             Intermediate System at this level.
%eref        isisCircLevelISPriority {ISIS.aoi l2IntermediateSystemPriority (73)}
%edes        isisCircLevelIDOctet    A one-byte identifier for the circuit selected by the\n             Intermediate System.\n\n             On point-to-point circuits, the value is used as the Local\n             Circuit ID in point-to-point IIH PDUs transmitted on this\n             circuit.  In this case, values of isisCircLevelIDOctet do\n             not need to be unique.\n\n             For broadcast circuits, the value is used to generate the\n             LAN ID that will be used if this Intermediate System is\n             elected as the Designated IS on this circuit.  The value\n             is required to differ on LANs where the Intermediate System\n             is the Designated Intermediate System.
%edes        isisCircLevelID         On a point-to-point circuit with a fully initialized\n             adjacency to a peer IS, the value of this object is\n             the circuit ID negotiated during adjacency initialization.\n\n             On a point to point circuit without such an adjacency,\n             the value is the concatenation of the local system ID\n             and the one-byte isisCircLevelIDOctet for this circuit,\n             i.e., the value that would be proposed for the circuit ID.\n             On other circuit types, the value returned is the zero-\n             length OCTET STRING.
%eref        isisCircLevelID         {ISIS.aoi ptPtCircuitID (51)}
%edes        isisCircLevelDesIS      The ID of the LAN-Designated Intermediate System\n             on this circuit at this level.  If, for any reason,\n             this system is not partaking in the relevant\n             Designated Intermediate System election process,\n             then the value returned is the zero-length OCTET STRING.
%eref        isisCircLevelDesIS      {ISIS.aoi l2DesignatedIntermediateSystem (75)}
%edes        isisCircLevelHelloMultiplier This value is multiplied by the corresponding HelloTimer,\n             and the result in seconds (rounded up) is used as the\n             holding time in transmitted hellos, to be used by\n             receivers of hello packets from this IS.
%eref        isisCircLevelHelloMultiplier {ISIS.aoi iSISHelloTimer (45)}
%eunits      isisCircLevelHelloTimer milliseconds
%edes        isisCircLevelHelloTimer Maximum period, in milliseconds, between IIH PDUs\n             on multiaccess networks at this level for LANs.\n             The value at L1 is used as the period between\n             Hellos on L1L2 point-to-point circuits.  Setting\n             this value at level 2 on an L1L2 point-to-point\n             circuit will result in an error of InconsistentValue.\n\n             This object follows the ResettingTimer behavior.
%eref        isisCircLevelHelloTimer {ISIS.aoi iSISHelloTimer (45)}
%eunits      isisCircLevelDRHelloTimer milliseconds
%edes        isisCircLevelDRHelloTimer Period, in milliseconds, between Hello PDUs on\n             multiaccess networks when this IS is the Designated\n             Intermediate System.  This object follows the\n             ResettingTimer behavior.
%eref        isisCircLevelDRHelloTimer {ISIS.aoi iSISHelloTimer (45)}
%eunits      isisCircLevelLSPThrottle milliseconds
%edes        isisCircLevelLSPThrottle Minimal interval of time, in milliseconds, between\n             transmissions of LSPs on an interface at this level.
%eref        isisCircLevelLSPThrottle {ISIS.aoi minimumBroadcastLSPTransmissionInterval (5)}
%eunits      isisCircLevelMinLSPRetransInt seconds
%edes        isisCircLevelMinLSPRetransInt Minimum interval, in seconds, between re-transmission of\n             an LSP at this level.  This object follows the\n             ResettingTimer behavior.\n\n             Note that isisCircLevelLSPThrottle controls\n             how fast we send back-to-back LSPs.  This variable\n             controls how fast we re-send the same LSP.
%eref        isisCircLevelMinLSPRetransInt {ISIS.aoi minimumLSPTransmissionInterval (5)}
%eunits      isisCircLevelCSNPInterval seconds
%edes        isisCircLevelCSNPInterval Interval of time, in seconds, between periodic\n             transmission of a complete set of CSNPs on\n             multiaccess networks if this router is the\n             designated router at this level.\n             This object follows the ResettingTimer behavior.
%eref        isisCircLevelCSNPInterval {ISIS.aoi completeSNPInterval (8)}
%eunits      isisCircLevelPartSNPInterval seconds
%edes        isisCircLevelPartSNPInterval Minimum interval, in seconds, between sending Partial\n             Sequence Number PDUs at this level.  This object\n             follows the ResettingTimer behavior.
%eref        isisCircLevelPartSNPInterval {ISIS.aoi partialSNPInterval (14)}
%edes        isisSystemCounterTable  System-wide counters for this Intermediate System.
%edes        isisSystemCounterEntry  System-wide IS-IS counters.
%edes        isisSysStatLevel        The level that this entry describes.
%eunits      isisSysStatCorrLSPs     Number of corrupted in-memory frames
%edes        isisSysStatCorrLSPs     Number of corrupted in-memory LSPs detected.\n\n             LSPs received from the wire with a bad checksum\n             are silently dropped and are not counted.\n\n             LSPs received from the wire with parse errors\n             are counted by isisSysStatLSPErrors.
%eref        isisSysStatCorrLSPs     {ISIS.aoi corruptedLSPsDetected (19)}
%eunits      isisSysStatAuthTypeFails Number of frames with authentication type mismatches
%edes        isisSysStatAuthTypeFails The number of authentication type mismatches recognized\n             by this Intermediate System.
%eunits      isisSysStatAuthFails    Number of frames with authentication key failures
%edes        isisSysStatAuthFails    The number of authentication key failures recognized\n             by this Intermediate System.
%edes        isisSysStatLSPDbaseOloads Number of times the LSP database has become\n             overloaded.
%eref        isisSysStatLSPDbaseOloads {ISIS.aoi lSPL1DatabaseOverloads (20)}
%edes        isisSysStatManAddrDropFromAreas Number of times a manual address has been dropped from\n             the area.
%eref        isisSysStatManAddrDropFromAreas {ISIS.aoi manualAddressesDroppedFromArea (21)}
%edes        isisSysStatAttmptToExMaxSeqNums Number of times the IS has attempted to exceed the\n             maximum sequence number.
%eref        isisSysStatAttmptToExMaxSeqNums {ISIS.aoi attemptsToExceedmaximumSequenceNumber (22)}
%edes        isisSysStatSeqNumSkips  Number of times a sequence number skip has occurred.
%eref        isisSysStatSeqNumSkips  {ISIS.aoi sequenceNumberSkips (23)}
%edes        isisSysStatOwnLSPPurges Number of times a zero-aged copy of the system's own LSP\n             is received from some other node.
%eref        isisSysStatOwnLSPPurges {ISIS.aoi ownLSPPurges (24)}
%eunits      isisSysStatIDFieldLenMismatches Number of frames with ID length mismatches
%edes        isisSysStatIDFieldLenMismatches Number of times a PDU is received with a different value\n             for ID field length from that of the receiving system.
%eref        isisSysStatIDFieldLenMismatches {ISIS.aoi iDFieldLengthMismatches (25)}
%edes        isisSysStatPartChanges  Partition changes.
%edes        isisSysStatSPFRuns      Number of times we ran SPF at this level.
%eunits      isisSysStatLSPErrors    Number of frames with errors that we have received
%edes        isisSysStatLSPErrors    Number of LSPs with errors we have received.
%edes        isisCircuitCounterTable Circuit specific counters for this\n             Intermediate System.
%edes        isisCircuitCounterEntry An isisCircuitCounterEntry exists for each circuit\n             used by Integrated IS-IS on this system.
%edes        isisCircuitType         What type of circuit saw these counts?\n\n             The point-to-point Hello PDU includes\n             both L1 and L2, and ISs form a single\n             adjacency on point-to-point links.\n             Thus, we combine counts on\n             point-to-point links into one group.
%edes        isisCircAdjChanges      The number of times an adjacency state change has\n             occurred on this circuit.
%eref        isisCircAdjChanges      {ISIS.aoi changesInAdjacencyState (40)}
%edes        isisCircNumAdj          The number of adjacencies on this circuit.
%eref        isisCircNumAdj          {ISIS.aoi changesInAdjacencyState (40)}
%edes        isisCircInitFails       The number of times initialization of this circuit has\n             failed.  This counts events such as PPP NCP failures.\n             Failures to form an adjacency are counted by\n             isisCircRejAdjs.
%edes        isisCircRejAdjs         The number of times an adjacency has been rejected on\n             this circuit.
%eref        isisCircRejAdjs         {ISIS.aoi rejectedAdjacencies (42)}
%eunits      isisCircIDFieldLenMismatches Number of frames with ID field length mismatch
%edes        isisCircIDFieldLenMismatches The number of times an IS-IS control PDU with an ID\n             field length different from that for this system has been\n             received.
%eref        isisCircIDFieldLenMismatches {ISIS.aoi iDFieldLengthMismatches (25)}
%edes        isisCircMaxAreaAddrMismatches The number of times an IS-IS control PDU with a\n             max area address field different from that for this\n             system has been received.
%eref        isisCircMaxAreaAddrMismatches {ISIS.aoi iDFieldLengthMismatches (25)}
%edes        isisCircAuthTypeFails   The number of times an IS-IS control PDU with\n             an auth type field different from that for this\n             system has been received.
%edes        isisCircAuthFails       The number of times an IS-IS control PDU with\n             the correct auth type has failed to pass authentication\n             validation.
%edes        isisCircLANDesISChanges The number of times the Designated IS has changed\n             on this circuit at this level.  If the circuit is\n             point to point, this count is zero.
%edes        isisPacketCounterTable  Information about IS-IS protocol traffic at one level,\n             on one circuit, in one direction.
%edes        isisPacketCounterEntry  Information about IS-IS protocol traffic at one level,\n             on one circuit, in one direction.
%edes        isisPacketCountLevel    The level at which these PDU counts have been collected.
%edes        isisPacketCountDirection Were we sending or receiving these PDUs?
%eunits      isisPacketCountIIHello  Number of IS-IS Hellos frames seen in this direction
              at this level
%edes        isisPacketCountIIHello  The number of IS-IS Hello PDUs seen in this\n             direction at this level.\n\n             Point-to-Point IIH PDUs are counted at\n             the lowest enabled level: at L1 on L1 or L1L2 circuits,\n             and at L2 otherwise.
%eref        isisPacketCountIIHello  {ISIS.aoi iSISControlPDUsSent (43)}
%eunits      isisPacketCountISHello  Number of ES-IS frames seen in this direction at
             this level.
%edes        isisPacketCountISHello  The number of ES-IS Hello PDUs seen in this\n             direction.  ISH PDUs are counted at the\n             lowest enabled level: at L1 on L1 or L1L2\n             circuits, and at L2 otherwise.
%eunits      isisPacketCountESHello  Number of ES Hello frames seen in this direction at
             this level
%edes        isisPacketCountESHello  The number of ES Hello PDUs seen in this\n             direction.  ESH PDUs are counted at the\n             lowest enabled level: at L1 on L1 or L1L2\n             circuits, and at L2 otherwise.
%eunits      isisPacketCountLSP      Number of IS-IS LSP frames seen in this direction at
             this level
%edes        isisPacketCountLSP      The number of IS-IS LSPs seen in this\n             direction at this level.
%eref        isisPacketCountLSP      {ISIS.aoi iSISControlPDUsSent (43)}
%eunits      isisPacketCountCSNP     Number of IS-IS CSNP frames seen in this direction at
             this level
%edes        isisPacketCountCSNP     The number of IS-IS CSNPs seen in this\n             direction at this level.
%eref        isisPacketCountCSNP     {ISIS.aoi iSISControlPDUsSent (43)}
%eunits      isisPacketCountPSNP     Number of IS-IS PSNP frames seen in this direction at
             this level
%edes        isisPacketCountPSNP     The number of IS-IS PSNPs seen in this\n             direction at this level.
%eref        isisPacketCountPSNP     {ISIS.aoi iSISControlPDUsSent (43)}
%eunits      isisPacketCountUnknown  Number of unknown IS-IS frames seen at this level
%edes        isisPacketCountUnknown  The number of unknown IS-IS PDUs seen\n             at this level.
%eref        isisPacketCountUnknown  {ISIS.aoi iSISControlPDUsSent (43)}
%edes        isisISAdjTable          The table of adjacencies to Intermediate Systems.
%edes        isisISAdjEntry          Each entry corresponds to one adjacency to an\n             Intermediate System on this system.\n\n             Dynamically learned rows do not survive an agent reboot.
%edes        isisISAdjIndex          A unique value identifying the IS adjacency from all\n             other such adjacencies on this circuit.  This value is\n             automatically assigned by the system when the adjacency\n             is created.
%edes        isisISAdjState          The state of the adjacency.
%eref        isisISAdjState          {ISIS.aoi adjacencyState (78)}
%edes        isisISAdj3WayState      The 3Way state of the adjacency.  These are picked\n             to match the historical on-the-wire representation\n             of the 3Way state and are not intended to match\n             isisISAdjState.
%eref        isisISAdj3WayState      { RFC 3373 }
%edes        isisISAdjNeighSNPAAddress The SNPA address of the neighboring system.
%eref        isisISAdjNeighSNPAAddress {ISIS.aoi neighbourSNPAAddress (79)}
%edes        isisISAdjNeighSysType   The type of the neighboring system.
%eref        isisISAdjNeighSysType   {ISIS.aoi neighbourSystemType (80)}
%edes        isisISAdjNeighSysID     The system ID of the neighboring Intermediate\n             System.
%eref        isisISAdjNeighSysID     {ISIS.aoi neighbourSystemIds (83)}
%edes        isisISAdjNbrExtendedCircID The 4-byte Extended Circuit ID learned from the\n             Neighbor during 3-way handshake, or 0.
%edes        isisISAdjUsage          How is the adjacency used?  On a point-to-point link,\n             this might be level1and2, but on a LAN, the usage will\n             be level1 on the adjacency between peers at L1,\n             and level2 for the adjacency between peers at L2.
%eref        isisISAdjUsage          {ISIS.aoi adjacencyUsage (82)}
%eunits      isisISAdjHoldTimer      seconds
%edes        isisISAdjHoldTimer      The holding time, in seconds, for this adjacency.\n             This value is based on received IIH PDUs and\n             the elapsed time since receipt.
%eref        isisISAdjHoldTimer      {ISIS.aoi holdingTimer (85)}
%edes        isisISAdjNeighPriority  Priority of the neighboring Intermediate System for\n             becoming the Designated Intermediate System.
%eref        isisISAdjNeighPriority  {ISIS.aoi lANPriority (86)}
%edes        isisISAdjLastUpTime     When the adjacency most recently entered the state 'up',\n             measured in hundredths of a second since the last\n             re-initialization of the network management subsystem.\n             Holds 0 if the adjacency has never been in state 'up'.
%edes        isisISAdjAreaAddrTable  This table contains the set of Area Addresses of\n             neighboring Intermediate Systems as reported in received\n             IIH PDUs.
%eref        isisISAdjAreaAddrTable  {ISIS.aoi areaAddressesOfNeighbour (84)}
%edes        isisISAdjAreaAddrEntry  Each entry contains one Area Address reported by a\n             neighboring Intermediate System in its IIH PDUs.\n\n             Dynamically learned rows do not survive an agent reboot.
%edes        isisISAdjAreaAddrIndex  An index for the areas associated with one neighbor.\n             This provides a simple way to walk the table.
%edes        isisISAdjAreaAddress    One Area Address as reported in IIH PDUs received from\n             the neighbor.
%edes        isisISAdjIPAddrTable    This table contains the set of IP Addresses of\n             neighboring Intermediate Systems as reported in received\n             IIH PDUs.
%edes        isisISAdjIPAddrEntry    Each entry contains one IP Address reported by a\n             neighboring Intermediate System in its IIH PDUs.\n\n             Dynamically learned rows do not survive an agent reboot.
%edes        isisISAdjIPAddrIndex    An index to this table that identifies the IP addresses\n             to which this entry belongs.
%edes        isisISAdjIPAddrType     The type of one IP Address as reported in IIH PDUs\n\n             received from the neighbor.
%edes        isisISAdjIPAddrAddress  One IP Address as reported in IIH PDUs received from the\n             neighbor.\n\n             The type of this address is determined by the value of\n             the isisISAdjIPAddrType object.
%edes        isisISAdjProtSuppTable  This table contains the set of protocols supported by\n             neighboring Intermediate Systems as reported in received\n             IIH PDUs.
%edes        isisISAdjProtSuppEntry  Each entry contains one protocol supported by a\n             neighboring Intermediate System as reported in its IIH\n             PDUs.\n\n             Dynamically learned rows do not survive an agent reboot.
%edes        isisISAdjProtSuppProtocol One supported protocol as reported in IIH PDUs received\n             from the neighbor.
%edes        isisRATable             The table of Reachable Addresses to NSAPs or Address\n             Prefixes.
%edes        isisRAEntry             Each entry defines a configured Reachable Address\n             to an NSAP or Address Prefix.\n\n             Dynamically created rows MUST survive an agent reboot.
%edes        isisRAIndex             The identifier for this isisRAEntry.  This value must be\n             unique amongst all Reachable Addresses on the same parent\n             Circuit.
%edes        isisRAExistState        The existence state of this Reachable Address.  This\n             object follows the ManualOrAutomatic behaviors.  Support\n             for 'createAndWait' and 'notInService' is not required.\n\n             A row entry cannot be modified when the value of this\n             object is 'active'.
%edes        isisRAAdminState        The administrative state of the Reachable Address.  This\n             object follows the ManualOrAutomatic behaviors.
%edes        isisRAAddrPrefix        The destination of this Reachable Address.  This is an\n             Address Prefix.  This object follows the\n             ReplaceOnlyWhileDisabled and ManualOrAutomatic\n             behaviors.
%eref        isisRAAddrPrefix        {ISIS.aoi addressPrefix (98)}
%edes        isisRAMapType           The type of mapping to be employed to ascertain the SNPA\n             Address that should be used in forwarding PDUs for this\n             Reachable Address prefix.  This object follows the\n             ManualOrAutomatic behavior.  The following values of\n             mapping type are defined:\n\n                 none: The mapping is null because the neighbor SNPA is\n                       implicit by nature of the subnetwork (e.g., a\n                       point-to-point linkage).\n\n                 explicit: The subnetwork addresses in the object\n                       isisRASNPAAddress are to be used.\n\n                 extractIDI: The SNPA is embedded in the IDI of\n                       the destination NSAP Address.  The mapping\n                       algorithm extracts the SNPA to be used\n                       according to the format and encoding rules of\n                       ISO8473/Add2.  This SNPA extraction algorithm can\n                       be used in conjunction with Reachable Address\n                       prefixes from the X.121, F.69, E.163, and E.164\n\n                       addressing subdomains.\n\n                 extractDSP: All, or a suffix, of the SNPA is embedded\n                       in the DSP of the destination address.  This SNPA\n                       extraction algorithm extracts the embedded\n                       subnetwork addressing information by performing a\n                       logical AND of the isisRASNPAMask object value\n                       with the destination address.  The part of the\n                       SNPA extracted from the destination NSAP is\n                       appended to the isisRASNPAPrefix object value to\n                       form the next hop subnetwork addressing\n                       information.
%eref        isisRAMapType           {ISO10589-ISIS.aoi mappingType (107)}
%edes        isisRAMetric            The metric value for reaching the specified\n             prefix over this circuit.  This object follows the\n             ManualOrAutomatic behavior.
%eref        isisRAMetric            {ISIS.aoi DefaultMetric (99)}
%edes        isisRAMetricType        Indicates whether the metric is internal or\n             external.  This object follows the ManualOrAutomatic\n             behavior.
%eref        isisRAMetricType        {ISIS.aoi DefaultMetricType (103)}
%edes        isisRASNPAAddress       The SNPA Address to which a PDU may be forwarded in\n             order to reach a destination that matches the address\n             prefix of the Reachable Address.  This object follows the\n\n             ManualOrAutomatic behavior.
%eref        isisRASNPAAddress       {ISIS.aoi sNPAAddresses (109)}
%edes        isisRASNPAMask          A bit mask with 1 bit indicating the positions in the\n             effective destination address from which embedded SNPA\n             information is to be extracted.  For the extraction, the\n             first octet of the isisRASNPAMask object value is aligned\n             with the first octet (AFI) of the NSAP Address.  If the\n             isisRASNPAMask object value and NSAP Address are of\n             different lengths, the shorter of the two is logically\n             padded with zeros before performing the extraction.  This\n             object follows the ManualOrAutomatic behavior.
%eref        isisRASNPAMask          {ISIS.aoi sNPAMask (122)}
%edes        isisRASNPAPrefix        A fixed SNPA prefix for use when the isisRAMapType is\n             extractDSP.  The SNPA Address to use is formed by\n             concatenating the fixed SNPA prefix with a variable SNPA\n             part that is extracted from the effective destination\n             address.  For Reachable Address prefixes in which the\n             entire SNPA is embedded in the DSP, the SNPA Prefix shall\n             be null.  This object follows the ManualOrAutomatic\n             behavior.
%eref        isisRASNPAPrefix        {ISIS.aoi sNPAPrefix (123)}
%edes        isisRAType              The type of Reachable address.  Those of type\n             manual are created by the network manager.  Those\n             of type automatic are created through propagation\n             of routing information from another routing\n             protocol (e.g., IDRP). 
%edes        isisIPRATable           The table of IP Reachable Addresses to networks,\n             subnetworks, or hosts either manually configured or\n             learned from another protocol.
%edes        isisIPRAEntry           Each entry defines an IP Reachable Address to a network,\n             subnetwork, or host.\n\n             Each IP Reachable Address may have multiple entries in the\n             table, one for each equal cost path to the reachable\n             address.\n\n             Dynamically created rows MUST survive an agent reboot.\n\n             Implementers need to be aware that if the total number\n             of elements (octets or sub-identifiers) in\n             isisIPRADestr, isisIPRADestPrefixLen, and\n             isisIPRANextHopIndex is too great, then OIDs of column\n             instances in this table will have more than 128\n             subidentifiers and cannot be accessed using SNMPv1,\n\n             SNMPv2c, or SNMPv3.
%edes        isisIPRADestType        The type of this IP Reachable Address.
%edes        isisIPRADest            The destination of this IP Reachable Address.  This is\n             a network address, subnetwork address, or host\n             address.\n\n             The type of this address is determined by the value of\n             the isisIPRADestType object.
%edes        isisIPRADestPrefixLen   The length of the IP Netmask for Reachability Address.\n\n             The values for the index objects isisIPRADest and\n             isisIPRADestPrefixLen must be consistent.  When the value\n             of isisIPRADest (excluding the zone index, if one\n             is present) is x, then the bitwise logical-AND\n             of x with the value of the mask formed from the\n             corresponding index object isisIPRADestPrefixLen MUST be\n             equal to x.  If not, then the index pair is not\n             consistent, and an inconsistentName error must be\n             returned on SET or CREATE requests.
%edes        isisIPRANextHopIndex    Index of next hop.  Used when there are multiple Equal\n             Cost Multipath alternatives for the same destination.
%edes        isisIPRANextHopType     The type of the IP next hop address.
%edes        isisIPRANextHop         The IP next hop to this destination.\n\n             The type of this address is determined by the value of\n             the isisIPRANextHopType object.
%edes        isisIPRAType            The type of this IP Reachable Address.  Those of type\n             manual are created by the network manager.  Those of type\n             automatic are created through propagation of routing\n             information from another routing protocol.  This object\n             follows the ManualOrAutomatic behavior.
%edes        isisIPRAExistState      The state of this IP Reachable Address.  This object\n             follows the ExistenceState and ManualOrAutomatic\n             behaviors.  Support for 'createAndWait' and\n             'notInService' is not required.\n\n             A row entry cannot be modified when the value of this\n             object is 'active'.
%edes        isisIPRAAdminState      The administrative state of the IP Reachable Address.  This\n             object follows the IsisAdminState and ManualOrAutomatic\n\n             behaviors.
%edes        isisIPRAMetric          The metric value for reaching the specified\n             destination over this circuit.  This object follows the\n             ManualOrAutomatic behavior.
%edes        isisIPRAMetricType      Indicates whether the metric is internal or\n             external.  This object follows the ManualOrAutomatic\n             behavior.
%edes        isisIPRAFullMetric      The wide metric value for reaching the specified\n             destination over this circuit.  This object follows the\n             ManualOrAutomatic behavior.
%edes        isisIPRASNPAAddress     The SNPA Address to which a PDU may be forwarded in\n             order to reach a destination that matches this IP\n             Reachable Address.  This object follows the\n             ManualOrAutomatic behavior.
%edes        isisIPRASourceType      The origin of this route.
%edes        isisLSPSummaryTable     The table of LSP Headers.
%edes        isisLSPSummaryEntry     Each entry provides a summary describing an\n             LSP currently stored in the system.\n\n             Dynamically learned rows will not survive an\n             agent reboot.
%edes        isisLSPLevel            At which level does this LSP appear?
%edes        isisLSPID               The 8-byte LSP ID for this Link State PDU.
%edes        isisLSPSeq              The sequence number for this LSP.
%edes        isisLSPZeroLife         Is this LSP being purged by this system?
%edes        isisLSPChecksum         The 16-bit Fletcher Checksum for this LSP.
%eunits      isisLSPLifetimeRemain   seconds
%edes        isisLSPLifetimeRemain   The remaining lifetime, in seconds, for this LSP.
%edes        isisLSPPDULength        The length of this LSP.
%edes        isisLSPAttributes       Flags carried by the LSP.
%edes        isisLSPTLVTable         The table of LSPs in the database.
%edes        isisLSPTLVEntry         Each entry describes a TLV within\n             an LSP currently stored in the system.\n\n             Dynamically learned rows will not survive an\n             agent reboot.
%edes        isisLSPTLVIndex         The index of this TLV in the LSP.  The first TLV has\n             index 1, and the Nth TLV has an index of N.
%edes        isisLSPTLVSeq           The sequence number for this LSP.
%edes        isisLSPTLVChecksum      The 16-bit Fletcher Checksum for this LSP.
%edes        isisLSPTLVType          The type of this TLV.
%edes        isisLSPTLVLen           The length of this TLV.
%edes        isisLSPTLVValue         The value of this TLV.
%edes        isisNotificationSysLevelIndex The system level for this notification.
%edes        isisNotificationCircIfIndex The identifier of this circuit relevant to\n             this notification.
%edes        isisPduLspId            An Octet String that uniquely identifies\n             a Link State PDU.
%edes        isisPduFragment         Holds up to 64 initial bytes of a PDU that\n             triggered the notification.
%edes        isisPduFieldLen         Holds the System ID length reported in PDU we received.
%edes        isisPduMaxAreaAddress   Holds the Max Area Addresses reported in a PDU\n             we received.
%edes        isisPduProtocolVersion  Holds the Protocol version reported in PDU we received.
%edes        isisPduLspSize          Holds the size of LSP we received that is too\n             big to forward.
%edes        isisPduOriginatingBufferSize Holds the size of isisSysLevelOrigLSPBuffSize advertised\n             by the peer in the originatingLSPBufferSize TLV.\n             If the peer does not advertise this TLV, this\n             value is set to 0.
%edes        isisPduBufferSize       Holds the size of LSP received from peer.
%edes        isisPduProtocolsSupported The list of protocols supported by an\n             adjacent system.  This may be empty.
%edes        isisAdjState            The current state of an adjacency.
%edes        isisErrorOffset         An offset to a problem in a PDU.  If the problem\n             is a malformed TLV, this points to the beginning\n             of the TLV.  If the problem is in the header, this\n             points to the byte that is suspicious.
%edes        isisErrorTLVType        The type for a malformed TLV.
%edes        isisNotificationAreaAddress An Area Address.
%edes        isisSystemGroup         The collections of objects used to manage an\n             IS-IS router.
%edes        isisCircuitGroup        The collections of objects used to describe an\n             IS-IS Circuit.
%edes        isisISAdjGroup          The collections of objects used to manage an\n             IS-IS Adjacency.
%edes        isisNotificationObjectGroup The objects used to record notification parameters.
%edes        isisNotificationGroup   The collections of notifications sent by an IS.
%edes        isisISPDUCounterGroup   The collections of objects used to count protocol PDUs.
%edes        isisRATableGroup        The collections of objects used to manage the\n\n             reachable NSAP prefixes.
%edes        isisISIPRADestGroup     The collections of objects used to manage configured\n             IP addresses.
%edes        isisLSPGroup            The collections of objects used to observe the LSP\n             Database.
%edes        srSecStatsCacheNumber   The number of rows in the srSecAddrToEngineIDTable or\n         srEngineIDToAddrTable.
%edes        srSecStatsClockNumber   The number of rows in the srSecEngineIDToClockTable.
%edes        srSecStatsClockHistNumber The number of rows in the srSecClockHistTable.
%edes        srSecStatsDupHistNumber The number of rows in the srSecDupHistTable.
%edes        srSecStatsStorageTime   The time when cache and clock data was most recently written\n         to non-volatile storage.  An intance of this object does not\n         exist until a write operation is performed.
%edes        srSecControlCacheStatus Setting this object to 'destroy' deletes all rows in the\n         srSecAddrToEngineIDTable, srSecEngineIDToAddrTable, and\n         srSecEngineIDToClockTable.
%edes        srSecControlClockHistStatus Setting this object to 'destroy' deletes all rows in the\n         srSecClockHistTable.
%edes        srSecControlDupHistStatus Setting this object to 'destroy' deletes all rows in the\n         srSecDupHistTable.
%edes        srSecControlCacheStorageType The default storage type for conceptual rows in the\n         srSecAddrToEngineIDTable and srSecEngineIDToAddrTable.
%edes        srSecControlClockStorageType The default storage type for conceptual rows in the\n         srSecEngineIDToClockTable.
%edes        srSecControlClockHistStorageType The default storage type for conceptual rows in the\n         srSecClockHistTable.
%edes        srSecControlDupHistStorageType The default storage type for conceptual rows in the\n         srSecDupHistTable.
%edes        srSecAddrToEngineIDTable This table contains the mappings from IP address/port to\n         snmpEngineID.
%edes        srSecAddrToEngineIDEntry A row in the srSecAddrToEngineIDTable.
%edes        srSecAddrToEngineIDAddressType The Internet address type for this entry.
%edes        srSecAddrToEngineIDAddress The Internet address for this entry.
%edes        srSecAddrToEngineIDPort The port number for this entry.
%edes        srSecAddrToEngineIDEngineID The snmpEngineID associated with the IP address/port.
%edes        srSecAddrToEngineIDLastUpdated The time when the snmpEngineID came to be associated with the\n         IP address/port.
%edes        srSecAddrToEngineIDStorageType The storage type for this conceptual row.
%edes        srSecAddrToEngineIDStatus The status of this entry.  Setting this object to destroy(6)\n         removes this map data from the cache, forcing this SNMP engine\n         to rediscover the snmpEngineID of the remote SNMP engine during\n         the next attempt at communication.
%edes        srSecEngineIDToAddrTable This table contains the mappings from snmpEngineID to IP\n         address/port.
%edes        srSecEngineIDToAddrEntry A row in the srSecEngineIDToAddrTable.
%edes        srSecEngineIDToAddrEngineID The snmpEngineID for this entry.
%edes        srSecEngineIDToAddrAddressType The Internet address type for this entry.
%edes        srSecEngineIDToAddrAddress An Internet address at which the snmpEngineID has been detected.
%edes        srSecEngineIDToAddrPort The port at which the snmpEngineID has been detected.
%edes        srSecEngineIDToAddrLastUpdated The time when the snmpEngineID came to be associated with the\n         IP address/port.
%edes        srSecEngineIDToAddrStorageType The storage type for this conceptual row.
%edes        srSecEngineIDToAddrStatus The status of this entry.  Setting this object to destroy(6)\n         removes this map data from the cache, forcing this SNMP engine\n         to rediscover the snmpEngineID of the remote SNMP engine during\n         the next attempt at communication.
%edes        srSecEngineIDToClockTable This table contains the local SNMP engine's notion of time for\n         remote SNMP engines, part of an automatic clock synchronization\n         mechanism.
%eref        srSecEngineIDToClockTable RFC 3410
%edes        srSecEngineIDToClockEntry A row in the srSecEngineIDToClockTable.
%edes        srSecEngineIDToClockEngineID The snmpEngineID for the remote SNMP engine.
%eref        srSecEngineIDToClockEngineID RFC 3414, page 16.
%edes        srSecEngineIDToClockEngineBoots The local SNMP engine's notion of the remote SNMP engine's value\n         of snmpEngineBoots.
%edes        srSecEngineIDToClockEngineTime The local SNMP engine's notion of the remote SNMP engine's value\n         of snmpEngineTime.
%edes        srSecEngineIDToClockLatestRecvd The highest value of snmpEngineTime that was received by the\n         non-authoritative SNMP engine from the authoritative SNMP engine\n         and is used to eliminate the possibility of replaying messages\n         that would prevent the non-authoritative SNMP engine's notion\n         of the snmpEngineTime from advancing.
%eref        srSecEngineIDToClockLatestRecvd RFC 3414, pages 15-16.
%edes        srSecEngineIDToClockStorageType The storage type for this conceptual row.
%edes        srSecEngineIDToClockStatus The status of this entry.  Setting this object to destroy(6)\n         removes the clock synchronization data from the cache, forcing\n         the SNMP engines to re-sync during the next attempt at\n         communication.
%edes        srSecClockHistTable     This table contains a history of notable clock events.
%edes        srSecClockHistEntry     A row in the srSecClockHistTable.
%edes        srSecClockHistEngineID  The snmpEngineID associated with the clock event.
%edes        srSecClockHistEngineBoots The local SNMP engine's notion of the remote SNMP engine's value\n         of snmpEngineBoots when the clock event was recorded.
%edes        srSecClockHistEngineTime The local SNMP engine's notion of the remote SNMP engine's value\n         of snmpEngineTime when the clock event was recorded.
%edes        srSecClockHistEventType The value of this object specifies the type of event being\n         recorded in the table:\n\n            - `latch', the value of snmpEngineBoots for the remote\n            SNMP engine has reached the value 2147483647, which always\n            results in a notInTimeWindow authentication failure, and\n            manual intervention is required to reset the remote SNMP\n            engine (RFC 3414, page 15);\n\n            - `rollBack', a message was received (apparently) from the\n            remote SNMP engine indicating that the clock has gone\n            backwards.
%edes        srSecClockHistRecordedTime The time when this clock event was recorded.
%edes        srSecClockHistStorageType The storage type for this conceptual row.
%edes        srSecClockHistStatus    Setting this object to 'destroy' deletes the row from\n         srSecClockHistTable.
%edes        srSecDupHistTable       This table contains a history of duplications of snmpEngineID\n         detected in remote SNMP engines.
%edes        srSecDupHistEntry       A row in the srSecDupHistTable.
%edes        srSecDupHistEngineID    The duplicated value of snmpEngineID detected.
%edes        srSecDupHistAddressType The Internet address type for this entry.
%edes        srSecDupHistAddr        An Internet address at which the snmpEngineID has been detected.
%edes        srSecDupHistPort        The port at which the snmpEngineID has been detected.
%edes        srSecDupHistDetectedTime The time when this duplication was first detected.
%edes        srSecDupHistStorageType The storage type for this conceptual row.
%edes        srSecDupHistStatus      Setting this object to 'destroy' deletes the row from\n         srSecDupHistTable.
%edes        srSecClockLatch         The value of snmpEngineBoots for the remote SNMP engine has\n         reached the value 2147483647, which always results in a\n         notInTimeWindow authentication failure, and manual intervention\n         is required to reset the remote SNMP engine (RFC 3414, page 15).
%edes        srSecClockRollback      A message was received (apparently) from the remote SNMP engine\n         indicating that the clock has gone backwards.
%edes        srSecDuplicateEngineID  The same value of snmpEngineID has been detected at more than\n         one IP address.  Inconsistent clock values suggest there is\n         more than one SNMP engine.
%edes        srSecBasicGroup         A collection of objects providing a minimal read-only view\n         of cached state information in a non-authoritative SNMP engine.
%edes        srSecReverseGroup       A collection of objects providing a reverse map of information\n         in srSecAddrToEngineIDTable.
%edes        srSecHistoryGroup       A collection of objects containing a record of significant\n         events for the local non-authoritative SNMP engine that could\n         be indications of intrusion and attempted breaches of SNMPv3\n         security.
%edes        srSecNotificationsGroup Notifications sent on behalf of the non-authoritative SNMP\n         engine.
%edes        srSecDateAndTimeGroup   A collection of objects recording real-time clock information.
%edes        srSecControlGroup       A collection of objects facilitating the creation and/or\n         destruction of information in the SNMP engine by means of\n         remote management protocol operations.
%edes        cienaCommon             cienaCes provides a root object identifier that can be\n				 used to define common MIBs pertaining to Ciena Packet Networking Products.
%edes        cienaProducts           cienaProducts is the root OBJECT-IDENTIFIER for all Ciena products.  \n				 sysObjectID values will be assigned the OID representing the product specified in \n				 CIENA-PRODUCTS-MIB.my.
%edes        cienaGlobalSeverity     This object defines the severity of a trap and is a part of every trap defined in the system.
%edes        cienaGlobalMacAddress   This object indicates the chassis MAC address.
%edes        cienaGlobalSystemUpTime This object represents system up-time (in hundredths\n        of a second) since the system was last re-initialized.
%edes        cienaCes                cienaCes provides a root object identifier that can be\n				 used to define MIBs pertaining to Ciena Packet Networking Products.
%edes        cienaCesConfig          Provides a root object identifier for all the Trap MIBs.
%edes        cienaCesLogicalPortConfigTable Table of Ethernet ports.
%edes        cienaCesLogicalPortConfigEntry Port entry in the Ethernet port table.
%edes        cienaCesLogicalPortConfigPgId Port ID for the instance.  Port IDs start at 1, \n             and may not be consecutive for each additional port. \n             This port ID should refer to the dot1dBasePort in the \n             dot1dBasePortEntry.
%edes        cienaCesLogicalPortConfigPortAdminState The administrative state of the port.
%edes        cienaCesLogicalPortConfigPortOperState The current operational state of the port.
%edes        cienaCesLogicalPortConfigPortLinkUpDownTrapState This object specifies the current value of the enterprise port traps state.
%edes        cienaCesLogicalPortConfigPortAllTrapState This object indicates whether the device generates traps for this port.
%edes        cienaCesLogicalPortConfigPortPortMacAddress This object specifies the port MAC address.
%edes        cienaCesLogicalPortConfigPortName A textual string containing information about the\n                     port. This string should indicate the physical\n                     location of the port as well.
%edes        cienaCesLogicalPortConfigPortDesc This object specifies the port description.
%edes        cienaCesLogicalPortConfigPortType The port type for the port.
%edes        cienaCesLogicalPortConfigPortIfIndex This object indicates the corresponding ifNumber for the PGID in the standard IF-MIB.
%edes        cienaCesPortAdminSpeed  The desired speed of the port.
%edes        cienaCesPortOperSpeed   The current operational speed of the port.
%edes        cienaCesPortMaxFrameSize The maximum frame size allowed on this port including jumbo frame size.
%edes        cienaCesLogicalPortConfigEttpAid The TL1 AID of the ETTP object represented by this port.\n		 This field is undefined if the logical port maps to a LAG.
%edes        cienaCesLogicalPortLastDownReason1 The most recent fault(s) that changed the port state to down.\n		 This field is undefined if the logical port maps to a LAG.
%edes        cienaCesLogicalPortLastDownReason2 The most recent fault(s) that changed the port state to down.\n                 This field is undefined if the logical port maps to a LAG.
%edes        cienaCesLogicalPortLastDownReason3 The most recent fault(s) that changed the port state to down.\n                 This field is undefined if the logical port maps to a LAG.
%edes        cienaCesLogicalPortMaskedDownReason The masked/debounced fault that explains why the port is down.\n		 This field is undefined if the logical port maps to a LAG.
%edes        cienaCesLogicalPortFacilityLoopback The facility loopback state of the port.\n		 This field is undefined if the logical port maps to a LAG.
%edes        cienaCesPortIngressRcosProfileId This object specifies the ID of the attached ingress resolved CoS profile.
%edes        cienaCesPortIngressRcosProfileName This object specifies the name of the attached ingress resolved CoS profile.
%edes        cienaCesPortIngressRcosPolicy This object specifies the ingress resolved CoS policy.
%edes        cienaCesLogicalPortConfigEttpId ETTP mapped to by PG-ID of the instance.  ETTP IDs start at 1, \n             and may not be consecutive for each additional port. \n             An ETTP-ID of 0 denotes that the logical port is not mapped directly to an ETTP\n             e.g. Aggregate port or default physical port which has been port-aliased.
%edes        cienaCesLogicalPortConfigEttpType The port type for the associated ettp.
%edes        cienaCesLogicalPortConfigIngMirrorPort This object indicates whether ingress traffic is being \n                      mirrored. If ingress traffic is being mirrored this object \n                      specifies which port the traffic is being mirrored to.
%edes        cienaCesLogicalPortConfigEgrMirrorPort This object indicates whether egress traffic is being \n                      mirrored. If egress traffic is being mirrored this object \n                      specifies which port the traffic is being mirrored to.
%edes        cienaCesLogicalPortConfigIngFloodContainer This object indicates whether ingress flood traffic is \n                      rate limited. If ingress flood traffic is rate limited \n                      this object specifies the flood containment profile for \n                      the port.
%edes        cienaCesLogicalPortConfigPriorityTagMode This object specifies whether the priority tag of a frame \n                      is stripped (strip-tag) or left intact (leave-tag) upon \n                      ingress and egress.
%edes        cienaCesLogicalPortConfigVidTpidCount This object specifies the number of ingress TPID-pairs (inner + outer) \n                      configured on the port
%eunits      cienaCesPortOperationalSpeed kbps
%edes        cienaCesPortOperationalSpeed This object specifies the port's current bandwidth in\n		      kilobits per second
%edes        cienaCesPortOuterTpidList This object specifies the valid outer vlan tag list which can be used as egress vlan tag or outer vlan tag.
%edes        cienaCesPortEgressOuterTpid This object specifies the egress vlan tag.
%edes        cienaCesPortOuterVtagTpid This object specifies the outer vlan tag.
%eunits      cienaCesPortAdministrativeSpeed kbps
%edes        cienaCesPortAdministrativeSpeed This object specifies the port's administrative bandwidth in\n		      kilobits per second
%edes        cienaCesPortTerminalLoopbackState The terminal loopback state of the port.\n                 This field is undefined if the logical port maps to a LAG.
%edes        cienaCesPortLearnLimit  This object specifies learn limit count for port
%edes        cienaCesLogicalPortConfigSignalDegradeDetection This object specifies if signal degrade detection is enabled\n              or disabled on the port. And if enabled, this object specifies\n              the technology of which signal degrade detection uses.
%edes        cienaCesLogicalPortConfigSignalDegradeState The signal degrade state of the port.
%edes        cienaCesPortL2CftStatus Admin Status of L2CFT profile attached to the port.
%edes        cienaCesPortL2CftProfileId The ID of the custom L2CFT profile attached to the given port.\n                   A non-zero value refers to the L2CFT profile as indexed by the cienaCesDpL2CftProfileIndex object\n                   in the cienaCesDataplaneMIB module.\n                   A value of 0 means no L2CFT profile is attached to this port.\n                   Setting a non-zero value will attach the corresponding L2CFT profile to the given port.
%edes        cienaCesPortConfigHoldOffState The object specifies the hold-off state of the port.
%edes        cienaCesPortConfigHoldOffTime This object specifies the time (in deciseconds, 1ds=100ms) for which port\n              remains in hold-off state. During the hold-off time, all physical link\n              transitions are ignored.
%edes        cienaCesPortOperFecState The current operational Forward Error Correction (FEC) state of the port.
%edes        cienaCesPortConfigYProtection This object specifies the YProtection state of a port. If the value\n               is other than 'none', means the port is operationally controlled by VLLI\n               in a yProtection configuration.
%edes        cienaCesLogicalPortConfigMplsSpeculativeHash The MPLS speculative hash state of the port.
%edes        cienaCesPortConfigHoldOffTimeMsec This object specifies the time (in milliseconds) for which port\n              remains in hold-off state. During the hold-off time, all physical link\n              transitions are ignored.
%edes        cienaCesPortConfigLinkFlapHoldTimeSec This object specifies the time (in seconds) for which port\n              remains in hold-on state. During the hold-on time, all physical link\n              transitions are ignored.
%edes        cienaCesPortPgIdMappingTable Table to map the hierarchical (dotted) port index to PGID value.
%edes        cienaCesPortPgIdMappingEntry Entry in the PGID mapping table.
%edes        cienaCesPortPgIdMappingChassisIndex The object indicates the chassis index for the port.
%edes        cienaCesPortPgIdMappingShelfIndex The object indicates the shelf index for the port.
%edes        cienaCesPortPgIdMappingSlotIndex The object indicates the slot index for the port.
%edes        cienaCesPortPgidMappingPortNumber The object indicates the port number for the corresponding PGID.
%edes        cienaCesPortPgIdMappingPgId This object indicates the PGID value for the corresponding dotted index value.
%edes        cienaCesPortPgIdMappingNotifChassisIndex The object indicates the chassis index for the port used for trap definition.
%edes        cienaCesPortPgIdMappingNotifShelfIndex The object indicates the shelf index for the port used for trap definition.
%edes        cienaCesPortPgIdMappingNotifSlotIndex The object indicates the slot index for the port used for trap definition.
%edes        cienaCesPortPgIdMappingNotifPortNumber The object indicates the port number for the corresponding PGID\n 		used for trap definition.
%edes        cienaCesEttpConfigTable Table of Ethernet (default) physical ports. (ETTPs).
%edes        cienaCesEttpConfigEntry ETTP entry in the Ethernet default physical port table.
%edes        cienaCesEttpConfigEttpId ETTP ID for the instance.  ETTP IDs start at 1, \n             and may not be consecutive for each additional ettp.\n             Note that ETTP-IDs map directly 1:1 to default physical port PGIDs
%edes        cienaCesEttpConfigOperState The current operational state of the ettp.
%edes        cienaCesEttpConfigLinkUpDownTrapState This object specifies the current value of the enterprise ettp traps state.
%edes        cienaCesEttpConfigAllTrapState This object indicates whether the device generates traps for this ettp.
%edes        cienaCesEttpConfigMacAddress This object specifies the ettp MAC address.
%edes        cienaCesEttpConfigName  A textual string containing information about the\n                     ettp. This string should indicate the physical\n                     location of the ettp as well.
%edes        cienaCesEttpConfigEttpType The port type for the ettp.
%edes        cienaCesEttpConfigAdminSpeed The desired speed of the ettp.
%edes        cienaCesEttpConfigOperSpeed The current operational speed of the ettp.
%edes        cienaCesEttpConfigEthLpPgid PG ID-mapped to the instance.\n              ETTPs will map to a logical port which can be one of default-physical-port, aggregate-port, port-alias-port
%edes        cienaCesEttpConfigDuplex This object indicates whether the port can transmit and receive data simultaneously.
%edes        cienaCesEttpConfigFlowCntl This object indicates the port action when frames are received faster than the port can process them.
%edes        cienaCesEttpConfigAutoNeg This object indicates whether the port should negotiate with its link partner to determine common operating parameters.
%edes        cienaCesEttpConfigAdvertisedFlowCntl This object indicates whether flow control settings are advertised.
%edes        cienaCesEttpConfigIfgDecr This object specifies the number of bytes by which to decrease the Inter-frame Gap (IFG) for frames being received on the port.
%edes        cienaCesEttpConfigXcvrFreq This object specifies the desired frequency of the transceiver in GHz.
%edes        cienaCesLogicalPortTpidTable Table of ingress TPIDs for every port
%edes        cienaCesLogicalPortTpidEntry Each entry represents an individual ingress TPID pairs belonging to a port. \n                 The number of ingress TPID entries per port is decided by the \n                 cienaCesLogicalPortConfigVidTpidCount object. E.g. 8100 and 88A8
%edes        cienaCesLogicalPortTpidIndex The object indicates the ingress tpid pair index for the port. size => CS_MAX_L2_ETYPES
%edes        cienaCesLogicalPortInnerVidTpid The object indicates the inner vlan tag TPID for the ingress tpid pair index of the port.
%edes        cienaCesLogicalPortOuterVidTpid The object indicates the outer vlan tag TPID for the ingress tpid pair index of the port.
%edes        cienaCesChPortPgIdMappingTable Table to map the hierarchical (dotted) port index to PgId value.\n             This table supports channelized interfaces.
%edes        cienaCesChPortPgIdMappingEntry Entry in the PgId mapping table.
%edes        cienaCesChPortPgIdMappingChassisIndex The object indicates the chassis index for the port.
%edes        cienaCesChPortPgIdMappingShelfIndex The object indicates the shelf index for the port.
%edes        cienaCesChPortPgIdMappingSlotIndex The object indicates the slot index for the port.
%edes        cienaCesChPortPgIdMappingPortNumber The object indicates the port number for the corresponding PgId.
%edes        cienaCesChPortPgIdMappingChannelNumber The object indicates the channel number for the corresponding PgId.\n                The value 0 is used if the port is not channelized.
%edes        cienaCesChPortPgIdMappingPgId This object indicates the PgId value for the port as specified by this object's index.
%edes        cienaCesChPortPgIdMappingNotifChassisIndex The object indicates the chassis index for the port used for trap definition.
%edes        cienaCesChPortPgIdMappingNotifShelfIndex The object indicates the shelf index for the port used for trap definition.
%edes        cienaCesChPortPgIdMappingNotifSlotIndex The object indicates the slot index for the port used for trap definition.
%edes        cienaCesChPortPgIdMappingNotifPortNumber The object indicates the port number for the corresponding PgId\n 		used for trap definition.
%edes        cienaCesChPortPgIdMappingNotifChannelNumber The object indicates the channel number for the corresponding PgId\n 		used for trap definition. The value 0 is used if the port is\n                not channelized.
%edes        portConfigGroup         A collection of objects providing information\n               about port configurations.
%edes        portNotifGroup          A collection of objects providing information\n               about port notifications.
%edes        portPgIdMappingGroup    A collection of objects providing information\n               about port PgId mappings.
%edes        cienaCesModuleGlobalPostState This object indicates the global POST state for the system.
%edes        cienaCesModuleTable     The (conceptual) table listing the modules configured and detected.
%edes        cienaCesModuleEntry     An entry (conceptual row) in the cienaCesModuleTable.
%edes        cienaCesModuleChassisIndx This object indicates the chassis index for the module.
%edes        cienaCesModuleShelfIndx This object indicates the shelf index for the module.
%edes        cienaCesModuleSlotIndx  This object indicates the slot index for the module.
%edes        cienaCesModuleModel     This object indicates the module model.
%edes        cienaCesModuleType      This object indicates the module type.
%edes        cienaCesModuleDescription This object indicates the description of the module.
%edes        cienaCesModuleAdminState This object indicates the administrative state of the module.
%edes        cienaCesModuleOperState This object indicates the operational state of the module.
%edes        cienaCesModuleProtectionRole This object indicates the redundant administrative state of the module.
%edes        cienaCesModuleStandbyStatus This object indicates the standby status of the module.
%edes        cienaCesModuleLastRebootReason This object indicates the last reboot reason of the module.
%edes        cienaCesModuleAdminPostState This object sets the POST administrative state for the given module.
%edes        cienaCesModuleOperPostState This object indicates the POST operational state for the given module.
%edes        cienaCesModuleTrapState This object indicates whether the device generates notifications for this module.
%edes        cienaCesModuleChassisNotifIndx This object indicates the chassis index for the module used in trap definition.
%edes        cienaCesModuleShelfNotifIndx This object indicates the shelf index for the module used in trap definition.
%edes        cienaCesModuleSlotNotifIndx This object indicates the slot index for the module used in trap definition.
%edes        cienaCesModuleSlotName  This object indicates the slot name that the module is installed in.
%edes        cienaCesModuleDescriptionTable The (conceptual) table listing the description of physical attributes of the modules.
%edes        cienaCesModuleDescriptionEntry An entry (conceptual row) in the cienaCesModuleDescriptionTable.
%edes        cienaCesModuleDescriptionBoardName This object indicates the module name.
%edes        cienaCesModuleDescriptionBoardPartNum This object indicates the board part number.
%edes        cienaCesModuleDescriptionBoardSerialNum This object indicates the board serial number.
%edes        cienaCesModuleDescriptionBoardDesc This object indicates the board description.
%edes        cienaCesModuleDescriptionHwVersion This object indicates the module hardware version.
%edes        cienaCesModuleDescriptionMfgDate This object indicates the module manufacturing date.
%edes        cienaCesModuleDescriptionBaseMac This object indicates the module base MAC address.
%edes        cienaCesModuleDescriptionUpTime This object indicates the module up time (in hundredths of a second) since the\n              module was last re-initialized.
%edes        cienaCesModuleDescriptionTotalNumPorts This object indicates the number of ports on this module.
%edes        cienaCesModuleTempSensorTable The (conceptual) table listing the temperature sensors of the modules.
%edes        cienaCesModuleTempSensorEntry An entry (conceptual row) in the cienaCesModuleTempSensorTable.
%edes        cienaCesModuleSensorIndx This object indicates the unique index in the table along with cienaCesModuleIndx.
%edes        cienaCesModuleSensorDescription This object indicates the sensor description.
%edes        cienaCesModuleSensorCurrentTemp This object indicates the current temperature of the module.
%edes        cienaCesModuleSensorHighTemp This object indicates the highest temperature this module\n         has reached since the last reboot.
%edes        cienaCesModuleSensorLowTemp This object indicates the lowest temperature this module\n         has reached since the last reboot
%edes        cienaCesModuleSensorHighTempThreshold This object indicates the high threshold for this module temperature.
%edes        cienaCesModuleSensorLowTempThreshold This object indicates the low threshold for this module temperature.
%edes        cienaCesModuleSensorNotifIndx This object indicates the unique index in the table used for trap definition.
%edes        cienaCesGlobalSwState   The global software state of the system.
%edes        cienaCesModuleSwTable   The (conceptual) table listing the software package attributes on the modules.
%edes        cienaCesModuleSwEntry   An entry (conceptual row) in the cienaCesModuleSwTable. 
%edes        cienaCesModuleSwState   The software state on the module.
%edes        cienaCesModuleSwRunningRelease Software package version that is currently running on the module.
%edes        cienaCesModuleSwRunningReleasePartition Release partition where the current running release is installed.
%edes        cienaCesModuleSwReleasePartition0Pkg Release partition 0 software package version.
%edes        cienaCesModuleSwReleasePartition0PkgStatus Release partition 0 software package status.
%edes        cienaCesModuleSwReleasePartition1Pkg Release partition 1 software package version.
%edes        cienaCesModuleSwReleasePartition1PkgStatus Release partition 1 software package status.
%edes        cienaCesModuleSwReleasePartition2Pkg Release partition 2 software package version.
%edes        cienaCesModuleSwReleasePartition2PkgStatus Release partition 2 software package status.
%edes        cienaCesModuleSwBank0KernelVersion Bank0 kernel version.
%edes        cienaCesModuleSwBank0KernelStatus Bank0 kernel software status.
%edes        cienaCesModuleSwBank1KernelVersion Bank1 kernel version.
%edes        cienaCesModuleSwBank1KernelStatus Bank1 kernel status.
%edes        cienaCesModuleSwBank0UbootVersion Bank0 U-boot version.
%edes        cienaCesModuleSwBank0UbootStatus Bank0 U-boot status. 
%edes        cienaCesModuleSwBank1UbootVersion Bank1 U-boot version.
%edes        cienaCesModuleSwBank1UbootStatus Bank0 U-boot status. 
%edes        cienaCesModuleSwUbootGoldVersion U-boot Gold version.
%edes        cienaCesModuleSwUbootGoldStatus U-boot Gold status. 
%edes        cienaCesModuleSwMIBVer  This MIB object shows the MIB version currently supported.
%edes        cienaCesModulePOSTErrorTable The (conceptual) table for viewing POST error on the modules.
%edes        cienaCesModulePOSTErrorEntry An entry (conceptual row) in the cienaCesModulePOSTErrorResultsTable. 
%edes        cienaCesModulePOSTErrorIndex Index of the POST error for the module.
%edes        cienaCesModulePOSTErrorDescription A description of the module POST error.
%edes        cienaCesModulePOSTErrorSeverity Severity of the POST error for the module.
%edes        cienaCesModulePOSTErrorScope Scope of the POST error for the module.
%edes        cienaCesModulePOSTScopeIndex  When scope is a port this object identifies the port number.
%edes        cienaCesModuleResourceHealthTable Table listing the health information of dataplane resources.
%edes        cienaCesModuleResourceHealthEntry An entry in the cienaCesModuleResourceHealthTable.
%edes        cienaCesModuleResourceHealthSubCategory The sub-category of the dataplane resource being monitored.\n                        - 'none' is an enumeration placeholder.
%edes        cienaCesModuleResourceDeviceIndx Index of the device being monitored.
%edes        cienaCesModuleResourceHealthState Health state of the dataplane resource being monitored.
%edes        cienaCesModuleResourceHealthCurrMeasurement Current value of the dataplane resource being monitored.
%edes        cienaCesModuleResourceHealthMaxMeasurement The maximum recorded value of the dataplane resource being monitored.
%edes        cienaCesModuleResourceHealthMaxThreshold The maximum possible value for the dataplane resource being monitored.
%edes        cienaCesModuleIDPTable  The (conceptual) table listing the description of ID Prom contents of the modules.
%edes        cienaCesModuleIDPEntry  An entry (conceptual row) in the cienaCesModuleIDPTable.
%edes        cienaCesModuleIDPEthBaseMac This object indicates the module Ethernet Base MAC address stored in the module IDP.
%edes        cienaCesModuleIDPEthBaseMacRange This object indicates the Ethernet MAC address range stored in the module IDP.
%edes        cienaCesModuleIDPModuleSerialNumber This object indicates the Module Serial Number stored in the module IDP.
%edes        cienaCesModuleIDPModelPartNumber This object indicates the Model Part Number stored in the module IDP.
%edes        cienaCesModuleIDPModelRevision This object indicates the Model Revision stored in the module IDP.
%edes        cienaCesModuleIDPProductID This object indicates the Module Product ID stored in the module IDP.
%edes        cienaCesModuleIDPMfgDate This object indicates the Manufactured Date stored in the module IDP.
%edes        cienaCesModuleIDPCleiCode This object indicates the CLEI Code stored in the module IDP.
%edes        cienaCesModuleIDPBarcode This object indicates the Barcode stored in the module IDP.
%edes        cienaCesModuleIDPSWCompat This object indicates the Software Compatibility Number stored in the module IDP.
%edes        cienaCesModuleIDPFTC    This object indicates the Functional Test Count stored in the module IDP.
%edes        cienaCesModuleSystemProtectionMode This object indicates the protection mode of the system.
%edes        cienaCesModuleSwitchOverReason This object indicates the reason the SwitchOver happened. The following combinations\n                determine the value of this object:\n                CTM failure     - Deprov mode - Cold FailOver\n                User Initiated - Deprov Mode - Cold SwitchOver\n                CTM failure     - Audit mode - Hot FailOver\n                User initiated - Audit mode - Hot SwitchOver.\n                
%edes        cienaCesModuleNotifTable The (conceptual) table to define the notification variable bindings.
%edes        cienaCesModuleNotifEntry An entry (conceptual row) in the cienaCesModuleNotifEntryTable. 
%edes        cienaCesModuleHealthCategory This object indicates the health category that the Health Manager\n          monitors on the module.
%edes        cienaCesModuleHealthSubCategory This object indicates the health sub category that the Health Manager\n         monitors on the module.
%edes        cienaCesModuleHealthStatus This object indicates the current health status of health category and\n          its sub category being monitored on the module.
%edes        cienaCesModuleHealthStatusLast This object indicates the last known health status of health category and\n          its sub category being monitored on the module.
%edes        cienaCesModuleHealthOriginType This object indicates the origin of the health status notification.
%edes        cienaCesModuleHealthOriginName This object indicates the origin name of the health status notification.
%edes        cienaCesModuleHealthOriginUnitId This object indicates the origin id of the health notification.
%edes        moduleConfigGroup       A collection of objects providing information\n                about configuration table.
%edes        moduleDescriptionGroup  A collection of objects providing information\n                about module capabilities.
%edes        moduleSensorGroup       A collection of objects providing information of module temperature sensors.
%edes        moduleNotifGroup        A collection of objects providing information\n               about module notifications.
%edes        modulePostErrorGroup    A collection of objects providing information of module POST errors.
%edes        cienaCesCfmServiceTable The (conceptual) table listing the configuration \n\n            parameters for the CFM service table.
%edes        cienaCesCfmServiceEntry An entry (conceptual row) in the cienaCesCfmServiceTable.
%edes        cienaCesCfmServiceIndex A unique identifier for a CFM domain entry.
%edes        cienaCesCfmServiceType  This object is used to specify the service type.\n\n              The meaning of cienaCesCfmServiceValue depends on the value of this MIB object.\n\n              This MIB object along with cienaCesCfmServiceValue must be unique for each entry in this table.
%edes        cienaCesCfmServiceValue This object is used to specify the service value.\n\n              The meaning of this object depends on the value of cienaCesCfmServiceType.\n\n              This MIB object along with cienaCesCfmServiceType must be unique for each entry in this table.
%edes        cienaCesCfmServiceAdminState This object indicates the administrative state of CFM for this service type.
%edes        cienaCesCfmServiceOperState This object indicates the operational state of CFM for this service type.
%edes        cienaCesCfmServiceName  This MIB object indicates the CFM service name.
%edes        cienaCesCfmServiceMdLevel This MIB object indicates the maintenance domain level associated with the CFM service.
%edes        cienaCesCfmServiceFaultState When this object's state is disabled it suppresses all the corresponding CFM service related\n\n 		traps.
%eunits      cienaCesCfmServiceAlarmTime milliseconds
%edes        cienaCesCfmServiceAlarmTime This MIB object indicates the time interval that a service fault detected \n\n              by cienaCesCfmServiceType must be present prior to triggering a fault alarm.
%edes        cienaCesCfmServiceCCMInterval This MIB object identifies the CCM transmission interval index for the service specified by cienaCesCfmServiceType. \n\n              This determines the frequency at which CCMs are transmitted. The length of the interval increases exponentially \n\n              with the index value. When the interval is zero (0), CCM transmission is disabled from all MEPs in the MA.
%eunits      cienaCesCfmServiceResetTime milliseconds
%edes        cienaCesCfmServiceResetTime This MIB object indicates the time interval during which no service faults can be detected\n\n              before the service will reset a fault alarm.
%edes        cienaCesCfmServiceLastFaultCCM This MIB object shows the last received CCM fault.
%edes        cienaCesCfmServiceRMEPFailureFlag This MIB object indicates whether the RMEP failure flag is set.
%edes        cienaCesCfmServiceCCMErrorFlag This MIB object indicates whether the CCM error flag is set.
%edes        cienaCesCfmServiceCrossConnectErrorFlag This MIB object indicates whether the cross-connect error flag is set.
%edes        cienaCesCfmServiceNumMEP This MIB object shows the total number of MEPs.
%edes        cienaCesCfmServiceNumRemoteMEP This MIB object shows the total number of remote MEPs.
%edes        cienaCesCfmServiceNumActiveMEP This MIB object shows the number of active MEPs.
%edes        cienaCesCfmServiceNextMepId This MIB object indicates the next MEP ID for the given service.
%edes        cienaCesCfmServiceAlarmPriority This MIB object indicates the alarm priority for a given service.\n\n              The value ranges from 1 to 5.\n\n              The value 1-5 represent the priority according to faults:\n              1 --> RDI,\n              2 --> Mac Status,\n              3 --> Remote Mep,\n              4 --> Error Ccm,\n              5 --> Xcon Ccm.
%edes        cienaCesCfmServiceNumCCMForFault This MIB object indicates the number of CCM frames that must go undelivered \n\n              for the PBB-TE tunnel before declaring the PBB-TE tunnel as operationally down.\n\n              This object is only applicable if cienaCesCfmServiceType is set to pbtTunnel, else this object\n\n              should be ignored.
%edes        cienaCesCfmServiceDMMInterval This MIB object indicates the DMM transmission interval index for the service specified by cienaCesCfmServiceType. \n\n              This determines the frequency at which DMMs are transmitted. The length of the interval increases exponentially \n\n              with the index value. The value ranges from 3 to 7. The values 3-7 represent indices to CFM intervals as follows:\n              3 --> 100ms,\n              4 --> 1sec,\n              5 --> 10sec,\n              6 --> 1min,\n              7 --> 10min.
%edes        cienaCesCfmServiceLMMInterval This MIB object indicates the LMM transmission interval index for the service specified by cienaCesCfmServiceType. \n\n              This determines the frequency at which LMMs are transmitted. The length of the interval increases exponentially \n\n              with the index value. The value ranges from 1 to 7. The values 1-7 represent indices to CFM intervals as follows:\n              1 --> 3.33ms,\n              2 --> 10ms,\n              3 --> 100ms,\n              4 --> 1sec,\n              5 --> 10sec,\n              6 --> 1min,\n              7 --> 10min.
%edes        cienaCesCfmServiceCCMLossStatsState This object indicates the operational state of CCM loss accounting\n\n             for RMEPs learned by this service type.
%edes        cienaCesCfmServiceCCMLossBucketInterval This object indicates the interval in minutes that each of the 96\n\n             CCM loss history buckets spans. The default is 15 minutes, which\n\n             means the default history covers 24 hours.
%edes        cienaCesCfmServiceY1731 This object indicates whether Y.1731 is enabled for the service.
%edes        cienaCesCfmServiceTlvSenderIdType This MIB object indicates the sender ID TLV Type.
%eunits      cienaCesCfmServiceRMEPHoldTime milliseconds
%edes        cienaCesCfmServiceRMEPHoldTime This MIB object indicates the remote MEP hold time in milliseconds.
%edes        cienaCesCfmServiceCCMTxState This MIB object indicates the administrative state of the CCM Tx.
%edes        cienaCesCfmServicePortStatusFlag This MIB object shows the port status defect flag.
%edes        cienaCesCfmServiceRDIFlag This MIB object shows the RDI defect flag.
%edes        cienaCesCfmServiceInstabilityFlag This MIB object shows the instability defect flag.
%edes        cienaCesCfmServiceRMEPAging Controls automatic remote MEP aging for the service.
%edes        cienaCesCfmServiceRMEPDiscovery Controls automatic remote MEP discovery for the service.
%edes        cienaCesCfmServiceChargedAgainstGlobalBudget This MIB object reflects if this service is charged against\n\n             the global frame budget.
%eunits      cienaCesCfmServiceControlModuleFrameBudget frames/sec
%edes        cienaCesCfmServiceControlModuleFrameBudget CFM frame budget for the control timing module for the given service.
%edes        cienaCesCfmServiceMulticastDa This object indicates if multicast DA mode is enabled for the service. This object is relevant \n\n             when the cienaCesCfmServiceType is PBT.
%edes        cienaCesCfmServiceCCMRxStats Controls cfm rx debug stats for the service.
%edes        cienaCesCfmServiceDMMVersion This object indicates which version will be used for delay measurement packets transmitted from\n\n             a MEP of this service. Default version is set to 0.
%edes        cienaCesCfmServiceLMMVersion This object indicates which version will be used for loss measurement packets transmitted from\n\n             a MEP of this service. Default version is set to 0.
%edes        cienaCesCfmServiceLmmMode This MIB object indicates the nature of loss measurement session of this service.
%edes        cienaCesCfmServiceLmmCounterProfile This MIB object indicates the counting method of loss measurement\n              session initiated on standard mode service.
%edes        cienaCesCfmServiceYProtectionMonitoringState Specifies if Y-Protection is enabled for the service. Y-Protection montoring cannot be enabled on \n              a service which has an existing down MEP. Same restriction is applied if service has an up-MEP \n              created on Y-protection disabled physical port.
%edes        cienaCesCfmMEPTable     The (conceptual) table listing the configuration \n\n            parameters for the CFM MEP table.
%edes        cienaCesCfmMEPEntry     An entry (conceptual row) in the cienaCesCfmMEPTable.
%edes        cienaCesCfmMEPId        This MIB object is used as the index in the table and indicates \n\n             the MEP ID for the given service.
%edes        cienaCesCfmMEPMacAddr   This object indicates the MAC address received on the \n\n             given service and MEP ID.
%edes        cienaCesCfmMEPAdminState This object is used to specify the administrative state of the CFM MEP.
%edes        cienaCesCfmMEPOperState This object is used to specify the operational state of the CFM MEP.
%edes        cienaCesCfmMEPDirection This object is used to specify the MEP direction of the service.
%edes        cienaCesCfmMEPCCMState  This object indicates the CCM transmission for the service specified by cienaCesCfmServiceType.
%edes        cienaCesCfmMEPCCMPriority This object indicates the priority of CCM messages transmitted.
%edes        cienaCesCfmMEPLTMPriority This object indicates the priority received on the given service and port.
%edes        cienaCesCfmMEPLiType    This object indicates the logical interface type on which the MEP is created.
%edes        cienaCesCfmMEPLiIndex   This object indicates the logical interface index for creating the MEP.
%edes        cienaCesCfmMEPServiceName This object is used to specify the service name assigned to this port.
%edes        cienaCesCfmMEPSubPortName This object indicates the sub-port, PBB-TE service or MPLS VC name assigned to the given service and port.
%edes        cienaCesCfmMEPVsPbtName This object indicates the virtual switch or PBB-TE tunnel assigned to the given service and port.
%edes        cienaCesCfmMEPLogicalPortName This object indicates the logical port name assigned to the given service and port.
%edes        cienaCesCfmMEPSubPortIndex This object is used to specify the CFM sub-port index.
%edes        cienaCesCfmMEPEncapsulation This object is used to specify the encapsulation applied to the service and port.
%edes        cienaCesCfmMEPLeadPortSlotIndex This object is used as to specify the agent slot that the MEP is in.
%edes        cienaCesCfmMEPPBTBvid   This object indicates the BVID assigned to the given service and port.
%edes        cienaCesCfmMEPPBTEtype  This object indicates the Ethertype assigned to the given service and port.
%edes        cienaCesCfmMEPL2XformType This object indicates the type of MEP L2 transform.\n              no-op(1) type indicates that there is no MEP level transform.\n              auto(2) type indicates that the MEP inherits the sub-port vtag-stack.
%edes        cienaCesCfmMEPSignalDegradeMonitoringStatus This object enables/disables signal degrading monitoring on the mep.
%edes        cienaCesCfmMEPSignalDegradeTriggerMode This object sets the signal degrade trigger mode on the mep.\n              nearEnd: In this mode, near end frame loss shall be compared with cienaCesCfmSyntheticLossSessionSdSetThreshold\n              and cienaCesCfmSyntheticLossSessionSdClearThreshold.\n              nearFarEnd: In this mode, both near end and far end frame loss shall be compared with\n              cienaCesCfmSyntheticLossSessionSdSetThreshold and cienaCesCfmSyntheticLossSessionSdClearThreshold.
%edes        cienaCesCfmRemoteMEPTable The (conceptual) table listing the display \n\n             parameters for the remote MEP table.
%edes        cienaCesCfmRemoteMEPEntry An entry (conceptual row) in the cienaCesCfmRemoteMEPTable.
%edes        cienaCesCfmRemoteMEPID  This object is used as an index in the table and is used to specify the MEP ID.
%edes        cienaCesCfmRemoteMEPMacAddr This object is used to specify the MAC address of the logical port where the remote MEP is configured.
%edes        cienaCesCfmRemoteMEPAdminState This object is used to specify the administrative state of the remote MEP state machine.
%edes        cienaCesCfmRemoteMEPOperState This object is used to specify the operational state of the remote MEP state machine.
%edes        cienaCesCfmRemoteMEPTime This object is used to specify the time at which the remote MEP state machine last \n\n              entered RMEP_FAILED or RMEP_OK states.
%edes        cienaCesCfmRemoteMEPKLastMacStatus This object is used to specify the last MAC status received.
%edes        cienaCesCfmRemoteMEPFailureFlag This object is used to specify the remote MEP failure flag.
%edes        cienaCesCfmRemoteMEPCCMErrorFlag This object is used to specify the MEP CCM error flag.
%edes        cienaCesCfmRemoteMEPRDIErrorFlag This object is used to specify the MEP RDI error flag.
%edes        cienaCesCfmRemoteMEPSubPortName The object indicates the subport name of the remote MEP.
%edes        cienaCesCfmRemoteMEPServiceName This object is used to specify the service name of the remote MEP.
%edes        cienaCesCfmRemoteMEPLastPortStatus This object is used as to specify the remote MEP last port status.
%edes        cienaCesCfmRemoteMEPLastInterfaceStatus This object is used as to specify the remote MEP interface status.
%edes        cienaCesCfmRemoteMEPCCMLevel This object indicates the remote MEP CCM level.
%edes        cienaCesCfmRemoteMEPHoldState This object indicates the hold state for the remote MEP entry.
%edes        cienaCesCfmDelayMsgTable The (conceptual) table listing the configuration \n\n            parameters for the DelayMeasurementMsg.
%edes        cienaCesCfmDelayMsgEntry An entry (conceptual row) in the cienaCesCfmDelayMsgTable.
%edes        cienaCesCfmDelayMsgLocalMEPId This object is used to specify the local MEP ID.
%edes        cienaCesCfmDelayMsgTargetMEPID This object is used to specify the MEP ID.
%edes        cienaCesCfmDelayMsgServiceName This object indicates the service associated with the \n\n             delay message.
%edes        cienaCesCfmDelayMsgAverageDelayThreshold This object indicates the threshold for the average delay in microseconds.
%edes        cienaCesCfmDelayMsgAverageJitterThreshold This object indicates the threshold value for average jitter in microseconds.
%edes        cienaCesCfmDelayMsgMaximumDelayThreshold This object indicates the threshold for the maximum delay.
%edes        cienaCesCfmDelayMsgMaximumJitterThreshold This object indicates the threshold value for maximum jitter.
%eunits      cienaCesCfmDelayMsgAverageDelay microseconds
%edes        cienaCesCfmDelayMsgAverageDelay This object indicates the average delay.
%eunits      cienaCesCfmDelayMsgAverageJitter microseconds
%edes        cienaCesCfmDelayMsgAverageJitter This object indicates the average jitter.
%eunits      cienaCesCfmDelayMsgMaximumDelay microseconds
%edes        cienaCesCfmDelayMsgMaximumDelay This object indicates the maximum delay.
%eunits      cienaCesCfmDelayMsgMaximumJitter microseconds
%edes        cienaCesCfmDelayMsgMaximumJitter This object indicates the maximum jitter.
%eunits      cienaCesCfmDelayMsgMinimumDelay microseconds
%edes        cienaCesCfmDelayMsgMinimumDelay This object indicates the minimum delay.
%eunits      cienaCesCfmDelayMsgMinimumJitter microseconds
%edes        cienaCesCfmDelayMsgMinimumJitter This object indicates the minimum jitter.
%eunits      cienaCesCfmDelayMsgAverageDelayVariation microseconds
%edes        cienaCesCfmDelayMsgAverageDelayVariation This object indicates the Average Inter Frame Delay Variation.
%eunits      cienaCesCfmDelayMsgMaximumDelayVariation microseconds
%edes        cienaCesCfmDelayMsgMaximumDelayVariation This object indicates the Maximum Inter Frame Delay Variation.
%eunits      cienaCesCfmDelayMsgMinimumDelayVariation microseconds
%edes        cienaCesCfmDelayMsgMinimumDelayVariation This object indicates the Minimum Inter Frame Delay Variation.
%eunits      cienaCesCfmDelayMsgAverageDelayVariationThreshold microseconds
%edes        cienaCesCfmDelayMsgAverageDelayVariationThreshold This object indicates the threshold value for average Inter Frame Delay Variation.\n              A value of -1 disables the generation of faults.  A value of 0 or greater\n              is compared to the Average Delay Variation measured in the test and a fault is generated\n              if the threshold is exceeded.
%eunits      cienaCesCfmDelayMsgMaximumDelayVariationThreshold microseconds
%edes        cienaCesCfmDelayMsgMaximumDelayVariationThreshold This object indicates the threshold value for maximum Inter Frame Delay Variation.\n              A value of -1 disables the generation of faults.  A value of 0 or greater\n              is compared to the Maximum Delay Variation measured in the test and a fault is generated\n              if the threshold is exceeded.
%edes        cienaCesCfmDelayMsgPriority This object specifies the priority that will be encoded in the DMM message.
%edes        cienaCesCfmDelayMsgCount This object specifies the number of DMM messages that will be transmitted for one Iteration.
%edes        cienaCesCfmDelayMsgIterations This object specifies the number of iterations the test has to be conducted. \n              A zero value means that test is continuous, and iterations are infinite. 
%edes        cienaCesCfmDelayMsgRepeatDelay This object specifies the delay in minutes between consecutive test iterations.
%edes        cienaCesCfmDelayMsgDuration This object specifies the duration of time the test took in seconds to complete one iteration.
%edes        cienaCesCfmDelayTestTable The (conceptual) table listing the configuration\n\n            parameters for the DelayMeasurementMsg.
%edes        cienaCesCfmDelayTestEntry An entry (conceptual row) in the cienaCesCfmDelayTestTable.
%edes        cienaCesCfmDelayTestServiceIndex This object specifies the service index of the frame delay message.
%edes        cienaCesCfmDelayTestLocalMEPId This object is used to specify the local MEP ID.
%edes        cienaCesCfmDelayTestRemoteMEPId This object is used to specify the MEP ID.
%edes        cienaCesCfmDelayTestId  This object specifies the test ID of the frame delay message.
%edes        cienaCesCfmDelayTestServiceName This object indicates the service associated with the \n\n             delay message.
%edes        cienaCesCfmDelayTestAverageDelayThreshold This object indicates the threshold for the average delay in microseconds.
%eunits      cienaCesCfmDelayTestAverageDelayVariationThreshold microseconds
%edes        cienaCesCfmDelayTestAverageDelayVariationThreshold This object indicates the threshold value for average Inter Frame Delay Variation.\n              A value of -1 disables the generation of faults. A value of 0 or greater\n              is compared to the Average Delay Variation measured in the test and a fault is generated\n              if the threshold is exceeded.
%edes        cienaCesCfmDelayTestMaximumDelayThreshold This object indicates the threshold for the maximum delay.
%eunits      cienaCesCfmDelayTestMaximumDelayVariationThreshold microseconds
%edes        cienaCesCfmDelayTestMaximumDelayVariationThreshold This object indicates the threshold value for maximum Inter Frame Delay Variation.\n              A value of -1 disables the generation of faults. A value of 0 or greater\n              is compared to the Maximum Delay Variation measured in the test and a fault is generated\n              if the threshold is exceeded.
%eunits      cienaCesCfmDelayTestAverageDelay microseconds
%edes        cienaCesCfmDelayTestAverageDelay This object indicates the average delay.
%eunits      cienaCesCfmDelayTestAverageDelayVariation microseconds
%edes        cienaCesCfmDelayTestAverageDelayVariation This object indicates the average delay variation.
%eunits      cienaCesCfmDelayTestMaximumDelay microseconds
%edes        cienaCesCfmDelayTestMaximumDelay This object indicates the maximum delay.
%eunits      cienaCesCfmDelayTestMaximumDelayVariation microseconds
%edes        cienaCesCfmDelayTestMaximumDelayVariation This object indicates the maximum delay variation.
%eunits      cienaCesCfmDelayTestMinimumDelay microseconds
%edes        cienaCesCfmDelayTestMinimumDelay This object indicates the minimum delay.
%eunits      cienaCesCfmDelayTestMinimumDelayVariation microseconds
%edes        cienaCesCfmDelayTestMinimumDelayVariation This object indicates minimum frame Delay Variation.
%edes        cienaCesCfmDelayTestPriority This object specifies the priority that will be encoded in the DMM message.
%edes        cienaCesCfmDelayTestCount This object specifies the number of DMM messages that will be transmitted for one Iteration.
%edes        cienaCesCfmDelayTestDMMInterval This object specifies the message interval at which DMMs will be transmitted.\n              The values 3-7 represent indices to CFM intervals as follows:\n              3 --> 100ms,\n              4 --> 1sec,\n              5 --> 10sec,\n              6 --> 1min,\n              7 --> 10min.
%edes        cienaCesCfmDelayTestIterations This object specifies the number of iterations the test has to be conducted.\n              A zero value means that test is continuous, and iterations are infinite. 
%edes        cienaCesCfmDelayTestRepeatDelay This object specifies the delay in minutes between consecutive test iterations.
%edes        cienaCesCfmDelayTestTimeout This object specifies the timeout interval in milliseconds within which the source \n\n              should receive DMR frame.
%edes        cienaCesCfmDelayTestDuration This object specifies the duration of time the test took in seconds to complete one iteration.
%edes        cienaCesCfmDelayTestPduVersion This object specifies the version value which will be filled in frame delay messages.
%edes        cienaCesCfmFrameLossMsgTable The (conceptual) table listing the configuration \n\n            parameters for the FrameLossMeasurementMsg.
%edes        cienaCesCfmFrameLossMsgEntry An entry (conceptual row) in the cienaCesCfmFrameLossMsgTable.
%edes        cienaCesCfmFrameLossMsgLocalMEPId This object is used to specify the local MEP ID at the source.
%edes        cienaCesCfmFrameLossMsgTargetMEPID This object is used to specify the MEP ID.
%edes        cienaCesCfmFrameLossMsgNearLossThreshold Indicates the threshold value for the near-end frame loss.
%edes        cienaCesCfmFrameLossMsgFarLossThreshold This object indicates the threshold value for the far-end frame loss.
%edes        cienaCesCfmFrameLossMsgServiceName This object indicates the service associated with\n\n              the frame loss measurement message (LMM).
%edes        cienaCesCfmFrameLossMsgFrameLossNear This object indicates the near-end frame loss. For a MEP,\n\n             near-end frame loss refers to frame loss associated with the \n\n             ingress data frames.
%edes        cienaCesCfmFrameLossMsgFrameLossFar This object indicates the far-end frame loss. For a MEP,\n\n             far-end frame loss refers to frame loss associated with the \n\n             egress data frames.
%edes        cienaCesCfmFrameLossTestTable The (conceptual) table listing the configuration \n\n            parameters for the FrameLossMeasurementTest.
%edes        cienaCesCfmFrameLossTestEntry An entry (conceptual row) in the cienaCesCfmFrameLossTestTable.
%edes        cienaCesCfmFrameLossTestServiceIndex This object specifies the service index of the frame loss message.
%edes        cienaCesCfmFrameLossTestLocalMEPId This object is used to specify the local MEP ID at the source.
%edes        cienaCesCfmFrameLossTestRemoteMEPId This object is used to specify the MEP ID.
%edes        cienaCesCfmFrameLossTestId This object specifies the test ID of the frame loss message.
%edes        cienaCesCfmFrameLossTestServiceName This object specifies the name of service associated with\n              the frame loss measurement message (LMM).
%edes        cienaCesCfmFrameLossTestPriority This object specifies the priority that will be encoded in the LMM message.
%edes        cienaCesCfmFrameLossTestDataPriority This object specifies which data traffic queques' counters to be encoded in the LMM/LMR messages.
%edes        cienaCesCfmFrameLossTestCount This object specifies the number of LMM messages that will be transmitted during this session.
%edes        cienaCesCfmFrameLossTestLMMInterval This object specifies the message interval at which LMMs will be transmitted.
%edes        cienaCesCfmFrameLossTestIterations This object specifies the number of iterations the test\n              has to be conducted. Each test iteration is defined by <cienaCesCfmFrameLossTestLMMInterval,\n              cienaCesCfmFrameLossTestCount>. If this object specifies zero, it means that test is continuous,\n              and iterations are infinite.
%edes        cienaCesCfmFrameLossTestRepeatDelay This object specifies the delay in minutes between consecutive test iterations.
%edes        cienaCesCfmFrameLossTestTimeout This object specifies the timeout interval in milliseconds within which\n              the source should receive a LMR for a corresponding LMM Test.
%edes        cienaCesCfmFrameLossTestDuration This object specifies the duration of time the test took in milliseconds to complete one iteration.
%edes        cienaCesCfmFrameLossTestAccelerate This object specifies whether it is proprietary frame loss (i.e. value is false) or standard frame loss test.
%edes        cienaCesCfmFrameLossTestNearLossThreshold Indicates the threshold value for the near-end frame loss. -1 indicates that threshold check is disabled.
%edes        cienaCesCfmFrameLossTestFarLossThreshold This object indicates the threshold value for the far-end frame loss. -1 indicates that threshold check is disabled.
%edes        cienaCesCfmFrameLossTestNearLoss This object indicates the near-end frame loss. For a MEP,\n             near-end frame loss refers to frame loss associated with the \n             ingress data frames.
%edes        cienaCesCfmFrameLossTestFarLoss This object indicates the far-end frame loss. For a MEP,\n             far-end frame loss refers to frame loss associated with the \n             egress data frames.
%edes        cienaCesCfmFrameLossTestNumLMMSent This object specifies the number of LMM messages sent in the latest test iteration.
%edes        cienaCesCfmFrameLossTestNumLMRReceived This object specifies the number of LMR messages received in the latest test iteration.
%edes        cienaCesCfmFrameLossTestMinNearLoss This object specifies the average Near Loss Threshold of the test session.
%edes        cienaCesCfmFrameLossTestAvgNearLoss This object specifies the minimum Near Loss Threshold of the test session.
%edes        cienaCesCfmFrameLossTestMaxNearLoss This object specifies the maximum Near Loss Threshold of the test session.
%edes        cienaCesCfmFrameLossTestMinFarLoss This object specifies the minimum Far Loss Threshold of the test session.
%edes        cienaCesCfmFrameLossTestAvgFarLoss This object specifies the average Far Loss Threshold of the test session.
%edes        cienaCesCfmFrameLossTestMaxFarLoss This object specifies the maximum Far Loss Threshold of the test session.
%edes        cienaCesCfmFrameLossTestNearLossRatio This object specifies the Frame Loss Ratio in percentile of loss at Nearend in the last\n         iteration of the completed test.\n         This object is applicable only when cienaCesCfmServiceLmmMode is set to proprietary,\n         in all other cases this object returns value 0.
%edes        cienaCesCfmFrameLossTestFarLossRatio This object specifies the Frame Loss Ratio in percentile of loss at Farend in the last\n         iteration of the completed test.\n         This object is applicable only when cienaCesCfmServiceLmmMode is set to proprietary,\n         in all other cases this object returns value 0.
%edes        cienaCesCfmFrameLossTestPduVersion This object specifies the CFM PDU version encoded in the test frames being exchanged within an active frame loss test session.
%edes        cienaCesCfmServiceFaultNotifTable The (conceptual) table listing the configuration \n\n            parameters for the CFM service table.
%edes        cienaCesCfmServiceFaultNotifEntry An entry (conceptual row) in the cienaCesCfmServiceFaultNotifTable.
%edes        cienaCesCfmServiceFaultTime This object indicates the time at which the fault occurred.
%edes        cienaCesCfmServiceFaultType This object indicates the type of fault.
%edes        cienaCesCfmServiceFaultDesc This object indicates the description of the fault.
%edes        cienaCesCfmServiceFaultMep This object indicates the MEP ID of the MEP reporting the fault.
%edes        cienaCesCfmServiceVsPbtName This object indicates the virtual switch or PBB-TE tunnel\n\n              assigned to the given service.
%edes        cienaCesCfmMaintenanceDomainTable The (conceptual) table listing the configuration \n\n            parameters for the CFM maintenance domain table.
%edes        cienaCesCfmMaintenanceDomainEntry An entry (conceptual row) in the cienaCesCfmMaintenanceDomainTable.
%edes        cienaCesCfmMaintenanceDomainIndex This object indicates the unique index in the table.
%edes        cienaCesCfmMaintenanceDomainLevel This object indicates the maintenance domain level.
%edes        cienaCesCfmMaintenanceDomainName This object indicates the maintenance domain name.
%edes        cienaCesCfmMaintenanceDomainServiceCount This object indicates the number of CFM services mapped to this maintenance domain.
%edes        cienaCesCfmServiceFrameBudgetTable The (conceptual) table listing the configuration \n\n            parameters for the CFM service frame budget table.
%edes        cienaCesCfmServiceFrameBudgetEntry An entry (conceptual row) in the cienaCesCfmServiceFrameBudgetTable.
%edes        cienaCesCfmSlotIndex    This object indicates the slot number.
%eunits      cienaCesCfmServiceFrameBudgetSlot frames/sec
%edes        cienaCesCfmServiceFrameBudgetSlot This object indicates the CFM frame budget for the slot for the given service.
%edes        cienaCesCfmGlobalControlModuleFrameBudget Control Module Frame Budget.
%edes        cienaCesCfmFrameBudgetGlobalTable The (conceptual) table listing the configuration \n\n            parameters for the CFM global frame budget table.
%edes        cienaCesCfmFrameBudgetGlobalEntry An entry (conceptual row) in the cienaCesCfmGlobalFrameBudgetTable.
%eunits      cienaCesCfmFrameBudgetGlobalSlot frames/sec
%edes        cienaCesCfmFrameBudgetGlobalSlot This object indicates the global CFM frame budget for the slot.
%edes        cienaCesCfmState        This object indicates the globally configured CFM state.
%edes        cienaCesCfmEtherType    This object indicates the Ethertype value used for CFM frames.
%eunits      cienaCesCfmMEPHoldTime  milliseconds
%edes        cienaCesCfmMEPHoldTime  This object indicates the time to hold a MEP in an inactive state.
%edes        cienaCesCfmY1731EtherType This object indicates the optional alternate Ethertype for Y.1731 frames.
%edes        cienaCesCfmGlobalSLMDefaultCount The global default count for synthetic loss measurement tests.
%edes        cienaCesCfmGlobalSLMDefaultInterval The global default interval for synthetic loss measurement tests.\n\n         The value ranges from 3 to 7.\n\n         The values 3-7 represent indices to CFM intervals as follows:\n         3 --> 100ms,\n         4 --> 1sec,\n         5 --> 10sec,\n         6 --> 1min,\n         7 --> 10min.
%edes        cienaCesCfmGlobalSLMDefaultTimeout The global default timeout for synthetic loss measurement tests.
%edes        cienaCesCfmGlobalLMMDefaultCount The global default count for frame loss measurement tests.
%edes        cienaCesCfmGlobalLMMDefaultInterval The global default interval for frame loss measurement tests.\n         The value ranges from 3 to 7.
%edes        cienaCesCfmGlobalLMMDefaultTimeout The global default timeout for frame loss measurement tests.
%edes        cienaCesCfmGlobalDMMDefaultInterval The global default interval for frame delay measurement tests.\n\n         The value ranges from 3 to 7.\n\n         The values 3-7 represent indices to CFM intervals as follows:\n         3 --> 100ms,\n         4 --> 1sec,\n         5 --> 10sec,\n         6 --> 1min,\n         7 --> 10min.
%edes        cienaCesCfmGlobalLmmDefaultMode The global default lmm mode for cfm services.
%edes        cienaCesCfmSyntheticLossSessionTable The (conceptual) table listing the configuration\n            parameters for the SyntheticLossMeasurement(SLM) message.
%edes        cienaCesCfmSyntheticLossSessionEntry An entry in the cienaCesCfmSyntheticLossSessionTable.
%edes        cienaCesCfmSyntheticLossSessionServiceIndex This object specifies the service index of the SLM message.
%edes        cienaCesCfmSyntheticLossSessionLocalMEPId This object specifies the local mep id of the SLM message.
%edes        cienaCesCfmSyntheticLossSessionTargetMEPId This object specifies the target mepid of the SLM message.
%edes        cienaCesCfmSyntheticLossSessionTestId This object specifies the test ID of the SLM message.
%edes        cienaCesCfmSyntheticLossSessionServiceName This object specifies the service name of the SLM message.
%edes        cienaCesCfmSyntheticLossSessionPriority This object specifies the priority that will be encoded in the SLM message.
%edes        cienaCesCfmSyntheticLossSessionCount This object specifies the number of SLM messages that will be transmitted during this session.
%edes        cienaCesCfmSyntheticLossSessionSLMInterval This object specifies the message interval at which SLMs will be transmitted.	                        \n              The values 3-7 represent indices to CFM intervals as follows:\n              3 --> 100ms,\n              4 --> 1sec,\n              5 --> 10sec,\n              6 --> 1min,\n              7 --> 10min.
%edes        cienaCesCfmSyntheticLossSessionIterations This object specifies the number of iterations the test\n              has to be conducted. Each test iteration is defined by <cienaCesCfmSyntheticLossMsgSLMInterval,\n              cienaCesCfmSyntheticLossMsgCount>. Whereas, the test sessions is defined by test iterations over \n              <cienaCesCfmSyntheticLossMsgRepeatCount>.\n              If this object specifies zero, it means that test is continuous, and iterations are infinite. 
%edes        cienaCesCfmSyntheticLossSessionRepeatDelay This object specifies the delay in minutes between consecutive test iterations.
%edes        cienaCesCfmSyntheticLossSessionFrameSize This object specifies the size in bytes of the CFM base frame.\n              If this object specifies zero there is no padding.
%edes        cienaCesCfmSyntheticLossSessionTimeout This object specifies the timeout interval in milliseconds within which\n              the source should receive a SLR for a corresponding SLM Msg.
%edes        cienaCesCfmSyntheticLossSessionDuration This object specifies the duration of time the test took in milliseconds to complete one iteration.
%edes        cienaCesCfmSyntheticLossSessionLossNearThreshold This object represents the Near Loss Threshold Fault for the Synthetic Loss Measurement test.\n	 		   A value of -1 disables the generation of faults.  A value of 0 or greater\n	 		   is compared to the synthetic loss near result of the\n	 		   test and a fault is generated if the threshold is exceeded.
%edes        cienaCesCfmSyntheticLossSessionLossFarThreshold This object represents the Far Loss Threshold Fault for the Synthetic Loss Measurement test.\n 			   A value of -1 disables the generation of faults. A value of 0 or greater\n 			   is compared to the synthetic loss near result of the\n 			   test and a fault is generated if the threshold is exceeded.
%edes        cienaCesCfmSyntheticLossSessionNumSLMSent This object specifies the number of SLM messages sent in the latest test iteration.
%edes        cienaCesCfmSyntheticLossSessionNumSLRReceived This object specifies the number of SLR messages received in the latest test iteration.
%edes        cienaCesCfmSyntheticLossSessionFrameLossNear This object specifies the Near Loss Threshold in the latest test iteration.
%edes        cienaCesCfmSyntheticLossSessionFrameLossFar This object specifies the Far Loss Threshold in the latest test iteration.
%edes        cienaCesCfmSyntheticLossSessionAvgFrameLossNear This object specifies the average Near Loss Threshold of the test session.
%edes        cienaCesCfmSyntheticLossSessionMinFrameLossNear This object specifies the minimum Near Loss Threshold of the test session.
%edes        cienaCesCfmSyntheticLossSessionMaxFrameLossNear This object specifies the maximum Near Loss Threshold of the test session.
%edes        cienaCesCfmSyntheticLossSessionAvgFrameLossFar This object specifies the average Far Loss Threshold of the test session.
%edes        cienaCesCfmSyntheticLossSessionMinFrameLossFar This object specifies the minimum Far Loss Threshold of the test session.
%edes        cienaCesCfmSyntheticLossSessionMaxFrameLossFar This object specifies the maximum Far Loss Threshold of the test session.
%edes        cienaCesCfmSyntheticLossSessionFrameLossRatioNear This object specifies the Frame Loss Ratio in percentile of loss at Nearend in the last\n              iteration of the completed test.
%edes        cienaCesCfmSyntheticLossSessionFrameLossRatioFar This object specifies the Frame Loss Ratio in percentile of loss at Farend in the last\n              iteration of the completed test.
%edes        cienaCesCfmSyntheticLossSessionSdSetThreshold This object represents the signal degrade set threshold value for the synthetic loss measurement test. \n              A value of 1 or greater is compared to the frame loss result and fault is set, if the loss exceeds \n              this threshold. A value of -1 disables the generation of signal degrade fault notification. \n              This object works in conjunction with cienaCesCfmSyntheticLossSessionSdClearThreshold. If one object is given  \n              non-default value, other should be also set to non-default value.
%edes        cienaCesCfmSyntheticLossSessionSdClearThreshold This object represents the signal degrade clear threshold value for the synthetic loss measurement test. \n              A value of 0 or greater is compared to the frame loss result and a fault is cleared, if loss  \n              is equal to or below this threshold. A value of -1 disables the generation of signal degrade fault notification \n              This object works in conjunction with cienaCesCfmSyntheticLossSessionSdSetThreshold. If one object is given  \n              non-default value, other should be also set to non-default value.
%edes        cienaCesCfmSyntheticLossResponderTable The (conceptual) table lists the Synthetic Loss Measurement (SLM) responders.
%edes        cienaCesCfmSyntheticLossResponderEntry An entry (conceptual row) in the cienaCesCfmSyntheticLossResponderTable.
%edes        cienaCesCfmSyntheticLossResponderServiceIndex This object specifies the service index of the SLM responder.
%edes        cienaCesCfmSyntheticLossResponderLocalMEPId This object specifies the local mep id of the SLM responder.
%edes        cienaCesCfmSyntheticLossResponderRemoteMEPId This object specifies the remote mep id of the SLM responder.
%edes        cienaCesCfmSyntheticLossResponderTestId This object specifies the test ID of the SLM responder.
%edes        cienaCesCfmSyntheticLossResponderServiceName This object specifies the service name of the SLM responder.
%edes        cienaCesCfmSyntheticLossResponderLocalMac This object identifies the MAC address of the local mep.
%edes        cienaCesCfmSyntheticLossResponderRemoteMac This object identifies the MAC address of the remote mep.
%edes        cienaCesCfmSyntheticLossResponderNumSLMReceived This object specifies the number of SLM frames received by this responder.
%edes        cienaCesCfmSyntheticLossResponderNumSLRSent This object specifies the number of SLR frames sent by this responder.
%edes        cienaCesChassisMacAddress This object indicates the chassis MAC address.
%edes        cienaCesChassisDeviceId This object indicates the chassis device ID.
%edes        cienaCesChassisPartNumber This object indicates the chassis part number.
%edes        cienaCesChassisSerialNumber This object indicates the chassis serial number.
%edes        cienaCesChassisMfgDate  This object indicates the chassis manufacturing date.
%edes        cienaCesChassisParamVersion This object indicates the chassis param version.
%edes        cienaCesChassisSystemDateAndTime This object displays local system date and time.
%edes        cienaCesChassisSystemUTCDateAndTime This object displays coordinated UTC system date and time.
%edes        cienaCesChassisSystemTimeOffset This object displays the time offset in seconds.\n              Valid range is -43200 .. 50400.\n              This range corresponds to -12Hr, +14Hr consistent with the maximum time zone spacing
%edes        cienaCesChassisRebootReasonErrorType This variable indicates the type of reboot reasons\n              included in the cienaCesChassisRebootNotification trap.
%edes        cienaCesChassisSystemId This object indicates the system identification (SID) as provisioned by the operator through TL1.
%edes        cienaCesChassisAlarmCutoffOrigin This object indicates the origin of the alarm cutoff command\n              included in the cienaCesChassisAlarmCutoffNotification.
%edes        cienaCesChassisRestart  This object restarts the chassis. Setting the value of this object \n	      to true will restart the chassis immediately. When read, this \n	      object will always return false.
%edes        cienaCesChassisMefSourceMacAddress This object indicates the chassis MEF source MAC address.
%edes        cienaCesChassisPowerTable A list of power supply entries.
%edes        cienaCesChassisPowerEntry An entry in the power table providing objects for a\n             power supply.
%edes        cienaCesChassisPowerSupplyIndx This object indicates the unique index of the table.
%edes        cienaCesChassisPowerSupplyState Specifies the state of the power supply.
%edes        cienaCesChassisPowerSupplyType Specifies the power supply type.
%edes        cienaCesChassisPowerSupplyManufacturer Specifies the power supply manufacturer or the manufacturer\n               specific model name of the power supply.
%edes        cienaCesChassisPowerSupplySerialNumber Specifies the power supply serial number.
%edes        cienaCesChassisPowerSupplyPartNum Specifies the power supply part number.
%edes        cienaCesChassisPowerSupplyNotifIndx This object indicates the unique index of the table that is used in the\n             definition of power-supply traps.
%edes        cienaCesChassisPowerSupplyFRU This object indicates whether or not the power supply is a field replaceable unit (FRU).  It returns true if the unit is an FRU.
%edes        cienaCesChassisPowerSupplySlotName Specifies the name of the chassis slot in which the power supply is\n               installed.
%edes        cienaCesChassisPowerSupplyRevInfo Specifies the revision information of the power supply.
%edes        cienaCesChassisPowerSupplyChassisIndx This object represents the chassis index.
%edes        cienaCesChassisPowerSupplyShelfIndx This object represents the chassis shelf index.
%edes        cienaCesChassisPowerSupplySlotIndx This object represents the power supply chassis slot index.
%edes        cienaCesChassisFanTable A list of fan module entries.
%edes        cienaCesChassisFanEntry An entry in the fan module Table providing objects for a\n             fan module.
%edes        cienaCesChassisFanTrayIndx This object indicates the fan tray and also represents the unique index in the table.
%edes        cienaCesChassisFanIndx  This object identifies a fan in the fan tray and is a unique index in the table.
%edes        cienaCesChassisFanStatus Denotes the fan module status as follows:\n              'ok' means fan is operational,\n              'pending' means fan is installed but statistics\n              are not yet available,\n              'rpm_warning' means fan is not working.\n              'uninstalled' means fan not found.
%eunits      cienaCesChassisFanAvgSpeed rpm
%edes        cienaCesChassisFanAvgSpeed The average speed of the fan in RPM unit.  The average is calculated\n             on a continuous basis from system startup.
%eunits      cienaCesChassisFanCurrentSpeed rpm
%edes        cienaCesChassisFanCurrentSpeed The current speed of the fan in RPM.
%eunits      cienaCesChassisFanMinSpeed rpm
%edes        cienaCesChassisFanMinSpeed The minimum speed of the fan in RPM.
%edes        cienaCesChassisFanTrayNotifIndex This object indicates the fan tray and also represents the unique index\n             used in the definition of fan traps.
%edes        cienaCesChassisFanNotifIndex This object identifies a fan in the fan tray and is a unique index\n             used in the definition of fan traps.
%edes        cienaCesChassisFanName  This object identifies a fan name.
%edes        cienaCesChassisFanChassisIndx This object represents the chassis index.
%edes        cienaCesChassisFanShelfIndx This object represents the chassis shelf index.
%edes        cienaCesChassisFanTrayTable A list of fan tray module entries.
%edes        cienaCesChassisFanTrayEntry An entry in the fan tray module table providing objects related to\n              fan tray.
%edes        cienaCesChassisFanTrayStatus This object indicates the status of the fan tray.
%edes        cienaCesChassisFanTrayType This object indicates the type of fan tray.
%edes        cienaCesChassisFanTrayMode This object indicates the operational mode of the fan tray.
%edes        cienaCesChassisFanTrayNumFans This object indicates the number of fans on the tray.
%edes        cienaCesChassisFanTrayName This object indicates the fan tray name.
%edes        cienaCesChassisFanTrayChassisIndx This object represents the chassis index.
%edes        cienaCesChassisFanTrayShelfIndx This object represents the chassis shelf index.
%edes        cienaCesChassisFanTraySlotIndx This object represents the fan tray chassis slot index.
%edes        cienaCesChassisFanTraySerialNumber This object indicates the fan tray serial number.
%edes        cienaCesChassisFanTempTable A list of fan temperature module entries.
%edes        cienaCesChassisFanTempEntry An entry in the fan temperature module table providing objects for a\n             fan module.
%edes        cienaCesChassisFanTempTrayIndx This object indicates the unique index in the table.
%edes        cienaCesChassisFanTempId This object indicates the unique index in the table.
%edes        cienaCesChassisFanTempDesc This object indicates the description of the fan temperature sensor.
%edes        cienaCesChassisFanTemp  This object indicates the current chassis fan temperature.
%edes        cienaCesChassisFanTempHigh This object indicates the highest temperature this chassis fan reached so far.
%edes        cienaCesChassisFanTempLow This object indicates the lowest temperature this chassis fan reached so far.
%edes        cienaCesChassisFanTempLoThreshold This object indicates the low threshold value for the fan temperature sensor.
%edes        cienaCesChassisFanTempHiThreshold This object indicates the high threshold value for the fan temperature sensor.
%edes        cienaCesChassisFanTempTrayNotifIndx This object indicates the unique index used in fan temperature trap definition.
%edes        cienaCesChassisFanTempNotifId This object indicates the unique index used in fan temperature trap definition.
%edes        cienaCesChassisFanTempName This object indicates the fan temperature sensor name.
%edes        cienaCesChassisFanTempChassisIndx This object represents the chassis index.
%edes        cienaCesChassisFanTempShelfIndx This object represents the chassis shelf index.
%edes        cienaCesChassisHealthCategory This object indicates the health category that the Health Manager\n          monitors on the chassis.
%edes        cienaCesChassisHealthSubCategory This object indicates the sub-category that has meaning specific to the value\n          of the accompanying cienaCesChassisHealthCategory object.  Refer to the specific\n          subCategory object that corresponds to the cienaCesChassisHealthCategory\n          for details on the particular subCategory as referenced below:\n\n          TceHealthCategory value,              corresponding subCategory object\n          ----------------------------------------------------------------------\n          unknown(1)\n          cpu(2)                                cienaCesChassisCPUHealthSubCategory\n          datapath(3)                           cienaCesChassisDatapathHealthSubCategory\n          ethernet(4)                           cienaCesChassisControlPlaneHealthSubCategory\n          fabric(5)                             cienaCesChassisFabricHealthSubCategory\n          sm(6)                                 cienaCesChassisSMHealthSubCategory\n          tempSm(7)                             cienaCesChassisSMTempHealthSubCategory\n          samplesSm(8)                          cienaCesChassisSMSamplesHealthSubCategory\n          disk(9)                               cienaCesChassisDiskHealthSubCategory\n          tempModule(10)                        cienaCesChassisModuleTempHealthSubCategory\n          samplesModule(11)                     cienaCesChassisModuleSamplesHealthSubCategory\n          fanTray(12)                           cienaCesChassisFanTrayHealthSubCategory\n          fanTraySpeedMismatch(13)              cienaCesChassisFanTraySpeedMismatchHealthSubCategory\n          fanSpeedMismatch(14)                  cienaCesChassisFanSpeedMismatchHealthSubCategory\n          tempFan(15)                           cienaCesChassisFanTempHealthSubCategory\n          samplesFan(16)                        cienaCesChassisFanSamplesHealthSubCategory\n          fanRpm(17)                            cienaCesChassisFanRPMHealthSubCategory\n          power(18)                             cienaCesChassisPowerHealthSubCategory\n          feedPower(19)                         cienaCesChassisFeedPowerHealthSubCategory\n          systemResource(20)                    cienaCesChassisResourceHealthSubCategory\n          memory(21)                            cienaCesChassisMemoryHealthSubCategory\n          mac(22)                               cienaCesChassisMACHealthSubCategory\n          i2c(23)                               cienaCesChassisI2CHealthSubCategory\n          flash(24)                             cienaCesChassisFlashDriverHealthSubCategory\n          transceiver(25)                       cienaCesChassisXcvrHealthSubCategory\n          link(26)                              cienaCesChassisPortLinkHealthSubCategory\n          iomStatus(27)                         cienaCesChassisIOMStatusHealthSubCategory\n          usbFlash(28)                          cienaCesChassisUsbFlashHealthSubCategory\n          linxstats(29)                         cienaCesChassisLinxStatHealthSubCategory\n          smFabric(30)                          cienaCesChassisSMFabricHealthSubCategory\n          spi(31)                               cienaCesChassisSPIHealthSubCategory\n          slotResource(32)                      cienaCesModuleResourceHealthSubCategory(cienaCesModuleMIB)\n          tempIom(33)                           cienaCesChassisIomTempHealthSubCategory\n          powerParams(34)                       cienaCesChassisPowerParamsHealthSubCategory\n          powerOutputVoltage(35)                cienaCesChassisPowerOutputVoltageHealthSubCategory\n          tempModem(36)                         cienaCesChassisModemTempHealthSubCategory\n          watermarkModem(37)                    cienaCesChassisModemWatermarkHealthSubCategory\n          fileDescriptor(38)                    cienaCesChassisFileDescriptorHealthSubCategory\n          process(39)                           cienaCesChassisProcessHealthSubCategory\n          thread(40)                            cienaCesChassisThreadHealthSubCategory
%edes        cienaCesChassisHealthStatus This object indicates the current health status of health category and\n          its sub-category being monitored on the chassis.
%edes        cienaCesChassisHealthStatusLast This object indicates the last known health status of health category and\n          its sub-category being monitored on the chassis.
%edes        cienaCesChassisCPUHealthTable Table listing the health information of CPU resources.
%edes        cienaCesChassisCPUHealthEntry An entry in the cienaCesChassisCPUHealthTable.
%edes        cienaCesChassisCPUHealthSubCategory CPU sub-category being monitored.\n                         - 'none' is an enumeration  placeholder 
%edes        cienaCesChassisCPUHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisCPUHealthState Health state of the cpu sub-category being monitored.
%eunits      cienaCesChassisCPUHealthCurrMeasurement percent
%edes        cienaCesChassisCPUHealthCurrMeasurement Current value of the cpu utilization for the slot being monitored.
%eunits      cienaCesChassisCPUHealthMaxMeasurement percent
%edes        cienaCesChassisCPUHealthMaxMeasurement The maximum recorded cpu utilization value for the slot being monitored.
%eunits      cienaCesChassisCPUHealthMaxThreshold percent
%edes        cienaCesChassisCPUHealthMaxThreshold The maximum possible value of cpu utilization.
%edes        cienaCesChassisDatapathHealthTable Table listing the health information of datapath resources.
%edes        cienaCesChassisDatapathHealthEntry An entry in the cienaCesChassisDatapathHealthTable.
%edes        cienaCesChassisDatapathHealthSubCategory The sub-category of the health-item being monitored.\n                        - 'none' is an enumeration  placeholder 
%edes        cienaCesChassisDatapathHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisDatapathHealthState Status of the data-path for the slot being monitored.
%edes        cienaCesChassisControlPlaneHealthTable Table listing the health information of control plane resources.
%edes        cienaCesChassisControlPlaneHealthEntry An entry in the cienaCesChassisControlPlaneHealthTable.
%edes        cienaCesChassisControlPlaneHealthSubCategory The sub-category of the control backplane item being monitored.\n                        - 'none' is an enumeration  placeholder 
%edes        cienaCesChassisControlPlaneHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisControlPlaneHealthState Status of the control backplane item for the slot being monitored.
%eunits      cienaCesChassisControlPlaneHealthCurrMeasurement percent
%edes        cienaCesChassisControlPlaneHealthCurrMeasurement Current value of the control backplane item for the slot being monitored.
%eunits      cienaCesChassisControlPlaneHealthMaxMeasurement percent
%edes        cienaCesChassisControlPlaneHealthMaxMeasurement The maximum recorded value of the control plane item for the slot being monitored.
%eunits      cienaCesChassisControlPlaneHealthMaxThreshold percent
%edes        cienaCesChassisControlPlaneHealthMaxThreshold The maximum possible value for the control plane item.
%edes        cienaCesChassisFabricHealthTable Table listing the health information of fabric resources.
%edes        cienaCesChassisFabricHealthEntry An entry in the cienaCesChassisFabricHealthTable.
%edes        cienaCesChassisFabricHealthSubCategory The sub-category of the fabric being monitored.\n                        - 'none' is an enumeration  placeholder 
%edes        cienaCesChassisFabricHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisFabricHealthState Fabric state of the slot.
%edes        cienaCesChassisSMHealthTable Table listing the health information of SM.
%edes        cienaCesChassisSMHealthEntry An entry in the cienaCesChassisSMHealthTable.
%edes        cienaCesChassisSMHealthSubCategory The sub-category of the SM being monitored.\n                        - 'none' is an enumeration  placeholder 
%edes        cienaCesChassisSMHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisSMHealthState SM state of the slot.
%edes        cienaCesChassisSMTempHealthTable Table listing the health information of SM temperature resources.
%edes        cienaCesChassisSMTempHealthEntry An entry in the cienaCesChassisSMTempHealthTable.
%edes        cienaCesChassisSMTempHealthSubCategory The sub-category of the SM temperature being monitored.\n                        - 'none' is an enumeration  placeholder 
%edes        cienaCesChassisSMTempHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisSMTempHealthState Temperature state of the module temperature sub-category.
%eunits      cienaCesChassisSMTempHealthCurrMeasurement deg C
%edes        cienaCesChassisSMTempHealthCurrMeasurement Current temperature of the SM temperature sub-category.
%eunits      cienaCesChassisSMTempHealthMinMeasurement deg C
%edes        cienaCesChassisSMTempHealthMinMeasurement The minimum recorded temperature reached by the SM temperature sub-category.
%eunits      cienaCesChassisSMTempHealthMaxMeasurement deg C
%edes        cienaCesChassisSMTempHealthMaxMeasurement The maximum recorded temperature reached by the SM temperature sub-category.
%eunits      cienaCesChassisSMTempHealthMinThreshold deg C
%edes        cienaCesChassisSMTempHealthMinThreshold The minimum operational temperature of the SM temperature sub-category.
%eunits      cienaCesChassisSMTempHealthMaxThreshold deg C
%edes        cienaCesChassisSMTempHealthMaxThreshold The maximum operational temperature of the SM temperature sub-category.
%edes        cienaCesChassisSMSamplesHealthTable Table listing the health information of SM.
%edes        cienaCesChassisSMSamplesHealthEntry An entry in the cienaCesChassisSMHealthTable.
%edes        cienaCesChassisSMSamplesHealthSubCategory The sub-category of the SM being monitored.\n                        - 'none' is an enumeration  placeholder\n                        - 'invalid' indicates the number of invalid sensor reads\n                           if the 'cienaCesChassisSMSamplesHealthCurrMeasurement' associated with this instance\n                           is a huge value ,it means something is broken.
%edes        cienaCesChassisSMSamplesHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisSMSamplesHealthState SM state of the slot.
%edes        cienaCesChassisSMSamplesHealthCurrMeasurement SM state of the slot.
%edes        cienaCesChassisSMSamplesHealthMaxMeasurement SM state of the slot.
%edes        cienaCesChassisDiskHealthTable Table listing the health information of disk resources.
%edes        cienaCesChassisDiskHealthEntry An entry in the cienaCesChassisDiskHealthTable.
%edes        cienaCesChassisDiskHealthSubCategory The sub-category of the health-item being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisDiskHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisDiskHealthState Disk sub-category utilization state of the slot.
%eunits      cienaCesChassisDiskHealthCurrMeasurement KB
%edes        cienaCesChassisDiskHealthCurrMeasurement Current value of disk sub-category used for the slot.
%eunits      cienaCesChassisDiskHealthMaxMeasurement KB
%edes        cienaCesChassisDiskHealthMaxMeasurement The maximum recorded value of disk sub-category used by the slot.
%eunits      cienaCesChassisDiskHealthMaxThreshold KB
%edes        cienaCesChassisDiskHealthMaxThreshold The maximum size of the disk sub-category.
%edes        cienaCesChassisModuleTempHealthTable Table listing the health information of module temperature resources.
%edes        cienaCesChassisModuleTempHealthEntry An entry in the cienaCesChassisModuleTempHealthTable.
%edes        cienaCesChassisModuleTempHealthSubCategory The sub-category of the module temperature being monitored.
%edes        cienaCesChassisModuleTempHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisModuleTempHealthState Temperature state of the module temperature sub-category.
%eunits      cienaCesChassisModuleTempHealthCurrMeasurement deg C
%edes        cienaCesChassisModuleTempHealthCurrMeasurement Current temperature of the module temperature sub-category.
%eunits      cienaCesChassisModuleTempHealthMinMeasurement deg C
%edes        cienaCesChassisModuleTempHealthMinMeasurement The minimum recorded temperature reached by the module temperature sub-category.
%eunits      cienaCesChassisModuleTempHealthMaxMeasurement deg C
%edes        cienaCesChassisModuleTempHealthMaxMeasurement The maximum recorded temperature reached by the module temperature sub-category.
%eunits      cienaCesChassisModuleTempHealthMinThreshold deg C
%edes        cienaCesChassisModuleTempHealthMinThreshold This object is obsolete as it does not allow to display\n                         negative threshold values. This is replaced by a new object\n                         cienaCesChassisModuleTempHealthWideRangedMinThreshold.
%eunits      cienaCesChassisModuleTempHealthMaxThreshold deg C
%edes        cienaCesChassisModuleTempHealthMaxThreshold The maximum operational temperature of the module temperature sub-category.
%eunits      cienaCesChassisModuleTempHealthWideRangedMinThreshold deg C
%edes        cienaCesChassisModuleTempHealthWideRangedMinThreshold The minimum operational temperature of the module temperature sub-category.
%edes        cienaCesChassisModuleTempHealthOriginName This object indicates the name of the sensor being monitored
%edes        cienaCesChassisModuleSamplesHealthTable Table listing the health information of SM.
%edes        cienaCesChassisModuleSamplesHealthEntry An entry in the cienaCesChassisModuleSamplesHealthTable.
%edes        cienaCesChassisModuleSamplesHealthSubCategory The sub-category of the module samples being monitored.\n                        - 'none' is an enumeration  placeholder\n                        - 'sensorXXInvalid' indicates the number of invalid sensor reads\n                           if the 'cienaCesChassisModuleSamplesHealthCurrMeasurement' associated with this instance\n                           is a huge value ,it means something is broken.
%edes        cienaCesChassisModuleSamplesHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisModuleSamplesHealthState module samples state of the slot.
%edes        cienaCesChassisModuleSamplesHealthCurrMeasurement Current measurement of module samples state of the slot.
%edes        cienaCesChassisModuleSamplesHealthMaxMeasurement Maximum measurement of module samples of the slot.
%edes        cienaCesChassisFanTrayHealthTable Table listing the health information of fan tray resources.
%edes        cienaCesChassisFanTrayHealthEntry An entry in the cienaCesChassisFanTrayHealthTable.
%edes        cienaCesChassisFanTrayHealthSubCategory The sub-category of the fan tray being monitored.\n                        - 'none' is an enumeration  placeholder         
%edes        cienaCesChassisFanTrayHealthOriginIndex Index of the fan-tray being monitored.
%edes        cienaCesChassisFanTrayHealthState Health Status of the fan-tray being monitored.
%edes        cienaCesChassisFanTraySpeedMismatchHealthTable Table listing the health information of fan tray speed mismatch count.
%edes        cienaCesChassisFanTraySpeedMismatchHealthEntry An entry in the cienaCesChassisFanTraySpeedMisMatchHealthTable.
%edes        cienaCesChassisFanTraySpeedMismatchHealthSubCategory The sub-category of the fan tray speed mismatch monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisFanTraySpeedMismatchHealthOriginIndex Index of the fan-tray being monitored.
%edes        cienaCesChassisFanTraySpeedMismatchHealthState Health Status of the fan-tray being monitored.
%edes        cienaCesChassisFanTraySpeedMismatchHealthCurrMeasurement Current measurement of the fan-tray mismatch speed.
%edes        cienaCesChassisFanTraySpeedMismatchHealthMaxMeasurement  Maximum measurement of the fan-tray mismatch speed.
%edes        cienaCesChassisFanTraySpeedMismatchHealthMaxThreshold Maximum measurement threshold of the fan-tray mismatch speed.
%edes        cienaCesChassisFanSpeedMismatchHealthTable Table listing the health information of fan speed mismatch count.
%edes        cienaCesChassisFanSpeedMismatchHealthEntry An entry in the cienaCesChassisFanSpeedMisMatchHealthTable.
%edes        cienaCesChassisFanSpeedMismatchHealthSubCategory The sub-category of the fan speed mismatch monitored.\n                        - 'none' is an enumeration  placeholder 
%edes        cienaCesChassisFanSpeedMismatchHealthOriginIndex Index of the fan being monitored.
%edes        cienaCesChassisFanSpeedMismatchHealthState Health Status of the fan being monitored.
%edes        cienaCesChassisFanTempHealthTable Table listing the health information of fan temperature resources.
%edes        cienaCesChassisFanTempHealthEntry An entry in the cienaCesChassisHealthFanTempTable.
%edes        cienaCesChassisFanTempHealthSubCategory The sub-category of the fan temperature being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisFanTempHealthOriginIndex Index of the temperature sensor being monitored.
%edes        cienaCesChassisFanTempHealthState Health state of the fan temperature sub-category for the temperature sensor being monitored.
%eunits      cienaCesChassisFanTempHealthCurrMeasurement deg C
%edes        cienaCesChassisFanTempHealthCurrMeasurement Current temperature of fan for the temperature sensor being monitored.
%eunits      cienaCesChassisFanTempHealthMinMeasurement deg C
%edes        cienaCesChassisFanTempHealthMinMeasurement The minimum recorded temperature for the fan for the temperature sensor being monitored.
%eunits      cienaCesChassisFanTempHealthMaxMeasurement deg C
%edes        cienaCesChassisFanTempHealthMaxMeasurement The minimum recorded temperature for the fan for the temperature sensor being monitored.
%eunits      cienaCesChassisFanTempHealthMinThreshold deg C
%edes        cienaCesChassisFanTempHealthMinThreshold The minimum operational temperature for the fan temperature sensor.
%eunits      cienaCesChassisFanTempHealthMaxThreshold deg C
%edes        cienaCesChassisFanTempHealthMaxThreshold The maximum operational temperature for the fan temperature sensor.
%edes        cienaCesChassisFanSamplesHealthTable Table listing the health information of fan samples.
%edes        cienaCesChassisFanSamplesHealthEntry An entry in the cienaCesChassisFanSamplesHealthTable.
%edes        cienaCesChassisFanSamplesHealthSubCategory The sub-category of the fan samples being monitored.\n                        - 'none' is an enumeration  placeholder\n                        - 'invalid' indicates the number of invalid sensor reads\n                           if the 'cienaCesChassisFanSamplesHealthCurrMeasurement' associated with this instance\n                           is a huge value ,it means something is broken.
%edes        cienaCesChassisFanSamplesHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisFanSamplesHealthState fan samples state of the slot.
%edes        cienaCesChassisFanSamplesHealthCurrMeasurement Current measurement of fan samples.
%edes        cienaCesChassisFanSamplesHealthMaxMeasurement Maximum measurement of fan samples.
%edes        cienaCesChassisFanRPMHealthTable Table listing the health information of fan RPM resources.
%edes        cienaCesChassisFanRPMHealthEntry An entry in the cienaCesChassisFanRPMHealthTable.
%edes        cienaCesChassisFanRPMHealthSubCategory The sub-category of the fan RPM item being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisFanRPMHealthOriginIndex Index of the fan being monitored.
%edes        cienaCesChassisFanRPMHealthState Health state of the fan speed being monitored.
%eunits      cienaCesChassisFanRPMHealthCurrMeasurement RPM
%edes        cienaCesChassisFanRPMHealthCurrMeasurement Current speed value of the fan being monitored.
%eunits      cienaCesChassisFanRPMHealthMinMeasurement RPM
%edes        cienaCesChassisFanRPMHealthMinMeasurement For rows with corresponding cienaCesChassisFanRPMHealthSubCategory\n                         index of maxSpeed, this object represents the maximum recorded\n                         speed of the fan indexed by cienaCesChassisFanRPMHealthOriginIndex.\n\n                         For rows with corresponding cienaCesChassisFanRPMHealthSubCategory\n                         index of minSpeed, this object represents the minimum recorded\n                         speed of the fan indexed by cienaCesChassisFanRPMHealthOriginIndex.
%eunits      cienaCesChassisFanRPMHealthMinThreshold RPM
%edes        cienaCesChassisFanRPMHealthMinThreshold For rows with corresponding cienaCesChassisFanRPMHealthSubCategory\n                         index of maxSpeed, this object represents the maximum speed at\n                         which the fan indexed by cienaCesChassisFanRPMHealthOriginIndex\n                         can be operated while maintaining a normal health state.\n\n                         For rows with corresponding cienaCesChassisFanRPMHealthSubCategory\n                         index of minSpeed, this object represents the minimum speed at\n                         which the fan indexed by cienaCesChassisFanRPMHealthOriginIndex\n                         can be operated while maintaining a normal health state.
%edes        cienaCesChassisPowerHealthTable Table listing the health information of power resources.
%edes        cienaCesChassisPowerHealthEntry An entry in the cienaCesChassisPowerHealthTable.
%edes        cienaCesChassisPowerHealthSubCategory The sub-category of the power supply item being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisPowerHealthOriginIndex Index of the power supply being monitored.
%edes        cienaCesChassisPowerHealthState Health state of the power supply being monitored.
%edes        cienaCesChassisFeedPowerHealthTable Table listing the health information of power resources.
%edes        cienaCesChassisFeedPowerHealthEntry An entry in the cienaCesChassisPowerHealthTable.
%edes        cienaCesChassisFeedPowerHealthSubCategory The sub-category of the power supply item being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisFeedPowerHealthOriginIndex Index of the power supply being monitored.
%edes        cienaCesChassisFeedPowerHealthState Health state of the power supply being monitored.
%edes        cienaCesChassisResourceHealthTable Table listing the health information of dataplane resources.
%edes        cienaCesChassisResourceHealthEntry An entry in the cienaCesChassisResourceHealthTable.
%edes        cienaCesChassisResourceHealthSubCategory The sub-category of the dataplane resource being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisResourceHealthState Health state of the dataplane resource being monitored.
%edes        cienaCesChassisResourceHealthCurrMeasurement Current value of the dataplane resource being monitored.
%edes        cienaCesChassisResourceHealthMaxMeasurement The maximum recorded value of the dataplane resource being monitored.
%edes        cienaCesChassisResourceHealthMaxThreshold The maximum possible value for the dataplane resource being monitored.
%edes        cienaCesChassisMemoryHealthTable Table listing the health information of memory resources.
%edes        cienaCesChassisMemoryHealthEntry An entry in the cienaCesChassisMemoryHealthTable.
%edes        cienaCesChassisMemoryHealthSubCategory The sub-category of the memory being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisMemoryHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisMemoryHealthState Health state of the memory sub-category being monitored.
%eunits      cienaCesChassisMemoryHealthCurrMeasurement KB
%edes        cienaCesChassisMemoryHealthCurrMeasurement Current value of the memory sub-category being monitored.
%eunits      cienaCesChassisMemoryHealthMaxMeasurement KB
%edes        cienaCesChassisMemoryHealthMaxMeasurement The maximum recorded value of the memory sub-category being monitored.
%eunits      cienaCesChassisMemoryHealthMaxThreshold KB
%edes        cienaCesChassisMemoryHealthMaxThreshold The maximum possible value of the memory sub-category being monitored.
%edes        cienaCesChassisMACHealthTable Table listing the health information of mac-table resources.
%edes        cienaCesChassisMACHealthEntry An entry in the cienaCesChassisMACHealthTable.
%edes        cienaCesChassisMACHealthSubCategory The sub-category of the MAC table being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisMACHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisMACHealthState Health state of the system MAC table for the slot being monitored.
%edes        cienaCesChassisMACHealthCurrMeasurement Current number of entries in the MAC table for the slot being monitored.
%edes        cienaCesChassisMACHealthMaxMeasurement The maximum recorded number of entries in the MAC table for the slot being monitored.
%edes        cienaCesChassisMACHealthMaxThreshold The maximum possible number of entries in the MAC table for the slot being monitored.
%edes        cienaCesChassisI2CHealthTable Table listing the health information of I2C based resources.
%edes        cienaCesChassisI2CHealthEntry An entry in the cienaCesChassisI2CHealthTable.
%edes        cienaCesChassisI2CHealthSubCategory The sub-category of the I2C driver being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisI2CHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisI2CHealthState Health state of the I2C driver for the slot being monitored.
%edes        cienaCesChassisFlashDriverHealthTable Table listing the health information of flash driver resources.
%edes        cienaCesChassisFlashDriverHealthEntry An entry in the cienaCesChassisFlashDriverHealthTable.
%edes        cienaCesChassisFlashDriverHealthSubCategory The sub-category of the health-item being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisFlashDriverHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisFlashDriverHealthState Health state of the flash driver sub-category for the slot being monitored.
%eunits      cienaCesChassisFlashDriverHealthCurrMeasurement ms
%edes        cienaCesChassisFlashDriverHealthCurrMeasurement Current value of the flash driver sub-category for the slot being monitored.
%eunits      cienaCesChassisFlashDriverHealthMaxMeasurement ms
%edes        cienaCesChassisFlashDriverHealthMaxMeasurement The maximum value of the flash driver sub-category for the slot being monitored.
%edes        cienaCesChassisXcvrHealthTable Table listing the health information of transciever resources.
%edes        cienaCesChassisXcvrHealthEntry An entry in the cienaCesChassisXcvrHealthTable.
%edes        cienaCesChassisXcvrHealthSubCategory The sub-category of the transceiver being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisXcvrHealthOriginIndex Pgid of the transceiver being monitored.
%edes        cienaCesChassisXcvrHealthState Health state of the transceiver sub-category for the pgid being monitored.
%edes        cienaCesChassisXcvrHealthCurrMeasurement Current value of the transceiver sub-category for the pgid being monitored.
%edes        cienaCesChassisXcvrHealthMinMeasurement The minimum recorded value of the transceiver sub-category for the pgid being monitored.
%edes        cienaCesChassisXcvrHealthMaxMeasurement The maximum recorded value of the transceiver sub-category for the pgid being monitored.
%edes        cienaCesChassisXcvrHealthMinThreshold The minimum operational value for the transceiver sub-category for the pgid being monitored.
%edes        cienaCesChassisXcvrHealthMaxThreshold The maximum operational value for the transceiver sub-category for the pgid being monitored.
%edes        cienaCesChassisXcvrHealthUnit The unit applicable to the current, minimum, maximum, minimum threshold and\n                        maximum threshold values of the transceiver sub-category being monitored.
%edes        cienaCesChassisPortLinkHealthTable Table listing the health information of port link based resources.
%edes        cienaCesChassisPortLinkHealthEntry An entry in the cienaCesChassisPortLinkHealthTable.
%edes        cienaCesChassisPortLinkHealthSubCategory The sub-category of the port link being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisPortLinkHealthOriginIndex Pgid of the port being monitored.
%edes        cienaCesChassisPortLinkHealthState Health state of the port link for the port being monitored.
%edes        cienaCesChassisIOMStatusHealthTable Table listing the health information of IOM.
%edes        cienaCesChassisIOMStatusHealthEntry An entry in the cienaCesChassisIOMStatusHealthTable.
%edes        cienaCesChassisIOMStatusHealthSubCategory The sub-category of the IOM being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisIOMStatusHealthOriginIndex IOM slot being monitored.
%edes        cienaCesChassisIOMStatusHealthState Health state of the IOM for the slot being monitored.
%edes        cienaCesChassisLinxStatHealthTable Table listing the health information of linx stats.
%edes        cienaCesChassisLinxStatHealthEntry An entry in the cienaCesChassisLinxStatHealthTable.
%edes        cienaCesChassisLinxStatHealthSubCategory The sub-category of the health-item being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisLinxStatHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisLinxStatHealthState LinxStat sub-category utilization state of the slot.
%edes        cienaCesChassisLinxStatHealthCurrMeasurement Current value of LinxStat sub-category used for the slot.
%edes        cienaCesChassisLinxStatHealthMaxMeasurement The maximum recorded value of LinxStat sub-category used by the slot.
%edes        cienaCesChassisLinxStatHealthMaxThreshold The maximum size of the LinxStat sub-category.
%edes        cienaCesChassisSMFabricHealthTable Table listing the health information of SM fabric resources.
%edes        cienaCesChassisSMFabricHealthEntry An entry in the cienaCesChassisSMFabricHealthTable.
%edes        cienaCesChassisSMFabricHealthSubCategory The sub-category of the SM fabric being monitored.\n                        - 'none' is an enumeration  placeholder 
%edes        cienaCesChassisSMFabricHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisSMFabricHealthState Health state of the SM fabric sub-category.
%edes        cienaCesChassisSPIHealthTable Table listing the health information of SPI based resources.
%edes        cienaCesChassisSPIHealthEntry An entry in the cienaCesChassisSPIHealthTable.
%edes        cienaCesChassisSPIHealthSubCategory The sub-category of the SPI driver being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisSPIHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisSPIHealthState Health state of the SPI driver for the slot being monitored.
%edes        cienaCesChassisUsbFlashHealthTable Table listing the health information of Usb Flash based resources.
%edes        cienaCesChassisUsbFlashHealthEntry An entry in the cienaCesChassisUsbFlashHealthTable.
%edes        cienaCesChassisUsbFlashHealthSubCategory The sub-category of the Usb Flash being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisUsbFlashHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisUsbFlashHealthState Health state of the Usb Flash for the slot being monitored.
%edes        cienaCesChassisIomTempHealthTable Table listing the health information of IOM temperature resources.
%edes        cienaCesChassisIomTempHealthEntry An entry in the cienaCesChassisIomTempHealthTable.
%edes        cienaCesChassisIomTempHealthSubCategory The sub-category of the IOM temperature being monitored.\n                        - 'none' is an enumeration  placeholder 
%edes        cienaCesChassisIomTempHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisIomTempHealthState Temperature state of the IOM temperature sub-category.
%eunits      cienaCesChassisIomTempHealthCurrMeasurement deg C
%edes        cienaCesChassisIomTempHealthCurrMeasurement Current temperature of the IOM temperature sub-category.
%eunits      cienaCesChassisIomTempHealthMinMeasurement deg C
%edes        cienaCesChassisIomTempHealthMinMeasurement The minimum recorded temperature reached by the IOM temperature sub-category.
%eunits      cienaCesChassisIomTempHealthMaxMeasurement deg C
%edes        cienaCesChassisIomTempHealthMaxMeasurement The maximum recorded temperature reached by the IOM temperature sub-category.
%eunits      cienaCesChassisIomTempHealthMinThreshold deg C
%edes        cienaCesChassisIomTempHealthMinThreshold The minimum operational temperature of the IOM temperature sub-category.
%eunits      cienaCesChassisIomTempHealthMaxThreshold deg C
%edes        cienaCesChassisIomTempHealthMaxThreshold The maximum operational temperature of the IOM temperature sub-category.
%edes        cienaCesChassisPowerParamsHealthTable Table listing the health information of Power Supply parameters.
%edes        cienaCesChassisPowerParamsHealthEntry An entry in the cienaCesChassisPowerParamsHealthTable.
%edes        cienaCesChassisPowerParamsHealthSubCategory The sub-category of the Power Params being monitored.\n                        - 'none' is an enumeration  placeholder 
%edes        cienaCesChassisPowerParamsHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisPowerParamsHealthState Current status of the Power Parameters  sub-category.
%edes        cienaCesChassisPowerOutputVoltageHealthTable Table listing the health information of Power Supply output voltage.
%edes        cienaCesChassisPowerOutputVoltageHealthEntry An entry in the cienaCesChassisPowerOutputVoltageHealthTable.
%edes        cienaCesChassisPowerOutputVoltageHealthSubCategory The sub-category of the Power Supply output voltage being monitored.\n                        - 'none' is an enumeration  placeholder 
%edes        cienaCesChassisPowerOutputVoltageHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisPowerOutputVoltageHealthState Voltage state of the Output Voltage sub-category.
%eunits      cienaCesChassisPowerOutputVoltageHealthCurrMeasurement mV
%edes        cienaCesChassisPowerOutputVoltageHealthCurrMeasurement Current voltage of the Output VOltage sub-category.
%eunits      cienaCesChassisPowerOutputVoltageHealthMinMeasurement mV
%edes        cienaCesChassisPowerOutputVoltageHealthMinMeasurement The minimum recorded voltage reached by the Power Supply output voltage sub-category.
%eunits      cienaCesChassisPowerOutputVoltageHealthMaxMeasurement mV
%edes        cienaCesChassisPowerOutputVoltageHealthMaxMeasurement The maximum recorded voltage reached by the Power Supply output voltage sub-category.
%eunits      cienaCesChassisPowerOutputVoltageHealthMinThreshold mV
%edes        cienaCesChassisPowerOutputVoltageHealthMinThreshold The minimum operational voltage of the Power Supply output voltage sub-category.
%eunits      cienaCesChassisPowerOutputVoltageHealthMaxThreshold mV
%edes        cienaCesChassisPowerOutputVoltageHealthMaxThreshold The maximum operational voltage of the Power Supply output voltage sub-category.
%edes        cienaCesChassisModemTempHealthTable Table listing the health information of CSLM modem temperatures.
%edes        cienaCesChassisModemTempHealthEntry An entry in the cienaCesChassisModemTempHealthTable.
%edes        cienaCesChassisModemTempHealthSubCategory The sub-category of the CSLM modem temp being monitored.\n                        - 'none' is an enumeration  placeholder 
%edes        cienaCesChassisModemTempHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisModemTempHealthState Temperature state of the CSLM modem temp sub-category being monitored.
%eunits      cienaCesChassisModemTempHealthCurrMeasurement deg C
%edes        cienaCesChassisModemTempHealthCurrMeasurement Current temperature of the modem temperature sub-category.
%eunits      cienaCesChassisModemTempHealthMinMeasurement deg C
%edes        cienaCesChassisModemTempHealthMinMeasurement The minimum recorded temperature reached by the modem temperature sub-category.
%eunits      cienaCesChassisModemTempHealthMaxMeasurement deg C
%edes        cienaCesChassisModemTempHealthMaxMeasurement The maximum recorded temperature reached by the modem temperature sub-category.
%eunits      cienaCesChassisModemTempHealthMinThreshold deg C
%edes        cienaCesChassisModemTempHealthMinThreshold The minimum operational temperature of the modem temperature sub-category.
%eunits      cienaCesChassisModemTempHealthMaxThreshold deg C
%edes        cienaCesChassisModemTempHealthMaxThreshold The maximum operational temperature of the modem temperature sub-category.
%edes        cienaCesChassisModemWatermarkHealthTable Table listing the health information of CSLM watermarks.
%edes        cienaCesChassisModemWatermarkHealthEntry An entry in the cienaCesChassisModemWatermarkHealthTable.
%edes        cienaCesChassisModemWatermarkHealthSubCategory The sub-category of the CSLM modem watermark being monitored.\n                        - 'none' is an enumeration  placeholder 
%edes        cienaCesChassisModemWatermarkHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisModemWatermarkHealthState Modem watermark state of the slot.
%edes        cienaCesChassisFileDescriptorHealthTable Table listing the health information of file descriptor resources.
%edes        cienaCesChassisFileDescriptorHealthEntry An entry in the cienaCesChassisFileDescriptorHealthTable.
%edes        cienaCesChassisFileDescriptorHealthSubCategory The sub-category of the file descriptors being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisFileDescriptorHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisFileDescriptorHealthState Health state of the file descriptor sub-category being monitored.
%edes        cienaCesChassisFileDescriptorHealthCurrMeasurement Current value of the file descriptor sub-category being monitored.
%edes        cienaCesChassisFileDescriptorHealthMaxMeasurement The maximum recorded value of the file descriptor sub-category being monitored.
%edes        cienaCesChassisFileDescriptorHealthMaxThreshold The maximum possible value of the file descriptor sub-category being monitored.
%edes        cienaCesChassisProcessHealthTable Table listing the health information of process resources.
%edes        cienaCesChassisProcessHealthEntry An entry in the cienaCesChassisProcessHealthTable.
%edes        cienaCesChassisProcessHealthSubCategory The sub-category of the process being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisProcessHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisProcessHealthState Health state of the process sub-category being monitored.
%edes        cienaCesChassisProcessHealthCurrMeasurement Current value of the process sub-category being monitored.
%edes        cienaCesChassisProcessHealthMaxMeasurement The maximum recorded value of the process sub-category being monitored.
%edes        cienaCesChassisProcessHealthMaxThreshold The maximum possible value of the process sub-category being monitored.
%edes        cienaCesChassisThreadHealthTable Table listing the health information of thread resources.
%edes        cienaCesChassisThreadHealthEntry An entry in the cienaCesChassisThreadHealthTable.
%edes        cienaCesChassisThreadHealthSubCategory The sub-category of the thread being monitored.\n                        - 'none' is an enumeration  placeholder
%edes        cienaCesChassisThreadHealthOriginIndex Index of the slot being monitored.
%edes        cienaCesChassisThreadHealthState Health state of the thread sub-category being monitored.
%edes        cienaCesChassisThreadHealthCurrMeasurement Current value of the thread sub-category being monitored.
%edes        cienaCesChassisThreadHealthMaxMeasurement The maximum recorded value of the thread sub-category being monitored.
%edes        cienaCesChassisThreadHealthMaxThreshold The maximum possible value of the thread sub-category being monitored.
%edes        cienaCesChassisIDPEthBaseMac This object indicates the Ethernet Base MAC address stored in the chassis IDP.
%edes        cienaCesChassisIDPEthBaseMacRange This object indicates the Ethernet MAC address range stored in the chassis IDP.
%edes        cienaCesChassisIDPModuleSerialNumber This object indicates the Module Serial Number stored in the chassis IDP.
%edes        cienaCesChassisIDPModelPartNumber This object indicates the Model Part Number stored in the chassis IDP.
%edes        cienaCesChassisIDPModelRevision This object indicates the Module Revision Number stored in the chassis IDP.
%edes        cienaCesChassisIDPProductID This object indicates the Product ID stored in the chassis IDP.
%edes        cienaCesChassisIDPMfgDate This object indicates the Manufactured Date stored in the chassis IDP.
%edes        cienaCesChassisIDPCleiCode This object indicates the CLEI Code stored in the chassis IDP.
%edes        cienaCesChassisIDPBarcode This object indicates the Barcode stored in the chassis IDP.
%edes        cienaCesChassisIDPSWCompat This object indicates the Software Compatibility Number stored in the chassis IDP.
%edes        cienaCesChassisIDPFTC   This object indicates the Functional Test Count stored in the chassis IDP.
%edes        cienaCesChassisIOMState Current state of the IOM.
%edes        cienaCesChassisIOMBuzzerEnable This object represents whether the on-board buzzer will alert to fan tray removal.\n         When true, the on-board buzzer will alert while the fan tray is removed.\n         When false, the on-board buzzer will not alert to fan tray removal.
%edes        cienaCesChassisIOMBuzzerState This object represents the current state of the on-board buzzer.\n         When on, the on-board buzzer is presently alerting.\n         When off, the on-board buzzer is presently silent.\n         Value of notSupported is returned when the IOM is not presently installed.
%edes        cienaCesChassisIOMAlarmOutputTable A list of the alarm output signals and their state, as supported by the IOM.
%edes        cienaCesChassisIOMAlarmOutputEntry An entry in the IOM alarm output table.
%edes        cienaCesChassisIOMAlarmOutputIndex IOM alarm output index, representing a distinct alarm output signal on the IOM.
%edes        cienaCesChassisIOMAlarmOutputDescription Description of the IOM alarm output signal.
%edes        cienaCesChassisIOMAlarmOutputState Current state of the IOM alarm output signal.\n          When on, the system presently is asserting the IOM alarm output signal.\n          When off, the system is not presently asserting the IOM alarm output signal.\n          Value of notSupported is returned when the IOM is not presently installed.
%edes        cienaCesChassisIOMAlarmInputTable A list of the alarm input signals and their state, as supported by the IOM.
%edes        cienaCesChassisIOMAlarmInputEntry An entry in the IOM alarm input table.
%edes        cienaCesChassisIOMAlarmInputIndex IOM alarm input index, representing a distinct alarm input signal on the IOM.
%edes        cienaCesChassisIOMAlarmInputDescription Description of the IOM alarm input signal.
%edes        cienaCesChassisIOMAlarmInputState Current input state of the IOM alarm input signal.\n          When on, the IOM alarm input signal is presently being asserted.\n          When off, the IOM alarm input signal is not presently being asserted.\n          Value of notSupported is returned when the IOM is not presently installed.
%edes        cienaCesChassisIOMName  This object indicates the IOM name.
%edes        cienaCesChassisIOMChassisIndx This object represents the chassis index.
%edes        cienaCesChassisIOMShelfIndx This object represents the chassis shelf index.
%edes        cienaCesChassisIOMSlotIndx This object represents the IOM slot index.
%edes        cienaCesChassisIOMSerialNumber This object represent the IOM serial number.
%edes        cienaCesChassisExternalAlarmInterfaceNumber This object represents the external alarm input interface number.
%edes        cienaCesChassisExternalAlarmDescription This object describes the external alarm input source name.
%edes        cienaCesChassisExternalAlarmTimestamp This object represents the date and time of external alarm trigger.
%edes        cienaCesChassisPlatformType This object indicates the chassis platform type.
%edes        cienaCesChassisPlatformName This object indicates the chassis platform name.
%edes        cienaCesChassisPlatformDesc This object indicates the chassis description.
%edes        cienaCesChassisNumSlots This object indicates the maximum number of slots on the chassis.
%edes        cienaCesChassisPrimaryCtrlSlot This object indicates the slot number of primary control card.
%edes        cienaCesChassisSecondaryCtrlSlot This object indicates the slot number of secondary control card.
%edes        cienaCesChassisNumFanTrays This object indicates the number of fan trays in the chassis.
%edes        cienaCesChassisNumFansPerTray This object indicates the number of fans per tray.
%edes        cienaCesChassisDcPower  This object indicates if DC power is supported for this chassis or not.
%edes        cienaCesChassisRedunPower This object indicates if redundant power is supported for this chassis or not.
%edes        cienaCesChassisPhysicalPortsMax This object indicates the maximum number of ports supported for this chassis.
%edes        cienaCesChassisAggPortsMax This object indicates the maximum aggregated ports supported on this chassis.
%edes        cienaCesChassisVirtualSwitchMax This object indicates the maximum number of virtual switches supported on the chassis.
%edes        cienaCesChassisVirtualInterfaceMax This object indicates the maximum number of virtual interfaces supported on the chassis.
%edes        cienaCesChassisMulticastGrpsMax This object indicates the maximum number of multicast groups supported on the chassis.
%edes        cienaCesChassisRstpDomainsMax This object indicates the maximum number of RSTP domains supported on the chassis.
%edes        cienaCesChassisVirtualInterfacePerVsMax This object indicates the maximum number of virtual interfaces per VS supported on the chassis.
%edes        cienaCesChassisReplicPerPortPerVsMax This object indicates the maximum number of Virtual interfaces\n              per logical port per Vswitch supported on the chassis.
%edes        cienaCesChassisReplicMCPortPerVsMax This object indicates the maximum number of Mcast Virtual Interfaces Per\n              logical port per Vswitch supported on the chassis.
%edes        cienaCesChassisSubPortsMax This object indicates the maximum number of Sub Ports supported on the chassis.
%edes        cienaCesChassisQosFlowsMax This object indicates the maximum number of QoS Flows supported on the chassis.
%edes        cienaCesChassisAccessFlowsMax This object indicates the maximum number of Access Flows supported on the chassis.
%edes        cienaCesChassisCPUSubIntfcsMax This object indicates the maximum number of CPU sub interfaces supported on the chassis.
%edes        cienaCesChassisPBTTunnelGroupsMax This object indicates the maximum number of PBT Tunnel groups supported on the chassis.
%edes        cienaCesChassisPBTEncapTunnelsMax This object indicates the maximum number of PBT Encap Tunnels supported on the chassis.
%edes        cienaCesChassisPBTDecapTunnelsMax This object indicates the maximum number of PBT Decap Tunnels supported on the chassis.
%edes        cienaCesChassisPBTServiceIntfcsMax This object indicates the maximum number of PBT Service Interfaces supported on the chassis.
%edes        cienaCesChassisPBTTransitIntfcsMax This object indicates the maximum number of PBT Transit Interfaces supported on the chassis.
%edes        cienaCesChassisMeterProfilesMax This object indicates the maximum number of Meter Profiles supported on the chassis.
%edes        cienaCesChassisFloodContainersMax This object indicates the maximum number of Flood Containers supported on the chassis.
%edes        cienaCesChassisRCOSProfilesMax This object indicates the maximum number of ResolvedCos Profiles supported on the chassis.
%edes        cienaCesChassisRCOSMappingsMax This object indicates the maximum number of ResolvedCos Mappings supported on the chassis.
%edes        cienaCesChassisFCOSMappingsMax This object indicates the maximum number of FrameCos Mappings supported on the chassis.
%edes        cienaCesChassisShapingProfilesMax This object indicates the maximum number of Shaping Profiles supported on the chassis.
%edes        cienaCesChassisMPLSTunnelGroupsMax This object indicates the maximum number of MPLS tunnel groups supported on the chassis.
%edes        cienaCesChassisMPLSTunnelsPerGroupMax This object indicates the maximum number of MPLS tunnels per MPLS tunnel group\n              supported on the chassis.
%edes        cienaCesChassisMPLSEncapTunnelsMax This object indicates the maximum number of MPLS encap tunnels supported on the chassis.
%edes        cienaCesChassisMPLSDecapTunnelsMax This object indicates the maximum number of MPLS decap tunnels supported on the chassis.
%edes        cienaCesChassisMPLSVCMax This object indicates the maximum number of MPLS virtual-circuits supported on the chassis.
%edes        cienaCesChassisMPLSInterfacesMax This object indicates the maximum number of MPLS interfaces supported on the chassis.
%edes        cienaCesChassisMPLSTransitTunnelsMax This object indicates the maximum number of MPLS transit tunnels supported on the chassis.
%edes        cienaCesChassisRedundancyGroupsMax The maximum number of redundancy groups supported on this machine.
%edes        cienaCesChassisLinksPerRedundancyGroupMax The maximum number of links per redundancy group supported on this machine.
%edes        chassisGlobalGroup      A collection of objects providing information\n                about chassis global attributes.
%edes        chassisPlatformGroup    A collection of objects providing information\n                about chassis platform attributes.
%edes        chassisPowerSupplyGroup A collection of objects providing information\n                about chassis power supply attributes.
%edes        chassisFanGroup         A collection of objects providing information\n                about chassis fans.
%edes        chassisFanTrayGroup     A collection of objects providing information\n                about chassis fans tray.
%edes        chassisFanTempGroup     A collection of objects providing information\n                about chassis fan temperature.
%edes        chassisNotifGroup       A collection of objects providing information\n               about chassis notifications.
%edes        chassisHealthGroup      A collection of objects providing information\n                about chassis health attributes.
%edes        chassisIomStateGroup     A collection of objects providing information about the IOM.
%edes        chassisIomNotifGroup     A collection of notifications that provide information about changes related to the IOM.
%edes        chassisExternalAlarmGroup A collection of objects providing information about external alarms.
%edes        chassisExternalAlarmNotifGroup  A collection of notifications that provide information about changes related to external alarms.
%edes        cienaCesIpMgmtInterfaceTable Table of management IP addresses and their associated attributes.
%edes        cienaCesIpMgmtInterfaceEntry Each entry represents a management interface configuration parameter.
%edes        cienaCesIpMgmtInterfaceIndex Unique identifier of this interface.
%edes        cienaCesIpMgmtInterfaceName The friendly and unique name for the IP interface.
%edes        cienaCesIpMgmtInterfaceOperIpAddr The operational IP address associated with this interface.
%edes        cienaCesIpMgmtInterfaceOperSubnet The operational subnet mask associated with this IP address/interface.
%edes        cienaCesIpMgmtInterfaceAdminState The admin status of each interface. A value of:\n      - enabled(1) indicates that this interface is administratively enabled\n      - disabled(2) indicates that this interface is administratively disabled\n      - shutdown(3) indicates a shutdown state of DCN interface
%edes        cienaCesIpMgmtInterfaceOperState The operational status of each interface. A value of:\n      - enabled(1) indicates that this interface is operationally enabled\n      - disabled(2) indicates that this interface is operationally disabled
%edes        cienaCesIpMgmtInterfaceType The type of management IP interface.
%edes        cienaCesIpMgmtInterfaceVirtualSwitchIndex The virtual switch index associated with this interface (zero if none).
%edes        cienaCesIpMgmtInterfaceParentInterfaceIndex The parent interface index associated with this interface (zero if none).
%edes        cienaCesIpGatewayAddr   The gateway address.
%edes        cienaCesIpDataInterfaceTable Data Interface entry.
%edes        cienaCesIpDataInterfaceEntry Each entry represents a data interface configuration parameter.
%edes        cienaCesIpDataInterfaceIndex Unique index into the table.
%edes        cienaCesIpDataInterfaceName The name for this Data IP interface.
%edes        cienaCesIpDataInterfaceIpAddr IP address associated with this interface.\n\n        Deprecated in lieu of cienaCesIpDataInterfaceInetAddr.
%edes        cienaCesIpDataInterfaceMask The subnet mask associated with this ip address/interface.\n\n        Deprecated in lieu of cienaCesIpDataInterfaceInetAddrPrefixLength.
%edes        cienaCesIpDataInterfaceVsIndex The vIndex associated with this Data IP interface.
%edes        cienaCesIpDataInterfaceType The type of Data IP interface.
%edes        cienaCesIpDataInterfaceIfIndex The unique interface index assigned by INET.
%edes        cienaCesIpDataInterfaceMac MAC address assigned by the device to this Data interface.
%edes        cienaCesIpDataInterfaceIfMtu The size of the largest packet which can be\n           sent/received on the interface, specified in octets.\n           For interfaces that are used for transmitting network\n           datagrams, this is the size of the largest network\n           datagram that can be sent on the interface.
%edes        cienaCesIpDataInterfaceAdminState The Admin State of Data IP interface.
%edes        cienaCesIpDataInterfaceOperState The Oper State of Data IP interface.
%edes        cienaCesIpDataInterfaceIpForwarding The Ip Forwarding State of Data IP interface.
%edes        cienaCesIpDataInterfaceLdpEnable Determines if LDP is enabled on the  Data IP interface.
%edes        cienaCesIpDataInterfaceRsvpEnable Determines if RSVP is enabled on the  Data IP interface.
%edes        cienaCesIpDataInterfaceTunnelDependency Determines if Tunnel entities using the interface.
%edes        cienaCesIpDataInterfaceL2VpnDependency The L2Vpn association of the interface.
%edes        cienaCesIpDataInterfaceOspfEnable The OSPF attachment to the Data interface.
%edes        cienaCesIpDataInterfaceIsisEnable The ISIS attachment to the Data interface.
%edes        cienaCesIpDataInterfaceStaticArpEnable The Static ARP attachment to the Data interface.
%edes        cienaCesIpDataInterfaceVccvDependency The VCCV Profile association to the Data interface.
%edes        cienaCesIpDataInterfacePtpEnable The PTP attachment to the Data interface.
%edes        cienaCesIpDataInterfaceIfNum This represent interface number.
%edes        cienaCesIpDataInterfaceStaticArpDestinationIp The static ARP attachment destination IP address to the data interface.\n                IpAddress value returned is only valid if cienaCesIpDataInterfaceStaticArpEnable\n                is true.
%edes        cienaCesIpDataInterfaceStaticArpDestinationMac The static ARP attachment destination MAC address to the data interface.\n                MacAddress value returned is only valid if cienaCesIpDataInterfaceStaticArpEnable\n                is true.
%edes        cienaCesIpDataInterfaceRole The Role State of the IP Interface. The default role is control-plane, which is the regular\n     MPLS L3 interface. When role is specified as connectivity, it is used for EVC Ping feature.\n     When role is specified as benchmark it is used for RFC 2544 Benchmark feature.\n      When role is specified as devicemgmt it is used for device management.
%edes        cienaCesIpDataInterfaceVrf Vrf name associated to the L3 interfaces.
%edes        cienaCesIpInterfaceL3InterfaceBaseMac The base MAC address for L3 interfaces.
%edes        cienaCesIpDataInterfaceInetTable Table of ip-interface IP addresses and their associated attributes.
%edes        cienaCesIpDataInterfaceInetEntry Each entry represents an ip-interface configuration parameter.
%edes        cienaCesIpDataInterfaceInetIndexAddrType This OID specifies the Inet address type of the OIDs cienaCesIpDataInterfaceInetIndexAddr.\n               When representing:\n               ipv4 : cienaCesIpDataInterfaceInetAddr should be compliant with InetAddressIPv4 from RFC 4001\n               ipv6 : cienaCesIpDataInterfaceInetAddr should be compliant with InetAddressIPv6 from RFC 4001
%edes        cienaCesIpDataInterfaceInetIndexAddr Inet address associated with this interface.\n               This OID should be used in conjuction with cienaCesIpDataInterfaceInetIndexAddrType.\n               This value should be compliant with RFC 4001 InetAddressType.
%edes        cienaCesIpDataInterfaceInetAddrPrefixLength Specifies the address prefix length. This OID should be used in conjuction\n               with cienaCesIpDataInterfaceInetAddrType.\n               This OID should be compliant with RFC 4001 InetAddressPrefixLength.
%edes        cienaCesIpDataInterfaceInetAddrType This OID specifies the Inet address type of the OIDs cienaCesIpDataInterfaceInetAddr and\n               cienaCesIpDataInterfaceInetAddrPrefixLength.\n               When representing:\n               ipv4 : cienaCesIpDataInterfaceInetNotifAddr should be compliant with InetAddressIPv4 from RFC 4001\n               ipv6 : cienaCesIpDataInterfaceInetNotifAddr should be compliant with InetAddressIPv6 from RFC 4001
%edes        cienaCesIpDataInterfaceInetAddr Inet address associated with this interface.\n               This OID should be used in conjuction with cienaCesIpDataInterfaceInetAddrType.\n               This value should be compliant with RFC 4001 InetAddressType.
%edes        cienaCesPortXcvrTable   This table contains descriptions and settings for each of the \n	     physical transceiver devices.
%edes        cienaCesPortXcvrEntry   The transceiver device entry.
%edes        cienaCesPortXcvrId      The ID for the transceiver.
%edes        cienaCesPortXcvrOperState The operational state of the transceiver.
%eunits      cienaCesPortXcvrTemperature celsius
%edes        cienaCesPortXcvrTemperature The temperature of the transceiver.\n         Units are celsius.
%eunits      cienaCesPortXcvrVcc     mV
%edes        cienaCesPortXcvrVcc     The voltage of the transceiver.\n          Units are milli volts
%eunits      cienaCesPortXcvrBias    mA
%edes        cienaCesPortXcvrBias    The bias of the transceiver.\n         Units are milli amps
%eunits      cienaCesPortXcvrRxPower uW
%edes        cienaCesPortXcvrRxPower The measured receive power of the transceiver. \n	     Units are micro watts.
%eunits      cienaCesPortXcvrHighTempAlarmThreshold celsius
%edes        cienaCesPortXcvrHighTempAlarmThreshold Indicates the higher threshold for the temperature alarm.\n         Units are celsius.
%eunits      cienaCesPortXcvrLowTempAlarmThreshold celsius
%edes        cienaCesPortXcvrLowTempAlarmThreshold Indicates the lower threshold for the temperature alarm.\n         Units are celsius.
%eunits      cienaCesPortXcvrHighVccAlarmThreshold mV
%edes        cienaCesPortXcvrHighVccAlarmThreshold Indicates the higher threshold for the voltage alarm.\n         Units are milli volts
%eunits      cienaCesPortXcvrLowVccAlarmThreshold mV
%edes        cienaCesPortXcvrLowVccAlarmThreshold Indicates the lower threshold for the voltage alarm.\n         Units are milli volts
%eunits      cienaCesPortXcvrHighBiasAlarmThreshold mA
%edes        cienaCesPortXcvrHighBiasAlarmThreshold Indicates the higher threshold for the bias alarm.\n         Units are milli amps
%eunits      cienaCesPortXcvrLowBiasAlarmThreshold mA
%edes        cienaCesPortXcvrLowBiasAlarmThreshold Indicates the lower threshold for the bias alarm.\n         Units are milli amps
%eunits      cienaCesPortXcvrHighTxPwAlarmThreshold uW
%edes        cienaCesPortXcvrHighTxPwAlarmThreshold Indicates the higher threshold for the Tx power alarm.\n	     Units are micro watts
%eunits      cienaCesPortXcvrLowTxPwAlarmThreshold uW
%edes        cienaCesPortXcvrLowTxPwAlarmThreshold Indicates the lower threshold for the Tx power alarm.\n	     Units are micro watts.
%eunits      cienaCesPortXcvrHighRxPwAlarmThreshold uW
%edes        cienaCesPortXcvrHighRxPwAlarmThreshold Indicates the higher threshold for the Rx power alarm.\n	     Units are micro watts.
%eunits      cienaCesPortXcvrLowRxPwAlarmThreshold uW
%edes        cienaCesPortXcvrLowRxPwAlarmThreshold Indicates the lower threshold for the Rx power alarm.\n	     Units are micro watts.
%edes        cienaCesPortXcvrNotifChassisIndex Indicates the chassis index for the port used for trap definition.
%edes        cienaCesPortXcvrNotifShelfIndex Indicates the shelf index for the port used for trap definition.
%edes        cienaCesPortXcvrNotifSlotIndex Indicates the slot index for the port used for trap definition.
%edes        cienaCesPortXcvrNotifPortNumber Indicates the port number for the corresponding PGID\n 		used for trap definition.
%edes        cienaCesPortXcvrIdentiferType Type for the transceiver.
%edes        cienaCesPortXcvrExtIdentiferType Extended identifier type represents for this transceiver.
%edes        cienaCesPortXcvrConnectorType Type of connector:\n \n	       	   unknown(1)\n		       sc(2)\n		       fiberChannelStyle1(3)\n		       fiberChannelStyle2(4)\n		       bnc/tnc(5)\n		       coaxialHeader(6)\n		       fiberJack(7)\n		       lc(8)\n		       mt-rj(9)\n		       mu(10)\n		       sg(11)\n		       opticalPitTail(12)\n		       reserved(13..32)\n		       hssdc(33)\n		       copperPitTail(34)\n		       reserved(35..128)\n		       vendorSpecific(129..256)
%edes        cienaCesPortXcvrType    Type of transceiver.
%edes        cienaCesPortXcvrVendorName String containing this transceiver's vendor name.
%edes        cienaCesPortXcvrVendorOUI String containing this transceiver's vendor OUI.
%edes        cienaCesPortXcvrVendorPartNum String containing this transceiver's vendor part number.
%edes        cienaCesPortXcvrRevNum  String containing this tranceiver's part revision number.
%edes        cienaCesPortXcvrSerialNum String containing this tranceiver's part serial number.
%edes        cienaCesPortXcvrMfgDate String containing this transceiver's manufactured date.
%edes        cienaCesPortXcvrWaveLength The wavelength of the transceiver. Units are nano meter.
%edes        cienaCesPortXcvrTxState Indicates whether this transceiver is currently set to transmit.
%edes        cienaCesPortXcvrTxFaultStatus Indicates the fault status of this transceiver.
%edes        cienaCesPortXcvrAdminState The administrative state of the transceiver.
%eunits      cienaCesPortXcvrTxOutputPower uW
%edes        cienaCesPortXcvrTxOutputPower The measured transmitted output power of the transceiver. \n	     Units are micro watts.
%edes        cienaCesPortXcvrFecMode This represents the transceiver's FEC Mode.\n         gfec means generic forward error correction,\n         efec means enhanced forward error correction.
%edes        cienaCesPortXcvrNotifPortName Indicates the port name for the corresponding PGID\n		used for trap definition.
%edes        cienaCesPortXcvrEventType Indicates if the transceiver specified by the ciena54XXPortXcvrId has come up, \n	     gone down or has been selected.
%edes        cienaCesPortXcvrErrorType Indicates if the transceiver specified by the cienaCesPortXcvrId is faulted because of \n	     checksum failure or optical fault. This object only makes sense if the transceiver has \n	     been detected faulted; otherwise it returns 'none'.
%edes        cienaCesLdpAdminStatus  Globally enable or disable LDP.
%edes        cienaCesLdpOperStatus   Current operational state of LDP.
%eunits      cienaCesLdpHelloHoldTime seconds
%edes        cienaCesLdpHelloHoldTime The 16-bit integer value which is the proposed\n        global hello hold timer (in seconds) for LDP.\n\n        An LSR maintains a record of Hellos received\n        from potential peers. This object represents\n        the Hold Time in the Common Hello Parameters TLV of\n        the Hello Message.\n\n        A value of 65535 means infinite (i.e., wait forever).\n\n        All other values represent the amount of time in\n        seconds to wait for a Hello Message. Setting the\n        hold time to a value smaller than 15 is not\n        recommended, although not forbidden according\n        to RFC3036.
%eunits      cienaCesLdpKeepAliveHoldTime seconds
%edes        cienaCesLdpKeepAliveHoldTime The 16-bit integer value which is the proposed global\n        keep alive hold timer for LDP.
%edes        cienaCesLdpGRAdminStatus LDP Graceful restart Admin status (Enabled/Disabled).
%edes        cienaCesLdpGRMode       LDP Graceful restart Operational status.
%eunits      cienaCesLdpReconnectTime milliseconds
%edes        cienaCesLdpReconnectTime The period of time that the local node takes to \n        restart LDP and  bring up the LDP sessions.This is \n        advertised to neighbors in the FT Session TLV\n        in Initialization messages.\n\n        The value chosen should be large enough for LDP to be\n        terminated and restarted.\n\n        For devices which only act as the Helper node, this timer \n        is unused and will return value 0.
%eunits      cienaCesLdpRecoveryTime milliseconds
%edes        cienaCesLdpRecoveryTime The period of time that the local node is willing to \n        retain its MPLS forwarding state, if any,that it \n        preserved across the restart.\n\n        This field is used to calculate the Recovery Time for both\n        Control Plane and Control Channel restarts.  It is used to\n        calculate the Recovery Time advertised in the FT Session\n        TLV in the Initialization message sent to the neighbor.\n\n        For devices which only act as the Helper node, this timer \n        is unused and will return value 0.
%eunits      cienaCesLdpMaxPeerReconnect milliseconds
%edes        cienaCesLdpMaxPeerReconnect The maximum period of time that LDP should wait for a \n        restart capable neighbor to restore an LDP session.\n\n        LDP waits for the minimum of this time and the Reconnect\n        Timeout advertised in the FT Session TLV in the\n        Initialization message from the neighbor.
%eunits      cienaCesLdpMaxPeerRecovery milliseconds
%edes        cienaCesLdpMaxPeerRecovery The maximum period of time that LDP should wait for a \n        restart capable neighbor to refresh Label Mappings\n        previously received from that neighbor before deleting \n        the stale bindings.\n\n        LDP waits for the minimum of this time and the Recovery\n        Time advertised in the FT Session TLV in the\n        Initialization message from the neighbor.\n\n        This value is not used to set the Recovery Time advertised\n        in the FT Session TLV in the Initialization message sent\n        to the neighbor.
%edes        cienaCesLdpSessionTable A table of Sessions between the LDP Entities\n        and LDP Peers. Each row in this table\n        represents a single session.
%edes        cienaCesLdpSessionEntry An entry in this table represents information on a\n        single session between an LDP Entity and LDP Peer.\n        The information contained in a row is read-only.\n\n        Note: The Path Vector Limit for the\n        Session is the value that is configured in\n        the corresponding mplsLdpEntityEntry. The\n        Peer's Path Vector Limit is in the\n        mplsLdpPeerPathVectorLimit object in the\n        mplsLdpPeerTable.\n\n        Values that may differ from those configured are\n        noted in the objects of this table, the\n        mplsLdpAtmSessionTable and the\n        mplsLdpFrameRelaySessionTable. A value \n        differs if it was negotiated between the\n        Entity and the Peer.  Values may or may not\n        be negotiated.  For example, if the values\n        are the same then no negotiation takes place.\n        If they are negotiated, then they may differ.
%edes        cienaCesLdpEntityLdpId  The LDP identifier. The first four octets encode an IP\n         address assigned to the LSR, and the last two octets\n         identify a specific label space within the LSR.
%eref        cienaCesLdpEntityLdpId  RFC3036, LDP Specification, Section on LDP Identifiers.
%edes        cienaCesLdpEntityIndex  This index is used as a secondary index to uniquely\n        identify this row.  \n\n        A secondary index (this object) is meaningful to some\n        but not all, LDP implementations. For example,\n        an LDP implementation that uses PPP would\n        use this index to differentiate PPP sub-links.\n\n        Another way to use this index is to assign it the\n        value of ifIndex.
%edes        cienaCesLdpPeerLdpId    The LDP identifier of this LDP Peer.
%edes        cienaCesLdpSessionConfiguredHoldTime The locally configured keepalive hold time for this\n        session, in seconds. Note that the value of this field\n        reflects configuration at the time of session\n        initialization; this may differ from the configuration\n        that would apply to a new session, if configuration has\n        changed since this session was initialized.
%edes        cienaCesLdpSessionPeerHoldTime The peer's advertised keepalive hold time for this session\n        in seconds. Note that the value of this field reflects\n        the peer's configuration at the time of session\n        initialization; this may differ from the configuration\n        that would apply to a new session, if the peer's\n        configuration has changed since this session was\n        initialized.
%edes        cienaCesLdpSessionHoldTimeInUse The keepalive hold time that is currently in use for this\n        session, in seconds.
%edes        cienaCesLdpPeerType     The peer type value is an integer.
%edes        cienaCesLdpHelloAdjacencyTable A table of Hello Adjacencies for Sessions.
%edes        cienaCesLdpHelloAdjacencyEntry Each row represents a single LDP Hello Adjacency.\n        An LDP Session can have one or more Hello\n        Adjacencies.
%edes        cienaCesLdpHelloAdjacencyIndex An identifier for this specific adjacency.
%edes        cienaCesLdpHelloAdjacencyConfiguredHoldTime The locally configured hello hold time for this adjacency,\n        in seconds.
%edes        cienaCesLdpHelloAdjacencyPeerHoldTime The peer's advertised hello hold time for this adjacency,\n        in seconds.
%edes        cienaCesLdpIfIpAddr     Interface IP address.
%edes        cienaCesMplsInSegmentTable This table contains a description of the incoming MPLS\n        segments (labels) to an LSR and their associated parameters.\n        The index for this table is mplsInSegmentIndex.\n        The index structure of this table is specifically designed\n        to handle many different MPLS implementations that manage\n        their labels both in a distributed and centralized manner.\n        The table is also designed to handle existing MPLS labels\n        as defined in RFC3031 as well as longer ones that may\n        be necessary in the future.\n\n        In cases where the label cannot fit into the\n        mplsInSegmentLabel object, the mplsInSegmentLabelPtr\n        will indicate this by being set to the first accessible\n        column in the appropriate extension table's row.\n        In this case an additional table MUST\n        be provided and MUST be indexed by at least the indexes\n        used by this table. In all other cases when the label is\n        represented within the mplsInSegmentLabel object, the\n        mplsInSegmentLabelPtr MUST be set to 0.0. Due to the\n        fact that MPLS labels may not exceed 24 bits, the\n        mplsInSegmentLabelPtr object is only a provision for\n        future-proofing the MIB module. Thus, the definition\n        of any extension tables is beyond the scope of this\n        MIB module.
%edes        cienaCesMplsInSegmentEntry An entry in this table represents one incoming\n        segment as is represented in an LSR's LFIB.\n        An entry can be created by a network\n        administrator or an SNMP agent, or an MPLS signaling\n        protocol.\n\n        The value of mplsInSegmentRowStatus cannot be active(1)\n        unless the ifTable entry corresponding to\n        mplsInSegmentInterface exists.  An entry in this table\n        must match any incoming packets, and indicates an\n        instance of mplsXCEntry based on which forwarding\n        and/or switching actions are taken.
%edes        cienaCesMplsInSegmentIndex The index for this in-segment. The\n        string containing the single octet 0x00\n        MUST not be used as an index.
%edes        cienaCesMplsInSegmentLabel If the corresponding instance of mplsInSegmentLabelPtr is\n      zeroDotZero then this object MUST contain the incoming label\n      associated with this in-segment. If not this object SHOULD\n      be zero and MUST be ignored.
%edes        cienaCesMplsInSegmentNPop The number of labels to pop from the incoming\n        packet.  Normally only the top label is popped from\n        the packet and used for all switching decisions for\n        that packet.  This is indicated by setting this\n        object to the default value of 1. If an LSR supports\n        popping of more than one label, this object MUST\n        be set to that number. This object cannot be modified\n        if mplsInSegmentRowStatus is active(1).
%edes        cienaCesMplsInSegmentInterface This object represents the\n        interface index for the incoming MPLS interface.  A\n        value of zero represents all interfaces participating in\n        the per-platform label space.  This may only be used\n        in cases where the incoming interface and label\n        are associated with the same mplsXCEntry. Specifically,\n        given a label and any incoming interface pair from the\n        per-platform label space, the outgoing label/interface\n        mapping remains the same. If this is not the case,\n        then individual entries MUST exist that\n\n        can then be mapped to unique mplsXCEntries.
%edes        cienaCesMplsInSegmentAddrFamily The IANA address family [IANAFamily] of packets\n        received on this segment, which is used at an egress\n        LSR to deliver them to the appropriate layer 3 entity.\n        A value of other(0) indicates that the family type is\n        either unknown or undefined; this SHOULD NOT be used\n        at an egress LSR. This object cannot be\n        modified if mplsInSegmentRowStatus is active(1).
%edes        cienaCesMplsInSegmentXCIndex Index into mplsXCTable which identifies which cross-\n        connect entry this segment is part of.  The string\n        containing the single octet 0x00 indicates that this\n        entry is not referred to by any cross-connect entry.\n        When a cross-connect entry is created which this\n        in-segment is a part of, this object is automatically\n        updated to reflect the value of mplsXCIndex of that\n        cross-connect entry.
%edes        cienaCesMplsInSegmentRowStatus This variable is used to create, modify, and/or\n        delete a row in this table. When a row in this\n        table has a row in the active(1) state, no\n        objects in this row can be modified except the\n        mplsInSegmentRowStatus and mplsInSegmentStorageType.
%edes        cienaCesMplsInSegmentStorageType This variable indicates the storage type for this\n        object. The agent MUST ensure that this object's\n        value remains consistent with the associated\n        mplsXCEntry. Conceptual rows having the value\n        'permanent' need not allow write-access to any\n        columnar objects in the row.
%edes        cienaCesMplsOutSegmentTable This table contains a representation of the outgoing\n        segments from an LSR.
%edes        cienaCesMplsOutSegmentEntry An entry in this table represents one outgoing\n\n        segment.  An entry can be created by a network\n        administrator, an SNMP agent, or an MPLS signaling\n        protocol.  The object mplsOutSegmentOwner indicates\n        the creator of this entry. The value of\n        mplsOutSegmentRowStatus cannot be active(1) unless\n        the ifTable entry corresponding to\n        mplsOutSegmentInterface exists.\n\n        Note that the indexing of this table uses a single,\n        arbitrary index (mplsOutSegmentIndex) to indicate\n        which out-segment (i.e.: label) is being switched to\n        from which in-segment (i.e: label) or in-segments.\n        This is necessary because it is possible to have an\n        equal-cost multi-path situation where two identical\n        out-going labels are assigned to the same\n        cross-connect (i.e.: they go to two different neighboring\n        LSRs); thus, requiring two out-segments. In order to\n        preserve the uniqueness of the references\n        by the mplsXCEntry, an arbitrary integer must be used as\n        the index for this table.
%edes        cienaCesMplsOutSegmentIndex This value contains a unique index for this row.\n        While a value of a string containing the single\n        octet 0x00 is not valid as an index for entries\n        in this table, it can be supplied as a valid value\n        to index the mplsXCTable to represent entries for\n\n        which no out-segment has been configured or\n        exists.
%edes        cienaCesMplsOutSegmentInterface This value must contain the interface index of the\n        outgoing interface. This object cannot be modified\n        if mplsOutSegmentRowStatus is active(1). The\n        mplsOutSegmentRowStatus cannot be set to active(1)\n        until this object is set to a value corresponding to\n        a valid ifEntry.
%edes        cienaCesMplsOutSegmentPushTopLabel This value indicates whether or not a top label\n        should be pushed onto the outgoing packet's label\n        stack.  The value of this variable MUST be set to\n        true(1) if the outgoing interface does not support\n        pop-and-go (and no label stack remains). For example,\n        on ATM interface, or if the segment represents a\n        tunnel origination.  Note that it is considered\n        an error in the case that mplsOutSegmentPushTopLabel\n        is set to false, but the cross-connect entry which\n        refers to this out-segment has a non-zero\n        mplsLabelStackIndex.  The LSR MUST ensure that this\n        situation does not happen. This object cannot be\n        modified if mplsOutSegmentRowStatus is active(1).
%edes        cienaCesMplsOutSegmentTopLabel If mplsOutSegmentPushTopLabel is true then this\n        represents the label that should be pushed onto the\n        top of the outgoing packet's label stack. Otherwise\n        this value SHOULD be set to 0 by the management\n        station and MUST be ignored by the agent. This\n\n        object cannot be modified if mplsOutSegmentRowStatus\n        is active(1).
%edes        cienaCesMplsOutSegmentNextHopAddrType Indicates the next hop Internet address type.\n        Only values unknown(0), ipv4(1) or ipv6(2)\n        have to be supported.\n\n        A value of unknown(0) is allowed only when\n        the outgoing interface is of type point-to-point.\n        If any other unsupported values are attempted in a set\n        operation, the agent MUST return an inconsistentValue\n        error.
%edes        cienaCesMplsOutSegmentNextHopAddr The internet address of the next hop. The type of\n        this address is determined by the value of the\n        mplslOutSegmentNextHopAddrType object.\n\n        This object cannot be modified if\n\n        mplsOutSegmentRowStatus is active(1).
%edes        cienaCesMplsOutSegmentXCIndex Index into mplsXCTable which identifies which cross-\n        connect entry this segment is part of.  A value of\n        the string containing the single octet 0x00\n        indicates that this entry is not referred\n        to by any cross-connect entry.  When a cross-connect\n        entry is created which this out-segment is a part of,\n        this object MUST be updated by the agent to reflect\n        the value of mplsXCIndex of that cross-connect\n        entry.
%edes        cienaCesMplsOutSegmentRowStatus For creating, modifying, and deleting this row.\n        When a row in this table has a row in the active(1)\n        state, no objects in this row can be modified\n        except the mplsOutSegmentRowStatus or\n        mplsOutSegmentStorageType.
%edes        cienaCesMplsOutSegmentStorageType This variable indicates the storage type for this\n        object. The agent MUST ensure that this object's value\n        remains consistent with the associated mplsXCEntry.\n        Conceptual rows having the value 'permanent'\n        need not allow write-access to any columnar\n        objects in the row.
%edes        cienaCesMplsOutSegmentType This variable indicates the type of out segment\n        which can be any of the following type\n        primary(1), LFA(2), RLFA(3).
%edes        cienaCesMplsXCTable     This table specifies information for switching\n        between LSP segments.  It supports point-to-point,\n        point-to-multipoint and multipoint-to-point\n        connections.  mplsLabelStackTable specifies the\n        label stack information for a cross-connect LSR and\n        is referred to from mplsXCTable.
%edes        cienaCesMplsXCEntry     A row in this table represents one cross-connect\n        entry.  It is indexed by the following objects:\n\n        - cross-connect index mplsXCIndex that uniquely\n          identifies a group of cross-connect entries\n\n        - in-segment index, mplsXCInSegmentIndex\n\n        - out-segment index, mplsXCOutSegmentIndex
%edes        cienaCesMplsXCIndex     Primary index for the conceptual row identifying a\n        group of cross-connect segments. The string\n        containing a single octet 0x00 is an invalid index.
%edes        cienaCesMplsXCInSegmentIndex Incoming label index.\n        If this object is set to the string containing\n        a single octet 0x00, this indicates a special\n        case outlined in the table's description above.\n        In this case no corresponding mplsInSegmentEntry\n        shall exist.
%edes        cienaCesMplsXCOutSegmentIndex Index of out-segment for LSPs not terminating on\n        this LSR if not set to the string containing the\n        single octet 0x00. If the segment identified by this\n        entry is terminating, then this object MUST be set to\n        the string containing a single octet 0x00 to indicate\n        that no corresponding mplsOutSegmentEntry shall\n        exist.
%edes        cienaCesMplsXCLabelStackIndex Primary index into mplsLabelStackTable identifying a\n        stack of labels to be pushed beneath the top label.\n        Note that the top label identified by the out-\n        segment ensures that all the components of a\n        multipoint-to-point connection have the same\n        outgoing label. A value of the string containing the\n        single octet 0x00 indicates that no labels are to\n        be stacked beneath the top label.\n        This object cannot be modified if mplsXCRowStatus is\n        active(1).
%edes        cienaCesMplsXCRowStatus For creating, modifying, and deleting this row.\n        When a row in this table has a row in the active(1)\n        state, no objects in this row except this object\n        and the mplsXCStorageType can be modified. 
%edes        cienaCesMplsXCStorageType This variable indicates the storage type for this\n        object. The agent MUST ensure that the associated in\n        and out segments also have the same StorageType value\n        and are restored consistently upon system restart.\n        This value SHOULD be set to permanent(4) if created\n        as a result of a static LSP configuration.\n\n        Conceptual rows having the value 'permanent'\n        need not allow write-access to any columnar\n        objects in the row.
%edes        cienaCesMplsXCAdminStatus The desired operational status of this segment.
%edes        cienaCesMplsXCOperStatus The actual operational status of this cross-\n        connect.
%edes        cienaCesMplsXcEntryState This object represent that the current LSP is \n        active or in Standby
%edes        cienaCesMplsInSegmentLdpLspTable A table of LDP LSP's which\n        map to the mplsInSegmentTable in the\n        MPLS-LSR-STD-MIB module.
%edes        cienaCesMplsInSegmentLdpLspEntry An entry in this table represents information\n        on a single LDP LSP which is represented by\n        a session's index triple (mplsLdpEntityLdpId,\n        mplsLdpEntityIndex, mplsLdpPeerLdpId) AND the\n        index for the mplsInSegmentTable\n        (mplsInSegmentLdpLspLabelIndex) from the\n        MPLS-LSR-STD-MIB.\n\n        The information contained in a row is read-only.
%edes        cienaCesMplsInSegmentLdpLspIndex This contains the same value as the\n        mplsInSegmentIndex in the\n        MPLS-LSR-STD-MIB's mplsInSegmentTable.
%edes        cienaCesMplsInSegmentLdpLspLabelType The Layer 2 Label Type.
%edes        cienaCesMplsInSegmentLdpLspType The type of LSP connection.
%edes        cienaCesmplsOutSegmentLdpLspTable A table of LDP LSP's which\n        map to the mplsOutSegmentTable in the\n        MPLS-LSR-STD-MIB.
%edes        cienaCesMplsOutSegmentLdpLspEntry An entry in this table represents information\n        on a single LDP LSP which is represented by\n        a session's index triple (mplsLdpEntityLdpId,\n        mplsLdpEntityIndex, mplsLdpPeerLdpId) AND the\n        index (mplsOutSegmentLdpLspIndex)\n        for the mplsOutSegmentTable.\n\n       The information contained in a row is read-only.
%edes        cienaCesMplsOutSegmentLdpLspIndex This contains the same value as the\n        mplsOutSegmentIndex in the\n        MPLS-LSR-STD-MIB's mplsOutSegmentTable.
%edes        cienaCesMplsOutSegmentLdpLspLabelType The Layer 2 Label Type.
%edes        cienaCesMplsOutSegmentLdpLspType The type of LSP connection.
%edes        cienaCesmplsFecTable    This table represents the FEC\n        (Forwarding Equivalence Class)\n        Information associated with an LSP.
%edes        cienaCesMplsFecEntry    Each row represents a single FEC Element.
%edes        cienaCesMplsFecIndex    The index which uniquely identifies this entry.
%edes        cienaCesMplsFecType     The type of the FEC.  If the value of this object\n        is 'prefix(1)' then the FEC type described by this\n        row is an address prefix.\n\n        If the value of this object is 'hostAddress(2)' then\n        the FEC type described by this row is a host address.
%edes        cienaCesMplsFecAddrType The value of this object is the type of the\n        Internet address.  The value of this object,\n        decides how the value of the mplsFecAddr object\n        is interpreted.
%edes        cienaCesMplsFecAddr     The value of this object is interpreted based\n        on the value of the 'mplsFecAddrType' object.\n        This address is then further interpretted as\n        an being used with the address prefix,\n        or as the host address.  This further interpretation\n        is indicated by the 'mplsFecType' object.\n        In other words, the FEC element is populated\n        according to the Prefix FEC Element value encoding, or\n        the Host Address FEC Element encoding.
%edes        cienaCesMplsFecAddrPrefixLength If the value of the 'mplsFecType' is 'hostAddress(2)'\n        then this object is undefined.\n        If the value of 'mplsFecType' is 'prefix(1)'\n        then the value of this object is the length in\n        bits of the address prefix represented by\n        'mplsFecAddr', or zero.  If the value of this\n        object is zero, this indicates that the\n        prefix matches all addresses.  In this case the\n        address prefix MUST also be zero (i.e., 'mplsFecAddr'\n        should have the value of zero.)
%edes        cienaCesMplsFecStorageType The storage type for this conceptual row.\n        Conceptual rows having the value 'permanent(4)'\n        need not allow write-access to any columnar\n        objects in the row.
%edes        cienaCesMplsFecRowStatus The status of this conceptual row.  If the value of this\n        object is 'active(1)', then none of the writable objects\n        of this entry can be modified, except to set this object\n        to 'destroy(6)'.\n\n        NOTE: if this row is being referenced by any entry in\n        the mplsLdpLspFecTable, then a request to destroy\n        this row, will result in an inconsistentValue error.
%edes        cienaCesmplsLdpLspFecTable A table which shows the relationship between\n        LDP LSPs and FECs.  Each row represents\n        a single LDP LSP to FEC association.
%edes        cienaCesMplsLdpLspFecEntry An entry represents a LDP LSP\n        to FEC association.
%edes        cienaCesMplsLdpLspFecSegment If the value is inSegment(1), then this\n        indicates that the following index,\n        mplsLdpLspFecSegmentIndex, contains the same\n        value as the mplsInSegmentLdpLspIndex.\n        Otherwise, if the value of this object is\n        outSegment(2),  then this\n        indicates that following index,\n        mplsLdpLspFecSegmentIndex, contains the same\n        value as the mplsOutSegmentLdpLspIndex.
%edes        cienaCesMplsLdpLspFecSegmentIndex This index is interpretted by using the value\n        of the mplsLdpLspFecSegment.\n        If the mplsLdpLspFecSegment is inSegment(1),\n        then this index has the same value as\n        mplsInSegmentLdpLspIndex.\n        If the mplsLdpLspFecSegment is outSegment(2),\n        then this index has the same value as\n        mplsOutSegmentLdpLspIndex.
%edes        cienaCesMplsLdpLspFecIndex This index identifies the FEC entry in the\n        mplsFecTable associated with this session.\n        In other words, the value of this index\n        is the same as the value of the mplsFecIndex\n        that denotes the FEC associated with this\n        Session.
%edes        cienaCesMplsLdpLspFecStorageType The storage type for this conceptual row.\n        Conceptual rows having the value 'permanent(4)'\n        need not allow write-access to any columnar\n        objects in the row.
%edes        cienaCesMplsLdpLspFecRowStatus The status of this conceptual row.  If the\n        value of this object is 'active(1)', then\n        none of the writable objects of this entry\n        can be modified.\n        The Agent should delete this row when\n        the session ceases to exist.  If an\n        operator wants to associate the session with\n        a different FEC, the recommended\n        procedure is (as described in detail in the section\n        entitled, 'Changing Values After Session\n        Establishment', and again described in the\n        DESCRIPTION clause of the\n        mplsLdpEntityAdminStatus object)\n        is to set the mplsLdpEntityAdminStatus to\n        down, thereby explicitly causing a session\n        to be torn down. This will also\n        cause this entry to be deleted.\n\n        Then, set the mplsLdpEntityAdminStatus\n        to enable which enables a new session to be initiated.\n        Once the session is initiated, an entry may be\n        added to this table to associate the new session\n        with a FEC.
%edes        cienaCesBfdSessionTable The (conceptual) table listing the configuration \n            parameters for the BFD session table.
%edes        cienaCesBfdSessionEntry An entry (conceptual row) in the BFD session table.
%edes        cienaCesBfdSessionIndex A unique identifier for BFD Session entry.
%edes        cienaCesBfdSessionName  This mib object specifies the BFD session name.
%edes        cienaCesBfdSessionAdminState This object specifies the admin state of BFD Session.
%edes        cienaCesBfdSessionOperState This object specifies the operational state of BFD Session.
%edes        cienaCesBfdSessionProfileIndex This mib object specifies the BFD Profile Index for the Session.
%edes        cienaCesBfdDampSessionAdminState This mib object specifies the BFD dampening admin state for the session.
%edes        cienaCesBfdDampSessionOperState This mib object specifies the BFD dampening operational state for the session.
%edes        cienaCesBfdDampSessionProfileIndex This mib object specifies the BFD dampening profile index for the session.\n              This object corresponds to the table row in cienaCesBfdDampProfileTable \n              with cienaCesBfdDampProfileIndex 
%edes        cienaCesBfdNegotiatedTxInterval This mib object specifies the BFD negotiated transmit time interval for the session.
%edes        cienaCesBfdNegotiatedRxInterval This mib object specifies the BFD negotiated receive time interval for the session.
%edes        cienaCesBfdDetectionTime This mib object specifies the BFD detection time for the session.
%edes        cienaCesBfdProfileTable The BFD Profile Table.
%edes        cienaCesBfdProfileEntry An entry (conceptual row) in the cienaCesBfdProfileTable.
%edes        cienaCesBfdProfileIndex A unique identifier for BFD Profile entry.
%edes        cienaCesBfdProfileName  This mib object specifies the BFD Profile name.
%edes        cienaCesBfdTransmitInterval This mib object specifies the BFD Transmit Interval in msec.\n              Marking this object deprecated as new object cienaCesBfdDesiredMinTxInterval\n              has been added that provides the transmit interval in microseconds.
%edes        cienaCesBfdReceiveInterval This mib object specifies the BFD Receive Interval in msec.\n              Marking this object deprecated as new object cienaCesBfdReqMinRxInterval\n              has been added that provides the receive interval in microseconds.
%edes        cienaCesBfdRole         This mib object specifies the BFD Role.
%edes        cienaCesBfdLspGachType  This mib object specifies the BFD LSP Gach Type. Reference RFC 5586
%edes        cienaCesBfdDetectMultiplier This mib object specifies the BFD Detect Multiplier.
%edes        cienaCesBfdUseCount     Number of sessions using BFD Profile.
%edes        cienaCesBfdDesiredMinTxInterval This mib object specifies the BFD Transmit Interval in microseconds.
%edes        cienaCesBfdReqMinRxInterval This mib object specifies the BFD Receive Interval in microseconds.
%edes        cienaCesBfdDampProfileTable The BFD dampening Profile Table.
%edes        cienaCesBfdDampProfileEntry An entry in the cienaCesBfdDampProfileTable.
%edes        cienaCesBfdDampProfileIndex A unique identifier for BFD dampening profile entry.
%edes        cienaCesBfdDampProfileName This mib object specifies the BFD dampening profile name.
%edes        cienaCesBfdDampSuppressThreshold This mib object specifies the BFD dampening suppress threshold\n              above which bfd client notification will be suppressed.
%edes        cienaCesBfdDampReuseThreshold This mib object specifies the BFD dampening reuse threshold\n              below which bfd client notification will be re-enabled.
%edes        cienaCesBfdDampMaxSupressDuration This mib object specifies the BFD dampening max suppress time\n              in miliseconds. Penalty will reset after max suppress time expires.
%edes        cienaCesBfdDampDecayHalfLife This mib object specifies the BFD dampening decay half life in\n              miliseconds. Penalty will be half after decay half life expires.
%edes        cienaCesBfdDampMode     This mib object specifies the BFD dampening mode.
%edes        cienaCesBfdDampUseCount Number of sessions using BFD dampening profile.
%edes        cienaCesBfdDampSessionTable The table listing the dampening information\n              for a given BFD dampening enabled session.
%edes        cienaCesBfdDampSessionEntry An entry in the BFD dampening session table.
%edes        cienaCesBfdDampSessionName This object indicates BFD session name.
%edes        cienaCesBfdDampSessionType This object indicates BFD session type.
%edes        cienaCesBfdDampSessionServiceName This object indicates BFD session service.
%edes        cienaCesBfdDampSessionState This object indicates the dampening state of a BFD session.
%edes        cienaCesBfdDampSessionSuppressState This object indicates the suppress state of a BFD session.
%edes        cienaCesBfdDampSessionSuppressReason This object indicates the Last suppress reason of a BFD session.
%edes        cienaCesSyncAdminState  Globally enable/disable Sync
%edes        cienaCesSyncOptionType  Indication of which set of SSM values being used.  Option 1 is\n         for International standard and Option 2 is for North American.
%edes        cienaCesSyncRevertiveMode Revertive mode.
%edes        cienaCesSyncWaitToRestoreTimer User configured timer for a timing reference source to wait\n         before transitioning from bad to good clock signal.
%edes        cienaCesSyncInputProtectionGroupTable A table of protection groups for input timing reference.
%edes        cienaCesSyncInputProtectionGroupEntry An entry in this table represents information on a protection\n         group for input timing reference
%edes        cienaCesInputPGEntityId The unique identifier of this input protection group.
%edes        cienaCesInputPGEntityName The unique name of this input protection group.
%edes        cienaCesInputPGPreferredReference Preferred timing reference source, configured by users.
%edes        cienaCesInputPGSelectedReference System selected timing reference source.
%edes        cienaCesInputPGForcedReference System was forced to used this timing reference source.
%edes        cienaCesInputPGThresholdQualityLevel Specified Quality Level threshold for a reference source\n         being selected.
%edes        cienaCesInputPGState    Configured state of this protection group.
%edes        cienaCesInputPGStateDuration Duration since the system entered current state.
%edes        cienaCesInputPGReferenceSwitchCount The number of timing reference switching since the system stared up.
%edes        cienaCesInputPGOperationalStatus Operational status of this protection group.
%edes        cienaCesInputPGTimingType The timing domain (freq/phase/tod) that this protection group belongs to.
%edes        cienaCesInputPGOperationalQualityLevel Operational Quality Level of the protection group.
%edes        cienaCesSyncInputProtectionUnitTable A table of protection units for input timing reference.
%edes        cienaCesSyncInputProtectionUnitEntry An entry in this table represents information on a protection\n         unit for input timing reference.
%edes        cienaCesInputPUEntityId The unique identifier of this input protection unit.
%edes        cienaCesInputPUEntityName The unique name of this input protection unit.
%edes        cienaCesInputPUPGEntityName The identifier of the input protection group(s) which this input\n         protection unit belongs to.
%edes        cienaCesInputPUTimingInterfaceName The interface name of this input protection unit.
%edes        cienaCesInputPUTimingInterfaceProtocol The interface protocol of this input protection unit.
%edes        cienaCesInputPUUserPriority The user configured priority of this input protection unit.
%edes        cienaCesInputPUOperationalQL Operational clock quality level of this input protection unit.
%edes        cienaCesInputPUForcedQL User configured clock quality level that this input protection unit\n         is forced to operate at.
%edes        cienaCesInputPUReceivedQL Actual received clock quality level of this input protection unit.
%edes        cienaCesInputPUSsmEnabled Enable/disable reading of actual received clock quality level for \n         this input protection unit.
%edes        cienaCesInputPUOperationalStatus Operational status of this input protection unit.
%edes        cienaCesInputPUBITSSignalMode BITS Signal Mode, set if BITS signal is used as a protection unit.
%edes        cienaCesInputPUBITSSignalFormat BITS Signal Format, set if BITS signal is used as a protection unit.
%edes        cienaCesInputPUBITSSignalEncoding BITS Signal encoding, set if BITS signal is used as a protection unit.
%edes        cienaCesInputPUUserOverridePriority The user configured override-priority of this input protection unit.
%edes        cienaCesInputPUPTPEncapType PTP Encapsulation Type, set if a PTP input is used as a protection unit.
%edes        cienaCesInputPUGPSClockMode GPS clock mode, set if a GPS input is used as a protection unit.
%edes        cienaCesInputPUGPSFreqClock GPS frequency clock, set if a GPS input is used as a protection unit and the \n        cienaCesInputPUGPSClockMode is set to frequency.
%edes        cienaCesInputPUBITSSignalSsmLocation BITS Signal Ssm Location, set if BITS signal is used as an input reference.
%edes        cienaCesInputPUTDMClockMode TDM clock mode, set if a TDM input is used as a protection unit.
%edes        cienaCesInputPUSignalCondition Signal Condition of this input protection unit.
%edes        cienaCesSyncOutputTable A table of output timing references.
%edes        cienaCesSyncOutputEntry An entry in this table represents information for an output \n         timing reference.
%edes        cienaCesOutputEntityId  The unique identifier of this output reference entity.
%edes        cienaCesOutputEntityName The unique name of this output reference entity.
%edes        cienaCesOutputTimingInterfaceName The interface name of this output reference.
%edes        cienaCesOutputTimingInterfaceProtocol The interface protocol of this output reference.
%edes        cienaCesOutputOperationalQL Operational clock quality level of this output reference.
%edes        cienaCesOutputOperationalStatus Operational status of this output reference.
%edes        cienaCesOutputBITSSignalMode BITS Signal Mode, set if BITS signal is used as an output reference.
%edes        cienaCesOutputBITSSignalFormat BITS Signal Format, set if BITS signal is used as an output reference.
%edes        cienaCesOutputBITSSignalEncoding BITS Signal encoding, set if BITS signal is used as an output reference.
%edes        cienaCesOutputBITSSignalLineBuildout BITS Signal Line Buildout, set if BITS signal is used as an output reference.
%edes        cienaCesOutputBITSSignalSsmLocation BITS Signal Ssm Location, set if BITS signal is used as an output reference.
%edes        cienaCesOutputGPSClockMode GPS clock mode, set if a GPS signal is used as an output reference.
%edes        cienaCesOutputGPSFreqClock GPS frequency clock, set if a GPS signal is used as an output reference and the \n        cienaCesOutputGPSClockMode is set to frequency.
%edes        cienaCesOutputPTPEncapType PTP Encapsulation Type, set if a PTP output is used as an output reference.
%edes        cienaCesSyncPTPAddrMode PTP Address Mode.
%edes        cienaCesSyncPTPTagPriority PTP tag priority
%edes        cienaCesSyncPTPProtocolVersion PTP Protocol Version.
%edes        cienaCesSyncPTPProfileVersion PTP Profile Version.
%edes        cienaCesSyncPTPProfileIdentifier PTP profile identifier address.
%edes        cienaCesSyncPTPDomainNumber PTP domain number.
%edes        cienaCesSyncPTPClockType PTP Clock Type.
%edes        cienaCesSyncPTPClockID  PTP clock identifier.
%edes        cienaCesSyncPTPDscp     PTP DSCP.
%edes        cienaCesSyncPTPProfile  PTP Profile Type.
%edes        cienaCesSyncPTPInputUnicastReqDuration PTP input unicast request duration in seconds.
%edes        cienaCesSyncPTPInputAnnounceRxLossNum PTP input announce Rx loss num (announce intervals).
%edes        cienaCesSyncPTPInputAnnounceTxRateReq PTP input announce Tx rate request (pps).
%edes        cienaCesSyncPTPInputSyncTxRateReq PTP input sync Tx rate request (pps).
%edes        cienaCesSyncPTPInputDelayReqTxRate PTP input delay request Tx rate (pps).
%edes        cienaCesSyncPTPOutputMaxSlaveSessions Maximum number of allowed PTP slave sessions for PTP outputs.
%edes        cienaCesSyncPTPOutputTimestampMode PTP timestamp mode.
%edes        cienaCesSyncPTPOutputAnnounceTxRate PTP output announce Tx rate (pps).
%edes        cienaCesSyncPTPOutputSyncTxRate PTP output sync Tx rate (pps).
%edes        cienaCesSyncPTPOutputPriority1 PTP output priority1
%edes        cienaCesSyncPTPOutputPriority2 PTP output priority2
%edes        cienaCesSyncGPSOutput1ppsPulseWidth The 1pps pulse width, in microseconds, for GPS output references (applicable to phase).
%edes        cienaCesSyncHoldoverInterval User configured interval after which holdover quality level changes.
%edes        cienaCesSyncModuleSlotClockStatus Lock status of module slot.
%edes        cienaCesSyncGnssAlmanacStatus The status of the almanac.
%edes        cienaCesSyncPtpClientIpAddress Indicates IP address of the PTP client.
%edes        cienaCesSyncPtpClientType Indicates whether PTP client is static or dynamic.
%edes        cienaCesSyncPtpClientEventType Indicates the type of PTP client event
%edes        cienaCesSyncPtpClientEventReason Indicates one of reason for the occurrence of PTP client event.
%edes        cienaCesSyncPtpSignallingEvent Indicates the signalling(Unicast session) event occurred.
%edes        cienaCesSyncPtpSourceIpAddress Indicates IP address of the PTP request-port.
%edes        cienaCesSyncPtpMasterIpAddress Indicates IP address of the PTP grant-port.
%edes        cienaCesSyncPtpBackupStatus Indicates the status of assisted backup PTP input reference.
%edes        cienaCesSyncPtpOffsetFromLocalTimeSource Indicates the offset of the backup PTP reference relative to the local time source.
%edes        cienaCesConfigMgmtConfigLastSaved The date and time of the most recent running configuration save.
%edes        cienaCesConfigMgmtConfigLastChanged The date and time of the most recent running configuration change.
%edes        cienaCesConfigMgmtConfigLastContext The last context that modified the configuration state.
%edes        cienaCesConfigMgmtConfigLastUser The last user that modified the configuration state.
%edes        cienaCesConfigMgmtConfigLastOrigin The last origin that modified the configuration state such as\n         an IP address or terminal.
%edes        cienaCesBenchmarkGlobalAdminState Administrative state of the benchmark feature\n                 at the global level.
%edes        cienaCesBenchmarkGlobalGeneratorDefaultEmixSequenceId Default EMIX sequence to be used on a test instance\n                 when no EMIX is specified in the test instance \n                 targeted test profile. This applies to generator\n                 test instances only.
%edes        cienaCesBenchmarkGlobalGeneratorDefaultKpiProfileId Default KPI profile to be used to analyze the results\n                 of a test instance when no KPI profile is specifed in\n                 the targeted test profile. This applies to generator\n                 test instances only.
%edes        cienaCesBenchmarkGlobalGeneratorDefaultBwAllocProfileId Default bandwidth allocation profile to be used with\n                 a test instance when no bandwidth allocation profile is\n                 specified in the targeted test profile. This applies to\n                 generator test instances only.
%edes        cienaCesBenchmarkGlobalPlatformMaxConfigEntities Maximum number of entities that can be created on\n                 this platform.
%edes        cienaCesBenchmarkGlobalPlatformMaxConfigTestInstances Maximum number of test instances that can be created on\n                 this platform.
%edes        cienaCesBenchmarkGlobalPlatformMaxConfigTestProfiles Maximum number of test profiles that can be created on\n                 this platform.
%edes        cienaCesBenchmarkGlobalPlatformMaxConfigKpiProfiles Maximum number of KPI profiles that can be created on\n                 this platform.
%edes        cienaCesBenchmarkGlobalPlatformMaxConfigBwAllocProfiles Maximum number of bandwidth distribution profiles\n                 that can be created on this platform.
%edes        cienaCesBenchmarkGlobalPlatformMaxConfigEmixSequences Maximum number of EMIX sequences that can be created on\n                 this platform, including the system created ones.
%edes        cienaCesBenchmarkGlobalPlatformMaxSimultaneousRunningTests Maximum number of test instances that can be running\n                 simultaneously on this platform.
%edes        cienaCesBenchmarkGlobalConfiguredEntities Number of entities currently configured.
%edes        cienaCesBenchmarkGlobalConfiguredTestInstances Number of test instances currently configured.
%edes        cienaCesBenchmarkGlobalConfiguredProfiles Number of test profiles currently configured.
%edes        cienaCesBenchmarkGlobalConfiguredEmixSequences Number of EMIX sequences currently configured, including\n                 the system created ones.
%edes        cienaCesBenchmarkGlobalConfiguredKpiProfiles Number of KPI profiles currently configured.
%edes        cienaCesBenchmarkGlobalConfiguredBwAllocProfiles Number of bandwidth distribution profiles currently\n                 configured.
%edes        cienaCesBenchmarkGlobalEnabledTestInstances Number of test instances currently enabled across\n                 the platform.
%edes        cienaCesBenchmarkGlobalGeneratorRunningTestInstances Number of generator test instances currently running\n                 across the platform.
%edes        cienaCesBenchmarkEntityTable Table of benchmark entity entries.
%edes        cienaCesBenchmarkEntityEntry BENCHMARK Entity characteristics.
%edes        cienaCesBenchmarkEntityEntryId Entity unique ID
%edes        cienaCesBenchmarkEntityEntryName Name of the benchmark entity as entered when created.
%edes        cienaCesBenchmarkEntityEntryRole Entity role
%edes        cienaCesBenchmarkEntityEntryPortId Entity port under test
%edes        cienaCesBenchmarkEntityEntryMode Entity mode
%edes        cienaCesBenchmarkEntityEntryAdminState Entity admin state.
%edes        cienaCesBenchmarkEntityEntryLocalMac The FPGA internal test port assigned mac address.
%edes        cienaCesBenchmarkEntityEntrySlotId The slot Id of the line module associated\n                 with this entity.
%edes        cienaCesBenchmarkEntityEntryReflectorVendorType Indicator as to what type of equipment is generating the \n                 test traffic on the remote end.
%edes        cienaCesBenchmarkEntityEntryReflectionLevel For reflector entities, this indicates the minimum reflection\n                 level required. If test traffic is going over an ethernet L2\n                 cloud, l2-only is fine. But if the test traffic is going over\n                 an IP network, the reflector needs to be able to swap L2 and\n                 L3 fields. Depending on the type of IP network, the user\n                 needs to configured IPv4 or IPv6. L2 to L4 will swap MAC \n                 addresses, IP addresses and src and destination L4 port.\n                 Depending on the reflection level required, a different device\n                 is used to implement the reflector.
%edes        cienaCesBenchmarkEntityEntryGeneratorHFrameSize Maximum frame size that should be generated by the generator\n                 device. This H frame size should to leave enough room for\n                 extra encapsulation bytes that will be pushed onto the \n                 packet by the switch when pushing this test packet out \n                 the network side port.\n                 The generator device will ensure that any frame size list\n                 or EMIX used during the test is adjusted accordingly
%edes        cienaCesBenchmarkEntityEntryMaxConfigTestInstances Maximum number of test instances that can\n                 be configured on this entity.
%edes        cienaCesBenchmarkEntityEntryMaxSimultaneousTestInstances Maximum number of test instances that can\n                 be enabled (reflector) or running (generator)\n                 on this entity, given the availability of \n                 hw sessions.
%edes        cienaCesBenchmarkEntityEntryOperEnabled Entity operational enable/disable. An entity\n                 is operationally enabled when the feature is\n                 enabled, the entity is enabled and at least one\n                 test instance associated with that entity is \n                 enabled (reflector) or running (generator)
%edes        cienaCesBenchmarkEntityEntryNumTestInstancesConfigured Number of test instances currently configured\n                        on this entity.
%edes        cienaCesBenchmarkEntityEntryNumTestInstancesEnabled Number of test instances currently enabled.
%edes        cienaCesBenchmarkEntityEntryGenNumTestInstancesRunning Number of test instances currently running.
%edes        cienaCesBenchmarkEntityEntryBwAvailable Bandwidth available for test traffic if \n                        a reflector. Bandwidth remaining for other\n                        test instances to be started if a generator.
%edes        cienaCesBenchmarkEntityEntryGenBwUsedByRunningTests Bandwidth currently used by test instances\n                        currently running, in Mbps.
%edes        cienaCesBenchmarkEntityEntryAvailableHwSessions Maximum number of simultaneous hardware sessions available \n                        on this platform.
%edes        cienaCesBenchmarkEntityEntryAllocatedHwSessions The number of allocated hardware sessions
%edes        cienaCesBenchmarkEntityEntryRowStatus Used to manage the creation and deletion of the\n                        conceptual rows in this table.  To create a row in\n                        this table, set this object to 'createAndGo'.\n                        To delete a row in this table, set this object to\n                        'destroy'.  If the entry exists, it is displayed\n                        as 'active'.
%edes        cienaCesBenchmarkEntityEntryClearStats Set to true to clear all global fpga counters for the given entity.\n                 Clear is only allowed for a reflector if no test instances are\n                 enabled, and for a generator if no test instances are running. The\n                 value is reset to false once the transaction is completed.
%edes        cienaCesBenchmarkEntityEntryReflectorMacValidation This attribute is only valid for the reflector entity and indicates\n                 whether the reflector verifies that the destination MAC of the test\n                 frames matches the MAC address associated with  benchamrk reflector\n                 entity. MAC Validation can only be disabled (False) in out-if-service or\n                 evc/vid-out-of-service mode.
%edes        cienaCesBenchmarkEntityStatsTable Table of benchmark entity statistics entries.
%edes        cienaCesBenchmarkEntityStatsEntry BENCHMARK Entity characteristics.
%edes        cienaCesBenchmarkEntityStatsEntryClear Set to true to clear all port and/or global fpga\n                 counters for the given entity. Clear is only allowed\n                 for a reflector if no test instances are enabled, and\n                 for a generator if no test instances are running.\n                 The value is reset to False once the transaction is completed.\n                 This has been obsoleted by cienaCesBenchmarkEntityEntryClearStats.
%edes        cienaCesBenchmarkEntityStatsEntryPortTxBytes Number of bytes transmitted by the benchmark port
%edes        cienaCesBenchmarkEntityStatsEntryPortTxPkts Number of packets transmitted by the benchmark port
%edes        cienaCesBenchmarkEntityStatsEntryPortTxCrcErrorPkts Number of packets with CRC errors
%edes        cienaCesBenchmarkEntityStatsEntryPortTxUcastPkts Number of unicast packets transmitted by the benchmark port
%edes        cienaCesBenchmarkEntityStatsEntryPortTxMcastPkts Number of multicast packets transmitted by the benchmark port
%edes        cienaCesBenchmarkEntityStatsEntryPortTxBcastPkts Number of broadcast packets transmitted by the benchmark port
%edes        cienaCesBenchmarkEntityStatsEntryPortRxUndersizePkts The total number of packets received that were\n              less than 64 octets long (excluding framing bits,\n              but including FCS octets) and were otherwise well\n              formed.
%edes        cienaCesBenchmarkEntityStatsEntryPortRxOversizePkts The total number of packets received that were\n              longer than 1518 octets (excluding framing bits,\n              but including FCS octets) and were otherwise\n              well formed.
%edes        cienaCesBenchmarkEntityStatsEntryPortRxFragmentsPkts The total number of packets received that were less\n              than 64 octets in length (excluding framing bits but\n              including FCS octets) and had either a bad Frame\n              Check Sequence (FCS) with an integral number of\n              octets (FCS Error) or a bad FCS with a non-integral\n              number of octets (Alignment Error).
%edes        cienaCesBenchmarkEntityStatsEntryPortRxJabbersPkts The total number of packets received that were\n              longer than 1518 octets (excluding framing bits,\n              but including FCS octets), and had either a bad\n              Frame Check Sequence (FCS) with an integral number\n              of octets (FCS Error) or a bad FCS with a\n              non-integral number of octets (Alignment Error).
%edes        cienaCesBenchmarkEntityStatsEntryPortTxPausePkts The transmit pause packets for the port.
%edes        cienaCesBenchmarkEntityStatsEntryPortTxDropPkts The total number of dropped packets on the benchmark port when\n              traffic profiles are enabled (311v only).
%edes        cienaCesBenchmarkEntityStatsEntryPortTxDiscardPkts The total number of discarded packets.
%edes        cienaCesBenchmarkEntityStatsEntryPortTxLOutRangePkts The transmit length out of range packet count.
%edes        cienaCesBenchmarkEntityStatsEntryPortTx64OctsPkts Number of 64-byte packets transmitted on the benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortTx65To127Pkts Number of 64 to 127-byte packets transmitted on the\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortTx128To255Pkts Number of 128 to 255-byte packets transmitted on the\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortTx256To511Pkts Number of 256 to 511-byte packets transmitted on the\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortTx512To1023Pkts Number of 512 to 1023-byte packets transmitted on the\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortTx1024To1518Pkts Number of 1024 to 1518-byte packets transmitted on the\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortTx1519To2047Pkts Number of 1519 to 2047-byte packets transmitted on the\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortTx2048To4095Pkts Number of 2048 to 4095-byte packets transmitted on the\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortTx4096To9216Pkts Number of 4096 to 9216-byte packets transmitted on the\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRxBytes Number of bytes received on the benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRxPkts Number of packets received on the benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRxExDeferPkts Number of excessive deferred packets.
%edes        cienaCesBenchmarkEntityStatsEntryPortRxDeferPkts Number of deferred packets.
%edes        cienaCesBenchmarkEntityStatsEntryPortRxGiantPkts Number of too big packets.
%edes        cienaCesBenchmarkEntityStatsEntryPortRxUnderRunPkts Underrun packet count for the benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRxCrcErrorPkts Number of packets received with CRC errors.
%edes        cienaCesBenchmarkEntityStatsEntryPortRxLCheckErrorPkts Number of packets with length check errors.
%edes        cienaCesBenchmarkEntityStatsEntryPortRxLOutRangePkts The number of frames received by the benchmark port\n              that exceeded the maximum permitted frame size.
%edes        cienaCesBenchmarkEntityStatsEntryPortRxPausePkts The total receive pause packets for the port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRxUcastPkts The total number of unicast packets received by benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRxMcastPkts The total number of multicast packets received by benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRxBcastPkts The total number of broadcast packets received by benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRx64OctsPkts The total number of 64-byte packets received by benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRx65To127Pkts The total number of 65 to 127-byte packets received by\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRx128To255Pkts The total number of 128 to 255-byte packets received by\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRx256To511Pkts The total number of 256 to 511-byte packets received by\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRx512To1023Pkts The total number of 512 to 1023-byte packets received by\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRx1024To1518Pkts The total number of 1024 to 1518-byte packets received by\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRx1519To2047Pkts The total number of 1519 to 2047-byte packets received by\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRx2048To4095Pkts The total number of 2048 to 4095-byte packets received by\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryPortRx4096To9216Pkts The total number of 4096 to 9216-byte packets received by\n              benchmark port.
%edes        cienaCesBenchmarkEntityStatsEntryFpgaMissClassPkts Test packets received that didn't match any enabled\n                 test session.
%edes        cienaCesBenchmarkEntityStatsEntryFpgaCrcErrPkts Test packets received with CRC errors
%edes        cienaCesBenchmarkEntityStatsEntryFpgaUdpChkSumErrPkts Test packets received with UDP checksum errors
%edes        cienaCesBenchmarkEmixSequenceTable Table providing the list of configured EMIX sequences\n              on this node.
%edes        cienaCesBenchmarkEmixSequenceEntry EMIX sequence entry.
%edes        cienaCesBenchmarkEmixSequenceId Unique Id of the EMIX sequence entry
%edes        cienaCesBenchmarkEmixSequenceName Name of this EMIX sequence
%edes        cienaCesBenchmarkEmixSequence EMIX sequence which is a sequence of up to\n                   16 letters from the following set, that can\n                   be repeated, where each letter is associated with\n                   the frame size below it:\n                        a    b    c    d    e    f    g    h    u     v   w   x \n                       64   128  256  512  1024 1280 1518 MTU custom 84  68  88 \n                   The u frame size is user configurable via the\n                   cienaCesBenchmarkEmixSequenceUFrameSize attribute\n                   while the h frame size is the maximum frame size\n                   configured at the entity level. If the h frame size is\n                   not configured at the entity level, h takes the value of\n                   the maximum frame size of the port under test.\n                   Letter v is the minimum frame size for IPv6 untagged or dot1q\n                   test frames, w is the minimum for IPv4 qinq test frames, and\n                   x is the minimum for IPv6 qinq test frames.\n                   The EMIX character set is available via table\n                   cienaCesBenchmarkEmixCharacterSetTable.
%edes        cienaCesBenchmarkEmixSequenceUFrameSize The frame size associated with the u letter\n                   in the given sequence. The default value is\n                   594.
%edes        cienaCesBenchmarkEmixSequenceNumOfRef Number of generator test profiles currently\n                   using this EMIX sequence for testing.\n                   If this is the default EMIX sequence\n                   set in the generator, that also count\n                   as one reference.
%edes        cienaCesBenchmarkEmixSequenceUserCreated Flag indicating whether this sequence was \n                   created by the user or by the system at\n                   initialization. Only user created sequences\n                   are editable.
%edes        cienaCesBenchmarkEmixSequenceRowStatus Used to manage the creation and deletion of the\n                   conceptual rows in this table.  To create a row in\n                   this table, set this object to 'createAndGo'.\n                   To delete a row in this table, set this object to\n                   'destroy'.  If the entry exists, it is displayed\n                   as 'active'.
%edes        cienaCesBenchmarkEmixFrameSizeTable Table providing the list of frame sizes associated\n              with the specified EMIX sequence Id.
%edes        cienaCesBenchmarkEmixFrameSizeEntry Frame size associated with given EMIX \n                  sequence ID and frame size index on a given Entity
%edes        cienaCesBenchmarkEmixFrameSizeIndex Index of frame size in array of frame sizes\n                  for the given EMIX sequence.
%edes        cienaCesBenchmarkEmixFrameSizeEntryFrameSize Frame size associated with the letter at the\n                  position given by cienaCesBenchmarkEmixFrameSizeIndex\n                  in the EMIX sequence with Id\n                  cienaCesBenchmarkEmixSequenceId.
%edes        cienaCesBenchmarkEmixAvgFrameSizeTable Table providing the average frame size associated\n              with the specified EMIX sequence Id on a given Entity.
%edes        cienaCesBenchmarkEmixAvgFrameSizeEntry Average frame size associated with given EMIX \n                  sequence ID and Entity. Only valid for Generator\n                  entities.
%edes        cienaCesBenchmarkEmixAvgFrameSize Average frame size for the EMIX sequence with\n                  Id cienaCesBenchmarkEmixSequenceId on the\n                  generator entity with Id cienaCesBenchmarkEntityEntryId.
%edes        cienaCesBenchmarkKpiProfileTable Table providing the list of configured Key Performance\n              Indicator profiles on this node.
%edes        cienaCesBenchmarkKpiProfileEntry Hw session allocation entry.
%edes        cienaCesBenchmarkKpiProfileId Unique Id of the KPI profile entry
%edes        cienaCesBenchmarkKpiProfileName Name of a the KPI profile
%edes        cienaCesBenchmarkKpiProfileNumOfRef Number of generator test profiles currently\n                   using this KPI profile for results analysis.\n                   If this is the default KPI profile set in\n                   the generator, that also count as one reference.
%edes        cienaCesBenchmarkKpiProfileRowStatus Used to manage the creation and deletion of the \n                   conceptual rows in this table.  To create a row in\n                   this table, set this object to 'createAndGo'.\n                   To delete a row in this table, set this object to \n                   'destroy'.  If the entry exists, it is displayed \n                   as 'active'.
%edes        cienaCesBenchmarkKpiPcpColorTable Table providing the list of configured Key Performance\n              Indicator per KPI profile, per PCP and per Color.
%edes        cienaCesBenchmarkKpiPcpColorEntry Entry for the KPI values for the given KPI profile,\n                  PCP and color.
%edes        cienaCesBenchmarkKpiPcpIndex Index for the PCP. Index 9 is used for untagged.
%edes        cienaCesBenchmarkKpiColorIndex Index for the color; 1 green, 2 yellow. \n                  Index 1 is used for untagged
%edes        cienaCesBenchmarkKpiPcp PCP value associated with this entry. Set only \n                  if the KPI is associated with a tagged session \n                  meaning cienaCesBenchmarkKpiUntagged flag is set to false.
%edes        cienaCesBenchmarkKpiColor Traffic color, green or yellow, associated with these\n                  KPIs. Set only if the KPI is associated with a tagged session \n                  meaning cienaCesBenchmarkKpiUntagged flag is set to false.
%edes        cienaCesBenchmarkKpiThroughput Throughput KPI for the given KPI profile, PCP and color\n                  expressed in percent of bandwidth * 10000 to provide a 4\n                  decimal point value.
%edes        cienaCesBenchmarkKpiFrameloss Frameloss KPI for the given KPI profile, PCP and color\n                  expressed in percent of bandwidth * 10000 to provide a 4\n                  decimal point value.
%eunits      cienaCesBenchmarkKpiLatency microseconds
%edes        cienaCesBenchmarkKpiLatency Maximum latency in micro-seconds that the latency result\n                  should not exceed in order for the test to be considered\n                  a pass.
%eunits      cienaCesBenchmarkKpiPdv microseconds
%edes        cienaCesBenchmarkKpiPdv Maximum PDV in micro-seconds that the PDV test result\n                  should not exceed in order for the test to be \n                  considered a pass.
%edes        cienaCesBenchmarkKpiOutageMaxNum Maximum number of outages that can be recorded during the \n                  outage test for the test to be declared a success. If there\n                  are more than the specified number of outages detected, the\n                  test is failed.
%eunits      cienaCesBenchmarkKpiOutageMaxDurationSingle milliseconds
%edes        cienaCesBenchmarkKpiOutageMaxDurationSingle Maximum number of milliseconds a single recorded outage can \n                  last for the outage test to be a success. If a single detected\n                  outage exceeds that threshold, the outage test is failed.
%eunits      cienaCesBenchmarkKpiOutageMaxDurationSum milliseconds
%edes        cienaCesBenchmarkKpiOutageMaxDurationSum Maximum number of milliseconds the sum of the duration of all \n                  recorded outages cannot exceed for the outage test to be declared\n                  a success. If the sum exceeds the configured threshold, the\n                  outage test fails the KPI. The outage test can detect more than 128 \n                  outages during the test, but will only record details for the first\n                  128 outages detected. This KPI is the sum of the duration of the \n                  first 128 outages only; it doesn't include the duration of the\n                  outages detected beyond 128.
%edes        cienaCesBenchmarkKpiUntagged Flag indicating if this group of KPIs is for untagged traffic\n                  or not. When set to True, cienaCesBenchmarkKpiPcp and\n                  cienaCesBenchmarkKpiColor are ignored. The value of \n                  cienaCesBenchmarkKpiPcpIndex and cienaCesBenchmarkKpiColorIndex\n                  are 9 and 1 respectively for untagged KPIs.
%edes        cienaCesBenchmarkBwAllocProfileTable Table providing the list of configured bandwidth\n              allocation profiles on this node.
%edes        cienaCesBenchmarkBwAllocProfileEntry BW allocation profile entry
%edes        cienaCesBenchmarkBwAllocProfileId Unique Id of the bandwidth allocation\n                  profile entry
%edes        cienaCesBenchmarkBwAllocProfileName Name of a the bandwidth allocation\n                   profile
%edes        cienaCesBenchmarkBwAllocProfileNumOfRef Number of generator test profiles currently\n                   using this bandwidth allocation profile\n                   for testing.\n                   If this is the default BW allocation\n                   profile set in the generator, that also count\n                   as one reference.
%edes        cienaCesBenchmarkBwAllocProfileRowStatus Used to manage the creation and deletion of the\n                   conceptual rows in this table.  To create a row in\n                   this table, set this object to 'createAndGo'.\n                   To delete a row in this table, set this object to\n                   'destroy'.  If the entry exists, it is displayed\n                   as 'active'.
%edes        cienaCesBenchmarkBwRatioTable Table providing the list of configured bandwidth\n              ratio per profile, per PCP.
%edes        cienaCesBenchmarkBwRatioEntry Entry for bandwidth percent per BW Allocation \n                  profile and PCP
%edes        cienaCesBenchmarkBwRatioPcpIndex Index for the PCP
%edes        cienaCesBenchmarkBwRatioPcp PCP value associated with this entry.
%edes        cienaCesBenchmarkBwRatio Ratio of test bandwidth to allocate to the\n                  test session with this PCP value.
%edes        cienaCesBenchmarkProfileTable Table of profile entries.
%edes        cienaCesBenchmarkProfileEntry BENCHMARK Profile characteristics.
%edes        cienaCesBenchmarkProfileEntryId Index for BENCHMARK profile records.
%edes        cienaCesBenchmarkProfileEntryName Name of the profile as entered when created.
%edes        cienaCesBenchmarkProfileEntryBandwidth Maximum bandwidth to use when generating green test\n                 traffic for the profile.
%edes        cienaCesBenchmarkProfileEntryExcessBandwidth Maximum bandwidth to use when generating yellow test\n                        traffic for the profile. When testing for red color,\n                        this bandwidth is multiplied by 1.25
%edes        cienaCesBenchmarkProfileEntryInterval Interval between the start of one test group to the start\n                 of the next test group.
%edes        cienaCesBenchmarkProfileEntryDuration Duration of the testing. The test group is repeated until\n                 the duration ends. When indefinite is set, test group is\n                 run only once to completion
%edes        cienaCesBenchmarkProfileEntrySetFrameSizeList Used to replace the existing frame size table with the specified list.\n                 More than one values can be listed and are separated by commas.
%edes        cienaCesBenchmarkProfileEntryMaxSearches For the throughput test, this is the maximum number of\n                 searches to find a transmit rate without drops for a\n                 given frame size.
%edes        cienaCesBenchmarkProfileEntryMaxSamples For the latency and PDV tests, this is the number of\n                 samples to take in order to determine the min, avg\n                 and max latency and avg PDV.
%edes        cienaCesBenchmarkProfileEntrySamplingInterval For the latency and PDV tests, this is the interval,\n                 in 100ms, to wait between samples.
%edes        cienaCesBenchmarkProfileEntryFrameLossStartBw For the frame loss test, this indicates which bandwidth\n                 value to use as the starting bandwidth; the maximum\n                 bandwidth determined via the throughput test, the\n                 bandwidth parameter configured in the profile, or\n                 the maximum bandwidth of the link.\n                 The value maximumLineRate(3) is not supported.
%edes        cienaCesBenchmarkProfileEntryVidValidation Indicates whether VID validation is performed in \n                 the classifier or not on the returning packet. If vid\n                 validation is set to false, PCP and Color validation are\n                 ignored and automatically become false.
%edes        cienaCesBenchmarkProfileEntryPcpValidation Used to indicate whether the PCP value of the\n                        test packet should be used to classifier the reflected\n                        packets or not. When color remarking is used, this should\n                        be set to false. Default is true.
%edes        cienaCesBenchmarkProfileEntryColorValidation Used to indicate whether the color bit of the\n                        test packet should be used to classifier the reflected\n                        packets or not. In color unaware testing, this should\n                        be set to false. Default is true.
%edes        cienaCesBenchmarkProfileEntryKpiProfileId Name of a valid KPI profile, from the \n                        cienaCesBenchmarkKpiProfileTable, to use when\n                        analysing the test results for this profile.
%edes        cienaCesBenchmarkProfileEntryBwAllocProfileId Id of a valid Bandwidth Allocation profile,\n                        from the cienaCesBenchmarkBwAllocProfileTable,\n                        used for distributing the profile bandwidth amongst\n                        the configured PCP values for this profile when running\n                        tests.
%edes        cienaCesBenchmarkProfileEntryEmixSequenceId Id of a valid EMIX sequence configured in the\n                        cienaCesBenchmarkEmixSequenceTable, to use when y1564\n                        is selected. The EMIX sequence is used instead of the\n                        frame size list if and only if y1564 is selected.
%edes        cienaCesBenchmarkProfileEntryEncapType Encapsulation type to use for generated packets.
%edes        cienaCesBenchmarkProfileEntryPduType Vlan tag protocol identifier to use for the generated packets.
%edes        cienaCesBenchmarkProfileEntryDstmac MAC address to use as the destination MAC address on\n                 the generated packets.
%edes        cienaCesBenchmarkProfileEntrySVid S-VLAN ID to used for generated packets when encapType is set to QinQ
%edes        cienaCesBenchmarkProfileEntrySPcp Bitmap of the S-VLAN PCP (Priority Code Point) value to \n                 test with. When RFC2544 test is enabled, only one \n                 PCP can be set in the mask. Otherwise, a test session\n                 will be run for each PCP bit set. Used when the encapType\n                 set to QinQ
%edes        cienaCesBenchmarkProfileEntrySColor Color of the S-VLAN tag for the test traffic. This is \n                        directly related to the value of the DEI bit \n                        configured in the VLAN tag of the test traffic. Green\n                        traffic will have its DEI bit set to 0 while Yellow\n                        traffic will have its DEI bit set to 1.\n                        Green test traffic is generated based on the bandwidth\n                        configured in the test profile. Yellow traffic is\n                        generated based on the excess-bandwidth parameter.\n                        Finally, if the user selects green-yellow-red, the\n                        yellow traffic is generated at 1.25 * excess-bandwidth.\n                        This is used only when encapType is set to QinQ
%edes        cienaCesBenchmarkProfileEntryCVid C-VLAN ID to used for generated packets when encapType is set to\n                 QinQ or dot1q.
%edes        cienaCesBenchmarkProfileEntryCPcp Bitmap of the C-VLAN PCP (Priority Code Point) value to \n                 test with. When RFC2544 test is enabled, only one \n                 PCP can be set in the mask. Otherwise, a test session\n                 will be run for each PCP bit set. Only used when the\n                 encapType is set to dot1q. In the QinQ type, the c-pcp \n                 of the test packet takes the same value as the s-pcp to\n                 simplify software.
%edes        cienaCesBenchmarkProfileEntryCColor Color of the C-VLAN tag for the test traffic. This is \n                        directly related to the value of the DEI bit \n                        configured in the VLAN tag of the test traffic. Green\n                        traffic will have its DEI bit set to 0 while Yellow\n                        traffic will have its DEI bit set to 1.\n                        Green test traffic is generated based on the bandwidth\n                        configured in the test profile. Yellow traffic is\n                        generated based on the excess-bandwidth parameter.\n                        Finally, if the user selects green-yellow-red, the\n                        yellow traffic is generated at 1.25 * excess-bandwidth.\n                        This is used only when encapType is set to dot1q.\n                        In a QinQ configuration, the c-dei bit is set to the\n                        same value as the s-dei bit in order to simplify\n                        software.
%edes        cienaCesBenchmarkProfileEntryTpid Vlan tag protocol identifier to use for the generated packets.\n                 The following TPID values are supported by benchmark:\n                        0x8100\n                        0x9100\n                        0x88A8
%edes        cienaCesBenchmarkProfileEntryDscp IP DSCP value to use for the generated packets.
%edes        cienaCesBenchmarkProfileEntrySrcInetAddrType Specifies the type of address cienaCesBenchmarkProfileEntrySrcInetAddr belongs to.\n              When set to:\n                ipv4 : cienaCesBenchmarkProfileEntrySrcInetAddr should be compliant with \n                       InetAddressIPv4 from RFC 4001\n                ipv6 : cienaCesBenchmarkProfileEntrySrcInetAddr should be compliant with\n                       InetAddressIPv6 from RFC 4001.\n              The InetAddressType and the InetAddress must be set as part of the same SNMP \n              SET request.
%edes        cienaCesBenchmarkProfileEntrySrcInetAddr Specifies the unicast source IP address to use in IP test packet.\n              The InetAddress specified here is compliant with RFC 4001.\n              The InetAddressType and the InetAddress must be set as part of the same SNMP \n              SET request.
%edes        cienaCesBenchmarkProfileEntryDstInetAddrType Specifies the type of address cienaCesBenchmarkProfileEntryDstInetAddr belongs to.\n              When set to:\n                ipv4 : cienaCesBenchmarkProfileEntryDstInetAddr should be compliant with \n                       InetAddressIPv4 from RFC 4001\n                ipv6 : cienaCesBenchmarkProfileEntryDstInetAddr should be compliant with\n                       InetAddressIPv6 from RFC 4001.\n              The InetAddressType and the InetAddress must be set as part of the same SNMP \n              SET request.
%edes        cienaCesBenchmarkProfileEntryDstInetAddr Specifies the unicast destination IP address to use in IP test packet.\n              The InetAddress specified here is compliant with RFC 4001.\n              The InetAddressType and the InetAddress must be set as part of the same SNMP \n              SET request.
%edes        cienaCesBenchmarkProfileEntryCustomPayload Custom payload to be used on the generated packets.
%edes        cienaCesBenchmarkProfileEntryThroughputTest Run throughput test
%edes        cienaCesBenchmarkProfileEntryFramelossTest Run frame loss test
%edes        cienaCesBenchmarkProfileEntryLatencyTest Run latency test
%edes        cienaCesBenchmarkProfileEntryPdvTest Run packet delay variation test
%edes        cienaCesBenchmarkProfileEntryBurstTest Run packet burst test
%edes        cienaCesBenchmarkProfileEntryRfc2544Suite Run RFC2544 test suite which includes throughput, frame\n                         loss and latency tests
%edes        cienaCesBenchmarkProfileEntryY1564Test The Y1564 test includes the throughput, frameloss,\n                        latency and PDV tests are is run using the configured\n                        EMIX sequence. If the profile's EMIX sequence is\n                        not configured, the default generator EMIX sequence is\n                        used. Y1564 and RFC2544 are mutually exclusive.
%edes        cienaCesBenchmarkProfileEntryHwSessionsRequired This represents the number of hardware sessions \n                        required to enable/run a test instance using \n                        this profile according to the profile's current\n                        configuration.\n                        One hardware session is required for each outer tag\n                        PCP and color configured.\n                        Ex 1) Encap type set to dot1q, c-pcp is 0,3 and \n                              c-color is set to green, 2 PCPs * 1 color =\n                              2 hw sessions.\n                        Ex 2) Encap type set to qinq, s-pcp is 0,4,5 and\n                              s-color is set to green-yellow, then you\n                              need 3 PCPs * 2 colors = 6 hw sessions.\n                        Ex 3) Encap type set to untagged, only 1 hw session\n                              is required.
%edes        cienaCesBenchmarkProfileEntryNumOfRef Number of generator test instances currently\n                        using this test profile for testing.
%edes        cienaCesBenchmarkProfileEntryRowStatus Used to manage the creation and deletion of the \n                        conceptual rows in this table.  To create a row in\n                        this table, set this object to 'createAndGo'.\n                        To delete a row in this table, set this object to \n                        'destroy'.  If the entry exists, it is displayed \n                        as 'active'.
%edes        cienaCesBenchmarkProfileEntryOutageTest When set to true, the outage test will be executed follwoing one\n                        iteration of the other enabled tests for the reminder of the duration.\n                        The outage test records details for up to the first 128 outages detected.
%edes        cienaCesBenchmarkProfileEntryCustomDuration Custom duration for testing in mins. Custom duration is only used if \n                         cienaCesBenchmarkProfileEntryDuration is set to tCustom.
%edes        cienaCesBenchmarkTestInstanceTable Table of test instance entries.
%edes        cienaCesBenchmarkTestInstanceEntry BENCHMARK test instance characteristics.
%edes        cienaCesBenchmarkTestInstanceEntryId Unique identifier for the test instance.
%edes        cienaCesBenchmarkTestInstanceEntryName Unique name given to the test instance at creation time.
%edes        cienaCesBenchmarkTestInstanceEntrySubPortId ID of the sub-port to base this test instance on. The sub-port has\n              to be a child of the port under test associated with an existing \n              entity.
%edes        cienaCesBenchmarkTestInstanceEntryProfileId Id of an existing test profile to be used with the test instance as\n              the template for testing. A test profile ID has to be specified if\n              this test instance is associated with a generator entity. If it's a\n              reflector test instance, a profile ID CANNOT be specified, it has\n              to remain set 0.
%edes        cienaCesBenchmarkTestInstanceEntrySvid S VLAN ID to use for testing.\n              For generator test instances, this over-writes the value defined in \n              the referenced test profile if applicable (encap-type set to qinq).\n              For reflector test instances, this has to be set to a valid s-vid\n              accepted by the associated sub-port. A value of 0xFFFF indicates ANY s-vid.\n              A value of 0 indicates untagged or single-tagged traffic.
%edes        cienaCesBenchmarkTestInstanceEntryCvid C VLAN ID to use for testing.\n              For generator test instances, this over-writes the value defined in the \n              referenced test profile if applicable (encap-type set to dot1q or qinq).\n              For reflector test instances, this has to be set to a valid c-vid\n              accepted by the associated sub-port. A value of 0xFFFF indicates ANY\n              c-vid, while a value of 0 indicates untagged (s-vid also has to be set\n              to 0).
%edes        cienaCesBenchmarkTestInstanceEntryUntagged When set to true, this indicates that the test instance\n              is to be associated with untagged data traffic. When this\n              is set, the cvid and svid parameters must be 0.
%edes        cienaCesBenchmarkTestInstanceEntryDstMac Destination MAC address to use for generator test instances. When set,\n              this over writes the value specified in the referenced test profile.\n              This field is not applicable for reflector test instances.
%edes        cienaCesBenchmarkTestInstanceEntryAdminState Indicates the administrative state of the test instance. Upon enabling\n              a test instance, resources are allocated in hardware. For reflector test\n              instances, this triggers the start of reflection of any test traffic\n              received that matches the specified svid:cvid combination on the \n              specified sub-port.
%edes        cienaCesBenchmarkTestInstanceEntryStarted Applicable to generator test instances, this indicates whether testing is\n              in progress or not. Setting this attribute to true will initiate \n              testing.
%edes        cienaCesBenchmarkTestInstanceEntryCurrentInterval Applicable to generator test instances, this indicates the \n              number of intervals of the selected tests have been run, \n              including the current one, in relation to the total number of\n              intervals to complete. This is based on the profile's\n              interval and duration configured.
%edes        cienaCesBenchmarkTestInstanceEntryTotalIntervals Applicable to generator test instances, this indicates the \n              total number of intervals of the selected tests to be run\n              by a single start command on the test instance. This is \n              based on the profile's interval and duration configured.\n              A value of 0 should be interpreted as unknown and -1 as\n              indefinite.
%edes        cienaCesBenchmarkTestInstanceEntryLastIterStart Date and time of the last iteration that started since the \n              last time the system was rebooted or the statistics were\n              cleared on the test instance.
%edes        cienaCesBenchmarkTestInstanceEntryClearStats Set to true to clear the results and counters for the\n              test instance.
%edes        cienaCesBenchmarkTestInstanceEntryRowStatus Used to manage the creation and deletion of the conceptual rows in this table.\n              To create a row in this table, set this object to 'createAndGo'.\n              To delete a row in this table, set this object to 'destroy'.\n              If the entry exists, it is displayed as 'active'.
%edes        cienaCesBenchmarkTestInstanceEntryAssocEntityId ID of the entity this test instance is associated with \n              (cienaCesBenchmarkEntityEntryId)
%edes        cienaCesBenchmarkTestInstanceEntryOperState Indicates the operational state of the test instance. When a generator \n             test instance is operationally enabled it means the test is running and \n             traffic is being generated. When a reflector test instance is operationally \n             enabled it means that reflection is active on the specified svid:cvid combination. \n             Use the cienaCesBenchmarkTestInstanceEntryAdminState to enable/disable a test \n             instance since this field is read-only and meant to capture operational state.
%edes        cienaCesBenchmarkTestInstanceEntryConnectivityTest Applicable to generator test instances, this field is used to trigger \n             a connectivity test on the test instance. Setting the value to true will \n             trigger the test by transmitting 10 packets. If no error is returned \n             then the test has passed. If a commit error is received then the test has failed.
%edes        cienaCesBenchmarkTestInstanceEntrySuspectFlag When a port under test is having 1:1 LAG,MC-LAG/Y-protection as configuration and while a test is running\n              and port under test protection switch event is detected, this flag shall be set to true.\n              This flag set to true indicates result might not be valid since one or more protection \n              switch events were detected while the test was running.
%edes        cienaCesBenchmarkTestInstanceEntryPortProtectionSwitchCount Port under test configuration as 1:1 LAG/MC-LAG/Y-protection.\n              This Indicates the number protection switch event detected while reflector \n              operational state was reflecting
%edes        cienaCesBenchmarkTestInstanceEntryPortLastProtectionSwitchTime With port under test configuration as 1:1 LAG/MC-LAG/Y-cable.\n              Indicates the date and time of last dtected protection switch event of port under test
%edes        cienaCesBenchmarkGenTestSessionAllocationTable Table providing the allocation of hw test session per \n              generator test instance Id, PCP and color.
%edes        cienaCesBenchmarkGenTestSessionAllocationEntry Test session (aka hardware session) allocation entry.\n              SPECIAL NOTE: It is important to know that when the associated\n              test profile's encapsulation type is set to untagged,\n              the last two elements of the index (PCP and color) are fixed\n              at 1.1. The management software needs to query using index\n              <entidyId>.<testInstandceId>.1.1 in this case, since\n              PCP and color are irrelevant in the untagged test traffic\n              scenario.
%edes        cienaCesBenchmarkGenTestSessionPcpIndex PCP Index.
%edes        cienaCesBenchmarkGenTestSessionColorIndex Color Index.
%edes        cienaCesBenchmarkGenTestSessionPcp PCP value associated with this hw session
%edes        cienaCesBenchmarkGenTestSessionColor Color of test traffic associated with this hardware\n                  session
%edes        cienaCesBenchmarkGenTestSessionId Id of the hardware session allocated to the given\n                  test instance id, pcp and color
%edes        cienaCesBenchmarkGenTestSessionEmixSequenceId EMIX sequence Id used with this session. If zero, \n                  it indicates that the the frame size list is being used\n                  for the test and cienaCesBenchmarkGenTestSessionCurrentPktSize\n                  indicates which packet size is currently being tested.
%edes        cienaCesBenchmarkGenTestSessionCurrentPktSize Packet size in bytes currently used by the running test.
%edes        cienaCesBenchmarkGenTestSessionThroughputTestState State of the throughput test for this hardware session\n                  defined by the test instance id, pcp and color
%edes        cienaCesBenchmarkGenTestSessionFramelossTestState State of the frameloss test for this hardware session\n                  defined by the test instance id, pcp and color
%edes        cienaCesBenchmarkGenTestSessionLatencyTestState State of the latency test for this hardware session\n                  defined by the test instance id, pcp and color
%edes        cienaCesBenchmarkGenTestSessionPdvTestState State of the PDV test for this hardware session\n                  defined by the test instance id, pcp and color
%edes        cienaCesBenchmarkGenTestSessionRfc2544TestState State of the RFC2544 test for this hardware session\n                  defined by the test instance id, pcp and color
%edes        cienaCesBenchmarkGenTestSessionY1564TestState State of the Y1564 test for this hardware session\n                  defined by the test instance id, pcp and color
%edes        cienaCesBenchmarkGenTestSessionCurrentRate Traffic rate currently used to generate packets as percent\n                  of the line rate
%edes        cienaCesBenchmarkGenTestSessionSamplesCompleted When latency and/or pdv is running, this indicates how \n                  many samples have been gathered so far.
%edes        cienaCesBenchmarkGenTestSessionOutageTestState State of the outage test for this hardware session.
%edes        cienaCesBenchmarkGenTestSessionNumOutagesDetected Number of outages detected so far.
%edes        cienaCesBenchmarkGenTestSessionOutageProgress Percentage of the outage test completed. This is based\n                  on how much time has passed since the outage test\n                  started and the total duration of the test.\n                  If the test is not in the running or processing\n                  records state the value is 0.\n                  If the duration is indefinite, then a percentage\n                  progress is impossible to maintain, and this value\n                  will be 0.
%edes        cienaCesBenchmarkTestInstanceStatsTable Table of test instance packet statistics entries.
%edes        cienaCesBenchmarkTestInstanceStatsEntry Benchmark test instance packet statistics
%edes        cienaCesBenchmarkTestInstanceStatsRxPkts Total number of received packets for \n              this test instance.
%edes        cienaCesBenchmarkTestInstanceStatsRxIpv4Pkts Total number of IPv4 packets received for\n              this test instance.
%edes        cienaCesBenchmarkTestInstanceStatsRxIpv4UdpPkts Total number of IPv4 UDP packets received for\n              this test instance.
%edes        cienaCesBenchmarkTestInstanceStatsRxIpv6Pkts Total number of IPv6 packets received for\n              this test instance.
%edes        cienaCesBenchmarkTestInstanceStatsRxIpv6UdpPkts Total number of IPv6 UDP packets received for\n              this test instance.
%edes        cienaCesBenchmarkTestInstanceStatsRxNonIpPkts Total number of non-IP packets received for\n              this test instance.
%edes        cienaCesBenchmarkTestInstanceStatsRxUnrecognizedPkts Total number of unrecognized packets received for\n              this test instance.
%edes        cienaCesBenchmarkTestInstanceStatsRxDuplicatePkts Total number of packets received with a duplicate\n              this test instance.
%edes        cienaCesBenchmarkTestInstanceStatsRxDuplicatePktsOverflow When set to true, this indicates that the duplicate\n              pkt counter has rolled over in hardware and therefore,\n              cienaCesBenchmarkTestInstanceStatsRxDuplicatePkts might\n              not be accurate.
%edes        cienaCesBenchmarkTestInstanceStatsRxOOOPkts Total number of packets received with an out of \n              order sequence number. The sequence number was less\n              than the expected sequence number for this test instance.
%edes        cienaCesBenchmarkTestInstanceStatsRxOOOPktsOverflow When set to true, this indicates that the out of order\n              pkt counter has rolled over in hardware and therefore,\n              cienaCesBenchmarkTestInstanceStatsRxOOOPkts might\n              not be accurate.
%edes        cienaCesBenchmarkTestInstanceStatsRxDiscSeqNumPkts Total number of packets received with a sequence number\n              greater then the expected sequence number for this test instance.
%edes        cienaCesBenchmarkTestInstanceStatsRxDiscSeqNumPktsOverflow When set to true, this indicates that the discontinuity\n              in sequence number pkt counter has rolled over in hardware\n              and therefore, cienaCesBenchmarkTestInstanceStatsRxDiscSeqNumPkts\n              might not be accurate.
%edes        cienaCesBenchmarkTestInstanceStatsRxUdpCheckSumPkts Total number of UDP packets received with a UDP checksum\n              error.
%edes        cienaCesBenchmarkTestInstanceStatsTxPkts Total number of packets transmitted for this test instance.
%edes        cienaCesBenchmarkGenTestSessionThroughputResultsTable Table of BENCHMARK generator test session throughput results in Mbps.
%edes        cienaCesBenchmarkGenTestSessionThroughputResultsEntry BENCHMARK generator test session throughput results.
%edes        cienaCesBenchmarkGenTestSessionThroughputResultsPcpIndex Index of the PCP value
%edes        cienaCesBenchmarkGenTestSessionThroughputResultsColorIndex Color index.
%edes        cienaCesBenchmarkGenTestSessionThroughputResultsFrameSizeIndex Frame size index for which those throughput results are\n                 for. When EMIX is used, in which case \n                 cienaCesBenchmarkGenTestSessionThroughputResultsEmixSequenceId is\n                 not NULL, there is only one frame size index for\n                 the given test instance Id, pcp and color. In such a case, the \n                 frame size index will be 0 and frame size will also be 0.
%edes        cienaCesBenchmarkGenTestSessionThroughputResultsPcp PCP value of the test packets associated with those\n                 results.
%edes        cienaCesBenchmarkGenTestSessionThroughputResultsColor Color of the test packets associated with those\n                 results.
%edes        cienaCesBenchmarkGenTestSessionThroughputResultsFrameSize Packet size in bytes. If 0, then the \n                 cienaCesBenchmarkGenTestSessionThroughputResultsEmixSequenceId\n                 indicates the ID of the EMIX sequence used for the test
%edes        cienaCesBenchmarkGenTestSessionThroughputResultsEmixSequenceId ID of the EMIX sequence that was used for running the\n                 test which produced these results. When 0,\n                 frame size indicates the size of the test frame\n                 associated with these results.
%edes        cienaCesBenchmarkGenTestSessionThroughputResultsMin Minimum throughput recorded for the given packet size \n                 in Mbps * 100. The value is multiplied by 100 to be able\n                 to send the results as an integer but should be divided\n                 by 100 when displayed to provide a 2 decimal point accuracy.\n                 A result of 123.45 is sent as 12345.
%edes        cienaCesBenchmarkGenTestSessionThroughputResultsMax Maximum throughput recorded for the given packet size\n                 in Mbps * 100. The value is multiplied by 100 to be able\n                 to send the results as an integer but should be divided\n                 by 100 when displayed to provide a 2 decimal point accuracy.\n                 A result of 123.45 is sent as 12345.
%edes        cienaCesBenchmarkGenTestSessionThroughputResultsAvg Average throughput recorded for the given packet size\n                 in Mbps * 100. The value is multiplied by 100 to be able\n                 to send the results as an integer but should be divided\n                 by 100 when displayed to provide a 2 decimal point accuracy.\n                 A result of 123.45 is sent as 12345.
%edes        cienaCesBenchmarkGenTestSessionThroughputResultsIterations Number of times the test has been run for this packet size.
%edes        cienaCesBenchmarkGenTestSessionThroughputResultsKpiResult Pass or fail results for the test which is determined\n                 by comparing the max throughput against the selected \n                 KPI test instance's throughput pass criteria. If no KPI test instance\n                 is selected for the given test instance Id, the result will\n                 be 'notApplicable'.
%edes        cienaCesBenchmarkGenTestSessionThroughputResultsSuspect In case port under test with 1:1 LAG/MC-LAG/Y-protection configuration \n                  Suspect result indicates test result might not be valid since one or more \n                  protection switch events were detected while the test was in progress.
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsTable Table of BENCHMARK generator test session frameloss results.
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsEntry BENCHMARK generator test session frameloss results.
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsPcpIndex PCP index.
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsColorIndex Color index.
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsFrameSizeIndex Frame size index.
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsRateIndex Rate index.
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsPcp PCP value of the test packets associated with those\n                 results.
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsColor Color of the test packets associated with those\n                 results.
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsFrameSize Packet size in bytes. If 0, then the \n                 cienaCesBenchmarkGenTestSessionFramelossResultsEmixSequenceId\n                 indicates the ID of the EMIX sequence used for the test
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsEmixSequenceId ID of the EMIX sequence that was used for running the\n                 test which produced these results. When 0,\n                 frame size indicates the size of the test frame\n                 associated with these results.
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsRate Rate in percent of line rate.
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsFirst Percentage of frames lost on first test sequence.
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsSecond Percentage of frames lost on second test sequence.
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsKpiResult Pass or fail results for the test which is determined\n                 by comparing the frameloss result against the selected \n                 KPI test instance's frameloss pass criteria. If no KPI test instance\n                 is selected for the given test instance Id, the result will\n                 be 'notApplicable'.
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsResult Percentage of frames lost on the largest test sequence results.
%edes        cienaCesBenchmarkGenTestSessionFramelossResultsSuspect In case port under test with 1:1 LAG/MC-LAG/Y-protection configuration \n                  Suspect result indicates test result might not be valid since one or more \n                  protection switch events were detected while the test was in progress.
%edes        cienaCesBenchmarkGenTestSessionLatencyResultsTable Table of BENCHMARK generator test session latency results in usec.
%edes        cienaCesBenchmarkGenTestSessionLatencyResultsEntry BENCHMARK generator test session latency results.
%edes        cienaCesBenchmarkGenTestSessionLatencyResultsPcpIndex PCP index.
%edes        cienaCesBenchmarkGenTestSessionLatencyResultsColorIndex Color index.
%edes        cienaCesBenchmarkGenTestSessionLatencyResultsFrameSizeIndex Frame size index.
%edes        cienaCesBenchmarkGenTestSessionLatencyResultsPcp PCP value of the test packets associated with those\n                 results.
%edes        cienaCesBenchmarkGenTestSessionLatencyResultsColor Color of the test packets associated with those\n                 results.
%edes        cienaCesBenchmarkGenTestSessionLatencyResultsFrameSize Packet size in bytes.
%edes        cienaCesBenchmarkGenTestSessionLatencyResultsEmixSequenceId ID of the EMIX sequence that was used for running the\n                 test which produced these results. When 0,\n                 frame size indicates the size of the test frame\n                 associated with these results.
%edes        cienaCesBenchmarkGenTestSessionLatencyResultsMin Minimum latency recorded for the given packet size.
%edes        cienaCesBenchmarkGenTestSessionLatencyResultsMax Maximum latency recorded for the given packet size.
%edes        cienaCesBenchmarkGenTestSessionLatencyResultsAvg Average latency recorded for the given packet size.
%edes        cienaCesBenchmarkGenTestSessionLatencyResultsSamples Number of samples taken during the test.
%edes        cienaCesBenchmarkGenTestSessionLatencyResultsKpiResult Pass or fail results for the test which is determined\n                 by comparing the frameloss result against the selected \n                 KPI test instance's latency pass criteria. If no KPI test instance\n                 is selected for the given test instance Id, the result will\n                 be 'notApplicable'.
%edes        cienaCesBenchmarkGenTestSessionLatencyResultsSuspect In case port under test with 1:1 LAG/MC-LAG/Y-protection configuration \n                  Suspect result indicates test result might not be valid since one or more \n                  protection switch events were detected while the test was in progress.
%edes        cienaCesBenchmarkGenTestSessionPdvResultsTable Table of BENCHMARK generator test session packet delay \n              variation results in usec.
%edes        cienaCesBenchmarkGenTestSessionPdvResultsEntry BENCHMARK generator test session packet delay variation results.
%edes        cienaCesBenchmarkGenTestSessionPdvResultsPcpIndex PCP index.
%edes        cienaCesBenchmarkGenTestSessionPdvResultsColorIndex Color index.
%edes        cienaCesBenchmarkGenTestSessionPdvResultsFrameSizeIndex Frame size index associated to those PDV stats.
%edes        cienaCesBenchmarkGenTestSessionPdvResultsPcp PCP value of the test packets associated with those\n                 results.
%edes        cienaCesBenchmarkGenTestSessionPdvResultsColor Color of the test packets associated with those\n                 results.
%edes        cienaCesBenchmarkGenTestSessionPdvResultsFrameSize Packet size in bytes.
%edes        cienaCesBenchmarkGenTestSessionPdvResultsEmixSequenceId ID of the EMIX sequence that was used for running the\n                 test which produced these results. When 0,\n                 frame size indicates the size of the test frame\n                 associated with these results.
%edes        cienaCesBenchmarkGenTestSessionPdvResultsAvg Average PDV recorded for the given packet size.
%edes        cienaCesBenchmarkGenTestSessionPdvResultsSamples Number of samples used for the test.
%edes        cienaCesBenchmarkGenTestSessionPdvResultsKpiResult Pass or fail results for the test which is determined\n                 by comparing the frameloss result against the selected \n                 KPI test instance's throughput PDV criteria. If no KPI test instance\n                 is selected for the given test instance Id, the result will\n                 be 'notApplicable'.
%edes        cienaCesBenchmarkGenTestSessionPdvResultsSuspect In case port under test with 1:1 LAG/MC-LAG/Y-protection configuration \n                  Suspect result indicates test result might not be valid since one or more \n                  protection switch events were detected while the test was in progress.
%edes        cienaCesBenchmarkEmixCharacterSetTable Table of BENCHMARK EMIX character set providing the\n              list of characters that can be used in an EMIX sequence\n              along with their corresponding frame size.
%edes        cienaCesBenchmarkEmixCharacterSetEntry BENCHMARK EMIX character and its associated frame size.
%edes        cienaCesBenchmarkEmixCharacterSetEntryIndex Character index.
%edes        cienaCesBenchmarkEmixCharacterSetEntryCharacter EMIX character that can be used for creating an EMIX sequence.\n                 The character set currently includes: a b c d e f g h u v w x  
%edes        cienaCesBenchmarkEmixCharacterSetEntryFrameSize Frame size associated with the character. For h, the frame size\n                 is the port under test's MTU and the u character is a custom\n                 frame size configurable for each EMIX. The u frame size can take \n                 a value of 64 to 10000 and defaults to 594. If u is bigger than\n                 the MTU of the port under test, it will be reduced to the same\n                 size as h.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsTable Table of BENCHMARK generator test session outage test\n              results.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsEntry BENCHMARK generator test session outage test results.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsPcpIndex PCP index.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsColorIndex Color index.
%edes        cienaCesBenchmarkGenTestSessionOutageUntagged Flag indicating whether the results are associated with an untagged\n                 session or not.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsPcp PCP value of the test packets associated with those\n                 results. Not valid if cienaCesBenchmarkGenTestSessionOutageUntagged\n                 is True.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsColor Color of the test packets associated with those\n                 results. Not valid if cienaCesBenchmarkGenTestSessionOutageUntagged\n                 is True.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsFrameSize Packet size in bytes.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsEmixSequenceId ID of the EMIX sequence that was used for running the\n                 test which produced these results. When 0,\n                 frame size indicates the size of the test frame\n                 associated with these results.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsNumDetected Number of outages detected during the outage test.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsSumDurationRecorded Sum of the duration of the first 128 outages detected. Only the \n                 first 128 outages have recorded details.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsStartTime Date and time of the start of the outage test.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsEndTime Date and time of the end of the outage test.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsMaxNumKpiResult Results for the maximum number of outagses KPI. The result is fail if \n                 there is a KPI configured for the used profile and session and if \n                 cienaCesBenchmarkGenTestSessionOutageResultsNumDetected exceeds the\n                 configured KPI for the session; it is pass otherwise. When there is \n                 no KPI configured for the session, the results is not applicable.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsSumDurationKpiResult Results for the sum of the duration of the recorded outage KPI. \n                 The result is fail if there is a KPI configured for the used profile \n                 and session and if cienaCesBenchmarkGenTestSessionOutageResultsSumDurationRecorded\n                 exceeds the configured KPI for the session; it is pass otherwise. When there is \n                 no KPI configured for the session, the results is not applicable.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsOverallKpiResult Overall KPI results for the outage test is an OR of all 3 outage KPIs:\n                 maximum number of outages detected KPI result, sum of duration of all\n                 recorded outages KPI result and the result of the duration of a single outage KPI\n                 for all recorded outage. If any one of those is fail, the over KPI is fail.\n                 If ALL of the KPIs are pass, the overall KPI results is pass.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsNumRecorded Number of outages recorded during the outage test.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsThroughput Average throughput during outage test in Mbps * 100.\n                 The value is multiplied by 100 to be able\n                 to send the results as an integer but should be divided\n                 by 100 when displayed to provide a 2 decimal point accuracy.\n                 A result of 123.45 is sent as 12345.
%edes        cienaCesBenchmarkGenTestSessionOutageResultsSuspect In case port under test with 1:1 LAG/MC-LAG/Y-protection configuration \n                  Suspect Result indicates test result might not be valid since one or more \n                  protection switch events were detected while the test was in progress.
%edes        cienaCesBenchmarkOutageRecordTable Table providing the detailed inforamtion on\n              each outage that was recorded during the outage\n              test. The first 128 outages have their \n              details recorde.
%edes        cienaCesBenchmarkOutageRecordEntry Entry for storing details on one outage.
%edes        cienaCesBenchmarkOutageRecordIndex Index of the outage record. Software records the first 128 outages\n                  detected during the outage test.
%edes        cienaCesBenchmarkOutageRecordStartTime Date and time for the start of this outage.
%edes        cienaCesBenchmarkOutageRecordEndTime Date and time of the end of this outage.
%eunits      cienaCesBenchmarkOutageRecordDuration microseconds
%edes        cienaCesBenchmarkOutageRecordDuration Duration of this outage in micro-seconds.
%edes        cienaCesBenchmarkOutageRecordDroppedFrames Number of frames that were dropped during this outage.
%edes        cienaCesBenchmarkOutageRecordSingleDurationKpiResult Result for the maximum duration of single outage KPI for\n                  this outage. If there is no KPI set, the result will be\n                  'not available'.
%edes        cienaCesBenchmarkOutageRecordId Id of the outage record. \n                  (One less than the record index).
%edes        cienaCes8021xPortTable  Table with an entry for every port on the switch
%edes        cienaCes8021xPortEntry  An entry (conceptual row) in the cienaCes8021xPortTable.
%edes        cienaCes8021xPort       Pgid of the port
%edes        cienaCes8021xRole       802.1x role of the Port.
%edes        cienaCes8021xAuthPortStatsClear Setting this MIB object to 'true' clears the authenticator port statistics.
%edes        cienaCes8021xNotificationAuthenticationEvent This object identifies the type of authentication event being communicated\n                 in the notification in which this object is located.
%edes        cienaCes8021xPortName   Indicates the port name for the corresponding PGID used for trap definition.
%edes        cienaCes8021xSuppTable  A table that contains the configuration objects for the\n                 Supplicant PAE associated with each port.\n                 An entry appears in this table for each port that may\n                 authenticate itself when challenged by a remote system.
%edes        cienaCes8021xSuppEntry  The configuration information for a Supplicant PAE.
%edes        cienaCes8021xSuppPort   The MIB object is used as an index in the table and specifies the pgid of the port.
%edes        cienaCes8021xSuppUserName Username for authenticating this supplicant, also used as the 802.1x identity.\n                 Setting this object to zero length string resets the username.
%edes        cienaCes8021xSuppPassword The password used with cienaCes8021xSuppUserName for EAP-MD5 authentication.\n                 Doing a get on this object always returns a zero length string for security reasons.
%edes        cienaCes8021xSuppPortStatsClear Setting this MIB object to 'true' clears the supplicant port statistics.
%edes        cienaCes8021xSuppEAPMethod Obsolete. Use cienaCes8021xSuppEAPAllowedMethods instead.
%edes        cienaCes8021xSuppEAPAllowedMethods Extensible Authentication Protocol methods allowed for this supplicant.
%edes        cienaCes8021xSuppOperationalState Returns the operational state of this supplicant.
%edes        cienaCes8021xSuppMutualAuthenticationAdminState Administratively enables/disables authentication of the\n                 server by the supplicant. Applies to EAP-TLS.
%edes        cienaCes8021xSuppCheckCertificateTimeAdminState Administratively enables/disables checking of the server's\n                 certificate timestamp when doing mutual authentication.\n                 Applies to EAP-TLS.
%edes        cienaCes8021xSuppMutualAuthenticationOperState Returns the operative state of mutual authentication checking.\n                 Applies to EAP-TLS.
%edes        cienaCes8021xSuppCheckCertificateTimeOperState Returns the operative state of certificate time stamp checking when\n                 doing mutual authentication. Applies to EAP-TLS.
%edes        cienaCes8021xSuppDeviceCertificateStatus Returns the state of the supplicant device certificate.\n                 Applies to EAP-TLS.
%edes        cienaCes8021xSuppSecret Sets the pre-encrypted secret that shall be used along with the\n                  username specified by cienaCes8021xSuppUserName to gain access\n                  on a port. A get returns the encrypted secret for the supplicant.
%edes        cienaCes8021xSuppAdminState This object is used to specify the user administrative state\n                  of the supplicant port.
%edes        cienaCes8021xSuppEAPVersion This object is used to specify the EAPoL version of the supplicant\n                  port.
%edes        cienaCes8021xSuppOCSPAdminState Administratively enables/disables OCSP checking of the server's\n                 certificate when doing mutual authentication.\n                 Applies to EAP-TLS.
%edes        cienaCes8021xSuppCertificateName Name of the certificate to be used for authenticating this supplicant.\n                 Applies to EAP-TLS.
%edes        cienaCes8021xSuppMinimumTlsVersion This object is used to specify the minimum TLS version that can be\n                 used by the supplicant port.\n                 Applies to EAP-TLS.
%edes        cienaCes8021xSuppPeerCertReauthAdminState Administratively enables/disables peer certificate reauthentication\n                 on this supplicant.\n                 Applies to EAP-TLS.
%edes        cienaCes8021xAuthStatsClear Setting this MIB object to 'true' clears the authenticator global statistics.
%edes        cienaCes8021xSuppStatsClear Setting this MIB object to 'true' clears the supplicant global statistics.
%edes        cienaCesPlatformPostErrorCategory This variable indicates the category of post errors. This\n     object is sent out as one of the binding in the Post Error\n     Notification.
%edes        cienaCesPlatformPostErrorMsg This variable indicates the post error message\n     associated with category cienaCesPlatformPostErrorCategory.
%edes        cienaCesPlatformFanModuleNum Denotes the Fan module.
%edes        cienaCesPlatformFanModuleStatus Denotes the fan modules status.\n     'ok' means fan is operational,\n     'failure' means fan is not working.
%edes        cienaCesPlatformPowerSupplyNum Denotes the power supply.
%edes        cienaCesPlatformPowerSupplyState Specifies the power supply's state.
%edes        cienaCesPlatformTempSensorState The state indicates whether the current temp is greater than,\n     equal to or less than a specific threshold.
%eunits      cienaCesPlatformTempSensorValue degrees Celsius
%edes        cienaCesPlatformTempSensorValue The value of temperature measured by the sensor \n     inside the device in degrees C.
%edes        cienaCesRtucState       Denotes the reset to user config  status.
%edes        cienaCesRtucFileName    Denotes the reset to user config backup file name.
%edes        cienaCesPlatformFanModuleTable A Table list fan modules configured and detected
%edes        cienaCesPlatformFanModuleEntry An entry in cienaCesPlatformFanModuleTable
%edes        cienaCesPlatformFanModuleIndex The object indicates fan-module index.
%edes        cienaCesPlatformFanModuleName The object indicates fan-module name.
%edes        cienaCesPlatformFanModuleType The object indicates fan-module type.
%edes        cienaCesPlatformFanModuleCurrentSpeed The object indicates fan-module current speed.
%edes        cienaCesPlatformFanModuleMaxSpeed The object indicates fan-module maximum speed.
%edes        cienaCesPlatformFanModuleMinSpeed The object indicates fan-module minimum speed.
%edes        cienaCesPlatformFanModuleAvgSpeed The object indicates fan-module average speed.
%edes        cienaCesPlatformFanModuleFanTray The object indicates fan-module fan tray.
%edes        cienaCesPlatformTempSensorName The name of temperature sensor.
%edes        cienaCesMplsL3VpnVrfAfiType The address family of the specified VRF.
%edes        cienaCesEvpnEthernetSegmentIdentifier This depicts 10 byte of octet for particular ethernet segment.
%edes        cienaCesEvpnEthernetSegmentLogicalPortName This depicts logical port name for particular ethernet segment.
%edes        cienaCesEvpnEthernetSegmentOperState This depicts logical port state for a particular ethernet segment.
%edes        cienaCesEvpnInstanceName This depicts ethernet instance name.
%edes        cienaCesEvpnEthernetSegmentFailureType This depicts ethernet segment evlag failure type for particular\n        ethernet segment.
%edes        cienaCesEvpnEthernetSegmentActiveMode This depicts designated forwarding mode for particular ethernet segment.
%edes        cienaCesEvpnEthernetSegmentDfMode This depicts designated forwarding mode for particular ethernet\n          segment evlag.
%edes        cienaCesAAAUserName     User credentials used by a remote host to connect to the system.
%edes        cienaCesAAAHostIp       IP address of a remote host trying to connect to the system.
%edes        cienaCesAAAUserPort     Port number used by a remote host to connect for an ssh or telnet session.
%edes        cienaCesAAAUserAuthenticationServiceType User authentication service being used, local or remote.
%edes        cienaCesAAAUserAuthenticationStatus User authentication status as success or failure.
%edes        cienaCesAAAUserAuthenticationDescription Detailed description of the user authentication event.
%edes        cienaCesBgpMaxPrefixLimit This depicts the maximum value configured for prefixes
%edes        cienaCesBgpMaxPrefixLimitAfi This depicts the combination of address family indicators.
%edes        cienaCesBgpMaxPrefixLimitSafi This depicts the combination of subsequent family indicators.
%edes        cienaCesBgpMaxPrefixLimitDropPercentage This depicts the percentage value configured for the drop-excess
%edes        cienaCesBgpMaxPrefixLimitIpAddress This depicts the peer ip address.
%edes        cienaCesEgressQosInterfaceBindingTable Table of interface-qos-binding contains references to the logical-port and queue-group-instance.
%edes        cienaCesEgressQosInterfaceBindingEntry Each entry represents an interface-qos-binding.
%edes        cienaCesEgressQosInterfaceBindingIndex Unique index of the interface-qos-binding.
%edes        cienaCesEgressQosInterfaceBindingName Unique identifier of the interface-qos-binding.
%edes        cienaCesEgressQosQueueGroupName A reference to a queue group instance specific to the interface.
%edes        cienaCesEgressQosInterfaceName A reference to an interface specific to the queue group instance.
%edes        cienaCesEgressQosSchedulerInstanceTable Table of scheduler instance contains references to the logical-port and scheduler profile.
%edes        cienaCesEgressQosSchedulerInstanceEntry Each entry represents an scheduler instance.
%edes        cienaCesEgressQosSchedulerInstanceIndex Unique index of the scheduler instance.
%edes        cienaCesEgressQosSchedulerInstanceName Unique name of the scheduler instance.
%edes        cienaCesEgressQosSchedulerProfileName A reference to a scheduler profile specific to the scheduler instance.
%edes        cienaCesEgressQosSchedulerInterfaceName A reference to an interface specific to the scheduler instance.
%edes        cienaCesEgressQosSchedulerProfileTable Table of scheduler profile contains profile name , CIR and EIR values.
%edes        cienaCesEgressQosSchedulerProfileEntry Each entry represents an scheduler profile.
%edes        cienaCesEgressQosSchedulerProfileEntryIndex Unique index of the scheduler profile.
%edes        cienaCesEgressQosSchedulerProfileEntryName Unique name of this scheduler profile.
%edes        cienaCesEgressQosSchedulerProfileEntryCIR CIR value of this scheduler profile.
%edes        cienaCesEgressQosSchedulerProfileEntryEIR EIR value of this scheduler profile.
%edes        cienaNgSaosDebugInteger Integer debug type.
%edes        cienaNgSaosDebugString  String degug type.
%edes        cienaNgSaosDebugErrorMessage Debug failure message.
%edes        cienaCesNotifications   Provides a root object identifier for all the notifications.
%edes        cienaCesNotificationsControlModule Provides a root object identifier to place the state control objects.
%edes        cienaCesPortNotificationPortDown A cienaCesLogicalPortNotificationPortDown trap signifies that the SNMP entity, acting in\n                 an agent role, has detected that the link status has become operationally down\n                 for one of its communication links.\n       			To enable the device to send this notification:\n        			-	cienaCesPortEnhancedLinkTrapState needs to be set to enabled  \n        			-	cienaCesPortAllTrapState needs to be set to enabled  \n        			-   cienaCesLogicalPortConfigPortAllTrapState for the port needs to be set to enabled\n        			-	cienaCesLogicalPortConfigPortLinkUpDownTrapState for the port needs to be set to enabled  \n       			These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity, \n       			cienaGlobalMacAddress, cienaCesPortPgIdMappingNotifChassisIndex, cienaCesPortPgIdMappingNotifShelfIndex, \n       			cienaCesPortPgIdMappingNotifSlotIndex, cienaCesPortPgIdMappingNotifPortNumber, \n       			cienaCesLogicalPortConfigPortAdminState, cienaCesLogicalPortConfigPortOperState, \n       			cienaCesLogicalPortConfigPortName, cienaCesLogicalPortConfigPortType, cienaCesLogicalPortConfigPortDesc, \n       			sysName, and sysLocation.
%edes        cienaCesPortNotificationPortUp A cienaCesLogicalPortNotificationPortUp trap signifies that the SNMP entity, acting in\n                 an agent role, has detected the link status has become operationally up for\n                 one of its communication links.\n       			To enable the device to send this notification:\n        			-	cienaCesPortEnhancedLinkTrapState needs to be set to enabled  \n        			-	cienaCesPortAllTrapState needs to be set to enabled  \n        			-   cienaCesLogicalPortConfigPortAllTrapState for the port needs to be set to enabled\n        			-	cienaCesLogicalPortConfigPortLinkUpDownTrapState for the port needs to be set to enabled  \n       			These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity, \n       			cienaGlobalMacAddress, cienaCesPortPgIdMappingNotifChassisIndex, \n       			cienaCesPortPgIdMappingNotifShelfIndex, cienaCesPortPgIdMappingNotifSlotIndex,\n       			cienaCesPortPgIdMappingNotifPortNumber, cienaCesLogicalPortConfigPortAdminState, \n       			cienaCesLogicalPortConfigPortOperState, cienaCesLogicalPortConfigPortName, \n       			cienaCesLogicalPortConfigPortType, cienaCesLogicalPortConfigPortDesc, sysName,\n			sysLocation, cienaCesChassisSystemId and cienaCesLogicalPortConfigEttpAid.
%edes        cienaCesChPortNotificationPortUp A cienaCesChPortNotificationPortUp trap signifies that the SNMP entity, acting in\n                 an agent role, has detected the link status has become operationally up for\n                 one of its communication links.\n       			To enable the device to send this notification:\n        			- cienaCesPortEnhancedLinkTrapState needs to be set to enabled  \n        			- cienaCesPortAllTrapState needs to be set to enabled  \n        			- cienaCesLogicalPortConfigPortAllTrapState for the port needs to be set to enabled\n        			- cienaCesLogicalPortConfigPortLinkUpDownTrapState for the port needs to be set to enabled  \n       			These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity, \n       			cienaGlobalMacAddress, cienaCesChPortPgIdMappingNotifChassisIndex, \n       			cienaCesChPortPgIdMappingNotifShelfIndex, cienaCesChPortPgIdMappingNotifSlotIndex,\n       			cienaCesChPortPgIdMappingNotifPortNumber, cienaCesChPortPgIdMappingNotifChannelNumber,\n                        cienaCesLogicalPortConfigPortAdminState, \n       			cienaCesLogicalPortConfigPortOperState, cienaCesLogicalPortConfigPortName, \n       			cienaCesLogicalPortConfigPortType, cienaCesLogicalPortConfigPortDesc, sysName,\n			sysLocation, cienaCesChassisSystemId and cienaCesLogicalPortConfigEttpAid.
%edes        cienaCesChPortNotificationPortDown A cienaCesChPortNotificationPortDown trap signifies that the SNMP entity, acting in\n                 an agent role, has detected that the link status has become operationally down\n                 for one of its communication links.\n       			To enable the device to send this notification:\n        			- cienaCesPortEnhancedLinkTrapState needs to be set to enabled  \n        			- cienaCesPortAllTrapState needs to be set to enabled  \n        			- cienaCesLogicalPortConfigPortAllTrapState for the port needs to be set to enabled\n        			- cienaCesLogicalPortConfigPortLinkUpDownTrapState for the port needs to be set to enabled  \n       			These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity, \n       			cienaGlobalMacAddress, cienaCesChPortPgIdMappingNotifChassisIndex, cienaCesChPortPgIdMappingNotifShelfIndex, \n       			cienaCesChPortPgIdMappingNotifSlotIndex, cienaCesChPortPgIdMappingNotifPortNumber,\n                        cienaCesChPortPgIdMappingNotifChannelNumber,\n       			cienaCesLogicalPortConfigPortAdminState, cienaCesLogicalPortConfigPortOperState, \n       			cienaCesLogicalPortConfigPortName, cienaCesLogicalPortConfigPortType, cienaCesLogicalPortConfigPortDesc, \n       			sysName, and sysLocation.
%edes        cienaCesPortNotificationPortSignalDegradeSet A cienaCesPortNotificationPortSignalDegradeSet trap is raised when a\n                 signal degrade condition is detected against the specified port.\n\n                 This trap is enabled by default. Variable bindings include:\n                        cienaGlobalSeverity, \n                        cienaGlobalMacAddress,   \n                        cienaCesPortPgIdMappingNotifChassisIndex, \n                        cienaCesPortPgIdMappingNotifShelfIndex, \n                        cienaCesPortPgIdMappingNotifSlotIndex,\n                        cienaCesPortPgIdMappingNotifPortNumber, \n                        cienaCesLogicalPortConfigPortAdminState, \n                        cienaCesLogicalPortConfigPortOperState, \n                        cienaCesLogicalPortConfigPortName, \n                        cienaCesLogicalPortConfigPortType, \n                        cienaCesLogicalPortConfigPortDesc,\n                        sysName,\n                        sysLocation,\n                        cienaCesChassisSystemId,\n                        cienaCesLogicalPortConfigEttpAid,\n                        cienaCesLogicalPortConfigSignalDegradeDetection
%edes        cienaCesPortNotificationPortSignalDegradeClear A cienaCesPortNotificationPortSignalDegradeClear trap is raised when \n                 the signal degrade condition is cleared against the specified port.\n\n                 This trap is enabled by default. Variable bindings include:\n                        cienaGlobalSeverity, \n                        cienaGlobalMacAddress,   \n                        cienaCesPortPgIdMappingNotifChassisIndex, \n                        cienaCesPortPgIdMappingNotifShelfIndex, \n                        cienaCesPortPgIdMappingNotifSlotIndex,\n                        cienaCesPortPgIdMappingNotifPortNumber, \n                        cienaCesLogicalPortConfigPortAdminState, \n                        cienaCesLogicalPortConfigPortOperState, \n                        cienaCesLogicalPortConfigPortName, \n                        cienaCesLogicalPortConfigPortType, \n                        cienaCesLogicalPortConfigPortDesc,\n                        sysName,\n                        sysLocation,\n                        cienaCesChassisSystemId\n                        cienaCesLogicalPortConfigEttpAid.
%edes        cienaCesModuleStateChangeNotification A cienaCesModuleStateChange notification is sent when the operational\n       state of the module is changed.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleTrapState for the module needs to be set to enabled.\n       The above values are set to enabled by default. Variable bindings include:\n       cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx,\n       cienaCesModuleShelfNotifIndx, cienaCesModuleSlotNotifIndx,\n       cienaCesModuleAdminState, and cienaCesModuleOperState.
%edes        cienaCesModuleHealthStatusUnknownNotification This notification is sent whenever the Health Manager detects a status change to unknown.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleTrapState for the module needs to be set to enabled.\n        - cienaCesModuleAllModulesHealthTrapState needs to be set to enabled.\n       The above values are set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n       cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx, cienaCesModuleShelfNotifIndx,\n       cienaCesModuleSlotNotifIndx, cienaCesModuleHealthOriginType, cienaCesModuleHealthOriginName,\n       cienaCesModuleHealthOriginUnitId, cienaCesModuleHealthCategory, cienaCesModuleHealthSubCategory,\n       cienaCesModuleHealthStatus, and cienaCesModuleHealthStatusLast.
%edes        cienaCesModuleHealthStatusWarningNotification This notification is sent whenever the Health Manager detects a status change to warning.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleTrapState for the module needs to be set to enabled.\n        - cienaCesModuleAllModulesHealthTrapState needs to be set to enabled.\n       The above values are set to enabled by default. Variable bindings include:\n       cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx,\n       cienaCesModuleShelfNotifIndx, cienaCesModuleSlotNotifIndx,\n       cienaCesModuleHealthOriginType, cienaCesModuleHealthOriginName,\n       cienaCesModuleHealthOriginUnitId, cienaCesModuleHealthCategory,\n       cienaCesModuleHealthSubCategory, cienaCesModuleHealthStatus, and\n       cienaCesModuleHealthStatusLast.
%edes        cienaCesModuleHealthStatusFaultedNotification This notification is sent whenever the Health Manager detects a status change to faulted.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleTrapState for the module needs to be set to enabled.\n        - cienaCesModuleAllModulesHealthTrapState needs to be set to enabled\n       The above values are set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n       cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx, cienaCesModuleShelfNotifIndx,\n       cienaCesModuleSlotNotifIndx, cienaCesModuleHealthOriginType, cienaCesModuleHealthOriginName,\n       cienaCesModuleHealthOriginUnitId, cienaCesModuleHealthCategory, cienaCesModuleHealthSubCategory,\n       cienaCesModuleHealthStatus, and cienaCesModuleHealthStatusLast.
%edes        cienaCesModuleHealthStatusDegradedNotification This notification is sent whenever the Health Manager detects a status change to degraded.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleTrapState for the module needs to be set to enabled.\n        - cienaCesModuleAllModulesHealthTrapState needs to be set to enabled\n       The above values are set to enabled by default. Variable bindings include:\n       cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx,\n       cienaCesModuleShelfNotifIndx, cienaCesModuleSlotNotifIndx,\n       cienaCesModuleHealthOriginType, cienaCesModuleHealthOriginName,\n       cienaCesModuleHealthOriginUnitId, cienaCesModuleHealthCategory,\n       cienaCesModuleHealthSubCategory, cienaCesModuleHealthStatus,\n       and cienaCesModuleHealthStatusLast.
%edes        cienaCesModuleHealthStatusGoodNotification This notification is sent whenever the Health Manager detects a status change to normal.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleTrapState for the module needs to be set to enabled.\n        - cienaCesModuleAllModulesHealthTrapState needs to be set to enabled\n       The above values are set to enabled by default. Variable bindings include:\n       cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx,\n       cienaCesModuleShelfNotifIndx, cienaCesModuleSlotNotifIndx,\n       cienaCesModuleHealthOriginType, cienaCesModuleHealthOriginName,\n       cienaCesModuleHealthOriginUnitId, cienaCesModuleHealthCategory,\n       cienaCesModuleHealthSubCategory, cienaCesModuleHealthStatus, and\n       cienaCesModuleHealthStatusLast.
%edes        cienaCesModuleSensorHighTempNotification This notification is sent when the cienaCesModuleSensor temperature exceeds the high\n                temperature threshold for the module.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleSensorTrapState needs to be set to enabled.\n       The above values are set to enabled by default. Variable bindings include:\n       cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx,\n       cienaCesModuleShelfNotifIndx, cienaCesModuleSlotNotifIndx,\n       cienaCesModuleSensorNotifIndx, cienaCesModuleSensorDescription,\n       cienaCesModuleSensorCurrentTemp, and cienaCesModuleSensorHighTempThreshold.
%edes        cienaCesModuleSensorLowTempNotification This notification is sent when the cienaCesModuleSensor falls below the low\n                 temperature threshold for the module.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleSensorTrapState needs to be set to enabled.\n       The above values are set to enabled by default. Variable bindings include:\n       cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx,\n       cienaCesModuleShelfNotifIndx, cienaCesModuleSlotNotifIndx, cienaCesModuleSensorNotifIndx,\n       cienaCesModuleSensorDescription, cienaCesModuleSensorCurrentTemp, and\n       cienaCesModuleSensorLowTempThreshold.
%edes        cienaCesModuleSensorNormalTempNotification This notification is sent if the cienaCesModule temperature changes\n         from previously reported high or low temperature exceeding thresholds to normal temperature.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleSensorTrapState needs to be set to enabled.\n       The above values are set to enabled by default. Variable bindings include:\n       cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx,\n       cienaCesModuleShelfNotifIndx, cienaCesModuleSlotNotifIndx,\n       cienaCesModuleSensorNotifIndx, cienaCesModuleSensorDescription,\n       cienaCesModuleSensorCurrentTemp, cienaCesModuleSensorLowTemp,\n       and cienaCesModuleSensorHighTemp.
%edes        cienaCesModuleHASwitchOverNotification This notification is sent for CTM switchover.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleHATrapState needs to be set to enabled.\n       The above values are set to enabled by default. Variable bindings include:\n       cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx,\n       cienaCesModuleShelfNotifIndx, cienaCesModuleSlotNotifIndx,\n       cienaCesModuleSwitchOverReason, cienaCesModuleAdminState,\n       and cienaCesModuleOperState.
%edes        cienaCesModuleProtectionModeColdNotification This notification is sent when the protection mode of the system changes to cold.\n                A COLD protection level is the lowest level of protection.  It implies that the secondary CTM is ready to assume the\n                function of the primary CTM but a failure causing a failover would be service impacting.  The secondary CTM has been\n                synchronized with the same software package, configuration files, etc such that it will return the same state\n                as the previous primary CTM.\n                The protection state of the primary CTM shall not transition from NONE to PROTECTED until the secondary CTM\n                has completed the synchronization.  In the case of a failure on the primary CTM, the secondary CTM will\n                immediately assume primary status, finish its initialization and reboot the PSLMs.  The primary CTM will\n                reapply the configuration to the PSLMs after they have booted. Any unsaved configuration changes will NOT be lost\n                on a failover as configuration changes are propagated to the secondary CTM configuration.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleProtectionModeTrapState needs to be set to enabled.\n       The above values are set to enabled by default. Variable bindings include:\n       cienaGlobalSeverity, cienaGlobalMacAddress, and cienaCesModuleSystemProtectionMode.
%edes        cienaCesModuleProtectionModeWarmNotification This notification is sent when the protection mode of the system changes to warm.\n                This state is not supported on the 5410 platform.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleProtectionModeTrapState needs to be set to enabled.\n       The above values are set to enabled by default. Variable bindings include:\n       cienaGlobalSeverity, cienaGlobalMacAddress, and cienaCesModuleSystemProtectionMode.
%edes        cienaCesModuleProtectionModeUnprotectedNotification This notification is sent when the protection mode of the system changes to unprotected.\n                A protection level of unprotected implies that there is no secondary CTM present in the system or\n                that the current secondary CTM is not in a state to provide any protection.  In the case of the CTM failure,\n                the primary CTM will reboot and subsequently reboot all the PSLMs, causing loss of existing switched traffic patterns.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleProtectionModeTrapState needs to be set to enabled.\n       The above values are set to enabled by default. Variable bindings include:\n       cienaGlobalSeverity, cienaGlobalMacAddress, and cienaCesModuleSystemProtectionMode.
%edes        cienaCesModuleProtectionModeHotNotification This notification is sent when the protection mode of the system changes to hot.\n                A HOT protection level is the highest level of protection.  It implies that the secondary CTM is ready to assume the\n                function of the primary CTM and a failure causing a failover would NOT be service impacting.  The secondary CTM has been\n                synchronized with the same software package, configuration files, etc such that it will return the same state\n                as the previous primary CTM.\n                The protection state of the primary CTM shall not transition from NONE to PROTECTED until the secondary CTM\n                has completed the synchronization.  In the case of a failure on the primary CTM, the secondary CTM will\n                immediately assume primary status, finish its initialization and audit the PSLMs.  All current established traffic patterns\n                will be maintained with a minimal loss of traffic.  Any unsaved configuration changes will NOT be lost\n                on a failover as configuration changes are propagated to the secondary CTM configuration.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleProtectionModeTrapState needs to be set to enabled.\n       The above values are set to enabled by default. Variable bindings include:\n       cienaGlobalSeverity, cienaGlobalMacAddress, and cienaCesModuleSystemProtectionMode.
%edes        cienaCesModulePostErrorNotification This notification is sent when a module POST error is detected.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModulePOSTErrorTrapState needs to be set to enabled.\n       The above values are set to enabled by default. Variable bindings include:\n       cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx,\n       cienaCesModuleShelfNotifIndx, cienaCesModuleSlotNotifIndx, and\n       cienaCesModulePOSTErrorDescription.
%edes        cienaCesModuleFastReloadUnsuccessfulNotification This notification is sent when the deprov (cold switchover or failover) fails.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleHATrapState needs to be set to enabled.\n       The above values are set to enabled by default. Variable bindings include:\n       cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx,\n       cienaCesModuleShelfNotifIndx, cienaCesModuleSlotNotifIndx,\n       cienaCesModuleAdminState, and cienaCesModuleOperState.
%edes        cienaCesModuleHitlessModeUnsuccessfulNotification This notification is sent when the audit (hot failover or switchover) fails.\n       To enable the device to send this notification:\n        - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n        - cienaCesModuleHATrapState needs to be set to enabled.\n       The above values are set to enabled by default. Variable bindings include:\n       cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx,\n       cienaCesModuleShelfNotifIndx, cienaCesModuleSlotNotifIndx,\n       cienaCesModuleAdminState, and cienaCesModuleOperState.
%edes        cienaCesModuleSwitchFabricDisruptedUnrecoverableNotification This notification is sent when the switch fabric detects a game-over failure and the system\n                 cannot automatically correct without resetting certain fabric subsystems. This kind of a\n                 disruption can cause a major service interruption.\n                 To enable the device to send this notification:\n                 - cienaCesModuleAllModulesTrapState needs to be set to enabled\n         - cienaCesModuleSwitchFabricDisruptedTrapState needs to be set to enabled.\n        The above values are set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n        cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx, cienaCesModuleShelfNotifIndx,\n        and cienaCesModuleSlotNotifIndx.
%edes        cienaCesModuleSwitchFabricDisruptedRecoverableNotification This notification is sent when the switch fabric detects game-over failure and the system\n         can automatically correct it.\n            To enable the device to send this notification:\n            - cienaCesModuleAllModulesTrapState needs to be set to enabled\n        - cienaCesModuleSwitchFabricDisruptedTrapState needs to be set to enabled.\n       The above values are set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n       cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx, cienaCesModuleShelfNotifIndx,\n       and cienaCesModuleSlotNotifIndx.
%edes        cienaCesModuleBladeInsertedNotification This notification is sent when a line module is inserted.\n         To enable the device to send this notification:\n         - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n         - cienaCesModuleBladeInsertedTrapState needs to be set to enabled.\n         The above values are set to enabled by default. Variable bindings include:\n         cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx,\n         cienaCesModuleShelfNotifIndx, cienaCesModuleSlotNotifIndx, cienaCesModuleModel\n         and cienaCesModuleSlotName.
%edes        cienaCesModuleBladeRemovedNotification This notification is sent when a line module is removed.\n         To enable the device to send this notification:\n         - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n         - cienaCesModuleBladeRemovedTrapState needs to be set to enabled.\n         The above values are set to enabled by default. Variable bindings include:\n         cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx,\n         cienaCesModuleShelfNotifIndx, cienaCesModuleSlotNotifIndx, cienaCesModuleModel\n         and cienaCesModuleSlotName.
%edes        cienaCesModuleSwitchFabricDisruptedRecoverableClrNotification This notification is sent when the game-over failure is automatically corrected. \n  	     To enable the device to send this notification:  \n  	     - cienaCesModuleAllModulesTrapState needs to be set to enabled\n             - cienaCesModuleSwitchFabricDisruptedTrapState needs to be set to enabled.   \n             The above values are set to enabled by default. Variable bindings include: cienaGlobalSeverity, \n             cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx, cienaCesModuleShelfNotifIndx, \n             and cienaCesModuleSlotNotifIndx.
%edes        cienaCesModuleConfigEntryCreatedNotification This notification is sent when a line module configuration entry is created.\n         To enable the device to send this notification:\n         - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n         - cienaCesModuleConfigEntryCreatedTrapState needs to be set to enabled.\n         The above values are set to enabled by default. Variable bindings include:\n         cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx,\n         cienaCesModuleShelfNotifIndx, and cienaCesModuleSlotNotifIndx, and\n         cienaCesModuleModel.
%edes        cienaCesModuleConfigEntryDeletedNotification This notification is sent when a line module configuration entry is deleted.\n         To enable the device to send this notification:\n         - cienaCesModuleAllModulesTrapState needs to be set to enabled.\n         - cienaCesModuleConfigEntryDeletedTrapState needs to be set to enabled.\n         The above values are set to enabled by default. Variable bindings include:\n         cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx,\n         cienaCesModuleShelfNotifIndx, and cienaCesModuleSlotNotifIndx, and\n         cienaCesModuleModel.
%edes        cienaCesClockRateMismatchNotification This notification is sent when it is discovered that clock rate is not same on all cards.\n       This kind of error may affect traffic on the whole system and is a critical interruption.\n       To enable the device to send this notification:\n       - cienaCesModuleAllModulesTrapState needs to be set to enabled\n       The above value is set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n       cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx, cienaCesModuleShelfNotifIndx,\n       and cienaCesModuleSlotNotifIndx.
%edes        cienaCesModuleIncompatibilityNotification This notification is sent when it is discovered that module model is not compatible with current\n      datapath mode. Such condition indicates that such configuration is not supported, may affect traffic\n      and is a critical interruption.\n       To enable the device to send this notification:\n       - cienaCesModuleAllModulesTrapState needs to be set to enabled\n       The above value is set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n       cienaGlobalMacAddress, cienaCesModuleChassisNotifIndx, cienaCesModuleShelfNotifIndx,\n       cienaCesModuleSlotNotifIndx and cienaCesModuleModel
%edes        cienaCesChassisPowerSupplyFaultedNotification A cienaCesChassisPowerSupplyFaultedNotification is sent if a\n                power supply state changes to one of these:\n                                - faulted (2)\n                                - offline (3)\n                                - unequipped(4)\n                To enable the device to send this trap:\n                        -       cienaCesChassisAllPowerSupplyTrapState needs to be set to enabled\n                cienaCesChassisAllPowerSupplyTrapState is set to enabled by default.
%edes        cienaCesChassisPowerSupplyOnlineNotification A cienaCesChassisPowerSupplyOnlineNotification is sent if a\n                power supply state changes to online(1).\n                To enable the device to send this trap:\n                        -       cienaCesChassisAllPowerSupplyTrapState needs to be set to enabled\n                cienaCesChassisAllPowerSupplyTrapState is set to enabled by default.
%edes        cienaCesChassisFanHiTempNotification A cienaCesChassisFanTempNotification is sent if the cienaCesChassisFanTemp is changed to high.\n                To enable the device to send this trap:\n                        -       cienaCesChassisAllFanTempTrapState needs to be set to enabled\n                The above object is set to enabled by default.
%edes        cienaCesChassisFanNormalTempNotification A cienaCesChassisFanTempNotification is sent if the cienaCesChassisFanTemp is changed to normal.\n                To enable the device to send this trap:\n                        -       cienaCesChassisAllFanTempTrapState needs to be set to enabled\n                The above object is set to enabled by default.
%edes        cienaCesChassisFanLoTempNotification A cienaCesChassisFanTempNotification is sent if the cienaCesChassisFanTemp is changed to low.\n                To enable the device to send this trap:\n                        -       cienaCesChassisAllFanTempTrapState needs to be set to enabled\n                The above object is set to enabled by default.
%edes        cienaCesChassisFanSpeedMaxThresholdNotification A cienaCesChassisFanSpeedMaxThresholdNotification is sent if the fan speed shoots to\n                maximum threshold.\n                The above object is set to enabled by default.
%edes        cienaCesChassisFanSpeedMinThresholdNotification A cienaCesChassisFanSpeedMinThresholdNotification is sent if the fan speed drops to\n                minimum threshold.\n                To enable the device to send this trap:\n                        -       cienaCesChassisAllFanTrapState needs to be set to enabled\n                The above object is set to enabled by default.
%edes        cienaCesChassisFanSpeedNormalRangeNotification A cienaCesChassisFanSpeedNormalRangeNotification is sent if the fan speed returns to normal value.\n                To enable the device to send this trap:\n                        -       cienaCesChassisAllFanTrapState needs to be set to enabled\n                The above object is set to enabled by default.
%edes        cienaCesChassisFanTrayRemoveNotification This notification is sent whenever a fan tray is removed from the chassis.\n                To enable the device to send this trap:\n                        -       cienaCesChassisAllFanTrayTrapState needs to be set to enabled\n                The above object is set to enabled by default.
%edes        cienaCesChassisFanTrayInsertNotification This notification is sent whenever a fan tray is inserted in the chassis.\n                To enable the device to send this trap:\n                        -       cienaCesChassisAllFanTrayTrapState needs to be set to enabled\n                The above object is set to enabled by default.
%edes        cienaCesChassisFanTrayStatusFaultedNotification This notification is sent whenever the fan tray status changes to one of the following:\n                        -            pending(2),\n                        rpm-warning(3),\n                        uninstalled(4),\n                        unknown(99)\n                To enable the device to send this trap:\n                        -       cienaCesChassisAllFanTrayTrapState needs to be set to enabled\n                The above object is set to enabled by default.
%edes        cienaCesChassisFanTrayStatusOkNotification This notification is sent whenever the fan tray status changes to ok(1).\n                To enable the device to send this trap:\n                        -       cienaCesChassisAllFanTrayTrapState needs to be set to enabled\n                The above object is set to enabled by default.
%edes        cienaCesChassisHealthStatusUnknownNotification This notification is sent whenever the health manager status changes to unknown for the specified cienaCesChassisHealthCategory and\n                cienaCesChassisHealthSubCategory. The cienaCesChassisHealthStatus indicates a warning status while the cienaCesChassisHealthStatusLast\n                indicates the previous health status. The health status can be one of unknown, normal, warning, degraded or faulted.\n                An unknown status indicates that the system has not yet been able to determine the initial state.  This can be due to either\n                the system still not completed booting or a component has just been installed and has not had sufficient time to initialize\n                and provide its state to the health monitoring system.\n                To enable the device to send this trap:\n                        -       cienaCesChassisHealthTrapState needs to be set to enabled\n                The above object is set to enabled by default.
%edes        cienaCesChassisHealthStatusWarningNotification This notification is sent whenever the health manager status changes to warning for the specified cienaCesChassisHealthCategory and\n                cienaCesChassisHealthSubCategory. The cienaCesChassisHealthStatus indicates a warning status while the cienaCesChassisHealthStatusLast\n                indicates the previous health status. The health status can be one of unknown, normal, warning, degraded or faulted. A warning status\n                indicates that the monitored item is experiencing some errors or is deviated from specified ranges, but is still functional.\n                To enable the device to send this trap:\n                        -       cienaCesChassisHealthTrapState needs to be set to enabled\n                The above object is set to enabled by default.
%edes        cienaCesChassisHealthStatusFaultedNotification This notification is sent whenever the health manager status changes to faulted for the specified cienaCesChassisHealthCategory and\n                cienaCesChassisHealthSubCategory. The cienaCesChassisHealthStatus indicates a faulted status while the cienaCesChassisHealthStatusLast\n                indicates the previous health status. The health status can be one of unknown, normal, warning, degraded or faulted.  A faulted status\n                indicates that the monitored item has failed or is so far out of range that the item should be faulted.\n                To enable the device to send this trap:\n                        -       cienaCesChassisHealthTrapState needs to be set to enabled\n                The above object is set to enabled by default.
%edes        cienaCesChassisHealthStatusDegradedNotification This notification is sent whenever the health manager status changes to degraded for the specified cienaCesChassisHealthCategory and\n                cienaCesChassisHealthSubCategory. The cienaCesChassisHealthStatus indicates a degraded status while the cienaCesChassisHealthStatusLast\n                indicates the previous health status.  The health status can be one of unknown, normal, warning, degraded or faulted.  A degraded status\n                typically indicates that the monitored item is experiencing major problems or is well out of range.  Performance or system reliability is\n                being affected.\n                To enable the device to send this trap:\n                        -       cienaCesChassisHealthTrapState needs to be set to enabled\n                The above object is set to enabled by default.
%edes        cienaCesChassisHealthStatusGoodNotification This notification is sent whenever the health manager status changes to normal for the specified cienaCesChassisHealthCategory and\n                cienaCesChassisHealthSubCategory. The cienaCesChassisHealthStatus indicates a normal status while the cienaCesChassisHealthStatusLast\n                indicates the previous health status. The health status can be one of unknown, normal, warning, degraded or faulted.  A normal status\n                indicates that the monitored item is working correctly or within tolerance.\n                To enable the device to send this trap:\n                        -       cienaCesChassisHealthTrapState needs to be set to enabled\n                The above object is set to enabled by default.
%edes        cienaCesChassisRebootNotification A cienaCesChassisRebootNotification is sent when the device is rebooted.  The cienaCesChassisRebootNotification has no guarantee to be sent upon a reboot and will likely misbehave if informs are used.  If sent, the cienaCesChassisRebootReasonErrorType is set to indicate the reboot reason. 
%edes        cienaCesChassisIOMStateChangeNotification This notification is generated when the value of cienaCesChassisIOMState changes.
%edes        cienaCesChassisIOMBuzzerEnableChangeNotification This notification is generated when the value of cienaCesChassisIOMBuzzerEnable changes.
%edes        cienaCesChassisIOMBuzzerStateChangeNotification This notification is generated when the value of cienaCesChassisIOMBuzzerState changes.
%edes        cienaCesChassisIOMAlarmOutputStateChangeNotification This notification is generated when the value of cienaCesChassisIOMAlarmOutputState changes.
%edes        cienaCesChassisIOMAlarmInputStateChangeNotification This notification is generated when the value of cienaCesChassisIOMAlarmInputState changes.
%edes        cienaCesChassisUsbFlashEnabledNotification This notification is generated when CTX USB hubs are enabled via user config.
%edes        cienaCesChassisUsbFlashDisabledNotification This notification is generated when CTX USB hubs are disabled via user config.
%edes        cienaCesChassisAirFilterServiceNotification This notification is generated when the air filter service interval is reached.
%edes        cienaCesChassisAlarmCutoffNotification A cienaCesChassisAlarmCutoffNotification is sent if:\n             1) The alarm cutoff button on either CM is pushed.\n             2) The CLI alarm cutoff command is issued.\n             3) The SNMP alarm cutoff command is issued.\n           To enable the device to send this trap:\n             cienaCesChassisAlarmCutoffTrapState needs to be set to enabled.
%edes        cienaCesChassisDyingGaspNotification This notification is sent when the system losses power
%edes        cienaCesChassisExternalAlarmSetNotification This notification is sent when an external alarm is raised
%edes        cienaCesChassisExternalAlarmClearNotification This notification is sent when an external alarm is cleared
%edes        cienaCesCfmFaultTrapSet A notification is sent whenever the fault is detected. Setting the\n       cienaCesCfmFaultTrapState object to 'disabled' causes this trap to be\n       suppressed. Variable bindings include cienaGlobalSeverity,\n       cienaGlobalMacAddress, cienaCesCfmServiceName,\n       cienaCesCfmServiceType, cienaCesCfmServiceValue,\n       cienaCesCfmServiceAdminState, cienaCesCfmServiceOperState,\n       cienaCesCfmServiceMdLevel, cienaCesCfmServiceFaultTime,\n       cienaCesCfmServiceFaultType, cienaCesCfmServiceFaultDesc,\n       cienaCesCfmServiceFaultMep, and cienaCesCfmServiceVsPbtName.
%edes        cienaCesCfmFaultTrapClear A notification is sent whenever the fault is resolved and cleared. Setting the\n       cienaCesCfmFaultTrapState object to 'disabled' causes this trap to be\n       suppressed. Variable bindings include: cienaGlobalSeverity,\n       cienaGlobalMacAddress, cienaCesCfmServiceName,\n       cienaCesCfmServiceType, cienaCesCfmServiceValue,\n       cienaCesCfmServiceAdminState, cienaCesCfmServiceOperState,\n       cienaCesCfmServiceMdLevel, cienaCesCfmServiceVsPbtName,\n       cienaCesCfmServiceFaultTime, cienaCesCfmServiceFaultType,\n       cienaCesCfmServiceFaultDesc, and cienaCesCfmServiceFaultMep.
%edes        cienaCesCfmAverageDelayFaultTrapSet A notification is sent whenever average delay goes above delay-threshold \n       during a delay measurement test. Setting the cienaCesCfmDelayFaultTrapState \n       object to 'disabled' causes this trap to be suppressed. Variable bindings \n       include: cienaGlobalSeverity, cienaGlobalMacAddress, \n       cienaCesCfmDelayMsgServiceName, cienaCesCfmDelayMsgLocalMEPId,\n       cienaCesCfmDelayMsgAverageDelayThreshold, and cienaCesCfmDelayMsgAverageDelay.
%edes        cienaCesCfmAverageDelayFaultTrapClear A notification is sent whenever average delay comes back to normal. Setting the\n       cienaCesCfmDelayFaultTrapState object to 'disabled' causes this trap to be\n       suppressed. Variable bindings include: cienaGlobalSeverity, cienaGlobalMacAddress, \n       cienaCesCfmDelayMsgServiceName, cienaCesCfmDelayMsgLocalMEPId,\n       cienaCesCfmDelayMsgAverageDelayThreshold, and cienaCesCfmDelayMsgAverageDelay.
%edes        cienaCesCfmMaximumDelayFaultTrapSet A notification is sent whenever maximum delay goes above delay-threshold during\n       a delay measurement test. Setting the cienaCesCfmDelayFaultTrapState object to  \n       'disabled' causes this trap to be suppressed. Variable bindings include: \n       cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesCfmDelayMsgServiceName,\n       cienaCesCfmDelayMsgLocalMEPId, cienaCesCfmDelayMsgMaximumDelayThreshold, and\n       cienaCesCfmDelayMsgMaximumDelay.
%edes        cienaCesCfmMaximumDelayFaultTrapClear A notification is sent whenever maximum delay comes back to normal. Setting\n       the cienaCesCfmDelayFaultTrapState object to 'disabled' causes this trap to\n       be suppressed. Variable bindings include: cienaGlobalSeverity,\n       cienaGlobalMacAddress, cienaCesCfmDelayMsgServiceName, cienaCesCfmDelayMsgLocalMEPId,\n       cienaCesCfmDelayMsgMaximumDelayThreshold, and cienaCesCfmDelayMsgMaximumDelay.
%edes        cienaCesCfmAverageJitterTrapSet A notification is sent whenever average jitter goes above average jitter-threshold \n       during a jitter measurement test. Setting the cienaCesCfmJitterFaultTrapState object \n       to 'disabled' causes this trap to be suppressed. Variable bindings include: \n       cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesCfmDelayMsgServiceName,\n       cienaCesCfmDelayMsgLocalMEPId, cienaCesCfmDelayMsgAverageJitterThreshold, and\n       cienaCesCfmDelayMsgAverageJitter.
%edes        cienaCesCfmAverageJitterTrapClear A notification is sent whenever average jitter comes back to normal. Setting\n       the cienaCesCfmJitterFaultTrapState object to 'disabled' causes this trap to be\n       suppressed. Variable bindings include: cienaGlobalSeverity, cienaGlobalMacAddress, \n       cienaCesCfmDelayMsgServiceName, cienaCesCfmDelayMsgLocalMEPId,\n       cienaCesCfmDelayMsgAverageJitterThreshold, and cienaCesCfmDelayMsgAverageJitter.
%edes        cienaCesCfmMaximumJitterTrapSet A notification is sent whenever maximum jitter goes above maximum jitter-threshold during \n       a jitter measurement test. Setting the cienaCesCfmJitterFaultTrapState object to 'disabled' \n       causes this trap to be suppressed. Variable bindings include: cienaGlobalSeverity,\n       cienaGlobalMacAddress, cienaCesCfmDelayMsgServiceName, cienaCesCfmDelayMsgLocalMEPId,\n       cienaCesCfmDelayMsgMaximumJitterThreshold, and cienaCesCfmDelayMsgMaximumJitter.
%edes        cienaCesCfmMaximumJitterTrapClear A notification is sent whenever maximum jitter comes back to normal. Setting\n       the cienaCesCfmJitterFaultTrapState object to 'disabled' causes this trap to be\n       suppressed. Variable bindings include: cienaGlobalSeverity,cienaGlobalMacAddress, \n       cienaCesCfmDelayMsgServiceName, cienaCesCfmDelayMsgLocalMEPId, \n       cienaCesCfmDelayMsgMaximumJitterThreshold, and cienaCesCfmDelayMsgMaximumJitter.
%edes        cienaCesCfmFrameLossNearTrapSet A notification is sent whenever frame-loss-near goes above frame-loss-near threshold during a \n       frame loss measurement test. Setting the cienaCesCfmFrameLossNearFaultTrapState object to \n       'disabled' causes this trap to be suppressed. Variable bindings include: cienaGlobalSeverity,\n       cienaGlobalMacAddress, cienaCesCfmFrameLossMsgServiceName,cienaCesCfmFrameLossMsgLocalMEPId,\n       cienaCesCfmFrameLossMsgNearLossThreshold, and cienaCesCfmFrameLossMsgFrameLossNear.
%edes        cienaCesCfmFrameLossNearTrapClear A notification is sent whenever frame-loss-near returns to normal during a \n       frame loss measurement test. Setting the cienaCesCfmFrameLossNearFaultTrapState \n       object to 'disabled' causes this trap to be suppressed. Variable bindings include: \n       cienaGlobalSeverity, cienaCesCfmFrameLossMsgServiceName,\n       cienaCesCfmFrameLossMsgLocalMEPId, cienaCesCfmFrameLossMsgNearLossThreshold, and\n       cienaCesCfmFrameLossMsgFrameLossNear.
%edes        cienaCesCfmFrameLossFarTrapSet A notification is sent whenever frame-loss-far goes above frame-loss-far threshold during a \n       frame loss measurement test. Setting the cienaCesCfmFrameLossFarFaultTrapState object to \n       'disabled' causes this trap to be suppressed. Variable bindings include: cienaGlobalSeverity,\n       cienaGlobalMacAddress, cienaCesCfmFrameLossMsgServiceName, cienaCesCfmFrameLossMsgLocalMEPId,\n       cienaCesCfmFrameLossMsgFarLossThreshold, and cienaCesCfmFrameLossMsgFrameLossFar.
%edes        cienaCesCfmFrameLossFarTrapClear A notification is sent whenever frame-loss-far returns to normal during a \n       frame loss measurement test. Setting the cienaCesCfmFrameLossFarFaultTrapState \n       object to 'disabled' causes this trap to be suppressed. Variable bindings \n       include: cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesCfmFrameLossMsgServiceName,\n       cienaCesCfmFrameLossMsgLocalMEPId, cienaCesCfmFrameLossMsgFarLossThreshold, and\n       cienaCesCfmFrameLossMsgFrameLossFar.
%edes        cienaCesSyntheticLossSessionNearFaultTrap A notification is sent whenever the fault is detected during\n		a Synthetic Loss Measurement test with a near loss threshold fault. Setting the \n		cienaCesCfmSyntheticLossNearFaultTrapState object to 'disabled' causes this trap to be suppressed.\n		Variable bindings include : cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesCfmSyntheticLossSessionServiceName,\n		cienaCesCfmSyntheticLossSessionFrameLossNear, cienaCesCfmSyntheticLossSessionLossNearThreshold.
%edes        cienaCesSyntheticLossSessionFarFaultTrap A notification is sent whenever the fault is detected during\n		a Synthetic Loss Measurement test with a far loss threshold fault. Setting the \n		cienaCesCfmSyntheticLossFarFaultTrapState object to 'disabled' causes this trap to be suppressed.\n		Variable bindings include: cienaCesCfmSyntheticLossSessionServiceName, cienaCesCfmSyntheticLossSessionFrameLossFar,\n		cienaCesCfmSyntheticLossSessionLossFarThreshold.
%edes        cienaCesSyntheticLossSessionNearFaultClearTrap A notification is sent whenever the fault is cleared during\n		a Synthetic Loss Measurement test with a near loss threshold fault.Setting the \n		cienaCesCfmSyntheticLossNearFaultTrapState object to 'disabled' causes this trap to be suppressed.\n		Variable bindings include: cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesCfmSyntheticLossSessionServiceName,\n		cienaCesCfmSyntheticLossSessionFrameLossNear, cienaCesCfmSyntheticLossSessionLossNearThreshold.
%edes        cienaCesSyntheticLossSessionFarFaultClearTrap A notification is sent whenever the fault is cleared during\n		a Synthetic Loss Measurement test with a far loss threshold fault.Setting the \n		cienaCesCfmSyntheticLossFarFaultTrapState object to 'disabled' causes this trap to be suppressed.\n		Variable Bindings include: cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesCfmSyntheticLossSessionServiceName,\n		cienaCesCfmSyntheticLossSessionFrameLossFar,cienaCesCfmSyntheticLossSessionLossFarThreshold
%edes        cienaCesCfmAverageDelayVariationTrapSet A notification is sent whenever Average Delay Variation goes above Average Delay Variation threshold during \n              a Delay Variation measurement test. Setting the cienaCesCfmDelayVariationFaultTrapState object to 'disabled' \n              causes this trap to be suppressed. Variable bindings include: cienaGlobalSeverity,\n              cienaGlobalMacAddress, cienaCesCfmDelayMsgServiceName, cienaCesCfmDelayMsgLocalMEPId,\n              cienaCesCfmDelayMsgAverageDelayVariationThreshold, and cienaCesCfmDelayMsgAverageDelayVariation.
%edes        cienaCesCfmAverageDelayVariationTrapClear A notification is sent whenever Average Delay Variation comes back below the threshold level during\n              a Delay Variation measurement test. Setting the cienaCesCfmDelayVariationFaultTrapState object to 'disabled' \n              causes this trap to be suppressed. Variable bindings include: cienaGlobalSeverity,\n              cienaGlobalMacAddress, cienaCesCfmDelayMsgServiceName, cienaCesCfmDelayMsgLocalMEPId,\n              cienaCesCfmDelayMsgAverageDelayVariationThreshold, and cienaCesCfmDelayMsgAverageDelayVariation.
%edes        cienaCesCfmMaximumDelayVariationTrapSet A notification is sent whenever Maximum Delay Variation goes above Maximum Delay Variation threshold during \n              a Delay Variation measurement test. Setting the cienaCesCfmDelayVariationFaultTrapState object to 'disabled' \n              causes this trap to be suppressed. Variable bindings include: cienaGlobalSeverity,\n              cienaGlobalMacAddress, cienaCesCfmDelayMsgServiceName, cienaCesCfmDelayMsgLocalMEPId,\n              cienaCesCfmDelayMsgMaximumDelayVariationThreshold, and cienaCesCfmDelayMsgMaximumDelayVariation.
%edes        cienaCesCfmMaximumDelayVariationTrapClear A notification is sent whenever Maximum Delay Variation comes back below the threshold level during\n              a Delay Variation measurement test. Setting the cienaCesCfmDelayVariationFaultTrapState object to 'disabled' \n              causes this trap to be suppressed. Variable bindings include: cienaGlobalSeverity,\n              cienaGlobalMacAddress, cienaCesCfmDelayMsgServiceName, cienaCesCfmDelayMsgLocalMEPId,\n              cienaCesCfmDelayMsgMaximumDelayVariationThreshold, and cienaCesCfmDelayMsgMaximumDelayVariation.
%edes        cienaCesCfmSyntheticLossSessionSignalDegradeFaultTrapSet A notification is sent whenever the signal degrade fault is detected during \n              a Synthetic Loss Measurement test.
%edes        cienaCesCfmSyntheticLossSessionSignalDegradeFaultTrapClear A notification is sent whenever the signal degrade fault is cleared during \n              a Synthetic Loss Measurement test.
%edes        cienaCesCfmFrameLossTestNearTrapSet A notification is sent whenever frame-loss-near goes above frame-loss-near threshold during a \n            frame loss measurement test. Setting the cienaCesCfmFrameLossTestNearTrapSetState object to \n            'disabled' causes this trap to be suppressed. Variable bindings include: cienaGlobalSeverity,\n            cienaGlobalMacAddress, cienaCesCfmFrameLossTestServiceName, cienaCesCfmFrameLossTestNearLoss,\n            and cienaCesCfmFrameLossTestNearLossThreshold.
%edes        cienaCesCfmFrameLossTestNearTrapClear A notification is sent whenever frame-loss-near returns to normal during a \n            frame loss measurement test. Setting the cienaCesCfmFrameLossTestNearTrapClearState \n            object to 'disabled' causes this trap to be suppressed. Variable bindings include: \n            cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesCfmFrameLossTestServiceName,\n            cienaCesCfmFrameLossTestNearLoss and cienaCesCfmFrameLossTestNearLossThreshold.
%edes        cienaCesCfmFrameLossTestFarTrapSet A notification is sent whenever frame-loss-far goes above frame-loss-far threshold during a \n            frame loss measurement test. Setting the cienaCesCfmFrameLossTestFarTrapSetState object to \n            'disabled' causes this trap to be suppressed. Variable bindings include: cienaGlobalSeverity,\n            cienaGlobalMacAddress, cienaCesCfmFrameLossTestServiceName, cienaCesCfmFrameLossTestFarLoss,\n            and cienaCesCfmFrameLossTestFarLossThreshold.
%edes        cienaCesCfmFrameLossTestFarTrapClear A notification is sent whenever frame-loss-far returns to normal during a \n            frame loss measurement test. Setting the cienaCesCfmFrameLossTestFarTrapClearState \n            object to 'disabled' causes this trap to be suppressed. Variable bindings \n            include: cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesCfmFrameLossTestServiceName,\n            cienaCesCfmFrameLossTestFarLoss and cienaCesCfmFrameLossTestFarLossThreshold.
%edes        cienaCesIpMgmtInterfaceAddrChgNotification A cienaCesIpMgmtInterfaceAddrChgNotification is sent when the\n     IP address of an interface changes. To enable the device to send\n     this notification, cienaCesIPMgmtInterfaceAddrChangeTrapState\n     needs to be set to enabled. The cienaCesIPMgmtInterfaceAddrChangeTrapState\n     is set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n     cienaGlobalMacAddress, cienaCesIpMgmtInterfaceName,\n     cienaCesIpMgmtInterfaceOperIpAddr, and cienaCesIpMgmtInterfaceOperSubnet.
%edes        cienaCesIpMgmtInterfaceGatewayChgNotification A cienaCesIpMgmtInterfaceGatewayChgNotification is sent when the\n     IP address of an interface gateway changes. To enable the device to send\n     this notification, cienaCesIPMgmtInterfaceGatewayAddrChangeTrapState needs\n     to be set to enabled. The cienaCesIPMgmtInterfaceGatewayAddrChangeTrapState\n     is set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n     cienaGlobalMacAddress, and cienaCesIpGatewayAddr.
%edes        cienaCesIpInterfaceUpNotification A cienaCesIpInterfaceUpNotification trap signifies that the SNMP entity, acting in\n                an agent role, has detected the interface's status has become operationally up.\n                This object is set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n                cienaGlobalMacAddress, cienaCesIpDataInterfaceName, cienaCesIpDataInterfaceIfIndex,\n                cienaCesIpDataInterfaceAdminState, cienaCesIpDataInterfaceOperState.
%edes        cienaCesIpInterfaceDownNotification A cienaCesIpInterfaceDownNotification trap signifies that the SNMP entity, acting in\n                an agent role, has detected the interface's status has become operationally up.\n                This object is set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n                cienaGlobalMacAddress, cienaCesIpDataInterfaceName, cienaCesIpDataInterfaceIfIndex,\n                cienaCesIpDataInterfaceAdminState, cienaCesIpDataInterfaceOperState.
%edes        cienaCesPortXcvrRemovedNotification A cienaCesPortXcvrRemovedNotification is sent if the transceiver has been removed. \n		To enable the device to send this notification: cienaCesPortXcvrLinkStateChangeTrapState, \n		cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to \n		enabled. These objects are set to enabled by default. Variable bindings include: \n		cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, \n		cienaCesPortXcvrNotifShelfIndex, cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber\n		and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrInsertedNotification A cienaCesPortXcvrInsertedNotification is sent if the transceiver has been inserted. To \n		enable the device to send this notification: cienaCesPortXcvrLinkStateChangeTrapState, \n		cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to \n		enabled. These objects are set to enabled by default. Variable bindings include: \n		cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, \n		cienaCesPortXcvrNotifShelfIndex, cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber\n		and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrErrorTypeNotification A cienaCesPortXcvrErrorTypeNotification is sent if the transceiver is detected to be faulted.\n		The reason for the failure is specified by cienaCesPortXcvrErrorType. To enable the device to \n		send this notification: cienaCesPortXcvrErrorTrapState, cienaCesLogicalPortConfigPortAllTrapState,\n		and cienaCesPortAllTrapState need to be set to enabled. These objects are enabled by default. \n		Variable bindings include: cienaGlobalSeverity, cienaGlobalMacAddress, \n		cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex, cienaCesPortXcvrNotifSlotIndex, \n		cienaCesPortXcvrNotifPortNumber, cienaCesPortXcvrErrorType and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrTempHighNotification A cienaCesPortXcvrTempHighNotification is sent if the transceiver temperature exceeds the \n		threshold. To enable the device to send this notification: cienaCesPortXcvrTempChangeTrapState, \n		cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to enabled.\n		These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n		cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex, \n		cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrTempLowNotification A cienaCesPortXcvrTempLowNotification is sent if the transceiver temperature falls below the \n		threshold. To enable the device to send this notification: cienaCesPortXcvrTempChangeTrapState, \n		cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to enabled.\n		These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n		cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex,\n		cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrTempNormalNotification A cienaCesPortXcvrTempNormalNotification is sent when the transceiver temperature returns to \n		normal state.  To enable the device to send this notification: cienaCesPortXcvrTempChangeTrapState, \n		cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to enabled.\n		These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n		cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex,\n		cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrVoltageHighNotification A cienaCesPortXcvrVoltageHighNotification is sent if the transceiver voltage exceeds the \n		threshold. To enable the device to send this notification: cienaCesPortXcvrVoltageChangeTrapState, \n		cienaCesLogicalPortConfigPortAllTrapState, cienaCesPortAllTrapState needs to be set to enabled\n       These objects are set to enabled by default. Variable bindings include: \n       cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex,\n       cienaCesPortXcvrNotifShelfIndex, cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and\n       cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrVoltageLowNotification A cienaCesPortXcvrVoltageLowNotification is sent if the transceiver voltage falls below the \n		threshold. To enable the device to send this notification: cienaCesPortXcvrVoltageChangeTrapState,\n		cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to enabled.\n		These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n		cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex,\n		cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrVoltageNormalNotification A cienaCesPortXcvrVoltageNormalNotification is sent when the transceiver voltage returns back\n		to normal state. To enable the device to send this notification: cienaCesPortXcvrVoltageChangeTrapState,\n		cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to enabled.\n		These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n		cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex, \n		cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrBiasHighNotification A cienaCesPortXcvrBiasHighNotification is sent if the transceiver bias exceeds the \n		threshold. To enable the device to send this notification: cienaCesPortXcvrBiasChangeTrapState,\n		cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to enabled.\n		These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity, \n		cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex, \n		cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrBiasLowNotification A cienaCesPortXcvrBiasLowNotification is sent if the transceiver bias falls below the \n		threshold. To enable the device to send this notification: cienaCesPortXcvrBiasChangeTrapState, \n		cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to enabled.\n		These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n		cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex, \n		cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrBiasNormalNotification A cienaCesPortXcvrBiasNormalNotification is sent when the transceiver bias returns to normal \n		state. To enable the device to send this notification: cienaCesPortXcvrBiasChangeTrapState, \n		cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to enabled.\n		These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n		cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex, \n		cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrTxPowerHighNotification A cienaCesPortXcvrTxPowerHighNotification is sent if the transceiver TxPower exceeds the \n		threshold. To enable the device to send this notification: cienaCesPortXcvrTxPowerChangeTrapState,\n		cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to enabled.\n		These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n		cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex, \n		cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrTxPowerLowNotification A cienaCesPortXcvrTxPowerLowNotification is sent if the transceiver TxPower falls below \n		the threshold. To enable the device to send this notification: cienaCesPortXcvrTxPowerChangeTrapState, \n		cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to enabled.\n		These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n		cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex, \n		cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrTxPowerNormalNotification A cienaCesPortXcvrTxPowerNormalNotification is sent when the transceiver TxPower returns to \n		normal state. To enable the device to send this notification: cienaCesPortXcvrTxPowerChangeTrapState,\n		cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to enabled. \n		These above values are set to enabled by default. Variable bindings include: cienaGlobalSeverity,\n       cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex, \n       cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrRxPowerHighNotification A cienaCesPortXcvrRxPowerHighNotification is sent if the transceiver RxPower exceeds \n		the threshold. To enable the device to send this notification: cienaCesPortXcvrRxPowerChangeTrapState, \n		cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to enabled. \n		These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity, \n		cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex,\n		cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrRxPowerLowNotification A cienaCesPortXcvrRxPowerLowNotification is sent if the transceiver RxPower falls below\n		the the threshold. To enable the device to send this notification: \n		cienaCesPortXcvrRxPowerChangeTrapState, cienaCesLogicalPortConfigPortAllTrapState,\n		cienaCesPortAllTrapState needs to be set to enabled. These objects are set to enabled \n		by default. Variable bindings include: cienaGlobalSeverity, cienaGlobalMacAddress, \n		cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex, cienaCesPortXcvrNotifSlotIndex, \n		cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrRxPowerNormalNotification A cienaCesPortXcvrRxPowerNormalNotification is sent when the transceiver RxPower returns \n		to normal state. To enable the device to send this notification: \n		cienaCesPortXcvrRxPowerChangeTrapState, cienaCesLogicalPortConfigPortAllTrapState, and \n		cienaCesPortAllTrapState needs to be set to enabled. These objects are set to enabled by \n		default. Variable bindings include: cienaGlobalSeverity, cienaGlobalMacAddress, \n		cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex, cienaCesPortXcvrNotifSlotIndex, \n		cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrSpeedInfoMissingNotification A cienaCesPortXcvrSpeedInfoMissingNotification is sent if the transceiver speed \n		information is not found. To enable the device to send this notification: \n		cienaCesPortXcvrSpeedInfoTrapState, cienaCesLogicalPortConfigPortAllTrapState, and \n		cienaCesPortAllTrapState need to be set to enabled. These objects are set to enabled \n		by default. Variable bindings include: cienaGlobalSeverity, cienaGlobalMacAddress, \n		cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex, \n		cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrUncertifiedNotification A cienaCesPortXcvrUncertifiedNotification is sent if the transceiver is not \n		certified for use by Ciena. To enable the device to send this notification: \n		cienaCesPortXcvrUncertifiedTrapState,  cienaCesLogicalPortConfigPortAllTrapState, \n		and cesPortAllTrapState need to be set to enabled. cienaCesPortXcvrUncertifiedTrapState \n		is set to disabled by default. Variable bindings include: cienaGlobalSeverity, cienaGlobalMacAddress, \n		cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex, \n		cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrRxPowerHighWarningNotification A cienaCesPortXcvrRxPowerHighWarningNotification is sent if the transceiver RxPower exceeds \n      the threshold. To enable the device to send this notification: cienaCesPortXcvrRxPowerChangeTrapState, \n      cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to enabled. \n      These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity, \n      cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex,\n      cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrRxPowerLowWarningNotification A cienaCesPortXcvrRxPowerLowWarningNotification is sent if the transceiver RxPower falls below\n      the the threshold. To enable the device to send this notification: \n      cienaCesPortXcvrRxPowerChangeTrapState, cienaCesLogicalPortConfigPortAllTrapState,\n      cienaCesPortAllTrapState needs to be set to enabled. These objects are set to enabled \n      by default. Variable bindings include: cienaGlobalSeverity, cienaGlobalMacAddress, \n      cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex, cienaCesPortXcvrNotifSlotIndex, \n      cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrTxPowerHighWarningNotification A cienaCesPortXcvrTxPowerHighWarningNotification is sent if the transceiver TxPower exceeds \n      the threshold. To enable the device to send this notification: cienaCesPortXcvrTxPowerChangeTrapState, \n      cienaCesLogicalPortConfigPortAllTrapState, and cienaCesPortAllTrapState need to be set to enabled. \n      These objects are set to enabled by default. Variable bindings include: cienaGlobalSeverity, \n      cienaGlobalMacAddress, cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex,\n      cienaCesPortXcvrNotifSlotIndex, cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesPortXcvrTxPowerLowWarningNotification A cienaCesPortXcvrTxPowerLowWarningNotification is sent if the transceiver TxPower falls below\n      the the threshold. To enable the device to send this notification: \n      cienaCesPortXcvrTxPowerChangeTrapState, cienaCesLogicalPortConfigPortAllTrapState,\n      cienaCesPortAllTrapState needs to be set to enabled. These objects are set to enabled \n      by default. Variable bindings include: cienaGlobalSeverity, cienaGlobalMacAddress, \n      cienaCesPortXcvrNotifChassisIndex, cienaCesPortXcvrNotifShelfIndex, cienaCesPortXcvrNotifSlotIndex, \n      cienaCesPortXcvrNotifPortNumber and cienaCesPortXcvrNotifPortName.
%edes        cienaCesOamLinkEventTrap A cienaCesOamLinkEventTrap notification is sent whenever a local or remote link event is detected\n        and recorded in the cienaCesOamEventLogTable.\n        To enable the device to send this trap, cienaCesOamLinkEventTrapState needs to be set to enabled. \n        The cienaCesOamLinkEventTrapState is enabled by default. Variable bindings include: \n        cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesOamEventNotifChassisIndex, \n        cienaCesOamEventNotifShelfIndex, cienaCesOamEventNotifSlotIndex, cienaCesOamEventNotifPortNumber,\n        cienaCesOamEventLogType, cienaCesOamEventLogLocation, and cienaCesOamEventNotifChannelNumber.
%edes        cienaCesBfdSessionOperStateChangeTrap A notification is sent whenever the BFD session operational state has changed. To enable this notification, the \n       cienaCesBfdSessionOperTrapState object must be enabled (which is enabled by default). Variable bindings \n       include: cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesBfdSessionName, cienaCesBfdSessionIndex, \n       cienaCesBfdSessionAdminState, and cienaCesBfdSessionOperState.
%edes        cienaCesBfdDampSessionSuppressStateChangeTrap A notification is sent whenever the BFD session client notification suppression state changes. To enable this \n       notification, the cienaCesBfdDampSessionOperTrapState object must be enabled (which is enabled by default).
%edes        cienaCesSyncInputPUStateChangeNotification Sent when a configured input timing reference transitions states.
%edes        cienaCesSyncInputProtectionGroupStateChangeNotification Sent when a configured protection-group transitions states.
%edes        cienaCesSyncModuleSlotClockStateChangeNotification Sent when a slot other than the primary CTX experiences a timing state change. Only applicable in SAOS 8.x.
%edes        cienaCesSyncOutputStateChangeNotification Sent when a configured output timing reference transitions states.
%edes        cienaCesSyncAlmanacStatusChangeNotification Sent when the almanac status changes.
%edes        cienaCesPtpClientListChangeNotification This trap is generated when a PTP client requests for new session or a PTP client is removed from client list
%edes        cienaCesPtpInputRefUnicastSessionChangeNotification This trap is generated when a PTP request-port requests for a new unicast session to a PTP grant-port\n          or an established session is terminated.
%edes        cienaCesPtpInputRefAssistedBackupStatusNotification This trap is generated when assisted ptp backup reference comes up as not-ready for the first time\n          or changes its status afterwards.
%edes        cienaCesConfigMgmtConfigSavedNotification This notification is sent when the configuration is saved.
%edes        cienaCesConfigMgmtConfigChangeNotification This notification is sent when the configuration on the device changes.\n\n             A hysteresis mechanism is evaluated before sending in an effort to limit the\n             number of events generated. This mechanism will send out one notification\n             when an accumulation rate threshold is crossed. If the context/user/origin\n             of a configuration change does not match the currently tracked\n             context/user/origin, then this notification will automatically be sent.\n             The hysteresis algorithm will then be evaluated based on the new\n             context/user/origin.
%edes        cienaCesBenchmarkTestStarted The start command has been issued for the given benchmark generator\n               test instance, either via CLI or SNMP. The cienaCesBenchmarkEntityEntryPortId\n               specifies the port under test when the test instance was started;\n               the s-vid, c-vid and destination mac address used to build the test \n               packet are also provided.
%edes        cienaCesBenchmarkTestStopped The specified generator test instance has been manually stopped by\n               the user, either via CLI or SNMP, before the testing completed.
%edes        cienaCesBenchmarkTestCompleted The testing for the specified generator test instance has finished the\n               configured number of iterations as configured in the referenced\n               profile interval and duration.
%edes        cienaCesBenchmarkTestFailedThroughputKpi The throughput test result for the specified generator test\n               instance is below the specified throughput KPI value for\n               either the untagged session the given PCP and color traffic.
%edes        cienaCesBenchmarkTestFailedFramelossKpi The frameloss test result for the specified generator test \n               instance exceeds the specified throughput KPI value for\n               either the untagged session the given PCP and color traffic.
%edes        cienaCesBenchmarkTestFailedLatencyKpi The latency test result for the specified generator test\n               instance exceeds the specified throughput KPI value for\n               either the untagged session the given PCP and color traffic.
%edes        cienaCesBenchmarkTestFailedPdvKpi The PDV test result for the specified generator test\n               instance is above the specified PDV KPI value for\n               either the untagged session the given PCP and color traffic.
%edes        cienaCesBenchmarkTestIterationCompleted An iteration of tests for the given test instance has just completed.
%edes        cienaCesBenchmarkTestFailedMaxNumOutagesKpi The number of recorded outages for the specified generator test\n               instance is above the specified maximum number of outages KPI value for\n               either the untagged session the given PCP and color traffic.
%edes        cienaCesBenchmarkTestFailedMaxDurationSingleOutageKpi The duration of a single recorded outage for the specified \n               generator test instance is above the specified max single outage duration\n               KPI value for either the untagged session the given PCP and color traffic.
%edes        cienaCesBenchmarkTestFailedMaxDurationSumOutagesKpi The sum of the duration of the recorded outages for the outage test for \n               the specified generator test instance is above the specified sum of outages duration\n               KPI value for either the untagged session or the given PCP and color traffic.
%edes        cienaCesBenchmarkEntityPortProtectionSwitchEvent Entity port protection switch event detected  with port under test having\n                1:1 LAG, MC-LAG or Y-protection configuration
%edes        cienaCes8021xSuppAuthenticationEvent This notification is generated when a supplicant authentication event,\n                             as identified by the value of cienaCes8021xNotificationAuthenticationEvent\n                             has occurred on the port identified by cienaCes8021xPort.
%edes        cienaCes8021xAuthAuthenticationEvent This notification is generated when a authenticator authentication event,\n                             as identified by the value of cienaCes8021xNotificationAuthenticationEvent\n                             has occurred on the port identified by cienaCes8021xPort.
%edes        cienaCes8021xGlobalStateChangeEvent This notification is generated when the dot1x global state is\n                             changed.
%edes        cienaCes8021xAuthConfigChangeEvent This notification is generated when a configuration change is made\n                             in a dot1x authentication port.
%edes        cienaCes8021xSuppConfigChangeEvent This notification is generated when a configuration change is made\n                             in a dot1x supplicant port.
%edes        cienaCesPlatformPostErrorNotification A cienaCesPlatformPostErrorNotification is sent after cold start trap\n     if the device detects post errors.
%edes        cienaCesPlatformFanModuleNotification A cienaCesPlatformFanModuleNotification is sent if the \n     fan state changes.
%edes        cienaCesPlatformPowerSupplyStatusNotification A cienaCesPlatformPowerSupplyStatusNotification is sent if a \n     power supply state is changed.
%edes        cienaCesPlatformTempNotification A cienaCesPlatformTempNotification is sent if the \n     cienaCesPlatformTempSensorState is changed.
%edes        cienaCesRtucNotification A cienaCesRtucNotification is sent if the\n     reset to user config is completed or failed.
%edes        cienaCesMplsL3VpnVrfUpNotification This notification is generated when:\n        a. No interface is associated with this VRF, and the first\n           (and only first) interface associated with it has its\n           ifOperStatus change to up(1).\n\n        b. One interface is associated with this VRF, and\n           the ifOperStatus of this interface changes to up(1).\n\n        c. Multiple interfaces are associated with this VRF, and the\n           ifOperStatus of all interfaces is down(2), and the first\n           of those interfaces has its ifOperStatus change to up(1).
%edes        cienaCesMplsL3VpnVrfDownNotification This notification is generated when:\n        a. One interface is associated with this VRF, and\n           the ifOperStatus of this interface changes from up(1)\n           to down(2).\n\n        b. Multiple interfaces are associated with this VRF, and\n           the ifOperStatus of all except one of these interfaces is\n           equal to up(1), and the ifOperStatus of that interface\n           changes from up(1) to down(2).\n\n        c. The last interface with ifOperStatus equal to up(1)\n           is disassociated from a VRF.
%edes        cienaCesMplsL3VpnVrfRouteMidThreshExceeded This notification is generated when the number of routes\n        contained by the specified VRF exceeds the value indicated by\n        mplsL3VpnVrfMidRouteThreshold.  A single notification MUST be\n        generated when this threshold is exceeded, and no other\n        notifications of this type should be issued until the value\n        of mplsL3VpnVrfPerfCurrNumRoutes has fallen below that of\n        mplsL3VpnVrfConfMidRteThresh.
%edes        cienaCesMplsL3VpnNumVrfRouteMaxThreshCleared This notification is generated only after the number of routes\n        contained by the specified VRF exceeds or attempts to exceed\n        the maximum allowed value as indicated by\n        mplsVrfMaxRouteThreshold, and then falls below this value.  The\n        emission of this notification informs the operator that the\n        error condition has been cleared without the operator having to\n        query the device.\n        Note that mplsL3VpnVrfConfRteMxThrshTime denotes the interval at\n        which the mplsNumVrfRouteMaxThreshExceeded notification will\n        be reissued after the maximum value has been exceeded (or\n        reached if mplsL3VpnVrfConfMaxRoutes and\n        mplsL3VpnVrfConfHighRteThresh are equal) and the initial\n        notification has been issued.  Therefore,\n        the generation of this notification should also be emitted with\n        this same frequency (assuming that the error condition is\n        cleared).  Specifically, if the error condition is reached and\n        cleared several times during the period of time specified in\n        mplsL3VpnVrfConfRteMxThrshTime, only a single notification will\n        be issued to indicate the first instance of the error condition\n        as well as the first time the error condition is cleared.\n\n        This behavior is intended to prevent continuous generation of\n        notifications by an agent in the event that routes are\n        continually added and removed to/from a VRF after it has\n        reached its maximum value.  The default value is 0.  If this\n        value is set to 0, the agent should issue a notification\n        whenever the maximum threshold has been cleared.
%edes        cienaCesMplsL3VpnVrfNumVrfRouteMaxThreshExceeded This notification is generated when the number of routes\n        contained by the specified VRF exceeds or attempts to exceed\n        the maximum allowed value as indicated by\n        mplsL3VpnVrfMaxRouteThreshold.  In cases where\n        mplsL3VpnVrfConfHighRteThresh is set to the same value\n        as mplsL3VpnVrfConfMaxRoutes, mplsL3VpnVrfConfHighRteThresh\n        need not be exceeded; rather, just reached for this notification\n        to be issued.\n\n        Note that mplsL3VpnVrfConfRteMxThrshTime denotes the interval\n        at which the this notification will be reissued after the\n        maximum value has been exceeded (or reached if\n        mplsL3VpnVrfConfMaxRoutes and mplsL3VpnVrfConfHighRteThresh are\n        equal) and the initial notification has been issued.  This value\n        is intended to prevent continuous generation of notifications by\n        an agent in the event that routes are continually added to a VRF\n        after it has reached its maximum value.  The default value is 0\n        minutes.  If this value is set to 0, the agent should only issue\n        a single notification at the time that the maximum threshold has\n        been reached, and should not issue any more notifications until\n        the value of routes has fallen below the configured threshold\n        value.
%edes        cienaCesMplsLdpSessionUp If this notification is sent when the\n        value of 'mplsLdpSessionState' enters\n        the 'operational(5)' state.
%edes        cienaCesMplsLdpSessionDown If this notification is sent when the\n        value of 'mplsLdpSessionState' leaves\n        the 'operational(5)' state.
%edes        cienaCesAAAUserAuthenticationEvent This notification is generated when an authentication event,\n                 as identified by the value of cienaCesAAAUserAuthenticationStatus\n                 has occurred.
%edes        cienaCesEvpnEvlagEthernetSegmentFailureNotification This is sent when any LAG failure event is triggered  for particular\n         ethernet segment.
%edes        cienaCesEvpnEvlagEthernetSegmentProtectionNotification This occurs when after lag switchover elected DF sends it for\n         particular ethernet segment.
%edes        cienaCesBgpMaxPrefixLimitExceededNotification This is generated when the number of prefixes recieved \n         from the peer exceeds the maximum configured prefix-limit.
%edes        cienaCesBgpMaxPrefixLimitDropExcessNotification This is generated when the number of prefixes recieved \n         from the peer exceeds the configured drop-excess percentage.
%edes        cienaCesBgpMaxPrefixLimitClearedNotification This is generated when the configured idle-timeout \n         is expired.
%edes        cienaNgSaosDebugTestNotif Debug test message
%edes        cienaNgSaosDebugFailedNotif Debug failed message with a different severity.
%edes        cienaCesStatistics      Provides a root object identifier for all the statistics MIBs.
%edes        cienaCesCfmGlobalStatsClear Setting this object clears CFM statistics globally.
%edes        cienaCesCfmGlobalFrameBudgetControlModule Control Module Frame Budget is deprecated because it is moved from statistics to node definitions.
%edes        cienaCesCfmGlobalFrameBudgetSlot1 Slot1 Frame Budget.
%edes        cienaCesCfmGlobalFrameBudgetSlot2 Slot2 Frame Budget.
%edes        cienaCesCfmGlobalFrameBudgetSlot3 Slot3 Frame Budget.
%edes        cienaCesCfmGlobalFrameBudgetSlot4 Slot4 Frame Budget.
%edes        cienaCesCfmGlobalFrameBudgetSlot5 Slot5 Frame Budget.
%edes        cienaCesCfmGlobalFrameBudgetSlot6 Slot6 Frame Budget.
%edes        cienaCesCfmGlobalFrameBudgetSlot7 Slot7 Frame Budget.
%edes        cienaCesCfmGlobalFrameBudgetSlot8 Slot8 Frame Budget.
%edes        cienaCesCfmGlobalFrameBudgetSlot9 Slot9 Frame Budget.
%edes        cienaCesCfmGlobalFrameBudgetSlot10 Slot10 Frame Budget.
%edes        cienaCesCfmGlobalStatsTxTotalFrames The number of CFM frames sent.
%edes        cienaCesCfmGlobalStatsTxFloodedframes The number of flooded frames sent.
%edes        cienaCesCfmGlobalStatsTxFloodignoredInvalidLevel This counter is incremented when the frame's destination MAC is not the expected multicast destination MAC for the frame's MD level.
%edes        cienaCesCfmGlobalStatsTxFloodignoredHighLevelMepExist This counter is incremented when there is a MEP at a higher MD level than the frame's MD level that blocks the frame from being flooded.
%edes        cienaCesCfmGlobalStatsTxFloodignoredSTPState This counter is incremented when the STP state of the ingress or egress port is something other than forwarding.
%edes        cienaCesCfmGlobalStatsRxTotalFrames The number of frames received.
%edes        cienaCesCfmGlobalStatsRxDropInvalidEtype The number of frames dropped when the mode is administratively disabled.
%edes        cienaCesCfmGlobalStatsRxDropInvalidOpCode The number of received invalid opcode frames dropped.
%edes        cienaCesCfmGlobalStatsRxDropL2DAHeaderLevelMismatch The number of frames dropped when the system is not in STP forwarding mode.
%edes        cienaCesCfmGlobalStatsRxTotalMalformedFrames The number of malformed CFM frames received.
%edes        cienaCesCfmGlobalCCMStatsTxTotalCCM The total number of CCM frames sent.
%edes        cienaCesCfmGlobalCCMStatsTxTotalCCMFlooded The total number of flooded CCM frames sent.
%edes        cienaCesCfmGlobalCCMStatsRxTotalCCM The number of valid frames received.
%edes        cienaCesCfmGlobalCCMStatsRxTotalCCMSequenceErrors The number of errored CCM frames received in sequence.
%edes        cienaCesCfmGlobalCCMStatsRxInvalidMAID The number of MD level CFM frames received.
%edes        cienaCesCfmGlobalCCMStatsRxInvalidCCMInterval The number of MAID Xcon CFM frames received.
%edes        cienaCesCfmGlobalCCMStatsRxInvalidFirstTlvOffset The number of frames dropped when the mode is administratively disabled.
%edes        cienaCesCfmGlobalCCMStatsRxInvalidPortStatusTlv The number of CCM frames received with invalid port status TLV.
%edes        cienaCesCfmGlobalCCMStatsRxInvalidInterfaceStatusTlv The number of invalid CCM frames received with invalid interface status TLV.
%edes        cienaCesCfmGlobalCCMStatsRxInvalidLogicalInterface The number of invalid CCM frames received with invalid logical interface status TLV.
%edes        cienaCesCfmGlobalCCMStatsRxInvalidServiceInstance The number of invalid CCM frames received on invalid service instance.
%edes        cienaCesCfmGlobalCCMStatsRxInvalidPBTEncapTunnel The number of invalid CCM frames received on invalid PBB-TE encapsulation tunnel.
%edes        cienaCesCfmGlobalCCMStatsRxDropAdminDisable The number of CCM frames dropped because of a disabled administrative state.
%edes        cienaCesCfmGlobalCCMStatsRxDropSTPstatenotForwarding The number of CCM frames dropped because STP state was not forwarding.
%edes        cienaCesCfmGlobalCCMStatsRxDropCCMBlockedbyOppMep The number of invalid CCM frames dropped because CCM was blocked by opposite MEP.
%edes        cienaCesCfmGlobalCCMStatsRxDropCCMLeakage The number of CCM frames dropped because of CCM leakage.
%edes        cienaCesCfmGlobalCCMStatsRxDropCCMTooLong The number of invalid CCM received frames dropped because CCM was too long.
%edes        cienaCesCfmGlobalCCMStatsRxDropCCMServiceDisabled The number of CCM frames received and dropped because the service was disabled.
%edes        cienaCesCfmGlobalCCMStatsRxTotalErrorCCM The number of CCM frames received with Error CCM fault.
%edes        cienaCesCfmGlobalCCMStatsRxTotalMalformedCCM The number of malformed CCM frames received.
%edes        cienaCesCfmGlobalCCMStatsRxTotalMEPCCM The number of CCM frames received by CFM MEPs.
%edes        cienaCesCfmGlobalCCMStatsRxTotalMIPCCM The number of CCM frames received by CFM MIPs.
%edes        cienaCesCfmGlobalLoopbackStatsTxTotalLBM The number of loopback message frames sent.
%edes        cienaCesCfmGlobalLoopbackStatsTxTotalLBR The total number of loopback reply frames sent.
%edes        cienaCesCfmGlobalLoopbackStatsRxTotalLBM The total number of loopback message frames received.
%edes        cienaCesCfmGlobalLoopbackStatsRxTotalLBR The total number of loopback reply frames received.
%edes        cienaCesCfmGlobalLoopbackStatsRxTotalInOrderLBR The total number of in order loopback reply frames received.
%edes        cienaCesCfmGlobalLoopbackStatsRxTotalOutOfOrderLBR The total number of out of order loopback reply frames received.
%edes        cienaCesCfmGlobalLoopbackStatsRxTotalContentMismatchLBR The total number of content mismatch loopback reply frames sent.
%edes        cienaCesCfmGlobalLoopbackStatsRxTotalUnexpectedLBR The total number of unexpected loopback reply frames received.
%edes        cienaCesCfmGlobalLoopbackStatsRxLBMInvalidFirstTLVOffset The total number of loopback message frames received with invalid TLV offset.
%edes        cienaCesCfmGlobalLoopbackStatsRxLBRInvalidFirstTLVOffset The total number of loopback reply frames received with invalid first TLV offset.
%edes        cienaCesCfmGlobalLoopbackStatsRxUnresolvedLBM The total number of unresolved loopback message frames received.
%edes        cienaCesCfmGlobalLoopbackStatsRxUnresolvedLBR The total number of unresolved loopback reply frames received.
%edes        cienaCesCfmGlobalLoopbackStatsRxTotalMalformedLBM The total number of malformed loopback messages received.
%edes        cienaCesCfmGlobalLinkTraceStatsTxTotalLTM The number of linktrace messages transmitted.
%edes        cienaCesCfmGlobalLinkTraceStatsTxTotalLTR The number of linktrace replies transmitted.
%edes        cienaCesCfmGlobalLinkTraceStatsRxTotalLTM The number of linktrace messages received.
%edes        cienaCesCfmGlobalLinkTraceStatsRxTotalLTR The number of linktrace replies received.
%edes        cienaCesCfmGlobalLinkTraceStatsRxTotalUnexpectedLTR The number of unexpected linktrace replies received.
%edes        cienaCesCfmGlobalLinkTraceStatsRxLTMInvalidFirstTLVOffset The number of linktrace messages received with an invalid first TLV offset.
%edes        cienaCesCfmGlobalLinkTraceStatsRxLTRInvalidFirstTLVOffset The number of linktrace replies received with an invalid first TLV offset.
%edes        cienaCesCfmGlobalLinkTraceStatsRxLTRInvalidRelayAction The number of linktrace replies received with an invalid relay action.
%edes        cienaCesCfmGlobalLinkTraceStatsRxUnresolvedLTM The number of linktrace messages received that could not be resolved.
%edes        cienaCesCfmGlobalLinkTraceStatsRxUnresolvedLTR The number of linktrace replies received that could not be resolved.
%edes        cienaCesCfmGlobalDelayMeasurementStatsTxTotalDMM The number of DMM frames transmitted.
%edes        cienaCesCfmGlobalDelayMeasurementStatsTxTotalDMR The number of DMR frames transmitted.
%edes        cienaCesCfmGlobalDelayMeasurementStatsRxTotalDMM The number of DMM frames received.
%edes        cienaCesCfmGlobalDelayMeasurementStatsRxTotalDMR The number of DMR frames received.
%edes        cienaCesCfmGlobalLossMeasurementStatsTxTotalLMM The number of LMM frames transmitted.
%edes        cienaCesCfmGlobalLossMeasurementStatsTxTotalLMR The number of LMR frames transmitted.
%edes        cienaCesCfmGlobalLossMeasurementStatsRxTotalLMM The number of LMM frames received.
%edes        cienaCesCfmGlobalLossMeasurementStatsRxTotalLMR The number of LMR frames received.
%edes        cienaCesCfmGlobalSyntheticLossMeasurementStatsTxTotalSLM The total number of synthetic loss messages transmitted.
%edes        cienaCesCfmGlobalSyntheticLossMeasurementStatsTxTotalSLR The total number of synthetic loss replies transmitted.
%edes        cienaCesCfmGlobalSyntheticLossMeasurementStatsRxTotalSLM The total number of synthetic loss messages received.
%edes        cienaCesCfmGlobalSyntheticLossMeasurementStatsRxTotalSLR The total number of synthetic loss replies received.
%edes        cienaCesCfmGlobalSyntheticLossMeasurementStatsRxTotalValidSLM The total number of valid synthetic loss messages received.
%edes        cienaCesCfmGlobalSyntheticLossMeasurementStatsRxTotalValidSLR The total number of valid synthetic loss replies received.
%edes        cienaCesCfmGlobalSyntheticLossMeasurementStatsRxTotalInvalidSLM The total number of invalid synthetic loss messages received.
%edes        cienaCesCfmGlobalSyntheticLossMeasurementStatsRxTotalInvalidSLR The total number of invalid synthetic loss replies received.
%edes        cienaCesCfmGlobalSyntheticLossMeasurementStatsRxDropSLM The total number of synthetic loss messages dropped due to lack of responder resources.
%edes        cienaCesCfmServiceStatsTable The (conceptual) table listing the statistics \n\n            for a given CFM service.
%edes        cienaCesCfmServiceStatsEntry An entry (conceptual row) in the CienaCesCfmServiceTable.
%edes        cienaCesCfmServiceStatsTotalTx The total CFM frames sent for the service.
%edes        cienaCesCfmServiceStatsTotalRx The total CFM frames received for the service.
%edes        cienaCesCfmServiceStatsTotalTxLTM The total number of linktrace messages transmitted for the CFM service.
%edes        cienaCesCfmServiceStatsTotalTxLTR The total number of linktrace replies transmitted for the CFM service.
%edes        cienaCesCfmServiceStatsTotalRxLTM The total number of link trace messages received for the CFM service.
%edes        cienaCesCfmServiceStatsTotalRxLTR The total number of linktrace replies received for the CFM service.
%edes        cienaCesCfmServiceStatsTotalRxUnexpectedLTR The total number of unexpected linktrace replies received for the CFM service.
%edes        cienaCesCfmServiceStatsTotalTxLBM The total number of loopback messages transmitted for the CFM service.
%edes        cienaCesCfmServiceStatsTotalTxLBR The total number of loopback replies transmitted for the CFM service.
%edes        cienaCesCfmServiceStatsTotalRxLBM The total  number of loopback messages received for the CFM service.
%edes        cienaCesCfmServiceStatsTotalRxInorderLBR The total number of in-order loopback replies received.
%edes        cienaCesCfmServiceStatsTotalRxOutOforderLBR The total number of out-of-order loopback replies received.
%edes        cienaCesCfmServiceStatsTotalRxContentMismatchLBR The total number of content mismatched loopback replies received.
%edes        cienaCesCfmServiceStatsTotalRxUnexpectedLBR The total number of unexpectecd loopback replies received.
%edes        cienaCesCfmServiceStatsClear To clear statistics for a given service, set this object to clear(1). During GET this object returns none(0)
%edes        cienaCesCfmMepStatsTable The (conceptual) table listing the configuration \n\n            parameters for the CFM MEP table.
%edes        cienaCesCfmMepStatsEntry An entry (conceptual row) in the cienaCesCfmMepStatsTable.
%edes        cienaCesCfmMepInterfaceType This object is used as the index in the table and indicates \n\n             the MEP interface for the given service.
%edes        cienaCesCfmMepInterfaceIndex This object is used as the index in the table and indicates \n\n             the MEP interface index for the given service.
%edes        cienaCesCfmMepStatsTxTotalCCM The total number of CCM messages transmitted by the CFM MEP.
%edes        cienaCesCfmMepStatsRxTotalCCM The total number of CCM messages received by the CFM MEP.
%edes        cienaCesCfmMepStatsTxLoopbackMessages The total number of loopback messages transmitted by the CFM MEP.
%edes        cienaCesCfmMepStatsTxLoopbackReply The total number of loopback replies transmitted by the CFM MEP.
%edes        cienaCesCfmMepStatsRxLoopbackMessages The total number of loopback messages received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxInorderLoopbackReply The total number of in-order loopback replies received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxOutoforderLoopbackReply The total number of out-of-order loopback replies received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxContentMismatchLoopbackReply The total number of content mismatched loopback replies received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxUnexpectedLoopbackReply The total number of unexpected loopback replies received by the CFM MEP.
%edes        cienaCesCfmMepStatsTxLinktraceMessage The total number of linktrace messages transmitted by the CFM MEP.
%edes        cienaCesCfmMepStatsTxLinktraceReply The total number of linktrace replies transmitted by the CFM MEP.
%edes        cienaCesCfmMepStatsRxLinktraceMessage The total number of linktrace messages received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxLinktraceReply The total number of linktrace replies received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxUnexpectedLinktraceReply The total number of unexpected linktrace replies received by the CFM MEP.
%edes        cienaCesCfmMepStatsTxDelayMeasurementMessage The total number of DMM messages transmitted by the CFM MEP.
%edes        cienaCesCfmMepStatsTxDelayMeasurementReply The total number of DMM replies transmitted by the CFM MEP.
%edes        cienaCesCfmMepStatsRxDelayMeasurementMessage The total number of DMM messages received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxDelayMeasurementReply The total number of DMM replies received by the CFM MEP.
%edes        cienaCesCfmMepStatsTxLossMeasurementMessage The total number of LMM messages transmitted by the CFM MEP.
%edes        cienaCesCfmMepStatsTxLossMeasurementReply The total number of LMM replies transmitted by the CFM MEP.
%edes        cienaCesCfmMepStatsRxLossMeasurementMessage The total number of LMM messages received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxLossMeasurementReply The total number of LMM replies received by the CFM MEP.
%edes        cienaCesCfmMepStatsLastLBMTargetRemoteMepId This object indicates the remote MEP ID of the last loopback message.
%edes        cienaCesCfmMepStatsLastLBMTargetMacAddress This object indicates the target MAC address for the last loopback message.
%edes        cienaCesCfmMepStatsLastLBMPriority This object indicates the last loopback message priority.
%edes        cienaCesCfmMepStatsLastLBMCount This object indicates the last loopback message count.
%edes        cienaCesCfmMepStatsLastLBMFirstSeqNum This object indicates the last loopback message first sequence number.
%edes        cienaCesCfmMepStatsLastLTMTargetRemoteMepId This object indicates the last linktrace message target remote MEP ID.
%edes        cienaCesCfmMepStatsLastLTMTargetMacAddress This object indicates the target MAC address of the the last linktrace message. 
%edes        cienaCesCfmMepStatsLastLTMPriority This object indicates the last linktrace message priority of the CFM MEP.
%edes        cienaCesCfmMepStatsLastLTMSeqNum This object indicates the last linktrace message sequence number of the CFM MEP.
%edes        cienaCesCfmMepStatsLastLTMInitialTTL This object indicates the last linktrace message initial TTL of the CFM MEP.
%edes        cienaCesCfmMepStatsLastDMMTargetRemoteMepId This object indicates the last DMM target remote MEP ID for the CFM MEP.
%edes        cienaCesCfmMepStatsLastDMMTargetMacAddress This object indicates the last DMM target MAC address for the CFM MEP.
%edes        cienaCesCfmMepStatsLastDMMPriority This object indicates the last DMM priority for the CFM MEP.
%edes        cienaCesCfmMepStatsLastDMMRepeatInterval This object indicates the last DMM repeat interval for the CFM MEP.
%edes        cienaCesCfmMepStatsLastDMMNumOfDmmToSend This object indicates the number of DMMs to send for the last DMM for the CFM MEP.
%edes        cienaCesCfmMepStatsLastLMMTargetRemoteMepId This object indicates the last LMM target remote MEP ID for the CFM MEP.
%edes        cienaCesCfmMepStatsLastLMMTargetMacAddress This object indicates the last LMM target MAC Address for the CFM MEP.
%edes        cienaCesCfmMepStatsLastLMMPriority This object indicates the last LMM priority for the CFM MEP.
%edes        cienaCesCfmMepStatsLastLMMRepeatInterval This object indicates the last LMM repeat interval for the CFM MEP.
%edes        cienaCesCfmMepStatsLastLMMNumOfLmmToSend This object indicates the number of LMMs to send for the last LMM for the CFM MEP.
%edes        cienaCesCfmMepStatsNextLBMSeqNumber This object indicates the next LBM sequence number received on the given service and port.
%edes        cienaCesCfmMepStatsNextLTMSeqNumber This object indicates the next LTM sequence number received on the given service and port.
%edes        cienaCesCfmMepStatsTxSyntheticLossMeasurementMessage The total number of synthetic loss messages transmitted by the CFM MEP.
%edes        cienaCesCfmMepStatsTxSyntheticLossMeasurementReply The total number of synthetic loss replies transmitted by the CFM MEP.
%edes        cienaCesCfmMepStatsRxSyntheticLossMeasurementMessage The total number of synthetic loss messages received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxSyntheticLossMeasurementReply The total number of synthetic loss replies received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxValidSyntheticLossMeasurementMessage The total number valid of synthetic loss messages received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxValidSyntheticLossMeasurementReply The total number valid of synthetic loss replies received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxInvalidSyntheticLossMeasurementMessage The total number invalid of synthetic loss messages received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxInvalidSyntheticLossMeasurementReply The total number invalid of synthetic loss replies received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxCCMWithErrorCCMFault The total number of CCMs with Error CCM fault received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxCCMWithXCONFault The total number of CCMs with XCON fault received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxCCMWithRMEPLOCFault The total number of CCMs with RMEP LOC fault received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxCCMWithRDI0 The total number of CCMs with RDI bit 0 received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxCCMWithRDI1 The total number of CCMs with RDI bit set received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxCCMWithSequenceNumberMismatch The total number of CCMs with sequence number mismatch received by the CFM MEP.
%edes        cienaCesCfmMepStatsRxCCMDroppedWithMalformedTlv The total number of CCMs received by the CFM MEP which were dropped because of malformed TLV.
%edes        cienaCesCfmMepStatsToTxLoopbackMessages The total number of loopback messages left to be transmitted by the CFM MEP.
%edes        cienaCesCfmRemoteMepStatsTable The (conceptual) table listing the configuration \n\n            parameters for the CFM remote MEP table.
%edes        cienaCesCfmRemoteMepStatsEntry An entry (conceptual row) in the cienaCesCfmMepStatsTable.
%edes        cienaCesCfmRemoteMepStatsRxTotalCCM This object is used to show the number of MEP CCM frames received.
%edes        cienaCesCfmRemoteMepStatsLastSeqNum This object is used to show the last sequence number.
%edes        cienaCesCfmRemoteMepStatsCCMSeqErrors This object is used to show the number of MEP CCM frames sequence errors.
%edes        cienaCesCfmRemoteMepStatsClear Setting this object to clear(1) resets the statistics for the remote MEP\n\n              for this service.
%edes        cienaCesOamStatsTable   Statistics for the OAM function on a particular Ethernet-like\n        interface.
%edes        cienaCesOamStatsEntry   An entry in the table, containing statistical information on\n        the Ethernet OAM function for a single Ethernet-like interface.
%eunits      cienaCesOamInformationTx frames
%edes        cienaCesOamInformationTx A count of the number of Information OAMPDUs transmitted on\n        this interface.\n                           \n        An Information OAMPDU is indicated by a valid frame with (1)\n        destination MAC address equal to that of the reserved MAC\n        address for Slow Protocols (See 43B of [802.3ah]), (2) a\n        lengthOrType field equal to the reserved type for Slow\n        Protocols, (3) a Slow Protocols subtype equal to that of the\n        subtype reserved for OAM, and (4) an OAMPDU code equal to the\n        OAM Information code.  \n                           \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime.
%eunits      cienaCesOamInformationRx frames
%edes        cienaCesOamInformationRx A count of the number of Information OAMPDUs received on this interface.\n                           \n        An Information OAMPDU is indicated by a valid frame with (1)\n        destination MAC address equal to that of the reserved MAC\n        address for Slow Protocols (See 43B of [802.3ah]), (2) a\n        lengthOrType field equal to the reserved type for Slow\n        Protocols, (3) a Slow Protocols subtype equal to that of the\n        subtype reserved for OAM, and (4) an OAMPDU code equal to the\n        OAM Information code. \n                           \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime. 
%eunits      cienaCesOamUniqueEventNotificationTx frames
%edes        cienaCesOamUniqueEventNotificationTx A count of the number of unique Event OAMPDUs transmitted on\n         this interface. Event notifications may be sent in duplicate\n         to increase the probability of successfully being received,\n         given the possibility that a frame may be lost in transit. \n  \n         An Event Notification OAMPDU is indicated by a valid frame\n         with (1) destination MAC address equal to that of the reserved\n         MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a\n         lengthOrType field equal to the reserved type for Slow\n         Protocols, (3) a Slow Protocols subtype equal to that of the\n         subtype reserved for OAM, and (4) an OAMPDU code equal to the\n         OAM Event code. \n   \n         A unique Event Notification OAMPDU is indicated as an Event\n         Notification OAMPDU with a Sequence Number field that is\n         distinct from the previously transmitted Event Notification\n         OAMPDU Sequence Number. \n   \n         Discontinuities of this counter can occur at re-initialization\n         of the management system, and at other times as indicated by\n         the value of the ifCounterDiscontinuityTime.
%eunits      cienaCesOamUniqueEventNotificationRx frames
%edes        cienaCesOamUniqueEventNotificationRx A count of the number of unique Event OAMPDUs received on\n        this interface. Event notification OAMPDUs may be sent in\n        duplicate to increase the probability of successfully being\n        received, given the possibility that a frame may be lost in\n        transit. \n   \n        An Event Notification OAMPDU is indicated by a valid frame\n        with (1) destination MAC address equal to that of the reserved\n        MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a\n        lengthOrType field equal to the reserved type for Slow\n        Protocols, (3) a Slow Protocols subtype equal to that of the\n        subtype reserved for OAM, and (4) an OAMPDU code equals the\n        OAM Event code. \n   \n        A unique Event Notification OAMPDU is indicated as an Event\n        Notification OAMPDU with a Sequence Number field that is\n        distinct from the previously received Event Notification                \n        OAMPDU Sequence Number.  \n   \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime.
%eunits      cienaCesOamLoopbackControlTx frames
%edes        cienaCesOamLoopbackControlTx A count of the number of Loopback Control OAMPDUs transmitted\n         on this interface. \n                       \n        An Loopback Control OAMPDU is indicated by a valid frame with\n        (1) destination MAC address equal to that of the reserved MAC\n        address for Slow Protocols (See 43B of [802.3ah]), (2) a\n        lengthOrType field equal to the reserved type for Slow\n        Protocols, (3) a Slow Protocols subtype equal to that of the\n        subtype reserved for OAM, and (4) an OAMPDU code equal to the\n        OAM Loopback Control code.  \n   \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime. 
%eref        cienaCesOamLoopbackControlTx [802.3ah], 30.3.6.1.26.
%eunits      cienaCesOamLoopbackControlRx frames
%edes        cienaCesOamLoopbackControlRx A count of the number of Loopback Control OAMPDUs transmitted\n        on this interface. \n                       \n        An Loopback Control OAMPDU is indicated by a valid frame with\n        (1) destination MAC address equal to that of the reserved MAC\n        address for Slow Protocols (See 43B of [802.3ah]), (2) a\n        lengthOrType field equal to the reserved type for Slow\n        Protocols, (3) a Slow Protocols subtype equal to that of the\n        subtype reserved for OAM, and (4) an OAMPDU code equal to the\n        OAM Loopback Control code.  \n   \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime. 
%eref        cienaCesOamLoopbackControlRx [802.3ah], 30.3.6.1.27.
%eunits      cienaCesOamVariableRequestTx frames
%edes        cienaCesOamVariableRequestTx A count of the number of Variable Request OAMPDUs transmitted\n        on this interface.  \n                       \n        An Variable Request OAMPDU is indicated by a valid frame with\n        (1) destination MAC address equal to that of the reserved MAC\n        address for Slow Protocols (See 43B of [802.3ah]), (2) a\n        lengthOrType field equal to the reserved type for Slow\n        Protocols, (3) a Slow Protocols subtype equal to that of the\n        subtype reserved for OAM, and (4) an OAMPDU code equal to the\n        OAM Variable Request code.  \n   \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime. 
%eref        cienaCesOamVariableRequestTx [802.3ah], 30.3.6.1.28.
%eunits      cienaCesOamVariableRequestRx frames
%edes        cienaCesOamVariableRequestRx A count of the number of Variable Request OAMPDUs received on\n        this interface.  \n        An Variable Request OAMPDU is indicated by a valid frame with\n        (1) destination MAC address equal to that of the reserved MAC\n        address for Slow Protocols (See 43B of [802.3ah]), (2) a\n        lengthOrType field equal to the reserved type for Slow\n        Protocols, (3) a Slow Protocols subtype equal to that of the\n        subtype reserved for OAM, and (4) an OAMPDU code equal to the\n        OAM Variable Request code.  \n   \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime.
%eunits      cienaCesOamVariableResponseTx frames
%edes        cienaCesOamVariableResponseTx A count of the number of Variable Response OAMPDUs\n        transmitted on this interface.  \n                       \n        An Variable Response OAMPDU is indicated by a valid frame with\n        (1) destination MAC address equal to that of the reserved MAC\n        address for Slow Protocols (See 43B of [802.3ah]), (2) a\n        lengthOrType field equal to the reserved type for Slow\n        Protocols, (3) a Slow Protocols subtype equal to that of the\n        subtype reserved for OAM, and (4) an OAMPDU code equal to the\n        OAM Variable Response code.  \n \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime. 
%eunits      cienaCesOamVariableResponseRx frames
%edes        cienaCesOamVariableResponseRx A count of the number of Variable Response OAMPDUs received\n        on this interface.  \n                       \n        An Variable Response OAMPDU is indicated by a valid frame with\n        (1) destination MAC address equal to that of the reserved MAC      \n        address for Slow Protocols (See 43B of [802.3ah]), (2) a\n        lengthOrType field equal to the reserved type for Slow\n        Protocols, (3) a Slow Protocols subtype equal to that of the\n        subtype reserved for OAM, and (4) an OAMPDU code equal to the\n        OAM Variable Response code.  \n   \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime. 
%eunits      cienaCesOamOrgSpecificTx frames
%edes        cienaCesOamOrgSpecificTx A count of the number of Organization Specific OAMPDUs\n        transmitted on this interface.  \n                       \n        An Organization Specific OAMPDU is indicated by a valid frame\n        with (1) destination MAC address equal to that of the reserved\n        MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a\n        lengthOrType field equal to the reserved type for Slow\n        Protocols, (3) a Slow Protocols subtype equal to that of the\n        subtype reserved for OAM, and (4) an OAMPDU code equal to the\n        OAM Organization Specific code.  \n   \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime. 
%eunits      cienaCesOamOrgSpecificRx frames
%edes        cienaCesOamOrgSpecificRx A count of the number of Organization Specific OAMPDUs\n        received on this interface.  \n                       \n        An Organization Specific OAMPDU is indicated by a valid frame\n        with (1) destination MAC address equal to that of the reserved\n        MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a\n        lengthOrType field equal to the reserved type for Slow\n        Protocols, (3) a Slow Protocols subtype equal to that of the\n        subtype reserved for OAM, and (4) an OAMPDU code equal to the\n        OAM Organization Specific code.  \n   \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime. 
%eunits      cienaCesOamUnsupportedCodesTx frames
%edes        cienaCesOamUnsupportedCodesTx A count of the number of OAMPDUs transmitted on this\n        interface with an unsupported op-code.  \n                       \n        An unsupported op-code OAMPDU is indicated by a valid frame\n        with (1) destination MAC address equal to that of the reserved\n        MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a\n        lengthOrType field equal to the reserved type for Slow\n        Protocols, (3) a Slow Protocols subtype equal to that of the\n        subtype reserved for OAM, and (4) an OAMPDU code equal to the\n        op-code for a function that is not supported by the device. \n   \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime. 
%eunits      cienaCesOamUnsupportedCodesRx frames
%edes        cienaCesOamUnsupportedCodesRx A count of the number of OAMPDUs received on this interface\n        with an unsupported op-code.  \n   \n        An unsupported op-code OAMPDU is indicated by a valid frame\n        with (1) destination MAC address equal to that of the reserved\n        MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a\n        lengthOrType field equal to the reserved type for Slow\n        Protocols, (3) a Slow Protocols subtype equal to that of the\n        subtype reserved for OAM, and (4) an OAMPDU code equal to the\n        opcode for a function that is not supported by the device.\n          \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime.
%eunits      cienaCesOamframesLostDueToOam frames
%edes        cienaCesOamframesLostDueToOam A count of the number of frames that were dropped by the OAM\n        multiplexer. Since the OAM multiplexer has multiple inputs\n        and a single output, there may be cases where frames are\n        dropped due to transmit resource contention. This counter is\n        incremented whenever a frame is dropped by the OAM layer.\n        When this counter is incremented, no other counters in this\n        MIB are incremented. \n                        \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime.
%edes        cienaCesOamStatsPort    An Ethernet port on the switch.
%eunits      cienaCesOamDuplicateEventNotificationTx frames
%edes        cienaCesOamDuplicateEventNotificationTx A count of the number of duplicate Event OAMPDUs transmitted\n        on this interface. Event notification OAMPDUs may be sent in\n        duplicate to increase the probability of successfully being\n        received, given the possibility that a frame may be lost in\n        transit.  \n   \n        An Event Notification OAMPDU is indicated by a valid frame\n        with (1) destination MAC address equal to that of the reserved\n        MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a\n        lengthOrType field equal to the reserved type for Slow\n        Protocols, (3) a Slow Protocols subtype equal to that of the\n        subtype reserved for OAM, and (4) an OAMPDU code equals to the\n        OAM Event code. \n   \n        A duplicate Event Notification OAMPDU is indicated as an Event\n        Notification OAMPDU with a Sequence Number field that is\n        identical to the previously transmitted Event Notification\n        OAMPDU Sequence Number.  \n   \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime.
%eunits      cienaCesOamDuplicateEventNotificationRx frames
%edes        cienaCesOamDuplicateEventNotificationRx A count of the number of duplicate Event OAMPDUs received on\n        this interface. Event notification OAMPDUs may be sent in\n        duplicate to increase the probability of successfully being\n        received, given the possibility that a frame may be lost in\n        transit. \n   \n        An Event Notification OAMPDU is indicated by a valid frame\n        with (1) destination MAC address equal to that of the reserved\n        MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a\n        lengthOrType field equal to the reserved type for Slow\n        Protocols, (3) a Slow Protocols subtype equal to that of the\n        subtype reserved for OAM, and (4) an OAMPDU code equal to the\n        OAM Event code.  \n   \n        A duplicate Event Notification OAMPDU is indicated as an Event\n        Notification OAMPDU with a Sequence Number field that is\n        identical to the previously received Event Notification OAMPDU\n        Sequence Number.  \n   \n        Discontinuities of this counter can occur at re-initialization\n        of the management system, and at other times as indicated by\n        the value of the ifCounterDiscontinuityTime. 
%edes        cienaCesOamEventLogTable This table records a history of the events that have occurred\n        at the Ethernet OAM level. These events can include locally\n        detected events, which may result in locally generated\n        OAMPDUs, and remotely detected events, which are detected by\n        the OAM peer entity and signaled to the local entity via\n        Ethernet OAM. Ethernet OAM events can be signaled by Event\n        Notification OAMPDUs or by the flags field in any OAMPDU. 
%edes        cienaCesOamEventLogEntry An entry in the cienaCesOamEventLogTable.
%edes        cienaCesOamEventLogPort An Ethernet port on the switch.
%edes        cienaCesOamEventLogIndex An arbitrary integer for identifying individual events\n        within the event log. 
%edes        cienaCesOamEventLogTimestamp The value of sysUpTime at the time of the logged event. For\n        locally generated events, the time of the event can be\n        accurately retrieved from sysUpTime. For remotely generated\n        events, the time of the event is indicated by the reception of\n        the Event Notification OAMPDU indicating the event occurred on\n        the peer. A system may attempt to adjust the timestamp value\n        to more accurately reflect the time of the event at the peer\n        OAM entity by using other information, such as that found in\n        the timestamp found on the Event Notification TLVs, which\n        provides an indication of the relative time between events at\n        the peer entity. 
%edes        cienaCesOamEventLogOui  The OUI of the entity defining the object type. All IEEE\n        802.3 defined events (as appearing in [802.3ah] except for the\n        Organizationally Unique Event TLVs) use the IEEE 802.3 OUI of\n        0x0180C2. Organizations defining their own Event Notification\n        TLVs include their OUI in the Event Notification TLV, which\n        gets reflected here. 
%edes        cienaCesOamEventLogType The type of event that generated this entry in the event log.\n\n         When the OUI is the IEEE 802.3 OUI of 0x0180C2, the following\n         event types are defined:\n              erroredSymbolEvent(1), \n              erroredFramePeriodEvent (2), \n              erroredFrameEvent(3),\n              erroredFrameSecondsEvent(4), \n              linkFault(256), \n              dyingGaspEvent(257),\n              criticalLinkEvent(258)\n         The first four are considered threshold crossing events as\n         they are generated when a metric exceeds a given value within\n         a specified window. The other three are not threshold\n         crossing events. \n   \n         When the OUI is not 0x0180C2, then some other organization has\n         defined the event space. If event subtyping is known to the\n         implementation, it may be reflected here. Otherwise, this\n         value should return noEvent (99). \n         
%eref        cienaCesOamEventLogType [802.3ah], 30.3.6.1.10 and 57.5.3.
%edes        cienaCesOamEventLogLocation Whether this event occurred locally, or was received from the\n        OAM peer via Ethernet OAM.
%edes        cienaCesOamEventLogWindowHi If the event represents a threshold crossing event, the two\n         objects cienaCesOamEventWindowHi and cienaCesOamEventWindowLo form an\n         unsigned 64-bit integer yielding the window over which the\n         value was measured for the threshold crossing event (e.g., 5,\n         when 11 occurrences happened in 5 seconds while the threshold\n         was 10). The two objects are combined as:\n\n         cienaCesOamEventLogWindow = ((2^32) * cienaCesOamEventLogWindowHi)\n         + cienaCesOamEventLogWindowLo.\n         Otherwise, this value is returned as all Fs (0xFFFFFFFF) and \n         adds no useful information. 
%eref        cienaCesOamEventLogWindowHi [802.3ah], 30.3.6.1.37 and 57.5.3.2.
%edes        cienaCesOamEventLogWindowLo If the event represents a threshold crossing event, the two\n        objects cienaCesOamEventWindowHi and cienaCesOamEventWindowLo form an\n        unsigned 64-bit integer yielding the window over which the\n        value was measured for the threshold crossing event (e.g., 5,\n        when 11 occurrences happened in 5 seconds while the threshold\n        was 10).  The two objects are combined as:\n\n        cienaCesOamEventLogWindow = ((2^32) * cienaCesOamEventLogWindowHi)\n        + cienaCesOamEventLogWindowLo.\n\n        Otherwise, this value is returned as all Fs (0xFFFFFFFF) and \n        adds no useful information. 
%eref        cienaCesOamEventLogWindowLo [802.3ah], 30.3.6.1.37 and 57.5.3.2.
%edes        cienaCesOamEventLogThresholdHi If the event represents a threshold crossing event, the two\n        objects cienaCesOamEventThresholdHi and cienaCesOamEventThresholdLo \n        form an unsigned 64-bit integer yielding the value that was\n        crossed for the threshold crossing event (e.g., 10, when 11 \n        occurrences happened in 5 seconds while the threshold was 10).\n        The two objects are combined as:\n\n        cienaCesOamEventLogThreshold = ((2^32) * cienaCesOamEventLogThresholdHi)\n        + cienaCesOamEventLogThresholdLo.\n\n        Otherwise, this value is returned as all Fs (0xFFFFFFFF) and \n        adds no useful information. 
%eref        cienaCesOamEventLogThresholdHi [802.3ah], 30.3.6.1.37 and 57.5.3.2.
%edes        cienaCesOamEventLogThresholdLo If the event represents a threshold crossing event, the two\n        objects cienaCesOamEventThresholdHi and cienaCesOamEventThresholdLo \n        form an unsigned 64-bit integer yielding the value that was\n        crossed for the threshold crossing event (e.g., 10, when 11 \n        occurrences happened in 5 seconds while the threshold was 10).\n        The two objects are combined as:\n        cienaCesOamEventLogThreshold = ((2^32) * cienaCesOamEventLogThresholdHi) \n        + cienaCesOamEventLogThresholdLo.\n\n        Otherwise, this value is returned as all Fs (0xFFFFFFFF) and\n        adds no useful information. 
%eref        cienaCesOamEventLogThresholdLo [802.3ah], 30.3.6.1.37 and 57.5.3.2.
%edes        cienaCesOamEventLogValue If the event represents a threshold crossing event, this\n        value indicates the value of the parameter within the given\n        window that generated this event (e.g., 11, when 11 occurrences\n        happened in 5 seconds while the threshold was 10). \n   \n        Otherwise, this value is returned as all F's \n        (0xFFFFFFFFFFFFFFFF) and adds no useful information. \n                              
%eref        cienaCesOamEventLogValue [802.3ah], 30.3.6.1.37 and 57.5.3.2.
%edes        cienaCesOamEventLogRunningTotal This value represents the total number of times this\n        occurrence has happened since the last reset (e.g., 3253, when\n        3253 symbol errors have occurred since the last reset, which\n        has resulted in 51 symbol error threshold crossing events\n        since the last reset). 
%eref        cienaCesOamEventLogRunningTotal [802.3ah], 30.3.6.1.37 and 57.5.3.2.
%edes        cienaCesOamEventLogEventTotal This value represents the total number of times one or more\n        of these occurrences have resulted in an event (e.g., 51 when\n        3253 symbol errors have occurred since the last reset, which\n        has resulted in 51 symbol error threshold crossing events\n        since the last reset).
%eref        cienaCesOamEventLogEventTotal [802.3ah], 30.3.6.1.37 and 57.5.3.2.
%edes        cienaCesOamEventNotifChassisIndex This object indicates the chassis index for the port used for trap definition.
%edes        cienaCesOamEventNotifShelfIndex This object indicates the shelf index for the port used for trap definition.
%edes        cienaCesOamEventNotifSlotIndex This object indicates the slot index for the port used for trap definition.
%edes        cienaCesOamEventNotifPortNumber This object indicates the port number for the corresponding PGID\n        used for trap definition.
%edes        cienaCesOamEventNotifChannelNumber This object indicates the channel number for the corresponding PGID\n        used for trap definition. The value 0 is used if port of concern is\n        not channelized.
%edes        cienaCesOamStatsClear   Setting this object to 'true' causes the values of all objects maintained \n         within the cienaCesOamStatsTable to reset to the value of zero. \n         When read, this object always returns the value of false.
%edes        cienaCesOamTable        Primary controls and status for the OAM capabilities of an\n        Ethernet like interface.  There is one row in this table\n        for each Ethernet like interface in the system that supports\n        the Ethernet OAM functions defined in [802.3ah].
%edes        cienaCesOamEntry        An entry in the table. Contains an Ethernet like interface\n        in the system that supports the Ethernet OAM functions\n        defined in [802.3ah].
%edes        cienaCesOamPort         An Ethernet port on the switch.
%edes        cienaCesOamAdminState   This object is used to provision the default administrative OAM mode for this \n        interface.  This object represents the desired state of OAM for this interface.  \n           \n        The cienaCesOamAdminState always starts in the disabled(1) state\n        until an explicit management action or configuration\n        information retained by the system causes a transition to the\n        enabled(2) state. \n   \n        Note that the value of this object is ignored when the\n        interface is not operating in full-duplex mode. OAM is not\n        supported on half-duplex links.
%edes        cienaCesOamOperStatus   At initialization and failure conditions, two OAM entities on\n         the same full-duplex Ethernet link begin a discovery phase to\n         determine what OAM capabilities may be used on that link.  The\n         progress of this initialization is controlled by the OAM\n         sub layer.  \n                    \n         This value is always disabled(1) if OAM is disabled on this\n         interface via the cienaCesOamAdminState.  \n  \n         If the link has detected a fault and is transmitting OAMPDUs\n         with a link fault indication, the value is linkFault(2). \n                          \n         The passiveWait(3) state is returned only by OAM entities in\n         passive mode (cienaCesOamMode) and reflects the state in which the\n         OAM entity is waiting to see if the peer device is OAM\n         capable.  The activeSendLocal(4) is used by active mode\n         devices (cienaCesOamMode) and reflects the OAM entity actively\n         trying to discover whether the peer has OAM capability but has\n         not yet made that determination.\n                          \n         The state sendLocalAndRemote(5) indicates that the local OAM\n         entity has discovered the peer but has not yet accepted or\n         rejected the configuration of the peer.  The local device can,\n         for whatever reason, decide that the peer device is\n         unacceptable and decline OAM peering.  If the local OAM entity\n         rejects the peer OAM entity, the state becomes\n         oamPeeringLocallyRejected(7).  If the OAM peering is allowed\n         by the local device, the state moves to\n         sendLocalAndRemoteOk(6).  Note that both the\n         sendLocalAndRemote(5) and oamPeeringLocallyRejected(7) states\n         fall within the state SEND_LOCAL_REMOTE of the Discovery state\n         diagram [802.3ah, Figure 57-5], with the difference being\n         whether the local OAM client has actively rejected the peering\n         or has just not indicated any decision yet.  Whether a peering\n         decision has been made is indicated via the local flags field\n         in the OAMPDU (reflected in the aOAMLocalFlagsField of\n         30.3.6.1.10).  \n  \n         If the remote OAM entity rejects the peering, the state\n         becomes oamPeeringRemotelyRejected(8).  Note that both the\n         sendLocalAndRemoteOk(6) and oamPeeringRemotelyRejected(8)\n         states fall within the state SEND_LOCAL_REMOTE_OK of the\n         Discovery state diagram [802.3ah, Figure 57-5], with the\n         difference being whether the remote OAM client has rejected\n         the peering or has just not yet decided.  This is indicated\n         via the remote flags field in the OAM PDU (reflected in the\n         aOAMRemoteFlagsField of 30.3.6.1.11).  \n                          \n         When the local OAM entity learns that both it and the remote\n         OAM entity have accepted the peering, the state moves to\n         operational(9) corresponding to the SEND_ANY state of the\n         Discovery state diagram [802.3ah, Figure 57-5].
%edes        cienaCesOamMode         This object indicates the mode of OAM operation for this\n         Ethernet like interface.  OAM on Ethernet interfaces may be in\n         'active' mode or 'passive' mode.  These two modes differ in\n         that active mode provides additional capabilities to initiate\n         monitoring activities with the remote OAM peer entity, while\n         passive mode generally waits for the peer to initiate OAM\n         actions with it.  As an example, an active OAM entity can put\n         the remote OAM entity in a loopback state, where a passive OAM\n         entity cannot.  \n    \n         The default value of cienaCesOamMode is dependent on the type of\n         system on which this Ethernet like interface resides.  The\n         default value should be 'active(1)' unless it is known that\n         this system should take on a subservient role to the other\n         device connected over this interface.  \n    \n         If this values gets changed it value results in incrementing the \n         configuration revision field of locally generated OAMPDUs (30.3.6.1.12) \n         and potentially re-doing the OAM discovery process if the\n         cienaCesOamOperStatus was already operational(9).
%eunits      cienaCesMaxOamPduSize   bytes
%edes        cienaCesMaxOamPduSize   The largest OAMPDU that the OAM entity supports.  OAM\n         entities exchange maximum OAMPDU sizes and negotiate to use\n         the smaller of the two maximum OAMPDU sizes between the peers.\n         This value is determined by the local implementation.
%edes        cienaCesOamConfigRevision The configuration revision of the OAM entity as reflected in\n         the latest OAMPDU sent by the OAM entity.  The configuration revision\n         is used by OAM entities to indicate configuration changes have\n         occurred which might require the peer OAM entity to re-evaluate\n         whether the peering is allowed.  See local_satisfied in\n         [802.3ah, 57.3.1.2].
%edes        cienaCesOamFunctionsSupported The OAM functions supported on this Ethernet like interface.\n          OAM consists of separate functional sets beyond the basic\n          discovery process which is always required.  These functional\n          groups can be supported independently by any implementation.\n          These values are communicated to the peer via the local\n          configuration field of Information OAMPDUs.
%eunits      cienaCesOamPduTimer     milliseconds
%edes        cienaCesOamPduTimer     The time in milliseconds between Information OAMPDUs\n         being transmitted via the Ethernet port.
%eunits      cienaCesOamLinkLostTimer milliseconds
%edes        cienaCesOamLinkLostTimer The time in milliseconds to wait for an Information OAMPDU\n         via the Ethernet port, from a peer, before declaring the link lost.
%edes        cienaCesOamPeerTable    Information about the OAM peer for a particular Ethernet like\n         interface. OAM entities communicate with a single OAM peer\n         entity on full-duplex Ethernet links on which OAM is enabled\n         and operating properly.  \n            \n         In certain states, the OAM peer information is not available.\n         Whether peer information is available is communicated via the\n         cienaCesOamPeerStatus object.  When this object is inactive, all\n         other information in the row is considered invalid.
%edes        cienaCesOamPeerEntry    An entry in the table, containing information on the peer OAM\n        entity for a single Ethernet like interface.  \n     \n        Note that there is at most one OAM peer for each Ethernet like\n        interface.  There is exactly one row in this table for each\n        Ethernet like interface supporting OAM.
%edes        cienaCesOamLocalPort    An Ethernet port on the local switch.
%edes        cienaCesOamPeerStatus   This object indicates whether the information in this row\n         should be considered valid.  When active(1), the information\n         is valid and represents the current peer of the OAM entity.\n         When inactive(2), the information in this row is invalid.  \n     \n         A value of inactive(2) is returned if the cienaCesOamOperStatus is\n         disabled, passiveWait, or activeSendLocal.  For all other\n         values of cienaCesOamOperStatus, a value of active(1) is returned.
%edes        cienaCesOamPeerMacAddress The MAC address of the peer OAM entity.  The MAC address is\n            derived from the most recently received OAMPDU.  This value is\n            initialized to all zeros (0x000000000000).  This value is\n            invalid if the cienaCesOamPeerStatus is inactive.  \n     \n            An OAMPDU is indicated by a valid frame with (1) destination\n            MAC address equal to that of the reserved MAC address for Slow\n            Protocols (See 43B of [802.3ah]), (2) a lengthOrType field\n            equal to the reserved type for Slow Protocols, (3) and a Slow\n            Protocols subtype equal to that of the subtype reserved for\n            OAM.
%edes        cienaCesOamPeerVendorOui The OUI of the OAM peer as reflected in the latest\n         Information OAMPDU received with a Local Information TLV.  The\n         OUI can be used to identify the vendor of the remote OAM\n         entity.  This value is initialized to all zeros (0x000000).\n         This value is considered invalid if the cienaCesOamPeerStatus is\n         inactive.  \n  \n         An Information OAMPDU is indicated by a valid frame with (1)\n         destination MAC address equal to that of the reserved MAC\n         address for Slow Protocols (See 43B of [802.3ah]), (2) a\n         lengthOrType field equal to the reserved type for Slow Protocols, (3) \n         a Slow Protocols subtype equal to that of the\n         subtype reserved for OAM, and (4) an OAM code that equals the code\n         reserved for Information OAMPDUs.
%edes        cienaCesOamPeerVendorInfo The Vendor Info of the OAM peer as reflected in the latest\n         Information OAMPDU received with a Local Information TLV.  The\n         vendor information field is within the Local Information TLV,\n         and can be used to determine additional information about the\n         peer entity.  The format of the vendor information is\n         unspecified within the 32-bit field.  This value is initialized\n         to all zero.  This value is invalid if the cienaCesOamPeerStatus \n         is inactive.  \n  \n         An Information OAMPDU is indicated by a valid frame with (1)\n         destination MAC address equal to that of the reserved MAC\n         address for Slow Protocols (See 43B of [802.3ah]), (2) a\n         lengthOrType field equal to the reserved type for Slow\n         Protocols, (3) a Slow Protocols subtype equal to that of the\n         subtype reserved for OAM, and (4) an OAM code that equals the\n         code reserved for Information OAMPDUs.
%edes        cienaCesOamPeerMode     The mode of the OAM peer as reflected in the latest\n          Information OAMPDU received with a Local Information TLV.  The\n          mode of the peer can be determined from the Configuration\n          field in the Local Information TLV of the last Information\n          OAMPDU received from the peer.  This value is initialized to\n          unknown(3), and is not valid if the cienaCesOamPeerStatus is\n          inactive.  \n     \n          An Information OAMPDU is indicated by a valid frame with (1)\n          destination MAC address equal to that of the reserved MAC\n          address for Slow Protocols (See 43B of [802.3ah]), (2) a\n          lengthOrType field equal to the reserved type for Slow\n          Protocols, (3) a Slow Protocols subtype equal to that of the\n          subtype reserved for OAM, and (4) an OAM code that equals the\n          code reserved for Information OAMPDUs.
%eunits      cienaCesOamPeerMaxOamPduSize bytes
%edes        cienaCesOamPeerMaxOamPduSize The maximum size of OAMPDU supported by the peer as reflected\n            in the latest Information OAMPDU received with a Local\n            Information TLV.   Ethernet OAM on this interface must not use\n            OAMPDUs that exceed this size.  The maximum OAMPDU size can be\n            determined from the PDU Configuration field of the Local\n            Information TLV of the last Information OAMPDU received from\n            the peer.  This value is initialized to 64, and is invalid if\n            the cienaCesOamPeerStatus is inactive.\n     \n            An Information OAMPDU is indicated by a valid frame with (1)\n            destination MAC address equal to that of the reserved MAC\n            address for Slow Protocols (See 43B of [802.3ah]), (2) a\n            lengthOrType field equal to the reserved type for Slow\n            Protocols, (3) a Slow Protocols subtype equal to that of the\n            subtype reserved for OAM, and (4) an OAM code that equals the\n            code reserved for Information OAMPDUs.
%edes        cienaCesOamPeerConfigRevision The configuration revision of the OAM peer as reflected in\n            the latest OAMPDU.  This attribute is changed by the peer\n            whenever it has a local configuration change for Ethernet OAM\n            this interface.  This value is initialized to zero, \n            and is invalid if the cienaCesOamPeerStatus is\n            inactive.\n     \n            The configuration revision can be determined from the Revision\n            field of the Local Information TLV of the most recently\n            received Information OAMPDU with a Local Information TLV.\n                            \n            An Information OAMPDU is indicated by a valid frame with (1)\n            destination MAC address equal to that of the reserved MAC\n            address for Slow Protocols (See 43B of [802.3ah]), (2) a\n            lengthOrType field equal to the reserved type for Slow\n            Protocols, (3) a Slow Protocols subtype equal to that of the\n            subtype reserved for OAM, and (4) an OAM code that equals the\n            code reserved for Information OAMPDUs.
%edes        cienaCesOamPeerFunctionsSupported The OAM functions supported on this Ethernet like interface.\n            OAM consists of separate functionality sets above the basic\n            discovery process.  This value indicates the capabilities of\n            the peer OAM entity with respect to these functions.  This\n            value is initialized so all bits are clear, and is invalid if\n            the cienaCesOamPeerStatus is inactive.\n     \n            The capbilities of the OAM peer can be determined from the\n            configuration field of the Local Information TLV of the most\n            recently received Information OAMPDU with a Local Information\n            TLV.\n                            \n            An Information OAMPDU is indicated by a valid frame with (1)\n            destination MAC address equal to that of the reserved MAC\n            address for Slow Protocols (See 43B of [802.3ah]), (2) a\n            lengthOrType field equal to the reserved type for Slow\n            Protocols, (3) a Slow Protocols subtype equal to that of the\n            subtype reserved for OAM, and (4) an OAM code that equals the\n            code reserved for Information OAMPDUs.
%edes        cienaCesOamLoopbackTable This table contains methods to control the loopback state of\n          the local link as well as indicating the status of the\n          loopback function.\n           \n          Loopback can be used to place the remote OAM entity in a state\n          where every received frame (except OAMPDUs) are echoed back\n          over the same interface on which they were received.   In this\n          state, at the remote entity, 'normal' traffic is disabled as\n          only the looped back frames are transmitted on the interface.\n          Loopback is thus an intrusive operation that prohibits normal\n          data flow and should be used accordingly.
%edes        cienaCesOamLoopbackEntry An entry in the table, containing information on the loopback\n            status for a single Ethernet like interface.  There is an\n            entry in this table for every Ethernet like interface which\n            supports OAM and loopback function within OAM (as indicated in\n            cienaCesOamFunctionsSupported).
%edes        cienaCesOamLoopbackPort An Ethernet port on the switch.
%edes        cienaCesOamLoopbackCommand This attribute initiates or terminates remote loopback with\n            an OAM peer.  Value startRemoteLoopback(2) of this attribute\n            indicates the local OAM client to send a loopback OAMPDU to the\n            OAM peer with the loopback enable flags set.  Value\n            stopRemoteLoopback(3) of this attribute indicates the local\n            OAM client to send a loopback OAMPDU to the OAM peer with the\n            loopback enable flags cleared.  Value noLoopback(1) to this\n            attribute has no effect.  \n     \n            The attribute always returns noLoopback on a read.  To\n            determine the loopback status, use the attribute\n            cienaCesOamLoopbackStatus.
%edes        cienaCesOamLoopbackStatus The loopback status of the OAM entity.  This status is\n            determined by a combination of the local parser and\n            multiplexer states, the remote parser and multiplexer states,\n            as well as by the actions of the local OAM client.  When\n            operating in normal mode with no loopback in progress, the\n            status reads noLoopback(1).  \n                            \n            If the OAM client has sent a Loopback OAMPDU and is waiting\n            for a response, where the local parser and multiplexer states\n            are DISCARD (see [802.3ah, 57.2.11.1]), the status is\n            'initiatingLoopback'.  In this case, the local OAM entity has\n            yet to receive any acknowledgement that the remote OAM entity\n            has received its loopback command request.  \n                            \n            If the local OAM client knows that the remote OAM entity is in\n            loopback mode (via the remote state information as described\n            in [802.3ah, 57.2.11.1, 30.3.6.1.15]), the status is remoteLoopback(3).  \n            If the local OAM client is in the process\n            of terminating the remote loopback [802.3ah, 57.2.11.3,\n            30.3.6.1.14], with its local multiplexer and parser states in\n            DISCARD, the status is terminatingLoopback(4).  If the remote\n            OAM client has put the local OAM entity in loopback mode as\n            indicated by its local parser state, the status is\n            localLoopback(5).  \n     \n            The unknown(6) status indicates the parser and multiplexer\n            combination is unexpected.  This status may be returned if the\n            OAM loopback is in a transition state but should not persist. \n     \n            The values of this attribute correspond to the following\n            values of the local and remote parser and multiplexer states. \n     \n                               LclPrsr   LclMux    RmtPrsr   RmtMux\n              noLoopback         FWD       FWD       FWD       FWD  \n              initLoopback     DISCARD   DISCARD     FWD       FWD \n              rmtLoopback      DISCARD     FWD      LPBK    DISCARD\n              tmtngLoopback    DISCARD   DISCARD    LPBK    DISCARD\n              lclLoopback        LPBK    DISCARD   DISCARD     FWD\n              unknown            ***   any other combination   ***
%edes        cienaCesOamLoopbackIgnoreRx Since OAM loopback is a disruptive operation (user traffic\n            does not pass), this attribute provides a mechanism to provide\n            controls over whether received OAM loopback commands are\n            processed or ignored.  When the value is ignore(1), received\n            loopback commands are ignored.  When the value is process(2),\n            OAM loopback commands are processed.  The default value is to\n            ignore loopback commands (ignore(1)).  \n     \n            The attribute has no meaning if the local OAM entity does not\n            support the loopback function (as defined in\n            cienaCesOamFunctionsSupported).
%edes        cienaCesOamSystemEnableDisable This object indicates the administratively configurable state of the \n         OAM on the switch.
%edes        cienaCesOamEventConfigTable Ethernet OAM includes the ability to generate and receive\n          event notifications to indicate various link problems.  This\n          table contains the mechanisms to configure the thresholds to\n          generate the standard Ethernet OAM Event.\n          These events are:\n             - Errored Symbol Period Event.  Generated when the number of\n               symbol errors exceeds a threshold within a given window\n               defined by a number of symbols (e.g. 1,000 symbols out of\n               1,000,000 had errors).\n             - Errored Frame Period Event.  Generated when the number of\n               frame errors exceeds a threshold within a given window\n               defined by a number of frames (e.g. 10 frames out of 1000\n               had errors).\n             - Errored Frame Event.  Generated when the number of frame\n               errors exceeds a threshold within a given window defined\n               by a period of time (e.g. 10 frames in 1 second had\n               errors).\n             - Errored Frame Seconds Summary Event.  Generated when the\n               number of errored frame seconds exceeds a threshold within\n               a given time period (e.g. 10 errored frame seconds within\n               the last 100 seconds).  An errored frame second is defined\n               as a 1 second interval that had >0 frame errors.
%edes        cienaCesOamEventConfigEntry Event configuration information is available for every\n         Ethernet like interface that supports OAM and the event\n         function of OAM as indicated in the cienaCesOamFunctionsSupported\n         attribute.  \n                    \n         Event configuration controls when the local management entity\n         sends Event Notification OAMPDUs to its OAM peer.
%edes        cienaCesOamEventPort    An Ethernet port on the switch
%eunits      cienaCesOamErrFramePeriodWindow frames
%edes        cienaCesOamErrFramePeriodWindow The number of frames over which the threshold is defined. \n          The default value of the window is the number of minimum size\n          Ethernet frames that can be received over the physical layer in\n          one second.  \n                          \n          If cienaCesOamErrFramePeriodThreshold frame errors occur within a \n          window of cienaCesOamErrFramePeriodWindow frames, an Event\n          Notification OAMPDU should be generated with an Errored Frame\n          Period Event TLV indicating the threshold has been crossed in\n          this window. \n          \n          +------------ Range of errd-frame-period-window values------------+\n          |         10    mbps link   : 1488    - 892800                    |\n          |         100   mbps link   : 14880   - 8928000                   |\n          |         1000  mbps link   : 148810  - 89285760                  |\n          |         10000 mbps link   : 1488096 - 892857120                 |\n          +-----------------------------------------------------------------+\n                
%eref        cienaCesOamErrFramePeriodWindow [802.3ah], 30.3.6.1.38
%eunits      cienaCesOamErrFramePeriodThreshold frames
%edes        cienaCesOamErrFramePeriodThreshold The number of frame errors that must occur for this event to\n        be triggered.  The default value is one frame error.  \n                                  \n        If cienaCesOamErrFramePeriodThreshold frame errors occur within a\n        window of cienaCesOamErrFramePeriodWindow frames, an Event\n        Notification OAMPDU should be generated with an Errored Frame\n        Period Event TLV indicating the threshold has been crossed in\n        this window.
%eref        cienaCesOamErrFramePeriodThreshold [802.3ah], 30.3.6.1.38
%edes        cienaCesOamErrFramePeriodEvNotifEnable Indicates whether the occurrence of an Errored Frame Period\n          Event should result in an Event Notification OAMPDU generated\n          by the OAM layer.  \n                                  \n          By default, this object should have the value enabled(1) for\n          Ethernet like interfaces that support OAM.  If the OAM layer\n          does not support event notifications (as indicated via the\n          cienaCesOamFunctionsSupported attribute), this value is ignored.
%eunits      cienaCesOamErrFrameWindow tenths of a second
%edes        cienaCesOamErrFrameWindow The amount of time (in 100ms increments) over which the\n          threshold is defined.  The default value is 10 (1 second).\n                                 \n          If cienaCesOamErrFrameThreshold frame errors occur within a window\n          of cienaCesOamErrFrameWindow seconds (measured in tenths of\n          seconds), an Event Notification OAMPDU should be generated with\n          an Errored Frame Event TLV indicating the threshold has been\n          crossed in this window.
%eref        cienaCesOamErrFrameWindow [802.3ah], 30.3.6.1.36
%eunits      cienaCesOamErrFrameThreshold frames
%edes        cienaCesOamErrFrameThreshold The number of frame errors that must occur for this event to\n          be triggered.  The default value is one frame error.  \n                                 \n          If cienaCesOamErrFrameThreshold frame errors occur within a window\n          of cienaCesOamErrFrameWindow (in tenths of seconds), an Event\n          Notification OAMPDU should be generated with an Errored Frame\n          Event TLV indicating the threshold has been crossed in this\n          window.
%eref        cienaCesOamErrFrameThreshold [802.3ah], 30.3.6.1.36
%edes        cienaCesOamErrFrameEvNotifEnable Indicates whether the occurrence of an Errored Frame Event\n          should result in an Event Notification OAMPDU generated by the\n          OAM layer.\n                            \n          By default, this object should have the value enabled(1) for\n          Ethernet like interfaces that support OAM.  If the OAM layer\n          does not support event notifications (as indicated via the\n          cienaCesOamFunctionsSupported attribute), this value is ignored.
%eunits      cienaCesOamErrFrameSecsSummaryWindow tenths of a second
%edes        cienaCesOamErrFrameSecsSummaryWindow The amount of time (in 100ms intervals) over which the\n            threshold is defined.  The default value is 100 (10 seconds).\n                            \n            If cienaCesOamErrFrameSecsSummaryThreshold frame errors occur\n            within a window of cienaCesOamErrFrameSecsSummaryWindow (in tenths\n            of seconds), an Event Notification OAMPDU should be generated\n            with an Errored Frame Seconds Summary Event TLV indicating the\n            threshold has been crossed in this window.
%eref        cienaCesOamErrFrameSecsSummaryWindow [802.3ah], 30.3.6.1.40
%eunits      cienaCesOamErrFrameSecsSummaryThreshold errored frame seconds
%edes        cienaCesOamErrFrameSecsSummaryThreshold The number of errored frame seconds that must occur for this\n            event to be triggered.  The default value is one errored frame\n            second.\n                            \n            If cienaCesOamErrFrameSecsSummaryThreshold frame errors occur\n            within a window of cienaCesOamErrFrameSecsSummaryWindow (in tenths\n            of seconds), an Event Notification OAMPDU should be generated\n            with an Errored Frame Seconds Summary Event TLV indicating the\n            threshold has been crossed in this window.
%eref        cienaCesOamErrFrameSecsSummaryThreshold [802.3ah], 30.3.6.1.40
%edes        cienaCesOamErrFrameSecsEvNotifEnable Indicates whether the occurrence of an Errored Frame Seconds\n            Summary Event should result in an Event Notification OAMPDU\n            generated by the OAM layer.\n                            \n            By default, this object should have the value enabled(1) for\n            Ethernet like interfaces that support OAM.  If the OAM layer\n            does not support event notifications (as indicated via the\n            cienaCesOamFunctionsSupported attribute), this value is ignored.
%edes        cienaCesOamDyingGaspEnable Indicates whether the local device should attempt to indicate\n            a dying gasp fault via the OAMPDU flags field to its peer OAM\n            entity.  If the system does not support dying gasp capability,\n            reading the object should always result in 'disabled(2)'.\n            \n            By default, this object should have the value enabled(1) for\n            Ethernet like interfaces that support OAM.  If the OAM layer\n            does not support event notifications (as indicated via the\n            OamFunctionsSupported attribute), this value is ignored.
%edes        cienaCesOamCriticalEventEnable Indicates whether the local device should attempt to indicate\n            a critical event has occurred via the OAMPDU flags field to its peer OAM\n            entity.  If the system does not support dying gasp capability,\n            reading the object should always result in 'disabled(2)'.\n            \n            By default, this object should have the value enabled(1) for\n            Ethernet like interfaces that support OAM.  If the OAM layer\n            does not support event notifications (as indicated via the\n            OamFunctionsSupported attribute), this value is ignored.
%edes        cienaCesBfdSessionStatsTable The (conceptual) table listing the statistics \n            for a given BFD Session
%edes        cienaCesBfdSessionStatsEntry An entry (conceptual row) in the BFD session statistics table.
%edes        cienaCesBfdSessionStatsTotalTx This object indicates the number of transmitted packets in a BFD session.
%edes        cienaCesBfdSessionStatsTotalRx This object indicates the number of received packets in a BFD session.
%edes        cienaCesBfdSessionUpTime This object specifies the time duration in seconds the session has been in the up state
%edes        cienaCesBfdSessionDownTimeCount This object specifies the total number of times a session changes from up to operationally down state since creation
%edes        cienaCesBfdDampSessionStatsTable The table listing the statistics\n             for a given BFD dampening enabled session.
%edes        cienaCesBfdDampSessionStatsEntry An entry in the BFD dampening enabled session statistics table.
%edes        cienaCesBfdDampSessionCurrentPenalty This object indicates the current penalty of BFD dampening \n              enabled BFD session.
%edes        cienaCesBfdDampSessionLastSupressTime This object specifies the last suppress time of BFD dampening\n              enabled BFD session.
%edes        cienaCesBfdDampSessionSuppressRecoveryTime This object specifies the time left to recover suppressed client\n              notification of BFD dampening enabled BFD session.
%edes        cienaCesBfdDampSessionSuppressCount This object specifies total number of time suppression occured  \n              on BFD dampening enabled BFD session.
%edes        cienaCesBfdDampSessionDampTrapCount This object specifies total number of times trap sent when \n              suppression occured on  BFD dampening enabled BFD session.
%edes        cienaGenericMIBs        This module represents the top-level MIB branch for some of the generic MIBs that are common to Ciena\n				 products.
%edes        cienaOpterametro        This module represents the top-level MIB branch for Optical MIBs.
%edes        prTable                 A table containing information on running\n	 programs/daemons configured for monitoring in the\n	 snmpd.conf file of the agent.  Processes violating the\n	 number of running processes required by the agent's\n	 configuration file are flagged with numerical and\n	 textual errors.
%edes        prEntry                 An entry containing a process and its statistics.
%edes        prIndex                 Reference Index for each observed process.
%edes        prNames                 The process name we're counting/checking on.
%edes        prMin                   The minimum number of processes that should be\n	 running.  An error flag is generated if the number of\n	 running processes is < the minimum.
%edes        prMax                   The maximum number of processes that should be\n	 running.  An error flag is generated if the number of\n	 running processes is > the maximum.
%edes        prCount                 The number of current processes running with the name\n	 in question.
%edes        prErrorFlag             A Error flag to indicate trouble with a process.  It\n	 goes to 1 if there is an error, 0 if no error.
%edes        prErrMessage            An error message describing the problem (if one exists).
%edes        prErrFix                Setting this to one will try to fix the problem if\n	 the agent has been configured with a script to call\n	 to attempt to fix problems automatically using remote\n	 snmp operations.
%edes        prErrFixCmd             The command that gets run when the prErrFix column is \n	 set to 1.
%edes        memIndex                Bogus Index.  This should always return the integer 0.
%edes        memErrorName            Bogus Name. This should always return the string 'swap'.
%eunits      memTotalSwap            kB
%edes        memTotalSwap            The total amount of swap space configured for this host.
%eunits      memAvailSwap            kB
%edes        memAvailSwap            The amount of swap space currently unused or available.
%eunits      memTotalReal            kB
%edes        memTotalReal            The total amount of real/physical memory installed\n         on this host.
%eunits      memAvailReal            kB
%edes        memAvailReal            The amount of real/physical memory currently unused\n         or available.
%eunits      memTotalSwapTXT         kB
%edes        memTotalSwapTXT         The total amount of swap space or virtual memory allocated\n         for text pages on this host.\n\n         This object will not be implemented on hosts where the\n         underlying operating system does not distinguish text\n         pages from other uses of swap space or virtual memory.
%eunits      memAvailSwapTXT         kB
%edes        memAvailSwapTXT         The amount of swap space or virtual memory currently\n         being used by text pages on this host.\n\n         This object will not be implemented on hosts where the\n         underlying operating system does not distinguish text\n         pages from other uses of swap space or virtual memory.\n\n         Note that (despite the name), this value reports the\n         amount used, rather than the amount free or available\n         for use.  For clarity, this object is being deprecated\n         in favour of 'memUsedSwapTXT(16).
%eunits      memTotalRealTXT         kB
%edes        memTotalRealTXT         The total amount of real/physical memory allocated\n         for text pages on this host.\n\n         This object will not be implemented on hosts where the\n         underlying operating system does not distinguish text\n         pages from other uses of physical memory.
%eunits      memAvailRealTXT         kB
%edes        memAvailRealTXT         The amount of real/physical memory currently being\n         used by text pages on this host.\n\n         This object will not be implemented on hosts where the\n         underlying operating system does not distinguish text\n         pages from other uses of physical memory.\n\n         Note that (despite the name), this value reports the\n         amount used, rather than the amount free or available\n         for use.  For clarity, this object is being deprecated\n         in favour of 'memUsedRealTXT(17).
%eunits      memTotalFree            kB
%edes        memTotalFree            The total amount of memory free or available for use on\n         this host.  This value typically covers both real memory\n         and swap space or virtual memory.
%eunits      memMinimumSwap          kB
%edes        memMinimumSwap          The minimum amount of swap space expected to be kept\n         free or available during normal operation of this host.\n\n         If this value (as reported by 'memAvailSwap(4)') falls\n         below the specified level, then 'memSwapError(100)' will\n         be set to 1 and an error message made available via\n         'memSwapErrorMsg(101)'.
%eunits      memShared               kB
%edes        memShared               The total amount of real or virtual memory currently\n         allocated for use as shared memory.\n\n         This object will not be implemented on hosts where the\n         underlying operating system does not explicitly identify\n         memory as specifically reserved for this purpose.
%eunits      memBuffer               kB
%edes        memBuffer               The total amount of real or virtual memory currently\n         allocated for use as memory buffers.\n\n         This object will not be implemented on hosts where the\n         underlying operating system does not explicitly identify\n         memory as specifically reserved for this purpose.
%eunits      memCached               kB
%edes        memCached               The total amount of real or virtual memory currently\n         allocated for use as cached memory.\n\n         This object will not be implemented on hosts where the\n         underlying operating system does not explicitly identify\n         memory as specifically reserved for this purpose.
%eunits      memUsedSwapTXT          kB
%edes        memUsedSwapTXT          The amount of swap space or virtual memory currently\n         being used by text pages on this host.\n\n         This object will not be implemented on hosts where the\n         underlying operating system does not distinguish text\n         pages from other uses of swap space or virtual memory.
%eunits      memUsedRealTXT          kB
%edes        memUsedRealTXT          The amount of real/physical memory currently being\n         used by text pages on this host.\n\n         This object will not be implemented on hosts where the\n         underlying operating system does not distinguish text\n         pages from other uses of physical memory.
%edes        memSwapError            Indicates whether the amount of available swap space\n         (as reported by 'memAvailSwap(4)'), is less than the\n         desired minimum (specified by 'memMinimumSwap(12)').
%edes        memSwapErrorMsg         Describes whether the amount of available swap space\n         (as reported by 'memAvailSwap(4)'), is less than the\n         desired minimum (specified by 'memMinimumSwap(12)').
%edes        extTable                A table of extensible commands returning output and\n	 result codes.  These commands are configured via the\n	 agent's snmpd.conf file.
%edes        extEntry                An entry containing an extensible script/program and its output.
%edes        extIndex                Reference Index for extensible scripts.  Simply an\n	 integer row number.
%edes        extNames                A Short, one name description of the extensible command.
%edes        extCommand              The command line to be executed.
%edes        extResult               The result code (exit status) from the executed command.
%edes        extOutput               The first line of output of the executed command.
%edes        extErrFix               Setting this to one will try to fix the problem if\n	 the agent has been configured with a script to call\n	 to attempt to fix problems automatically using remote\n	 snmp operations.
%edes        extErrFixCmd            The command that gets run when the extErrFix column is \n	 set to 1.
%edes        dskTable                Disk watching information.  Partions to be watched\n	 are configured by the snmpd.conf file of the agent.
%edes        dskEntry                An entry containing a disk and its statistics.
%edes        dskIndex                Integer reference number (row number) for the disk mib.
%edes        dskPath                 Path where the disk is mounted.
%edes        dskDevice               Path of the device for the partition
%edes        dskMinimum              Minimum space required on the disk (in kBytes) before the\n         errors are triggered.  Either this or dskMinPercent is\n         configured via the agent's snmpd.conf file.
%edes        dskMinPercent           Percentage of minimum space required on the disk before the\n         errors are triggered.  Either this or dskMinimum is\n         configured via the agent's snmpd.conf file.
%edes        dskTotal                Total size of the disk/partion (kBytes).\n	 For large disks (>2Tb), this value will\n	 latch at INT32_MAX (2147483647).
%edes        dskAvail                Available space on the disk.\n	 For large lightly-used disks (>2Tb), this\n	 value will latch at INT32_MAX (2147483647).
%edes        dskUsed                 Used space on the disk.\n	 For large heavily-used disks (>2Tb), this\n	 value will latch at INT32_MAX (2147483647).
%edes        dskPercent              Percentage of space used on disk
%edes        dskPercentNode          Percentage of inodes used on disk
%edes        dskTotalLow             Total size of the disk/partion (kBytes).\n	Together with dskTotalHigh composes 64-bit number.
%edes        dskTotalHigh            Total size of the disk/partion (kBytes).\n	Together with dskTotalLow composes 64-bit number.
%edes        dskAvailLow             Available space on the disk (kBytes).\n	Together with dskAvailHigh composes 64-bit number.
%edes        dskAvailHigh            Available space on the disk (kBytes).\n	Together with dskAvailLow composes 64-bit number.
%edes        dskUsedLow              Used space on the disk (kBytes).\n	Together with dskUsedHigh composes 64-bit number.
%edes        dskUsedHigh             Used space on the disk (kBytes).\n	Together with dskUsedLow composes 64-bit number.
%edes        dskErrorFlag            Error flag signaling that the disk or partition is under\n	 the minimum required space configured for it.
%edes        dskErrorMsg             A text description providing a warning and the space left\n	 on the disk.
%edes        laTable                 Load average information.
%edes        laEntry                 An entry containing a load average and its values.
%edes        laIndex                 reference index/row number for each observed loadave.
%edes        laNames                 The list of loadave names we're watching.
%edes        laLoad                  The 1,5 and 15 minute load averages (one per row).
%edes        laConfig                The watch point for load-averages to signal an\n	 error.  If the load averages rises above this value,\n	 the laErrorFlag below is set.
%edes        laLoadInt               The 1,5 and 15 minute load averages as an integer.\n	 This is computed by taking the floating point\n	 loadaverage value and multiplying by 100, then\n	 converting the value to an integer.
%edes        laLoadFloat             The 1,5 and 15 minute load averages as an opaquely\n	 wrapped floating point number.
%edes        laErrorFlag             A Error flag to indicate the load-average has crossed\n	 its threshold value defined in the snmpd.conf file.\n	 It is set to 1 if the threshold is crossed, 0 otherwise.
%edes        laErrMessage            An error message describing the load-average and its\n	 surpased watch-point value.
%edes        ssIndex                 Bogus Index.  This should always return the integer 1.
%edes        ssErrorName             Bogus Name. This should always return the string 'systemStats'.
%eunits      ssSwapIn                kB
%edes        ssSwapIn                The average amount of memory swapped in from disk,\n         calculated over the last minute.
%eunits      ssSwapOut               kB
%edes        ssSwapOut               The average amount of memory swapped out to disk,\n         calculated over the last minute.
%eunits      ssIOSent                blocks/s
%edes        ssIOSent                The average amount of data written to disk or other\n         block device, calculated over the last minute.\n       \n	 This object has been deprecated in favour of\n         'ssIORawSent(57)', which can be used to calculate\n         the same metric, but over any desired time period.
%eunits      ssIOReceive             blocks/s
%edes        ssIOReceive             The average amount of data read from disk or other\n         block device, calculated over the last minute.\n       \n	 This object has been deprecated in favour of\n         'ssIORawReceived(58)', which can be used to calculate\n         the same metric, but over any desired time period.
%eunits      ssSysInterrupts         interrupts/s
%edes        ssSysInterrupts         The average rate of interrupts processed (including\n         the clock) calculated over the last minute.\n       \n	 This object has been deprecated in favour of\n         'ssRawInterrupts(59)', which can be used to calculate\n         the same metric, but over any desired time period.
%eunits      ssSysContext            switches/s
%edes        ssSysContext            The average rate of context switches,\n         calculated over the last minute.\n       \n	 This object has been deprecated in favour of\n         'ssRawContext(60)', which can be used to calculate\n         the same metric, but over any desired time period.
%edes        ssCpuUser               The percentage of CPU time spent processing\n         user-level code, calculated over the last minute.\n       \n	 This object has been deprecated in favour of\n         'ssCpuRawUser(50)', which can be used to calculate\n         the same metric, but over any desired time period.
%edes        ssCpuSystem             The percentage of CPU time spent processing\n         system-level code, calculated over the last minute.\n       \n	 This object has been deprecated in favour of\n         'ssCpuRawSystem(52)', which can be used to calculate\n         the same metric, but over any desired time period.
%edes        ssCpuIdle               The percentage of processor time spent idle,\n         calculated over the last minute.\n       \n	 This object has been deprecated in favour of\n         'ssCpuRawIdle(53)', which can be used to calculate\n         the same metric, but over any desired time period.
%edes        ssCpuRawUser            The number of 'ticks' (typically 1/100s) spent\n         processing user-level code.\n\n         On a multi-processor system, the 'ssCpuRaw*'\n         counters are cumulative over all CPUs, so their\n         sum will typically be N*100 (for N processors).
%edes        ssCpuRawNice            The number of 'ticks' (typically 1/100s) spent\n         processing reduced-priority code.\n\n         This object will not be implemented on hosts where\n         the underlying operating system does not measure\n         this particular CPU metric.\n\n         On a multi-processor system, the 'ssCpuRaw*'\n         counters are cumulative over all CPUs, so their\n         sum will typically be N*100 (for N processors).
%edes        ssCpuRawSystem          The number of 'ticks' (typically 1/100s) spent\n         processing system-level code.\n\n         On a multi-processor system, the 'ssCpuRaw*'\n         counters are cumulative over all CPUs, so their\n         sum will typically be N*100 (for N processors).\n\n         This object may sometimes be implemented as the\n         combination of the 'ssCpuRawWait(54)' and\n         'ssCpuRawKernel(55)' counters, so care must be\n         taken when summing the overall raw counters.
%edes        ssCpuRawIdle            The number of 'ticks' (typically 1/100s) spent\n         idle.\n\n         On a multi-processor system, the 'ssCpuRaw*'\n         counters are cumulative over all CPUs, so their\n         sum will typically be N*100 (for N processors).
%edes        ssCpuRawWait            The number of 'ticks' (typically 1/100s) spent\n         waiting for IO.\n\n         This object will not be implemented on hosts where\n         the underlying operating system does not measure\n         this particular CPU metric.  This time may also be\n         included within the 'ssCpuRawSystem(52)' counter.\n\n         On a multi-processor system, the 'ssCpuRaw*'\n         counters are cumulative over all CPUs, so their\n         sum will typically be N*100 (for N processors).
%edes        ssCpuRawKernel          The number of 'ticks' (typically 1/100s) spent\n         processing kernel-level code.\n\n         This object will not be implemented on hosts where\n         the underlying operating system does not measure\n         this particular CPU metric.  This time may also be\n         included within the 'ssCpuRawSystem(52)' counter.\n\n         On a multi-processor system, the 'ssCpuRaw*'\n         counters are cumulative over all CPUs, so their\n         sum will typically be N*100 (for N processors).
%edes        ssCpuRawInterrupt       The number of 'ticks' (typically 1/100s) spent\n         processing hardware interrupts.\n\n         This object will not be implemented on hosts where\n         the underlying operating system does not measure\n         this particular CPU metric.\n\n         On a multi-processor system, the 'ssCpuRaw*'\n         counters are cumulative over all CPUs, so their\n         sum will typically be N*100 (for N processors).
%edes        ssIORawSent             Number of blocks sent to a block device
%edes        ssIORawReceived         Number of blocks received from a block device
%edes        ssRawInterrupts         Number of interrupts processed
%edes        ssRawContexts           Number of context switches
%edes        ssCpuRawSoftIRQ         The number of 'ticks' (typically 1/100s) spent\n         processing software interrupts.\n\n         This object will not be implemented on hosts where\n         the underlying operating system does not measure\n         this particular CPU metric.\n\n         On a multi-processor system, the 'ssCpuRaw*'\n         counters are cumulative over all CPUs, so their\n         sum will typically be N*100 (for N processors).
%edes        ssRawSwapIn             Number of blocks swapped in
%edes        ssRawSwapOut            Number of blocks swapped out
%edes        ssCpuRawSteal           The number of 'ticks' (typically 1/100s) spent\n         by the hypervisor code to run other VMs even\n         though the CPU in the current VM had something runnable.\n\n         This object will not be implemented on hosts where\n         the underlying operating system does not measure\n         this particular CPU metric.\n\n         On a multi-processor system, the 'ssCpuRaw*'\n         counters are cumulative over all CPUs, so their\n         sum will typically be N*100 (for N processors).
%edes        ssCpuRawGuest           The number of 'ticks' (typically 1/100s) spent\n         by the CPU to run a virtual CPU (guest).\n\n         This object will not be implemented on hosts where\n         the underlying operating system does not measure\n         this particular CPU metric.\n\n         On a multi-processor system, the 'ssCpuRaw*'\n         counters are cumulative over all CPUs, so their\n         sum will typically be N*100 (for N processors).
%edes        ssCpuRawGuestNice       The number of 'ticks' (typically 1/100s) spent\n         by the CPU to run a niced virtual CPU (guest).\n\n         This object will not be implemented on hosts where\n         the underlying operating system does not measure\n         this particular CPU metric.\n\n         On a multi-processor system, the 'ssCpuRaw*'\n         counters are cumulative over all CPUs, so their\n         sum will typically be N*100 (for N processors).
%edes        lmTempSensorsTable      Table of temperature sensors and their values.
%edes        lmTempSensorsEntry      An entry containing a device and its statistics.
%edes        lmTempSensorsIndex      Reference index for each observed device.
%edes        lmTempSensorsDevice     The name of the temperature sensor we are reading.
%edes        lmTempSensorsValue      The temperature of this sensor in mC.
%edes        lmFanSensorsTable       Table of fan sensors and their values.
%edes        lmFanSensorsEntry       An entry containing a device and its statistics.
%edes        lmFanSensorsIndex       Reference index for each observed device.
%edes        lmFanSensorsDevice      The name of the fan sensor we are reading.
%edes        lmFanSensorsValue       The rotation speed of the fan in RPM.
%edes        lmVoltSensorsTable      Table of voltage sensors and their values.
%edes        lmVoltSensorsEntry      An entry containing a device and its statistics.
%edes        lmVoltSensorsIndex      Reference index for each observed device.
%edes        lmVoltSensorsDevice     The name of the device we are reading.
%edes        lmVoltSensorsValue      The voltage in mV.
%edes        lmMiscSensorsTable      Table of miscellaneous sensor devices and their values.
%edes        lmMiscSensorsEntry      An entry containing a device and its statistics.
%edes        lmMiscSensorsIndex      Reference index for each observed device.
%edes        lmMiscSensorsDevice     The name of the device we are reading.
%edes        lmMiscSensorsValue      The value of this sensor.
%edes        fileTable               Table of monitored files.
%edes        fileEntry               Entry of file
%edes        fileIndex               Index of file
%edes        fileName                Filename
%eunits      fileSize                kB
%edes        fileSize                Size of file (kB)
%eunits      fileMax                 kB
%edes        fileMax                 Limit of filesize (kB)
%edes        fileErrorFlag           Limit exceeded flag
%edes        fileErrorMsg            Filesize error message
%edes        logMatchMaxEntries      The maximum number of logmatch entries\n		this snmpd daemon can support.
%edes        logMatchTable           Table of monitored files.
%edes        logMatchEntry           Entry of file
%edes        logMatchIndex           Index of logmatch
%edes        logMatchName            logmatch instance name
%edes        logMatchFilename        filename to be logmatched
%edes        logMatchRegEx           regular expression
%edes        logMatchGlobalCounter   global count of matches
%edes        logMatchGlobalCount     Description.
%edes        logMatchCurrentCounter  Regex match counter. This counter will\n		be reset with each logfile rotation.
%edes        logMatchCurrentCount    Description.
%edes        logMatchCounter         Regex match counter. This counter will\n		be reset with each read
%edes        logMatchCount           Description.
%edes        logMatchCycle           time between updates (if not queried) in seconds
%edes        logMatchErrorFlag       errorflag: is this line configured correctly?
%edes        logMatchRegExCompilation message of regex precompilation
%edes        versionIndex            Index to mib (always 0)
%edes        versionTag              CVS tag keyword
%edes        versionDate             Date string from RCS keyword
%edes        versionCDate            Date string from ctime() 
%edes        versionIdent            Id string from RCS keyword
%edes        versionConfigureOptions Options passed to the configure script when this agent was built.
%edes        versionClearCache       Set to 1 to clear the exec cache, if enabled
%edes        versionUpdateConfig     Set to 1 to read-read the config file(s).
%edes        versionRestartAgent     Set to 1 to restart the agent.
%edes        versionSavePersistentData Set to 1 to force the agent to save it's persistent data immediately.
%edes        versionDoDebugging      Set to 1 to turn debugging statements on in the agent or 0\n	 to turn it off.
%edes        snmperrIndex            Bogus Index for snmperrs (always 0).
%edes        snmperrNames            snmp
%edes        snmperrErrorFlag        A Error flag to indicate trouble with the agent.  It\n	 goes to 1 if there is an error, 0 if no error.
%edes        snmperrErrMessage       An error message describing the problem (if one exists).
%edes        mrTable                 A table displaying all the oid's registered by mib modules in\n	 the agent.  Since the agent is modular in nature, this lists\n	 each module's OID it is responsible for and the name of the module
%edes        mrEntry                 An entry containing a registered mib oid.
%edes        mrIndex                 The registry slot of a mibmodule.
%edes        mrModuleName            The module name that registered this OID.
%edes        ucdStart                This trap could in principle be sent when the agent start
%edes        ucdShutdown             This trap is sent when the agent terminates
%edes        usm3DESPrivProtocol      The 3DES-EDE Symmetric Encryption Protocol.\n                  This is the protocol as specified in\n                  draft-reeder-snmpv3-usm-3desede-00, and in the\n                  updates to that draft available at \n                  http://www.snmp.com/eso/.\n                
%eref        usm3DESPrivProtocol      - Data Encryption Standard, National Institute of\n                    Standards and Technology.  Federal Information\n                    Processing Standard (FIPS) Publication 46-3, (1999,\n                    pending approval).  Will supersede FIPS Publication \n                    46-2.\n\n                  - Data Encryption Algorithm, American National\n                    Standards Institute.  ANSI X3.92-1981,\n                    (December, 1980).\n\n                  - DES Modes of Operation, National Institute of\n                    Standards and Technology.  Federal Information\n                    Processing Standard (FIPS) Publication 81,\n                    (December, 1980).\n\n                  - Data Encryption Algorithm - Modes of Operation,\n                    American National Standards Institute.\n                    ANSI X3.106-1983, (May 1983).\n                 
%est                 usmAESCfb128PrivProtocol deprecated
%edes        usmAESCfb128PrivProtocol The CFB128-AES-128 Privacy Protocol.\n\n                 This is the protocol as specified in\n                 draft-blumenthal-aes-usm-04.txt available at\n                 http://www.snmp.com/eso.  This object replaces the \n                 usmAesCfb128Protocol OBJECT-IDENTITY.\n                 This assignment is made separately here, as the\n                 assignments in draft-blumenthal-aes-usm-04\n                 are transient.\n\n                 Note that while draft-blumenthal-aes-usm-04\n                 is referenced here, no interoperability problems\n                 have been encountered with draft-blumenthal-aes-usm-05\n                 (also available at http://www.snmp.com/eso) for \n                 this privacy protocol.\n\n                 Note that this object has been deprecated due to the\n                 publication of RFC3826.\n                
%eref        usmAESCfb128PrivProtocol - The AES Cipher Algorithm in the SNMP's \n                   User-based Security Model.\n                   Internet Draft draft-blumenthal-aes-usm-04.\n\n                 - Specification for the ADVANCED ENCRYPTION\n                   STANDARD (DRAFT). Federal Information Processing\n                   Standard (FIPS) Publication 197.\n                   (November 2001).\n\n                 - Dworkin, M., NIST Recommendation for Block\n                   Cipher Modes of Operation, Methods and\n                   Techniques (DRAFT).\n                   NIST Special Publication 800-38A\n                   (December 2001). \n                
%edes        usmAESCfb192PrivProtocol The CFB128-AES-192 Privacy Protocol.\n\n                 Note that this object replaces the usmAesCfb192Protocol\n                 OBJECT-IDENTITY of draft-blumenthal-aes-usm-04\n                 (available at http://www.snmp.com/eso).\n                 This assignment is made separately here, as the\n                 assignments in draft-blumenthal-aes-usm-04\n                 are transient.\n\n                 When using this privacy protocol, key localization and\n                 extension will be performed as described in\n                 draft-reeder-snmpv3-usm-3desede-00. Updates to this \n                 draft are available at http://www.snmp.com/eso/. \n                
%eref        usmAESCfb192PrivProtocol See References for usmAESCfb128PrivProtocol (above)
%edes        usmAESCfb256PrivProtocol The CFB128-AES-256 Privacy Protocol.\n\n                 Note that this object replaces the usmAesCfb256Protocol\n                 OBJECT-IDENTITY of draft-blumenthal-aes-usm-04.\n                 (available at http://www.snmp.com/eso).\n                 This assignment is made separately here, as the\n                 assignments in draft-blumenthal-aes-usm-04\n                 are transient.\n\n                 When using this privacy protocol, key localization and\n                 extension will be performed as described in\n                 draft-reeder-snmpv3-usm-3desede-00. Updates to this \n                 draft are available at http://www.snmp.com/eso/. \n                
%eref        usmAESCfb256PrivProtocol See References for usmAESCfb128PrivProtocol (above)
%edes        usmAESCfb192Protocol    The CFB128-AES-192 Privacy Protocol.\n\n                 This is the protocol as specified in\n                 draft-blumenthal-aes-usm-04 available at\n                 http://www.snmp.com/eso.\n\n                 This assignment is made separately here, as the\n                 assignments in draft-blumenthal-aes-usm-04\n                 are transient. \n\n                 When using this privacy protocol, key localization and\n                 extension will be performed as described in\n                 draft-blumenthal-aes-usm-04.
%eref        usmAESCfb192Protocol    See References for usmAESCfb128PrivProtocol (above)
%edes        usmAESCfb256Protocol    The CFB128-AES-256 Privacy Protocol.\n\n                 This is the protocol as specified in\n                 draft-blumenthal-aes-usm-04.txt available at\n                 http://www.snmp.com/eso.\n\n                 This assignment is made separately here, as the\n                 assignments in draft-blumenthal-aes-usm-04\n                 are transient. \n\n                 When using this privacy protocol, key localization and\n                 extension will be performed as described in\n                 draft-blumenthal-aes-usm-04.
%eref        usmAESCfb256Protocol    See References for usmAESCfb128PrivProtocol (above)
%edes        mefSoamAvailabilityChangeAlarm An mefSoamAvailabilityChangeAlarm notification is sent when the state of\n        mefSoamLmMeasuredStatsAvailForwardStatus or\n        mefSoamLmMeasuredStatsAvailBackwardStatus changes.\n\n        The management entity that receives the notification can identify\n        the system from the network source address of the notification,\n        and can identify the PM session reporting the change\n        by the indices in the OID\n        mefSoamLmMeasuredStatsAvailForwardLastTransitionTime, including\n        dot1agCfmMdIndex, dot1agCfmMaIndex, dot1agCfmMepIdentifier, and\n        mefSoamLmCfgIndex.\n\n        An agent is not to generate more than one mefSoamAvailabilityChangeAlarm\n        'notification-event' in a given time interval per PM session as\n        specified by the mefSoamPmNotificationCfgAlarmInterval.  A\n        'notification-event' is the transmission of a single notification to\n        a list of notification destinations.\n\n        If additional availability state changes occur within the\n        mefSoamPmNotificationCfgAlarmInterval period, then notification\n        generation for these changes are suppressed by the agent until\n        the current alarm interval expires. At the end of an alarm interval\n        period, one notification-event is generated if any availability\n        state changes occurred since the start of the alarm interval period.\n        In such a case, another alarm interval period is started right away.\n       
%eref        mefSoamAvailabilityChangeAlarm [MEF SOAM-PM] R83, R84
%edes        mefSoamLmSessionStartStopAlarm An mefSoamLmSessionStartStopAlarm notification is sent when the state of\n        mefSoamLmCfgSessionStatus changes.\n\n        The management entity that receives the notification can identify\n        the system from the network source address of the notification,\n        and can identify the individual PM session reporting the start/stop\n        by the indices in the OID mefSoamLmCfgSessionStatus, including\n        dot1agCfmMdIndex, dot1agCfmMaIndex, dot1agCfmMepIdentifier, and\n        mefSoamLmCfgIndex.\n\n        An agent is not to generate more than one mefSoamLmSessionStartStopAlarm\n        'notification-event' in a given time interval per LM session as specified\n        by the mefSoamPmNotificationCfgAlarmInterval.  A 'notification-event' is\n        the transmission of a single notification to a list of notification\n        destinations.\n\n        If additional operational state changes occur within the\n        mefSoamPmNotificationCfgAlarmInterval period, then notification\n        generation for these changes are be suppressed by the agent until\n        the current alarm interval expires. At the end of an alarm interval\n        period, one notification-event is generated if any operational\n        state changes occurred since the start of the alarm interval period. In\n        such a case, another alarm interval period is started right away.\n       
%edes        mefSoamDmSessionStartStopAlarm An mefSoamDmSessionStartStopAlarm notification is sent when the state of\n        mefSoamDmCfgSessionStatus changes.\n\n        The management entity that receives the notification can identify\n        the system from the network source address of the notification,\n        and can identify the individual PM session reporting the start/stop\n        by the indices in the OID mefSoamDmCfgSessionStatus, including\n        dot1agCfmMdIndex, dot1agCfmMaIndex, dot1agCfmMepIdentifier, and\n        mefSoamDmCfgIndex.\n\n        An agent is not to generate more than one mefSoamDmSessionStartStopAlarm\n        'notification-event' in a given time interval per DM session as specified\n        by mefSoamPmNotificationCfgAlarmInterval.  A 'notification-event' is the\n        transmission of a single notification to a list of notification\n        destinations.\n\n        If additional operational state changes occur within the\n        mefSoamPmNotificationCfgAlarmInterval period, then notification generation\n        for these changes are suppressed by the agent until the current alarm\n        interval expires. At the end of an alarm interval period, one\n        notification-event is generated if any operational state changes\n        occurred since the start of the alarm interval period. In such a case,\n        another alarm interval period is started right away.\n       
%edes        mefSoamPmThresholdCrossingAlarm An mefSoamPmThresholdCrossingAlarm notification is sent if the\n        following conditions are met for a particular type.\n\n        For an aboveAlarm five conditions need to be met:\n\n        a) measurement of the parameter is enabled via mefSoamLmCfgMeasurementEnable\n           for a LM crossing or mefSoamDmCfgMeasurementEnable for a DM crossing;\n           and\n\n        b) the parameter threshold is configured in the mefSoamLmThresholdCfgTable\n           or mefSoamDmThresholdCfgTable; and\n\n        c) the threshold crossing type of bPmThresholdAboveAlarm is enabled;\n           and\n\n        d) the measured value of the parameter exceeds the value configured in\n           the mefSoamLmThresholdCfgTable for a LM crossing entry or\n           mefSoamDmThresholdCfgTable for a DM crossing entry for a type of\n           bPmThresholdAboveAlarm; and\n\n        e) no previous mefSoamPmThresholdCrossingAlarm notifications with type\n           aboveAlarm have been sent relating to the same threshold in the\n           mefSoamLmThresholdCfgTable or mefSoamDmThresholdCfgTable and the\n           same parameter, during this Measurement Interval.\n\n        For a setAlarm five conditions need to be met:\n\n        a) measurement of the parameter is enabled via mefSoamLmCfgMeasurementEnable\n           for a LM crossing or mefSoamDmCfgMeasurementEnable for a DM crossing;\n           and\n\n        b) the parameter threshold is configured in the mefSoamLmThresholdCfgTable\n           or mefSoamDmThresholdCfgTable; and\n\n        c) the threshold crossing type of bPmThresholdSetClearAlarm is enabled;\n           and\n\n        d) the measured value of the parameter exceeds the value configured in\n           the mefSoamLmThresholdCfgTable for a LM crossing entry or\n           mefSoamDmThresholdCfgTable for a DM crossing entry for a type of\n           bPmThresholdSetClearAlarm for the Measurement Interval; and\n\n        e) the previous measured value did not\n           exceed the value configured in the mefSoamLmThresholdCfgTable for\n           a LM crossing entry or mefSoamDmThresholdCfgTable for a DM crossing\n           entry for a type of bPmThresholdSetClearAlarm.\n\n        For a clearAlarm five conditions need to be met:\n\n        a) measurement of the parameter is enabled via mefSoamLmCfgMeasurementEnable\n           for a LM crossing or mefSoamDmCfgMeasurementEnable for a DM crossing;\n           and\n\n        b) the parameter threshold is configured in the mefSoamLmThresholdCfgTable\n           or mefSoamDmThresholdCfgTable; and\n\n        c) the threshold crossing type of bPmThresholdSetClearAlarm is enabled;\n           and\n\n        d) the measured value of the parameter did not exceed the value configured\n           in the mefSoamLmThresholdCfgTable for a LM crossing entry or\n           mefSoamDmThresholdCfgTable for a DM crossing entry for a type of\n           bPmThresholdSetClearAlarm for the Measurement Interval; and\n\n        e) the previous measured value did\n           exceed the value configured in the mefSoamLmThresholdCfgTable for\n           a LM crossing entry or mefSoamDmThresholdCfgTable for a DM crossing\n           entry for a type of bPmThresholdSetClearAlarm.\n\n        In the case of thresholds applied to a maximum or average measurement\n        counter, the previous measured value is the value of the counter at the\n        end of the preceding Measurement Interval.  In the case of thresholds\n        applied to the last measured value, it is the previous measured value.\n\n        The management entity that receives the notification can identify\n        the system from the network source address of the notification,\n        and can identify the LM or DM session reporting the threshold\n        crossing by the indices in the mefSoamPmNotificationCfgThresholdId object,\n        including dot1agCfmMdIndex, dot1agCfmMaIndex, dot1agCfmMepIdentifier,\n        and the mefSoamLmCfgIndex or mefSoamDmCfgIndex.\n\n        An agent is not to generate more than one mefSoamLmThresholdCrossingAlarm\n        'notification-event' of a given type per LM or DM session as specified\n        by mefSoamPmNotificationCfgAlarmInterval. A 'notification-event' is the\n        transmission of a single notification to a list of notification\n        destinations.\n\n        If additional threshold crossing events occur within the\n        mefSoamPmNotificationCfgAlarmInterval period, then notification\n        generation for these changes are suppressed by the agent until\n        the current alarm interval expires. At the end of an alarm interval\n        period, one notification-event is generated if any threshold\n        crossing events occurred since the start of the alarm interval period.\n        In such a case, another alarm interval period is started right away.\n       
%edes        mefSoamPmMepTable       This table is an extension of the dot1agCfmMepTable and rows\n        are automatically added or deleted from this table based upon row\n        creation and destruction of the dot1agCfmMepTable.\n\n        This table represents the local MEP PM configuration table. The\n        primary purpose of this table is provide local parameters for the\n        SOAM PM function found in [Y.1731] and [MEF SOAM-PM] and instantiated\n        at a MEP.\n       
%eref        mefSoamPmMepTable       [Y.1731], [MEF SOAM-PM]
%edes        mefSoamPmMepEntry       The conceptual row of mefSoamPmMepTable.
%edes        mefSoamPmMepOperNextIndex This object contains an unused value for a PM session number on a\n        MEP that can be used for either LM or DM sessions, or a zero to\n        indicate that none exist. This value needs to be read in order to\n        find an available index for row-creation of a PM session on a MEP and\n        then used when a row is created. This value is automatically updated\n        by the SNMP Agent after the row is created.\n\n        Referential integrity is necessary, i.e., the index needs to be\n        persistent upon a reboot or restart of a device.  The index\n        is never to be reused for other PM sessions on the same MEP while this\n        session is active, or until it wraps to zero.  The index value keeps\n        increasing up to that time. This is to facilitate access control based\n        on a fixed index for an EMS, since the index is not reused.\n\n        This object is an extension of the dot1agCfmMepTable and the object is\n        automatically added or deleted based upon row creation and destruction\n        of the dot1agCfmMepTable.\n       
%edes        mefSoamPmMepLmSingleEndedResponder This object specifies whether the Loss Measurement (LMM) single-ended\n        Responder is enabled.\n\n        The value 'true' indicates the single-ended Loss Measurement Responder\n        is enabled and if a LMM message is received a LMR will be sent in reply.\n\n        The value 'false' indicates the single-ended Loss Measurement Responder\n        is disabled. If a LMM message is received no response will be sent and\n        the message will be discarded.\n\n        This object needs to be persistent upon reboot or restart of a device.\n\n        A MEP can be both a single-ended Responder and Controller simultaneously.\n       
%edes        mefSoamPmMepSlmSingleEndedResponder This object specifies whether the Synthetic Loss Measurement (SLM)\n        single-ended Responder is enabled.\n\n        The value 'true' indicates the single-ended SLM Responder is enabled and\n        if a SLM message is received a SLR will be sent in reply.\n\n        The value 'false' indicates the single-ended SLM Responder is disabled.\n        If a SLM message is received no response will be sent and the message\n        will be discarded.\n\n        This object needs to be persistent upon reboot or restart of a device.\n\n        A MEP can be both a single-ended Responder and Controller simultaneously.\n       
%edes        mefSoamPmMepDmSingleEndedResponder This object specifies whether the Delay Measurement (DMM) single\n        ended Responder is enabled.\n\n        The value 'true' indicates the single-ended Delay Measurement Responder\n        is enabled and if a DMM message is received a DMR will be sent in reply.\n\n        The value 'false' indicates the single-ended Delay Measurement Responder\n        is disabled. If a DMM message is received no response will be sent and\n        the message will be discarded.\n\n        This object needs to be persistent upon reboot or restart of a device.\n\n        A MEP can be both a single-ended Responder and Controller simultaneously.\n       
%edes        mefSoamLmCfgTable       This table includes configuration objects and operations for the\n        Frame Loss Measurement function defined in [Y.1731] and [MEF SOAM-PM].\n\n        Each row in the table represents a Loss Measurement session for\n        the defined MEP. This table uses four indices. The first three indices\n        are the indices of the Maintenance Domain, MaNet, and MEP tables. The\n        fourth index is the specific LM session on the selected MEP. A\n        Loss Measurement session is created on an existing MEP by first\n        accessing the mefSoamPmMepOperNextIndex object and using this value as\n        the mefSoamLmCfgIndex in the row creation.\n\n        Some writable objects in this table are only applicable in certain cases\n        (as described under each object), and attempts to write values for them\n        in other cases will be ignored.\n\n        The writable objects in this table need to be persistent upon reboot\n        or restart of a device.\n       
%eref        mefSoamLmCfgTable       [MEF SOAM-PM] R68; [Y.1731]
%edes        mefSoamLmCfgEntry       The conceptual row of mefSoamLmCfgTable.
%edes        mefSoamLmCfgIndex       An index to the Loss Measurement Configuration table which indicates\n        the specific measurement session for the MEP.\n\n        mefSoamPmMepOperNextIndex needs to be inspected to find an\n        available index for row-creation.\n\n        Referential integrity is necessary, i.e., the index needs to be\n        persistent upon a reboot or restart of a device.  The index\n        is never reused for other PM sessions on the same MEP while this\n        session is active.  The index value keeps increasing until it\n        wraps to 0. This is to facilitate access control based\n        on a fixed index for an EMS, since the index is not reused.\n       
%edes        mefSoamLmCfgType        This object specifies what type of Loss Measurement\n        will be performed.\n\n        lmLmm(1)        LMM SOAM PDU generated and received LMR responses tracked\n        lmSlm(2)        SLM SOAM PDU generated and received SLR responses tracked\n        lmCcm(3)        CCM SOAM PDU generated and received CCM PDUs tracked\n\n        The lmSlm value is required. The lmLmm and lmCcm values are optional.\n\n        The lmCcm loss measurement values are only valid for a point-to-point\n        MEG. Multipoint MEGs may give unreliable loss measurements.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgType        [Y.1731] [MEF SOAM-PM] R51, R68, O7, R102
%edes        mefSoamLmCfgVersion     This object indicates the version of the PDUs used to perform\n        Loss Measurement.\n\n        The value is placed in the Version field of the PDU and indicates\n        that the PDU format used is the format defined in Y.1731 with\n        that version.\n\n        The exact PDUs to use are specified by this object in combination with\n        mefSoamLmCfgType.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgVersion     [Y.1731]
%edes        mefSoamLmCfgEnabled     This object specifies whether the Loss Measurement session\n        is enabled.\n\n        The value 'true' indicates the Loss Measurement session is enabled and\n        SOAM PDUs are sent and/or measurements are collected when the session\n        is running according to the scheduling objects (start time, stop time,\n        etc.).\n\n        The value 'false' indicates the Loss Measurement session is disabled\n        and SOAM PDUs are not sent and/or measurements collected.\n\n        For a Loss Measurement session to be removed the row is\n        deleted in order to release internal resources.\n\n        This object can written/modified after row creation time.\n\n        If the LM session is enabled it resumes after shutdown/restart.\n\n        If the LM session is disabled the current Measurement Interval is\n        stopped, if it in process at the time, and all the in process calculations\n        for the partially completed Measurement Interval are finalized.\n\n        This object does not affect whether the single-ended Responder is\n        enabled or not, which is enabled or disabled by the\n        mefSoamPmMepLmSingleEndedResponder and\n        mefSoamPmMepSlmSingleEndedResponder objects.\n       
%eref        mefSoamLmCfgEnabled     [MEF SOAM-PM] R4, R5, R6, O1, R12, R14
%edes        mefSoamLmCfgMeasurementEnable A vector of bits that indicates the type of SOAM LM counters found\n        in the mefSoamLmMeasuredStatsTable, mefSoamLmCurrentStatsTable,\n        mefSoamLmHistoryStatsTable, mefSoamLmCurrentAvailStatsTable and\n        mefSoamLmHistoryAvailStatsTable that are enabled.\n\n        A bit set to '1' enables the specific SOAM LM counter. A bit set to\n        '0' disables the SOAM LM counter.\n\n        If a particular SOAM LM counter is not supported the BIT value is\n        set to '0'.\n\n        Not all SOAM LM counters are supported for all SOAM LM types.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n\n        bForwardTransmitedFrames (0)\n            Enables/disables the mefSoamLmCurrentStatsForwardTransmittedFrames\n            and mefSoamLmHistoryStatsForwardTransmittedFrames counters.\n        bForwardReceivedFrames(1)\n            Enables/disables the mefSoamLmCurrentStatsForwardReceivedFrames\n            and mefSoamLmHistoryStatsForwardReceivedFrames counters.\n        bForwardMinFlr(2)\n            Enables/disables the mefSoamLmCurrentStatsForwardMinFlr\n            and mefSoamLmHistoryStatsForwardMinFlr counters.\n        bForwardMaxFlr(3)\n            Enables/disables the mefSoamLmCurrentStatsForwardMaxFlr\n            and mefSoamLmHistoryStatsForwardMaxFlr counters.\n        bForwardAvgFlr(4)\n            Enables/disables the mefSoamLmCurrentStatsForwardAvgFlr\n            and mefSoamLmHistoryStatsForwardAvgFlr counters.\n        bBackwardTransmitedFrames(5)\n            Enables/disables the mefSoamLmCurrentStatsBackwardTransmittedFrames\n            and mefSoamLmHistoryStatsBackwardTransmittedFrames counters.\n        bBackwardReceivedFrames(6)\n            Enables/disables the mefSoamLmCurrentStatsBackwardReceivedFrames\n            and mefSoamLmHistoryStatsBackwardReceivedFrames counters.\n        bBackwardMinFlr(7)\n            Enables/disables the mefSoamLmCurrentStatsBackwardMinFlr\n            and mefSoamLmHistoryStatsBackwardMinFlr counters.\n        bBackwardMaxFlr(8)\n            Enables/disables the mefSoamLmCurrentStatsBackwardMaxFlr\n            and mefSoamLmHistoryStatsBackwardMaxFlr counters.\n        bBackwardAvgFlr(9)\n            Enables/disables the mefSoamLmCurrentStatsBackwardAvgFlr\n            and mefSoamLmHistoryStatsBackwardAvgFlr counters.\n        bSoamPdusSent (10)\n            Enables/disables the mefSoamLmCurrentStatsSoamPdusSent\n            and mefSoamLmHistoryStatsSoamPdusSent counters.\n        bSoamPdusReceivedbReceivedMeasurements (11)\n            Enables/disables the mefSoamLmCurrentStatsSoamPdusReceived\n            and mefSoamLmHistoryStatsSoamPdusReceived counters.\n\n        bAvailForwardHighLoss(12)\n            Enables/disables the mefSoamLmCurrentAvailStatsForwardHighLoss\n            and mefSoamLmHistoryAvailStatsForwardHighLoss counters.\n        bAvailForwardConsecutiveHighLoss(13)\n            Enables/disables the mefSoamLmCurrentAvailStatsForwardConsecutiveHighLoss\n            and mefSoamLmHistoryAvailStatsForwardConsecutiveHighLoss counters.\n        bAvailForwardAvailable(14)\n            Enables/disables the mefSoamLmCurrentAvailStatsForwardAvailable\n            and mefSoamLmHistoryAvailStatsForwardAvailable counters.\n        bAvailForwardUnavailable(15)\n            Enables/disables the mefSoamLmCurrentAvailStatsForwardUnavailable\n            and mefSoamLmHistoryAvailStatsForwardUnavailable counters.\n        bAvailForwardMinFlr(16)\n            Enables/disables the mefSoamLmCurrentAvailStatsForwardMinFlr\n            and mefSoamLmHistoryAvailStatsForwardMinFlr counters.\n        bAvailForwardMaxFlr(17)\n            Enables/disables the mefSoamLmCurrentAvailStatsForwardMaxFlr\n            and mefSoamLmHistoryAvailStatsForwardMaxFlr counters.\n        bAvailForwardAvgFlr(18)\n            Enables/disables the mefSoamLmCurrentAvailStatsForwardAvgFlr\n            and mefSoamLmHistoryAvailStatsForwardAvgFlr counters.\n\n        bAvailBackwardHighLoss(19)\n            Enables/disables the mefSoamLmCurrentAvailStatsBackwardHighLoss\n            and mefSoamLmHistoryAvailStatsBackwardHighLoss counters.\n        bAvailBackwardConsecutiveHighLoss(20)\n            Enables/disables the mefSoamLmCurrentAvailStatsBackwardConsecutiveHighLoss\n            and mefSoamLmHistoryAvailStatsBackwardConsecutiveHighLoss counters.\n        bAvailBackwardAvailable(21)\n            Enables/disables the mefSoamLmCurrentAvailStatsBackwardAvailable\n            and mefSoamLmHistoryAvailStatsBackwardAvailable counters.\n        bAvailBackwardUnavailable(22)\n            Enables/disables the mefSoamLmCurrentAvailStatsBackwardUnavailable\n            and mefSoamLmHistoryAvailStatsBackwardUnavailable counters.\n        bAvailBackwardMinFlr(23)\n            Enables/disables the mefSoamLmCurrentAvailStatsBackwardMinFlr\n            and mefSoamLmHistoryAvailStatsBackwardMinFlr counters.\n        bAvailBackwardMaxFlr(24)\n            Enables/disables the mefSoamLmCurrentAvailStatsBackwardMaxFlr\n            and mefSoamLmHistoryAvailStatsBackwardMaxFlr counters.\n        bAvailBackwardAvgFlr(25)\n            Enables/disables the mefSoamLmCurrentAvailStatsBackwardAvgFlr\n            and mefSoamLmHistoryAvailStatsBackwardAvgFlr counters.\n\n        bMeasuredStatsForwardMeasuredFlr(26)\n            Enables/disables the mefSoamLmMeasuredStatsForwardFlr counter.\n        bMeasuredStatsBackwardMeasuredFlr(27)\n            Enables/disables the mefSoamLmMeasuredStatsBackwardFlr counter.\n        bMeasuredStatsAvailForwardStatus(28)\n            Enables/disables the mefSoamLmMeasuredStatsAvailForwardStatus counter.\n        bMeasuredStatsAvailBackwardStatus(29)\n            Enables/disables the mefSoamLmMeasuredStatsAvailBackwardStatus counter.\n      
%eref        mefSoamLmCfgMeasurementEnable [Y.1731]
%eunits      mefSoamLmCfgMessagePeriod ms
%edes        mefSoamLmCfgMessagePeriod This object specifies the interval between Loss Measurement\n        OAM message transmission. For Loss Measurement monitoring\n        applications the default value is 1 sec.\n\n        This object is not applicable if mefSoamLmCfgType is set to lmCcm\n        and is ignored for that Loss Measurement Type.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgMessagePeriod [MEF SOAM-PM] R76, R77, D29, D30
%edes        mefSoamLmCfgPriority    This object specifies the Loss Measurement OAM message priority\n        as well as the priority of the service/OAM traffic to be monitored.\n        Only frames of the same Class of Service are counted.\n\n        The default value is to be the value which yields the lowest frame\n        loss.\n\n        This object is not applicable if mefSoamLmCfgType is set to lmCcm.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgPriority    [MEF SOAM-PM] R1, R2, R71, D28, R72, R73, R105-R109, D45;\n        [MEF 10.2.1] Section 6.8
%eunits      mefSoamLmCfgFrameSize   bytes
%edes        mefSoamLmCfgFrameSize   This object specifies the Loss Measurement frame size between\n        64 bytes and the maximum transmission unit of the EVC.\n\n        The range of frame sizes from 64 through 2000 octets need to be\n        supported, and the range of frame sizes from 2001 through 9600 octets\n        is suggested be supported.\n\n        The adjustment to the frame size of the standard frame size is\n        accomplished by the addition of a Data or Test TLV. A Data or Test TLV\n        is only added to the frame if the frame size is greater than 64 bytes.\n\n        This object is only valid for the entity transmitting the Loss\n        Measurement frames, type 'lmSlm', and is ignored by the\n        entity receiving frames. It is not applicable for the 'lmCcm' or\n        'lmLmm' types.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgFrameSize   [MEF SOAM-PM] R78, R79, D31, D32 [Y.1731]
%edes        mefSoamLmCfgDataPattern This object specifies the LM data pattern included in a Data TLV\n        when the size of the LM frame is determined by the\n        mefSoamLmFrameSize object and mefSoamLmTestTlvIncluded is 'false'.\n\n        If the frame size object does not define the LM frame size or\n        mefSoamLmTestTlvIncluded is 'true' the value of this object is\n        ignored.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%edes        mefSoamLmCfgTestTlvIncluded Indicates whether a Test TLV or Data TLV is included when the size\n        of the LM frame is determined by the mefSoamLmFrameSize object.\n\n        A value of 'true' indicates that the Test TLV is to be included. A\n        value of 'false' indicates that the Data TLV is to be included.\n\n        If the frame size object does not define the LM frame size\n        the value of this object is ignored.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgTestTlvIncluded [Y.1731] 9.3
%edes        mefSoamLmCfgTestTlvPattern This object specifies the type of test pattern to be\n        sent in the LM frame Test TLV when the size of LM PDU is\n        determined by the mefSoamLmFrameSize object and\n        mefSoamLmTestTlvIncluded is 'true'. If the frame size object\n        does not define the LM frame size or mefSoamLmTestTlvIncluded\n        is 'false' the value of this object is ignored.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eunits      mefSoamLmCfgMeasurementInterval minutes
%edes        mefSoamLmCfgMeasurementInterval This object specifies the Measurement Interval for FLR statistics, in minutes.\n\n        A Measurement Interval of 15 minutes needs to be supported, other intervals\n        may be supported.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgMeasurementInterval [MEF SOAM-PM] R16, R17, R110, R111, D46
%edes        mefSoamLmCfgNumIntervalsStored This object specifies the number of completed Measurement Intervals\n        to store in the history statistic table (mefSoamLmHistoryStatsTable)\n        and the history availability statistic table\n        (mefSoamLmHistoryAvailStatsTable).\n\n        At least 32 completed Measurement Intervals need to be stored. 96\n        Measurement Intervals are recommended to be stored.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgNumIntervalsStored [MEF SOAM-PM] R21, D8, D9
%edes        mefSoamLmCfgDestMacAddress The Target or Destination MAC Address Field to be transmitted.\n\n        If mefSoamLmCfgType is 'lmCcm', the destination MAC address is always a\n        multicast address indicating the level of the MEG: 01-80-c2-00-00-3y,\n        where y is the level of the MEG. An error is returned if this object\n        is set to any other value.\n\n        If mefSoamLmCfgType is 'lmLmm' or 'lmSlm', the destination address is\n        the unicast address of the destination MEP. An error is returned if\n        this object is set to a multicast address.\n\n        This address will be used if the value of the object\n        mefSoamLmDestIsMepId is 'false'.\n\n        This object is only valid for the entity transmitting the\n        SOAM LM frames and is ignored by the entity receiving\n        SOAM LM frames.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgDestMacAddress [MEF SOAM-PM] R70, R104
%edes        mefSoamLmCfgDestMepId   The Maintenance Association End Point Identifier of\n        another MEP in the same Maintenance Association to which\n        the SOAM LM frame is to be sent.\n\n        This address will be used if the value of the column\n        mefSoamLmDestIsMepId is 'true'. A value of zero\n        means that the destination MEP ID has not been configured.\n\n        This object is only valid for the entity transmitting the Loss\n        Measurement frames, types 'lmLmm' and 'lmSlm'. It is not applicable for\n        the 'lmCcm' type.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgDestMepId   [MEF SOAM-PM] R70, R104
%edes        mefSoamLmCfgDestIsMepId A value of 'true' indicates that MEPID of the target MEP is used for\n        SOAM LM frame transmission.\n\n        A value of 'false' indicates that the MAC address of the\n        target MEP is used for SOAM LM frame transmission.\n\n        This object is only valid for the entity transmitting the Loss\n        Measurement frames, types 'lmLmm' and 'lmSlm'. It is not applicable for\n        the 'lmCcm' type.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgDestIsMepId [MEF SOAM-PM] R70, R104
%edes        mefSoamLmCfgStartTimeType This object specifies the type of start time of the SOAM LM\n        session. The start time can be disabled (none), immediate, relative,\n        or fixed.\n\n        The value of 'none' is illegal and a write error will be returned\n        if this value is used.\n\n        The value of 'immediate' starts the SOAM LM session when the\n        mefSoamLmCfgEnabled is true.\n\n        The value of 'fixed' starts the SOAM LM session when the\n        mefSoamLmFixedStartDateAndTime is less than or equal to the current\n        system date and time and mefSoamLmCfgEnabled is true. This value is used\n        to implement an On-Demand fixed time PM session.\n\n        The value of 'relative' starts the SOAM LM session when the current\n        system date and time minus the mefSoamLmRelativeStartTime is greater\n        than or equal to the system date and time when the mefSoamLmStartTimeType\n        object was written and mefSoamLmCfgEnabled is true. This value is used\n        to implement an On-Demand relative time PM session.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgStartTimeType [MEF SOAM-PM] R3, R7, R8, D1
%edes        mefSoamLmCfgFixedStartDateAndTime This object specifies the fixed start date/time for the\n        SOAM Loss Measurement session. This object is used only used if\n        mefSoamLmStartTimeType is 'fixed' and is ignored otherwise.\n\n        The default value is year 0000, month 01, day 01, time 00:00:00.00.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgFixedStartDateAndTime [MEF SOAM-PM] R9
%edes        mefSoamLmCfgRelativeStartTime This object specifies the relative start time, from the\n        current system time, for the SOAM LM session.  This\n        object is used only if mefSoamLmStartTimeType is 'relative' and is\n        ignored otherwise.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgRelativeStartTime [MEF SOAM-PM] R9
%edes        mefSoamLmCfgStopTimeType This object specifies the type of stop time to terminate the\n        SOAM LM session. The stop time can be forever (none), relative, or\n        fixed.\n\n        The value of 'none' indicates that the SOAM LM session never ends once it\n        has started unless it the session is disabled.\n\n        The value of 'immediate' is illegal and a write error will be returned\n        if this value is used.\n\n        The value of 'fixed' stops the SOAM LM session when the\n        mefSoamLmFixedStopDateAndTime is less than or equal\n        to the current system date and time. This\n        value is used to implement an On-Demand fixed time PM session.\n\n        The value of 'relative' stops the SOAM LM session when the time\n        indicated by mefSoamLmRelativeStopTime has passed since the session\n        start time as determined by the mefSoamLmCfgStartTimeType,\n        mefSoamLmCfgFixedStartDateAndTime and mefSoamLmCfgRelativeStartTime\n        objects. This value is used to implement an On-Demand relative time\n        PM session.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgStopTimeType [MEF SOAM-PM] R3, R10, D2
%edes        mefSoamLmCfgFixedStopDateAndTime This object specifies the fixed stop date/time for the\n        SOAM Loss Measurement session. This object is used only used\n        if mefSoamLmStopTimeType is 'fixed' and is ignored otherwise.\n\n        The default value is year 0000, month 01, day 01, time 00:00:00.00.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgFixedStopDateAndTime [MEF SOAM-PM] R10, R13
%edes        mefSoamLmCfgRelativeStopTime This object specifies the relative stop time, from the\n        session start time, to stop the SOAM LM session.  This\n        object is used only if mefSoamLmStopTimeType is 'relative' and is\n        ignored otherwise.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgRelativeStopTime [MEF SOAM-PM] R11
%eunits      mefSoamLmCfgRepetitionTime seconds
%edes        mefSoamLmCfgRepetitionTime This object specifies a configurable repetition time between\n        Measurement Intervals in a Loss Measurement session, in seconds.\n\n        If the value is 0 (none), there is no time gap between the end of one\n        Measurement Interval and the start of a new Measurement Interval.\n        This is the normal usage case.\n\n        If the value is greater than 0 but less than or equal to the measurement\n        interval, an error is returned.\n\n        If the value is greater than one Measurement Interval there is time gap\n        between the end of one Measurement Interval and the start of the next\n        Measurement Interval.  The repetition time specifies the time between\n        the start of consecutive Measurement Intervals; hence the gap between\n        the end of one Measurement Interval and the start of the next is equal\n        to the difference between the repetition time and the measurement\n        interval.  During this gap, no SOAM PDUs are sent for this session and\n        no measurements are made.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgRepetitionTime [MEF SOAM-PM] R18, D3, R19, R20
%edes        mefSoamLmCfgAlignMeasurementIntervals This object specifies whether the Measurement Intervals for\n        the Loss Measurement session are aligned with a zero offset to\n        real time.\n\n        The value 'true' indicates that each Measurement Interval starts\n        at a time which is aligned to NE time source hour, if the repetition\n        time (or the Measurement Interval, if the repetition time is 0) is\n        a factor of an hour, i.e. 60min/15min = 4. For instance, a\n        Measurement Interval/repetition time of 15 minutes would stop/start\n        the Measurement Interval at 0, 15, 30, and 45 minutes of an hour. A\n        Measurement Interval/Repetition Time of 7 minutes would not align\n        to the hour since 7 minutes is NOT a factor of an hour, i.e.\n        60min/7min = 8.6.  In this case the behavior is the same as if the\n        object is set to 'false'.\n\n        The value 'false' indicates that the first Measurement Interval starts\n        at an arbitrary time and each subsequent Measurement Interval starts\n        at a time which is determined by mefSoamLmCfgRepetitionTime.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgAlignMeasurementIntervals [MEF SOAM-PM] D4, D5, D6
%eunits      mefSoamLmCfgAlignMeasurementOffset minutes
%edes        mefSoamLmCfgAlignMeasurementOffset This object specifies the offset in minutes from the time of day value\n        if mefSoamLmCfgAlignMeasurementIntervals is 'true' and the repetition\n        time is a factor of 60 minutes. If not, the value of this object\n        is ignored.\n\n        If the Measurement Interval is 15 minutes and\n        mefSoamLmCfgAlignMeasurementIntervals is true and if this object was\n        set to 5 minutes, the Measurement Intervals would start at 5, 20, 35, 50\n        minutes past each hour.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgAlignMeasurementOffset [MEF SOAM-PM] D7
%eunits      mefSoamLmCfgAvailabilityMeasurementInterval minutes
%edes        mefSoamLmCfgAvailabilityMeasurementInterval This object specifies the availability Measurement Interval in\n        minutes.\n\n        A Measurement Interval of 15 minutes is to be supported, other intervals\n        can be supported.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgAvailabilityMeasurementInterval [MEF SOAM-PM] R16, R17
%edes        mefSoamLmCfgAvailabilityNumConsecutiveMeasPdus This object specifies a configurable number of consecutive\n        loss measurement PDUs to be used in evaluating the\n        availability/unavailability status of each availability\n        indicator per MEF 10.2.1.  Loss Measurement PDUs (LMMs, CCMs or\n        SLMs) are sent regularly with a period defined by\n        mefSoamLmCfgMessagePeriod.  Therefore, this object, when\n        multiplied by mefSoamLmCfgMessagePeriod, is equivalent to\n        the Availability parameter of 'delta_t' as specified by MEF 10.2.1.\n\n        If the mefSoamLmCfgType is lmLMM or lmCCM, this object defines the\n        number of LMM or CCM PDUs transmitted during each 'delta_t' period.\n        The Availability flr for a given 'delta_t' can be calculated based\n        on the counters in the last LMM/R or CCM during this 'delta_t' and\n        the last LMM/R or CCM in the previous 'delta_t'.\n\n        If the mefSoamLmCfgType is lmSLM, this object defines the number\n        of SLM PDUs transmitted during each 'delta_t' period.  The\n        Availability flr for a given 'delta_t' is calculated based on the\n        number of those SLM PDUs that are lost.\n\n        If the mefSoamLmCfgType is lmLMM or lmCCM, the number range of 1\n        through 10 must be supported. The number range of 10 through 1000000\n        may be supported, but is not mandatory.\n\n        If the mefSoamLmCfgType is lmSLM, the number range of 10 through\n        100 must be supported. The number range of 100 through 1000000\n        may be supported, but is not mandatory.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgAvailabilityNumConsecutiveMeasPdus [MEF 10.2.1] Section 7.9.8; [MEF SOAM-PM] R80, D33, R81
%eunits      mefSoamLmCfgAvailabilityFlrThreshold milli-percent
%edes        mefSoamLmCfgAvailabilityFlrThreshold This object specifies a configurable availability threshold to be\n        used in evaluating the availability/unavailability status of an\n        availability indicator per MEF 10.2.1. The availability threshold range\n        of 0.00 (0) through 1.00 (100000) is supported. This parameter is\n        equivalent to the Availability parameter of 'C' as specified by\n        MEF 10.2.1.\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgAvailabilityFlrThreshold [MEF 10.2.1] Section 7.9.8; [MEF SOAM-PM] R81, R82, D34
%edes        mefSoamLmCfgAvailabilityNumConsecutiveIntervals This object specifies a configurable number of consecutive\n        availability indicators to be used to determine a change in the\n        availability status as indicated by MEF 10.2.1. This parameter is\n        equivalent to the Availability parameter of 'n' as specified\n        by MEF 10.2.1.\n\n        The number range of 1 through 10 must be supported. The number range\n        of 1 through 1000 may be supported, but is not mandatory.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgAvailabilityNumConsecutiveIntervals [MEF 10.2.1] Section 7.9.8; [MEF SOAM-PM] R80, D33
%edes        mefSoamLmCfgAvailabilityNumConsecutiveHighFlr This object specifies a configurable number of consecutive\n        availability indicators to be used for assessing CHLI.  This\n        parameter is equivalent to the Resilency parameter of 'p' as\n        specified by MEF 10.2.1.\n\n        mefSoamLmCfgAvailabilityNumConsecutiveHighFlr must be strictly less than\n        mefSoamLmCfgAvailabilityNumConsecutiveIntervals. If not, the count of high\n        loss intervals over time, mefSoamLmAvailabilityHighLoss, and the count\n        of consecutive high loss levels, mefSoamLmAvailabilityConsecutiveHighLoss,\n        is disabled.\n\n        The number range of 1 through 10 must be supported. The number range\n        of 1 through 1000 may be supported, but is not mandatory.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgAvailabilityNumConsecutiveHighFlr [MEF 10.2.1] Section 7.9.8; [MEF SOAM-PM] R86, D35, D36
%edes        mefSoamLmCfgSessionType This object indicates whether the current session is defined to\n        be 'Proactive' or 'On-Demand'. A value of 'proactive'\n        indicates the current session is 'Proactive'. A value of 'onDemand'\n        indicates the current session is 'On-Demand'.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamLmCfgSessionType [MEF SOAM-PM] R3
%edes        mefSoamLmCfgSessionStatus This object indicates the current status of the LM session. A value\n        of 'active' indicates the current LM session is active, i.e. the current\n        time lies between the start time and the stop time, and\n        mefSoamLmCfgEnabled is true. A value of 'notActive' indicates the\n        current LM session is not active, i.e. it has not started yet, has\n        stopped upon reaching the stop time, or is disabled.\n       
%edes        mefSoamLmCfgHistoryClear This object when written clears the Loss Measurement history\n        Table (mefSoamLmHistoryStatsTable) - all rows are deleted.\n        When read the value always returns 'false'.\n\n        Writing this value does not change the current stat table,\n        nor any of the items in the configuration table.\n        Writing this value during row creation has no effect.\n       
%edes        mefSoamLmCfgRowStatus   The status of the row.\n\n        The writable columns in a row cannot be changed if the row\n        is active, except for mefSoamLmCfgHistoryClear and mefSoamLmCfgEnabled\n        objects. All columns must have a valid value before a row\n        can be activated.\n       
%edes        mefSoamLmMeasuredStatsTable This object contains the last measured results for a SOAM Loss\n        Measurement session.\n\n        Each row in the table represents a Loss Measurement session for\n        the defined MEP. This table uses four indices. The first three indices\n        are the indices of the Maintenance Domain, MaNet, and MEP tables. The\n        fourth index is the specific LM session on the selected MEP.\n\n        Instances of this managed object are created automatically\n        by the SNMP Agent when the Loss Measurement session is running.\n\n        Each object in this table applies only if the corresponding bit is set in\n        mefSoamLmCfgMeasurementEnable.\n\n        The objects in this table do not need to be persistent upon reboot\n        or restart of a device.\n       
%eref        mefSoamLmMeasuredStatsTable [MEF SOAM-PM] R7, R15, 8D18
%edes        mefSoamLmMeasuredStatsEntry The conceptual row of mefSoamLmMeasuredStatsTable
%eunits      mefSoamLmMeasuredStatsForwardFlr milli-percent
%edes        mefSoamLmMeasuredStatsForwardFlr This object contains the last frame loss ratio in the forward direction\n        calculated by this MEP. The FLR value\n        is a ratio that is expressed as a percent with a value of 0 (ratio\n        0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmMeasuredStatsForwardFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmMeasuredStatsBackwardFlr milli-percent
%edes        mefSoamLmMeasuredStatsBackwardFlr This object contains the last frame loss ratio in the backward direction\n        calculated by this MEP. The FLR value\n        is a ratio that is expressed as a percent with a value of 0 (ratio\n        0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmMeasuredStatsBackwardFlr [MEF SOAM-PM] D37
%edes        mefSoamLmMeasuredStatsAvailForwardStatus This object indicates the availability status (the outcome of the\n        last known availability indicator) in the forward direction.\n        Note that the status of an availability indicator is not known until\n        the loss for a number of subsequent availability indicators has been\n        calculated (as determined by\n        mefSoamLmCfgAvailabilityNumConsecutiveIntervals)\n       
%eref        mefSoamLmMeasuredStatsAvailForwardStatus [MEF SOAM-PM] R83
%edes        mefSoamLmMeasuredStatsAvailBackwardStatus This object indicates the availability status (the outcome of the\n        last availability indicator) in the backward direction.\n        Note that the status of an availability indicator is not known until\n        the loss for a number of subsequent availability indicators has been\n        calculated (as determined by\n        mefSoamLmCfgAvailabilityNumConsecutiveIntervals)\n       
%eref        mefSoamLmMeasuredStatsAvailBackwardStatus [MEF SOAM-PM] R83
%edes        mefSoamLmMeasuredStatsAvailForwardLastTransitionTime This object indicates the time of the last transition\n        between available and unavailable in the forward direction.\n\n        If there have been no transitions since the Loss Measurement\n        Session was started, this is set to 0.\n       
%eref        mefSoamLmMeasuredStatsAvailForwardLastTransitionTime [MEF SOAM-PM] R83
%edes        mefSoamLmMeasuredStatsAvailBackwardLastTransitionTime This object indicates the time of the last transition\n        between available and unavailable in the backward direction.\n\n        If there have been no transitions since the Loss Measurement\n        Session was started, this is set to 0.\n       
%eref        mefSoamLmMeasuredStatsAvailBackwardLastTransitionTime [MEF SOAM-PM] R83
%edes        mefSoamLmCurrentAvailStatsTable This object contains the current results for a SOAM Loss Measurement\n        session for availability statistics gathered during the interval\n        indicated by mefSoamLmCfgAvailabilityMeasurementInterval.\n\n        Each row in the table represents a Loss Measurement session for\n        the defined MEP. This table uses four indices. The first three indices\n        are the indices of the Maintenance Domain, MaNet, and MEP tables. The\n        fourth index is the specific LM session on the selected MEP.\n\n        Instances of this managed object are created automatically\n        by the SNMP Agent when the Loss Measurement session is running.\n\n        The objects in this table apply regardless of the value of\n        mefSoamLmCfgType unless otherwise specified in the object description.\n\n        Except for mefSoamLmCurrentAvailStatsIndex,\n        mefSoamLmCurrentAvailStatsStartTime, mefSoamLmCurrentAvailStatsElapsedTime\n        and mefSoamLmCurrentAvailStatsSuspect, each object in this table applies\n        only if the corresponding bit is set in mefSoamLmCfgMeasurementEnable.\n\n        The objects in this table may be persistent upon reboot or restart\n        of a device.\n       
%eref        mefSoamLmCurrentAvailStatsTable [MEF SOAM-PM] D9, D18
%edes        mefSoamLmCurrentAvailStatsEntry The conceptual row of mefSoamLmCurrentAvailStatsTable
%edes        mefSoamLmCurrentAvailStatsIndex The index for the current availability Measurement Interval for this\n        PM session.  This value will become the value for\n        mefSoamLmHistoryAvailStatsIndex once the Measurement Interval\n        is completed.  The duration of the Measurement Interval is specified\n        by mefSoamLmCfgAvailabilityMeasurementInterval.\n\n        Measurement Interval indexes are assigned sequentially by\n        the SNMP Agent.  The first Measurement Interval that occurs after\n        the session is started is assigned index 1.\n       
%edes        mefSoamLmCurrentAvailStatsStartTime The time that the current Measurement Interval started.\n       
%eref        mefSoamLmCurrentAvailStatsStartTime [MEF SOAM-PM] R87, R112
%edes        mefSoamLmCurrentAvailStatsElapsedTime The time that the current Measurement Interval has been running, in 0.01\n        seconds.\n       
%eref        mefSoamLmCurrentAvailStatsElapsedTime [MEF SOAM-PM] R24, R87, R112
%edes        mefSoamLmCurrentAvailStatsSuspect Whether the Measurement Interval has been marked as suspect.\n\n        The object is set to false at the start of a measurement\n        interval. It is set to true when there is a discontinuity in the\n        performance measurements during the Measurement Interval.  Conditions\n        for a discontinuity include, but are not limited to the following:\n\n        1 - The local time-of-day clock is adjusted by at least 10 seconds\n        2 - The conducting of a performance measurement is halted before the\n            current Measurement Interval is completed\n        3 - A local test, failure, or reconfiguration that disrupts service\n       
%eref        mefSoamLmCurrentAvailStatsSuspect [MEF SOAM-PM] R39, R40, R41
%edes        mefSoamLmCurrentAvailStatsForwardHighLoss This object is the number of high loss intervals (HLI) over\n        time in the forward direction.\n\n        The value starts at 0 and increments for every HLI that occurs.\n        This parameter is equivalent to 'L Sub T' found in MEF 10.2.1.\n       
%eref        mefSoamLmCurrentAvailStatsForwardHighLoss [MEF 10.2.1] 6.9.9; [MEF SOAM-PM] R87
%edes        mefSoamLmCurrentAvailStatsBackwardHighLoss This object is the number of high loss intervals (HLI) over\n        time in the backwards direction.\n\n        The value starts at 0 and increments for every HLI that occurs.\n        This parameter is equivalent to 'L Sub T' found in MEF 10.2.1.\n       
%eref        mefSoamLmCurrentAvailStatsBackwardHighLoss [MEF 10.2.1] 6.9.9; [MEF SOAM-PM] R87
%edes        mefSoamLmCurrentAvailStatsForwardConsecutiveHighLoss This object is the number of consecutive high loss intervals\n        (CHLI) over time in the forward direction.\n\n        The value starts at 0 and increments for every HLI that occurs\n        that is determined to fall within a CHLI.\n        This parameter is equivalent to 'B Sub T' found in MEF 10.2.1.\n       
%eref        mefSoamLmCurrentAvailStatsForwardConsecutiveHighLoss [MEF 10.2.1] 6.9.9; [MEF SOAM-PM] R87
%edes        mefSoamLmCurrentAvailStatsBackwardConsecutiveHighLoss This object is the number of consecutive high loss intervals\n        (CHLI) over time in the backward direction.\n\n        The value starts at 0 and increments for every HLI that occurs\n        that is determined to fall within a CHLI.\n        This parameter is equivalent to 'B Sub T' found in MEF 10.2.1.\n       
%eref        mefSoamLmCurrentAvailStatsBackwardConsecutiveHighLoss [MEF 10.2.1] 6.9.9; [MEF SOAM-PM] R87
%edes        mefSoamLmCurrentAvailStatsForwardAvailable This object contains the number of availability indicators\n        evaluated as available in the forward direction by this MEP during\n        this Measurement Interval.\n       
%eref        mefSoamLmCurrentAvailStatsForwardAvailable [MEF SOAM-PM] R87; [MEF 10.2.1]
%edes        mefSoamLmCurrentAvailStatsBackwardAvailable This object contains the number of availability indicators\n        evaluated as available in the backward direction by this MEP during\n        this Measurement Interval.\n       
%eref        mefSoamLmCurrentAvailStatsBackwardAvailable [MEF SOAM-PM] R87
%edes        mefSoamLmCurrentAvailStatsForwardUnavailable This object contains the number of availability indicators\n        evaluated as unavailable in the forward direction by this MEP during\n        this Measurement Interval.\n       
%eref        mefSoamLmCurrentAvailStatsForwardUnavailable [MEF SOAM-PM] R87
%edes        mefSoamLmCurrentAvailStatsBackwardUnavailable This object contains the number of availability indicators\n        evaluated as unavailable in the backward direction by this MEP\n        during this Measurement Interval.\n       
%eref        mefSoamLmCurrentAvailStatsBackwardUnavailable [MEF SOAM-PM] R87
%eunits      mefSoamLmCurrentAvailStatsForwardMinFlr milli-percent
%edes        mefSoamLmCurrentAvailStatsForwardMinFlr This object contains the minimum one-way availability flr in the forward\n        direction, from among the set of availability flr values calculated by\n        the MEP in this Measurement Interval.  There is one availability flr\n        value for each 'delta_t' time period within the Measurement Interval, as\n        specified in MEF 10.2.1.\n\n        The flr value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmCurrentAvailStatsForwardMinFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmCurrentAvailStatsForwardMaxFlr milli-percent
%edes        mefSoamLmCurrentAvailStatsForwardMaxFlr This object contains the maximum one-way availability flr in the forward\n        direction, from among the set of availability flr values calculated by\n        the MEP in this Measurement Interval.  There is one availability flr\n        value for each 'delta_t' time period within the Measurement Interval, as\n        specified in MEF 10.2.1.\n\n        The flr value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n      
%eref        mefSoamLmCurrentAvailStatsForwardMaxFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmCurrentAvailStatsForwardAvgFlr milli-percent
%edes        mefSoamLmCurrentAvailStatsForwardAvgFlr This object contains the average one-way availability flr in the forward\n        direction, from among the set of availability flr values calculated by\n        the MEP in this Measurement Interval.  There is one availability flr\n        value for each 'delta_t' time period within the Measurement Interval, as\n        specified in MEF 10.2.1.\n\n        The flr value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmCurrentAvailStatsForwardAvgFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmCurrentAvailStatsBackwardMinFlr milli-percent
%edes        mefSoamLmCurrentAvailStatsBackwardMinFlr This object contains the minimum one-way availability flr in the backward\n        direction, from among the set of availability flr values calculated by\n        the MEP in this Measurement Interval.  There is one availability flr\n        value for each 'delta_t' time period within the Measurement Interval, as\n        specified in MEF 10.2.1.\n\n        The flr value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmCurrentAvailStatsBackwardMinFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmCurrentAvailStatsBackwardMaxFlr milli-percent
%edes        mefSoamLmCurrentAvailStatsBackwardMaxFlr This object contains the maximum one-way availability flr in the backward\n        direction, from among the set of availability flr values calculated by\n        the MEP in this Measurement Interval.  There is one availability flr\n        value for each 'delta_t' time period within the Measurement Interval, as\n        specified in MEF 10.2.1.\n\n        The flr value is a ratio that is expressed\n        as a percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n      
%eref        mefSoamLmCurrentAvailStatsBackwardMaxFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmCurrentAvailStatsBackwardAvgFlr milli-percent
%edes        mefSoamLmCurrentAvailStatsBackwardAvgFlr This object contains the average one-way availability flr in the backward\n        direction, from among the set of availability flr values calculated by\n        the MEP in this Measurement Interval.  There is one availability flr\n        value for each 'delta_t' time period within the Measurement Interval, as\n        specified in MEF 10.2.1.\n\n        The flr value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmCurrentAvailStatsBackwardAvgFlr [MEF SOAM-PM] D37
%edes        mefSoamLmCurrentStatsTable This table contains the results for the current Measurement\n        Interval in a SOAM Loss Measurement session gathered during the interval\n        indicated by mefSoamLmCfgMeasurementInterval.\n\n        A row in this table is created automatically\n        by the SNMP Agent when the Loss Measurement session is configured.\n\n        Each row in the table represents the current statistics for a Loss\n        Measurement session for the defined MEP. This table uses four indices.\n        The first three indices are the indices of the Maintenance Domain, MaNet,\n        and MEP tables. The fourth index is the specific LM session on the\n        selected MEP. There may be more than one LM session per MEP. The\n        main use case for this is to allow multiple CoS instances to be\n        operating simultaneously for a MEP.\n\n        The objects in this table apply regardless of the value of\n        mefSoamLmCfgType unless otherwise specified in the object description.\n\n        Except for mefSoamLmCurrentStatsIndex, mefSoamLmCurrentStatsStartTime,\n        mefSoamLmCurrentStatsElapsedTime and mefSoamLmCurrentStatsSuspect,\n        each object in this table applies only if the corresponding bit is set in\n        mefSoamLmCfgMeasurementEnable.\n\n        The objects in this table do not need to be persistent upon reboot or\n        restart of a device.\n       
%eref        mefSoamLmCurrentStatsTable [MEF SOAM-PM] R7, R15, D9, D18
%edes        mefSoamLmCurrentStatsEntry The conceptual row of mefSoamLmCurrentStatsTable
%edes        mefSoamLmCurrentStatsIndex The index for the current Measurement Interval for this\n        PM session.  This value will become the value for\n        mefSoamLmHistoryStatsIndex once the Measurement Interval\n        is completed.\n\n        Measurement Interval indexes are assigned sequentially by\n        the SNMP Agent.  The first Measurement Interval that occurs after\n        the session is started is assigned index 1.\n       
%edes        mefSoamLmCurrentStatsStartTime The time that the current Measurement Interval started.\n       
%eref        mefSoamLmCurrentStatsStartTime [MEF SOAM-PM] R22, R87, R112
%edes        mefSoamLmCurrentStatsElapsedTime The time that the current Measurement Interval has been running, in 0.01\n        seconds.\n       
%eref        mefSoamLmCurrentStatsElapsedTime [MEF SOAM-PM] R24, R87, R112
%edes        mefSoamLmCurrentStatsSuspect Whether the Measurement Interval has been marked as suspect.\n\n        The object is set to false at the start of a measurement\n        interval. It is set to true when there is a discontinuity in the\n        performance measurements during the Measurement Interval.  Conditions\n        for a discontinuity include, but are not limited to the following:\n\n        1 - The local time-of-day clock is adjusted by at least 10 seconds\n        2 - The conducting of a performance measurement is halted before the\n            current Measurement Interval is completed\n        3 - A local test, failure, or reconfiguration that disrupts service\n
%eref        mefSoamLmCurrentStatsSuspect [MEF SOAM-PM] R39, R40, R41
%edes        mefSoamLmCurrentStatsForwardTransmittedFrames This object contains the number of frames transmitted in the\n        forward direction by this MEP.\n\n        For a PM Session of types lmLmm and lmCcm this includes Ethernet\n        Service Frames and SOAM PDUs that are in a higher MEG level only.\n\n        For a PM Session of type lmSlm this includes the count of SOAM\n        ETH-SLM frames only.\n       
%eref        mefSoamLmCurrentStatsForwardTransmittedFrames [MEF SOAM-PM] R69, R87, R112
%edes        mefSoamLmCurrentStatsForwardReceivedFrames This object contains the number of frames received in the\n        forward direction by this MEP.\n\n        For a PM Session of types lmLmm and lmCcm this includes Ethernet\n        Service Frames and SOAM PDUs that are in a higher MEG level only.\n\n        For a PM Session of types lmSlm this includes the count of SOAM\n        ETH-SLM frames only.\n       
%eref        mefSoamLmCurrentStatsForwardReceivedFrames [MEF SOAM-PM] R69, R87, R112
%eunits      mefSoamLmCurrentStatsForwardMinFlr milli-percent
%edes        mefSoamLmCurrentStatsForwardMinFlr This object contains the minimum one-way frame loss\n        ratio in the forward direction calculated by this MEP for this\n        Measurement Interval. The FLR value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmCurrentStatsForwardMinFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmCurrentStatsForwardMaxFlr milli-percent
%edes        mefSoamLmCurrentStatsForwardMaxFlr This object contains the maximum one-way frame loss\n        ratio in the forward direction calculated by this MEP for this\n        Measurement Interval. The FLR value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n      
%eref        mefSoamLmCurrentStatsForwardMaxFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmCurrentStatsForwardAvgFlr milli-percent
%edes        mefSoamLmCurrentStatsForwardAvgFlr This object contains the average one-way frame loss\n        ratio in the forward direction calculated by this MEP for this\n        Measurement Interval. The FLR value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmCurrentStatsForwardAvgFlr [MEF SOAM-PM] D37
%edes        mefSoamLmCurrentStatsBackwardTransmittedFrames This object contains the number of frames transmitted in the\n        backward direction by this MEP.\n\n        For a PM Session of type lmLmm and lmCcm this includes Ethernet\n        Service Frames and SOAM PDUs that are in a higher MEG level only.\n\n        For a PM Session of type lmSlm this includes the count of SOAM\n        ETH-SLM frames only.\n       
%eref        mefSoamLmCurrentStatsBackwardTransmittedFrames [MEF SOAM-PM] R69, R87, R112
%edes        mefSoamLmCurrentStatsBackwardReceivedFrames This object contains the number of frames received in the\n        backward direction by this MEP.\n\n        For a PM Session of type lmLmm this includes Ethernet\n        Service Frames and SOAM PDUs that are in a higher MEG level only.\n\n        For a PM Session of type lmSlm this includes the count of SOAM\n        ETH-SLM frames only.\n       
%eref        mefSoamLmCurrentStatsBackwardReceivedFrames [MEF SOAM-PM] R69, R87, R112
%eunits      mefSoamLmCurrentStatsBackwardMinFlr milli-percent
%edes        mefSoamLmCurrentStatsBackwardMinFlr This object contains the minimum one-way frame loss\n        ratio in the backward direction calculated by this MEP for\n        this Measurement Interval. The FLR value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmCurrentStatsBackwardMinFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmCurrentStatsBackwardMaxFlr milli-percent
%edes        mefSoamLmCurrentStatsBackwardMaxFlr This object contains the maximum one-way frame loss\n        ratio in the backward direction calculated by this MEP for\n        this Measurement Interval. The FLR value is a ratio that is expressed\n        as a percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n      
%eref        mefSoamLmCurrentStatsBackwardMaxFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmCurrentStatsBackwardAvgFlr milli-percent
%edes        mefSoamLmCurrentStatsBackwardAvgFlr This object contains the average one-way frame loss\n        ratio in the backward direction calculated by this MEP for\n        this Measurement Interval. The FLR value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmCurrentStatsBackwardAvgFlr [MEF SOAM-PM] D37
%edes        mefSoamLmCurrentStatsSoamPdusSent This object contains the count of the number of SOAM PDUs sent\n        during this Measurement Interval.\n\n        This object applies when mefSoamLmCfgType is lmLmm, lmSlm, or\n        lmCcm. It indicates the number of LMM, CCM, or SLM SOAM frames\n        transmitted.\n       
%eref        mefSoamLmCurrentStatsSoamPdusSent [MEF SOAM-PM] R69, R87, R112
%edes        mefSoamLmCurrentStatsSoamPdusReceived This object contains the count of the number of SOAM PDUs\n        PDUs received in this Measurement Interval.\n\n        This object applies when mefSoamLmCfgType is lmLmm, lmSlm, or\n        lmCcm. This object indicates the number of LMR, CCM, or SLR SOAM\n        frames received.\n       
%eref        mefSoamLmCurrentStatsSoamPdusReceived [MEF SOAM-PM] R69, R87, R112
%edes        mefSoamLmHistoryAvailStatsTable This table contains the results for availability history Measurement\n        Intervals in a SOAM Loss Measurement session.\n\n        Rows of this table object are created automatically\n        by the SNMP Agent when the Loss Measurement session is running and a\n        Measurement Interval is completed.\n\n        Each row in the table represents the history statistics for a Loss\n        Measurement session availability Measurement Interval for the defined\n        MEP. This table uses five indices. The first three indices are the indices of\n        the Maintenance Domain, MaNet, and MEP tables. The fourth index is the\n        specific LM session on the selected MEP. The fifth index index the\n        specific Measurement Interval.\n\n        At least 32 completed Measurement Intervals are to be supported. 96\n        completed Measurement Intervals are recommended to be supported. If\n        there are at least 32 rows in the table and a new Measurement Interval\n        completes and a new row is to be added to the table, the oldest completed\n        Measurement Interval can be deleted (row deletion). If the availability\n        Measurement Interval is other than 15 minutes then a minimum of 8 hours of\n        completed Measurement Intervals are to be supported and 24 hours are\n        recommended to be supported.\n\n        Except for mefSoamLmHistoryAvailStatsIndex,\n        mefSoamLmHistoryAvailStatsEndTime, mefSoamLmHistoryAvailStatsElapsedTime and\n        mefSoamLmHistoryAvailStatsSuspect, each object in this table applies only\n        if the corresponding bit is set in mefSoamLmCfgMeasurementEnable.\n\n        The rows and objects in this table are to be persistent upon reboot\n        or restart of a device.\n       
%eref        mefSoamLmHistoryAvailStatsTable [MEF SOAM-PM] R7, R15, R21, D8, R25
%edes        mefSoamLmHistoryAvailStatsEntry The conceptual row of mefSoamLmHistoryAvailStatsTable
%edes        mefSoamLmHistoryAvailStatsIndex The index for the availability Measurement Interval within this\n        PM session.\n\n        Measurement Interval indexes are assigned sequentially by\n        the SNMP Agent.  The first Measurement Interval that occurs after\n        the session is started is assigned index 1.  Measurement Intervals\n        for availability (stored in this table) are based on\n        mefSoamLmCfgAvailabilityMeasurementInterval and are indexed independently\n        of Measurement Intervals for FLR (stored in mefSoamLmHistoryStatsTable).\n\n        Referential integrity is necessary, i.e., the index needs to be\n        persistent upon a reboot or restart of a device.  The index\n        is never reused while this session is active until it wraps to zero.\n        The index value keeps increasing up to that time.\n       
%edes        mefSoamLmHistoryAvailStatsEndTime The time that the Measurement Interval ended.\n       
%eref        mefSoamLmHistoryAvailStatsEndTime [MEF SOAM-PM] R23, R87, R112
%edes        mefSoamLmHistoryAvailStatsElapsedTime The length of time that the Measurement Interval ran for,\n        in 0.01 seconds.\n       
%eref        mefSoamLmHistoryAvailStatsElapsedTime [MEF SOAM-PM] R24, R87, R112
%edes        mefSoamLmHistoryAvailStatsSuspect Whether the Measurement Interval has been marked as suspect.\n\n        The object is set to true when there is a discontinuity in the\n        performance measurements during the Measurement Interval.  Conditions\n        for a discontinuity include, but are not limited to the following:\n\n        1 - The local time-of-day clock is adjusted by at least 10 seconds\n        2 - The conducting of a performance measurement is halted before the\n            current Measurement Interval is completed\n        3 - A local test, failure, or reconfiguration that disrupts service\n
%eref        mefSoamLmHistoryAvailStatsSuspect [MEF SOAM-PM] R39, R40, R41, R42
%edes        mefSoamLmHistoryAvailStatsForwardHighLoss This object is the number of high loss intervals (HLI) over\n        time in the forward direction.\n\n        The value starts at 0 and increments for every HLI that occurs.\n        This parameter is equivalent to 'L Sub T' found in MEF 10.2.1.\n       
%eref        mefSoamLmHistoryAvailStatsForwardHighLoss [MEF 10.2.1] 6.9.9; [MEF SOAM-PM] R87
%edes        mefSoamLmHistoryAvailStatsBackwardHighLoss This object is the number of high loss intervals (HLI) over\n        time in the backward direction.\n\n        The value starts at 0 and increments for every HLI that occurs.\n        This parameter is equivalent to 'L Sub T' found in MEF 10.2.1.\n       
%eref        mefSoamLmHistoryAvailStatsBackwardHighLoss [MEF 10.2.1] 6.9.9; [MEF SOAM-PM] R87
%edes        mefSoamLmHistoryAvailStatsForwardConsecutiveHighLoss This object is the number of consecutive high loss intervals\n        (CHLI) over time in the forward direction.\n\n        The value starts at 0 and increments for every HLI that occurs\n        that is determined to fall within a CHLI.\n        This parameter is equivalent to 'B Sub T' found in MEF 10.2.1.\n       
%eref        mefSoamLmHistoryAvailStatsForwardConsecutiveHighLoss [MEF 10.2.1] 6.9.9; [MEF SOAM-PM] R87
%edes        mefSoamLmHistoryAvailStatsBackwardConsecutiveHighLoss This object is the number of consecutive high loss intervals\n        (CHLI) over time in the forward direction.\n\n        The value starts at 0 and increments for every HLI that occurs\n        that is determined to fall within a CHLI.\n        This parameter is equivalent to 'B Sub T' found in MEF 10.2.1.\n       
%eref        mefSoamLmHistoryAvailStatsBackwardConsecutiveHighLoss [MEF 10.2.1] 6.9.9; [MEF SOAM-PM] R87
%edes        mefSoamLmHistoryAvailStatsForwardAvailable This object contains the number of availability indicators\n        evaluated as available in the forward direction by this MEP during\n        this Measurement Interval.\n       
%eref        mefSoamLmHistoryAvailStatsForwardAvailable [MEF SOAM-PM] R87; [MEF 10.2.1]
%edes        mefSoamLmHistoryAvailStatsBackwardAvailable This object contains the number of availability indicators\n        evaluated as available in the backward direction by this MEP during\n        this Measurement Interval.\n       
%eref        mefSoamLmHistoryAvailStatsBackwardAvailable [MEF SOAM-PM] R87
%edes        mefSoamLmHistoryAvailStatsForwardUnavailable This object contains the number of availability indicators\n        evaluated as unavailable in the forward direction by this MEP during\n        this Measurement Interval.\n       
%eref        mefSoamLmHistoryAvailStatsForwardUnavailable [MEF SOAM-PM] R87
%edes        mefSoamLmHistoryAvailStatsBackwardUnavailable This object contains the number of availability indicators\n        evaluated as unavailable in the backward direction by this MEP\n        during this Measurement Interval.\n       
%eref        mefSoamLmHistoryAvailStatsBackwardUnavailable [MEF SOAM-PM] R87
%eunits      mefSoamLmHistoryAvailStatsForwardMinFlr milli-percent
%edes        mefSoamLmHistoryAvailStatsForwardMinFlr This object contains the minimum one-way availability flr in the forward\n        direction, from among the set of availability flr values calculated by\n        the MEP in this Measurement Interval.  There is one availability flr\n        value for each 'delta_t' time period within the Measurement Interval, as\n        specified in MEF 10.2.1.\n\n        The flr value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmHistoryAvailStatsForwardMinFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmHistoryAvailStatsForwardMaxFlr milli-percent
%edes        mefSoamLmHistoryAvailStatsForwardMaxFlr This object contains the maximum one-way availability flr in the forward\n        direction, from among the set of availability flr values calculated by\n        the MEP in this Measurement Interval.  There is one availability flr\n        value for each 'delta_t' time period within the Measurement Interval, as\n        specified in MEF 10.2.1.\n\n        The flr value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n      
%eref        mefSoamLmHistoryAvailStatsForwardMaxFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmHistoryAvailStatsForwardAvgFlr milli-percent
%edes        mefSoamLmHistoryAvailStatsForwardAvgFlr This object contains the average one-way availability flr in the forward\n        direction, from among the set of availability flr values calculated by\n        the MEP in this Measurement Interval.  There is one availability flr\n        value for each 'delta_t' time period within the Measurement Interval, as\n        specified in MEF 10.2.1.\n\n        The flr value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmHistoryAvailStatsForwardAvgFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmHistoryAvailStatsBackwardMinFlr milli-percent
%edes        mefSoamLmHistoryAvailStatsBackwardMinFlr This object contains the minimum one-way availability flr in the backward\n        direction, from among the set of availability flr values calculated by\n        the MEP in this Measurement Interval.  There is one availability flr\n        value for each 'delta_t' time period within the Measurement Interval, as\n        specified in MEF 10.2.1.\n\n        The flr value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmHistoryAvailStatsBackwardMinFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmHistoryAvailStatsBackwardMaxFlr milli-percent
%edes        mefSoamLmHistoryAvailStatsBackwardMaxFlr This object contains the maximum one-way availability flr in the backward\n        direction, from among the set of availability flr values calculated by\n        the MEP in this Measurement Interval.  There is one availability flr\n        value for each 'delta_t' time period within the Measurement Interval, as\n        specified in MEF 10.2.1.\n\n        The flr value is a ratio that is expressed\n        as a percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n      
%eref        mefSoamLmHistoryAvailStatsBackwardMaxFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmHistoryAvailStatsBackwardAvgFlr milli-percent
%edes        mefSoamLmHistoryAvailStatsBackwardAvgFlr This object contains the average one-way availability flr in the backward\n        direction, from among the set of availability flr values calculated by\n        the MEP in this Measurement Interval.  There is one availability flr\n        value for each 'delta_t' time period within the Measurement Interval, as\n        specified in MEF 10.2.1.\n\n        The flr value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmHistoryAvailStatsBackwardAvgFlr [MEF SOAM-PM] D37
%edes        mefSoamLmHistoryStatsTable This table contains the results for history Measurement\n        Intervals in a SOAM Loss Measurement session.\n\n        Rows of this table object are created automatically\n        by the SNMP Agent when the Loss Measurement session is running and a\n        Measurement Interval is completed.\n\n        Each row in the table represents the history statistics for a Loss\n        Measurement session Measurement Interval for the defined MEP. This\n        table uses five indices. The first three indices are the indices of\n        the Maintenance Domain, MaNet, and MEP tables. The fourth index is the\n        specific LM session on the selected MEP. The fifth index index the\n        specific Measurement Interval.\n\n        At least 32 completed Measurement Intervals are to be supported. 96\n        completed Measurement Intervals are recommended to be supported. If\n        there are at least 32 rows in the table and a new Measurement Interval\n        completes and a new row is to be added to the table, the oldest completed\n        Measurement Interval may be deleted (row deletion). If the measurement\n        interval is other than 15 minutes then a minimum of 8 hours of\n        completed Measurement Intervals are to be supported and 24 hours are\n        recommended to be supported.\n\n        Except for mefSoamLmHistoryStatsIndex, mefSoamLmHistoryStatsEndTime,\n        mefSoamLmHistoryStatsElapsedTime and mefSoamLmHistoryStatsSuspect,\n        each object in this table applies only if the corresponding bit is set in\n        mefSoamLmCfgMeasurementEnable.\n\n        The rows and objects in this table are to be persistent upon reboot\n        or restart of a device.\n       
%eref        mefSoamLmHistoryStatsTable [MEF SOAM-PM] R7, R15, R21, D8, R25
%edes        mefSoamLmHistoryStatsEntry The conceptual row of mefSoamLmHistoryStatsTable
%edes        mefSoamLmHistoryStatsIndex The index for the Measurement Interval within this\n        PM session.\n\n        Measurement Interval indexes are assigned sequentially by\n        the SNMP Agent.  The first Measurement Interval that occurs after\n        the session is started is assigned index 1. Measurement Intervals\n        for FLR (stored in this table) are based on\n        mefSoamLmCfgMeasurementInterval and are indexed independently\n        of Measurement Intervals for availability (stored in\n        mefSoamLmHistoryAvailStatsTable).\n\n        Referential integrity is necessary, i.e., the index needs to be\n        persistent upon a reboot or restart of a device.  The index\n        is never reused while this session is active until it wraps to zero.\n        The index value keeps increasing up to that time.\n       
%edes        mefSoamLmHistoryStatsEndTime The time that the Measurement Interval ended.\n       
%eref        mefSoamLmHistoryStatsEndTime [MEF SOAM-PM] R23, R87, R112
%edes        mefSoamLmHistoryStatsElapsedTime The length of time that the Measurement Interval ran for,\n        in 0.01 seconds.\n       
%eref        mefSoamLmHistoryStatsElapsedTime [MEF SOAM-PM] R24, R87, R112
%edes        mefSoamLmHistoryStatsSuspect Whether the Measurement Interval has been marked as suspect.\n\n        The object is set to true when there is a discontinuity in the\n        performance measurements during the Measurement Interval.  Conditions\n        for a discontinuity include, but are not limited to the following:\n\n        1 - The local time-of-day clock is adjusted by at least 10 seconds\n        2 - The conducting of a performance measurement is halted before the\n            current Measurement Interval is completed\n        3 - A local test, failure, or reconfiguration that disrupts service\n
%eref        mefSoamLmHistoryStatsSuspect [MEF SOAM-PM] R39, R40, R41, R42
%edes        mefSoamLmHistoryStatsForwardTransmittedFrames This object contains the number of frames transmitted in the\n        forward direction by this MEP.\n\n        For a PM Session of types lmLmm and lmCcm this includes Ethernet\n        Service Frames and SOAM PDUs that are in a higher MEG level only.\n\n        For a PM Session of type lmSlm this includes the count of OAM\n        ETH-SLM frames only.\n       
%eref        mefSoamLmHistoryStatsForwardTransmittedFrames [MEF SOAM-PM] R69, R87, R112
%edes        mefSoamLmHistoryStatsForwardReceivedFrames This object contains the number of frames received in the\n        forward direction by this MEP.\n\n        For a PM Session of types lmLmm and lmCcm this includes Ethernet\n        Service Frames and SOAM PDUs that are in a higher MEG level only.\n\n        For a PM Session of type lmSlm this includes the count of OAM\n        ETH-SLM frames only.\n       
%eref        mefSoamLmHistoryStatsForwardReceivedFrames [MEF SOAM-PM] R69, R87, R112
%eunits      mefSoamLmHistoryStatsForwardMinFlr milli-percent
%edes        mefSoamLmHistoryStatsForwardMinFlr This object contains the minimum one-way frame loss\n        ratio in the forward direction calculated by this MEP for this\n        Measurement Interval. The FLR value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmHistoryStatsForwardMinFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmHistoryStatsForwardMaxFlr milli-percent
%edes        mefSoamLmHistoryStatsForwardMaxFlr This object contains the maximum one-way frame loss\n        ratio in the forward direction calculated by this MEP for this\n        Measurement Interval. The FLR value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmHistoryStatsForwardMaxFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmHistoryStatsForwardAvgFlr milli-percent
%edes        mefSoamLmHistoryStatsForwardAvgFlr This object contains the average one-way frame loss\n        ratio in the forward direction calculated by this MEP for this\n        Measurement Interval. The FLR value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmHistoryStatsForwardAvgFlr [MEF SOAM-PM] D37
%edes        mefSoamLmHistoryStatsBackwardTransmittedFrames This object contains the number of frames transmitted in the\n        backward direction by this MEP.\n\n        For a PM Session of type lmLmm and lmCcm this includes Ethernet\n        Service Frames and SOAM PDUs that are in a higher MEG level only.\n\n        For a PM Session of types lmSlm this includes the count of SOAM\n        ETH-SLM frames only.\n       
%eref        mefSoamLmHistoryStatsBackwardTransmittedFrames [MEF SOAM-PM] D37
%edes        mefSoamLmHistoryStatsBackwardReceivedFrames This object contains the number of frames received in the\n        backward direction by this MEP.\n\n        For a PM Session of type lmLmm and lmCcm this includes Ethernet\n        Service Frames and SOAM PDUs that are in a higher MEG level only.\n\n        For a PM Session of types lmSlm this includes the count of SOAM\n        ETH-SLM frames only.\n       
%eref        mefSoamLmHistoryStatsBackwardReceivedFrames [MEF SOAM-PM] R69, R87, R112
%eunits      mefSoamLmHistoryStatsBackwardMinFlr milli-percent
%edes        mefSoamLmHistoryStatsBackwardMinFlr This object contains the minimum one-way frame loss\n        ratio in the backward direction calculated by this MEP for\n        this Measurement Interval. The FLR value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n      
%eref        mefSoamLmHistoryStatsBackwardMinFlr [MEF SOAM-PM] R69, R87, R112
%eunits      mefSoamLmHistoryStatsBackwardMaxFlr milli-percent
%edes        mefSoamLmHistoryStatsBackwardMaxFlr This object contains the maximum one-way frame loss\n        ratio in the backward direction calculated by this MEP for\n        this Measurement Interval. The FLR value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmHistoryStatsBackwardMaxFlr [MEF SOAM-PM] D37
%eunits      mefSoamLmHistoryStatsBackwardAvgFlr milli-percent
%edes        mefSoamLmHistoryStatsBackwardAvgFlr This object contains the average one-way frame loss\n        ratio in the backward direction calculated by this MEP for\n        this Measurement Interval. The FLR value is a ratio that is expressed as a\n        percent with a value of 0 (ratio 0.00) through 100000 (ratio 1.00).\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%eref        mefSoamLmHistoryStatsBackwardAvgFlr [MEF SOAM-PM] D37
%edes        mefSoamLmHistoryStatsSoamPdusSent This object contains the count of the number of SOAM PDUs sent\n        during this Measurement Interval.\n\n        This object applies when mefSoamLmCfgType is lmLmm, lmSlm,\n        or lmCcm. It indicates the number of LMM, CCM, or SLM SOAM frames\n        transmitted.\n       
%eref        mefSoamLmHistoryStatsSoamPdusSent [MEF SOAM-PM] R69, R87
%edes        mefSoamLmHistoryStatsSoamPdusReceived This object contains the count of the number of SOAM\n        PDUs received in this Measurement Interval.\n\n        This object applies when mefSoamLmCfgType is lmLmm, lmSlm,\n        or lmCcm. This object indicates the number of LMR, CCM, or SLR\n        SOAM frames received.\n       
%eref        mefSoamLmHistoryStatsSoamPdusReceived [MEF SOAM-PM] R69, R87
%edes        mefSoamLmThresholdCfgTable This table contains the list of Loss Measurement configuration threshold\n        values for LM Performance Monitoring.\n\n        The main purpose of the threshold configuration table is to configure\n        threshold alarm notifications indicating that a specific performance\n        metric is not being met.\n\n        Each row in the table represents a Loss Measurement session threshold\n        set for the defined MEP. This table uses five indices. The first three\n        indices are the indices of the Maintenance Domain, MaNet, and MEP tables.\n        The fourth index is the specific LM session on the selected MEP. The\n        fifth index is the specific threshold set number.\n\n        Rows in this table are not created automatically. A row is created in\n        this table to set up a threshold set on a configured MEP that has a\n        configured LM session.\n\n        If two managers try to 'create' the same row at the same time, the first\n        creation would succeed, the second creation attempt would result in an\n        error. The second creation attempt would then need to select a new index\n        value to successfully create a new row.\n\n        An NE needs to support at least one threshold set for NE SOAM PM compliance. A\n        second threshold set on the NE is desirable. More than two threshold\n        sets can be configured on the NE if supported on the NE.\n\n        All the objects in the row have a default value that disables the\n        particular threshold measurement. In order to enable a threshold\n        measurement the particular bit in the mefSoamLmThresholdCfgEnable object\n        is to be set to '1' and the selected threshold measurement is to have\n        a threshold value configured. Non-configured threshold measurements\n        are disabled by default.\n\n        The writable objects in this table need to be persistent upon reboot\n        or restart of a device.\n       
%edes        mefSoamLmThresholdCfgEntry The conceptual row of mefSoamLmThresholdCfgTable.
%edes        mefSoamLmThresholdCfgIndex The index of the threshold number for the specific LM\n        threshold entry.\n\n        An index value of '1' needs to be supported. Other index values\n        can also be supported.\n       
%edes        mefSoamLmThresholdCfgEnable A vector of bits that indicates the type of SOAM LM thresholds\n        notifications that are enabled.\n\n        A bit set to '1' enables the specific SOAM LM threshold notification\n        and when the specific counter is enabled and the threshold is crossed a\n        notification is generated.\n\n        A bit set to '0' disables the specific SOAM LM threshold notification.\n\n        If a particular SOAM LM threshold is not supported the BIT value is\n        set to '0'.\n\n        bMefSoamLmMeasuredFlrForwardThreshold(0)\n                Enables/disables measured frame loss forward ratio threshold\n                notification. The notification is sent immediately when the\n                mefSoamLmMeasuredStatsForwardFlr value is\n                greater than or equal to the threshold value.\n        bMefSoamLmMaxFlrForwardThreshold(1)\n                Enables/disables maximum frame loss forward ratio threshold\n                notification. The notification is sent immediately when the\n                mefSoamLmCurrentStatsForwardMaxFlr value is greater\n                than or equal to threshold value in a Measurement Interval.\n        bMefSoamLmAvgFlrForwardThreshold(2)\n                Enables/disables average frame loss forward ratio threshold\n                notification. The notification is sent when at the end of a\n                Measurement Interval if the\n                mefSoamLmCurrentStatsForwardAvgFlr value is greater\n                than or equal to the threshold value.\n        bMefSoamLmMeasuredFlrBackwardThreshold(3)\n                Enables/disables measured frame loss backward ratio threshold\n                notification. The notification is sent immediately when the\n                mefSoamLmMeasuredStatsBackwardFlr value is\n                greater than or equal to the threshold value.\n        bMefSoamLmMaxFlrBackwardThreshold(4)\n                Enables/disables maximum frame loss backward ratio threshold\n                notification. The notification is sent immediately when the\n                mefSoamLmCurrentStatsBackwardMaxFlr value is greater\n                than or equal to threshold value in a Measurement Interval.\n        bMefSoamLmAvgFlrBackwardThreshold(5)\n                Enables/disables average frame loss backward ratio threshold\n                notification. The notification is sent when at the end of a\n                Measurement Interval if the\n                mefSoamLmCurrentStatsBackwardAvgFlr value is\n                greater than or equal to the threshold value.\n        bMefSoamLmForwardHighLossThreshold(6)\n                Enables/disables forward high loss threshold\n                notification. The notification is sent immediately when the\n                mefSoamLmCurrentAvailStatsForwardHighLoss value is\n                greater than or equal to the threshold value in a measurement\n                interval.\n        bMefSoamLmForwardConsecutiveHighLossThreshold(7)\n                Enables/disables forward consecutive high loss threshold\n                notification. The notification is sent immediately when the\n                mefSoamLmCurrentAvailStatsForwardConsecutiveHighLoss value is\n                greater than or equal to the threshold value in a measurement\n                interval.\n        bMefSoamLmBackwardHighLossThreshold(8)\n                Enables/disables backward high loss threshold\n                notification. The notification is sent immediately when the\n                mefSoamLmCurrentAvailStatsBackwardHighLoss value is\n                greater than or equal to the threshold value in a measurement\n                interval.\n        bMefSoamLmBackwardConsecutiveHighLossThreshold(9)\n                Enables/disables backward consecutive high loss threshold\n                notification. The notification is sent immediately when the\n                mefSoamLmCurrentAvailStatsBackwardConsecutiveHighLoss value is\n                greater than or equal to the threshold value in a measurement\n                interval.\n        bMefSoamLmUnavailForwardThreshold(10)\n                Enables/disables unavailable forward threshold\n                notification. The notification is sent immediately when the\n                mefSoamLmCurrentAvailStatsForwardUnavailable value is\n                greater than or equal to threshold value in a Measurement Interval.\n        bMefSoamLmAvailRatioForwardThreshold(11)\n                Enables/disables availability ratio forward threshold\n                notification. The notification is sent immediately when the\n                availability ratio is greater than or equal to threshold value\n                in a Measurement Interval.  The availability ratio can be calculated\n                from the values of mefSoamLmCurrentAvailStatsForwardAvailable and\n                mefSoamLmCurrentAvailStatsForwardUnavailable.\n        bMefSoamLmUnavailBackwardThreshold(12)\n                Enables/disables unavailable backward threshold\n                notification. The notification is sent immediately when the\n                mefSoamLmCurrentAvailStatsBackwardUnavailable value is\n                greater than or equal to threshold value in a Measurement Interval.\n        bMefSoamLmAvailRatioBackwardThreshold(13)\n                Enables/disables availability ratio backward threshold\n                notification. The notification is sent immediately when the\n                availability ratio is greater than or equal to threshold value\n                in a Measurement Interval.  The availability ratio can be calculated\n                from the values of mefSoamLmCurrentAvailStatsBackwardAvailable and\n                mefSoamLmCurrentAvailStatsBackwardUnavailable.\n      
%eunits      mefSoamLmThresholdCfgMeasuredFlrForwardThreshold milli-percent
%edes        mefSoamLmThresholdCfgMeasuredFlrForwardThreshold This object is used to set the measured forward frame loss ratio\n        threshold value that will be used to determine if a threshold\n        notification is generated.\n       
%eunits      mefSoamLmThresholdCfgMaxFlrForwardThreshold milli-percent
%edes        mefSoamLmThresholdCfgMaxFlrForwardThreshold This object is used to set the maximum forward frame loss ratio\n        threshold value that will be used to determine if a threshold\n        notification is generated.\n       
%eunits      mefSoamLmThresholdCfgAvgFlrForwardThreshold milli-percent
%edes        mefSoamLmThresholdCfgAvgFlrForwardThreshold This object is used to set the average forward frame loss ratio\n        threshold value that will be used to determine if a threshold\n        notification is generated.\n       
%eunits      mefSoamLmThresholdCfgMeasuredFlrBackwardThreshold milli-percent
%edes        mefSoamLmThresholdCfgMeasuredFlrBackwardThreshold This object is used to set the measured backward frame loss ratio\n        threshold value that will be used to determine if a threshold\n        notification is generated.\n       
%eunits      mefSoamLmThresholdCfgMaxFlrBackwardThreshold milli-percent
%edes        mefSoamLmThresholdCfgMaxFlrBackwardThreshold This object is used to set the maximum backward frame loss ratio\n        threshold value that will be used to determine if a threshold\n        notification is generated.\n       
%eunits      mefSoamLmThresholdCfgAvgFlrBackwardThreshold milli-percent
%edes        mefSoamLmThresholdCfgAvgFlrBackwardThreshold This object is used to set the average backward frame loss ratio\n        threshold value that will be used to determine if a threshold\n        notification is generated.\n       
%edes        mefSoamLmThresholdCfgForwardHighLossThreshold This object is used to set the forward high loss threshold value that\n        will be used to determine if a threshold notification is generated.\n       
%edes        mefSoamLmThresholdCfgForwardConsecutiveHighLossThreshold This object is used to set the consecutive forward high loss\n        threshold value that will be used to determine if a threshold\n        notification is generated.\n       
%edes        mefSoamLmThresholdCfgBackwardHighLossThreshold This object is used to set the backward high loss threshold value that\n        will be used to determine if a threshold notification is generated.\n       
%edes        mefSoamLmThresholdCfgBackwardConsecutiveHighLossThreshold This object is used to set the consecutive backward high loss\n        threshold value that will be used to determine if a threshold\n        notification is generated.\n       
%edes        mefSoamLmThresholdCfgForwardUnavailCountThreshold This object is used to set the forward unavailability\n        threshold value that will be used to determine if a threshold\n        notification is generated.\n       
%eunits      mefSoamLmThresholdCfgForwardAvailRatioThreshold milli-percent
%edes        mefSoamLmThresholdCfgForwardAvailRatioThreshold This object is used to set the forward availability/total time\n        ratio threshold value that will be used to determine if a threshold\n        notification is generated if the ratio drops below the configured\n        value.\n\n        The ratio value is expressed as a percent with a value of 0 (ratio\n        0.00) through 100000 (ratio 1.00)\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%edes        mefSoamLmThresholdCfgBackwardUnavailCountThreshold This object is used to set the backward unavailability\n        threshold value that will be used to determine if a threshold\n        notification is generated.\n       
%eunits      mefSoamLmThresholdCfgBackwardAvailRatioThreshold milli-percent
%edes        mefSoamLmThresholdCfgBackwardAvailRatioThreshold This object is used to set the backward availability/total time\n        ratio threshold value that will be used to determine if a threshold\n        notification is generated if the ratio drops below the configured\n        value.\n\n        The ratio value is expressed as a percent with a value of 0 (ratio\n        0.00) through 100000 (ratio 1.00)\n\n        Units are in milli-percent, where 1 indicates 0.001 percent.\n       
%edes        mefSoamLmThresholdCfgRowStatus The status of the row.\n\n        The writable columns in a row cannot be changed if the row\n        is active. All columns are to have a valid value before a row\n        can be activated.\n       
%edes        mefSoamDmCfgTable       This table includes configuration objects and operations for the\n        Delay Measurement function.\n\n        Each row in the table represents a Delay Measurement session for\n        the defined MEP. This table uses four indices. The first three indices\n        are the indices of the Maintenance Domain, MaNet, and MEP tables. The\n        fourth index is the specific DM session on the selected MEP.\n\n        A Delay Measurement session is created on an existing MEP by first\n        accessing the mefSoamDmOperNextIndex object and using this value as\n        the mefSoamDmCfgIndex in the row creation.\n\n        Some writable objects in this table are only applicable in certain cases\n        (as described under each object), and attempts to write values for them\n        in other cases will be ignored.\n\n        The writable objects in this table need to be persistent upon reboot\n        or restart of a device.\n       
%eref        mefSoamDmCfgTable       [MEF SOAM-PM] R50; [Y.1731]
%edes        mefSoamDmCfgEntry       The conceptual row of mefSoamDmCfgTable.
%edes        mefSoamDmCfgIndex       An index to the Delay Measurement Configuration table which indicates\n        the specific measurement session for the MEP.\n\n        mefSoamPmMepOperNextIndex needs to be inspected to find an\n        available index for row-creation.\n\n        Referential integrity is necessary, i.e., the index needs to be\n        persistent upon a reboot or restart of a device.  The index\n        is never reused for other PM sessions on the same MEP while this\n        session is active.  The index value keeps increasing until it\n        wraps to zero. This is to facilitate access control based\n        on a fixed index for an EMS, since the index is not reused.\n       
%edes        mefSoamDmCfgType        This object indicates what type of Delay Measurement is to\n        be performed.\n\n        dmDmm(1)         DMM SOAM PDU generated, DMR responses received\n                         (one-way or two-way measurements)\n        dm1DmTx(2)       1DM SOAM PDU generated (one-way measurements are made by\n                         the receiver)\n        dm1DmRx(3)       1DM SOAM PDU received and tracked (one-way measurements)\n\n        The exact PDUs to use are specified by this object in combination with\n        mefSoamDmCfgVersion.\n\n        The value dmDMM is required. The values dm1DmTx and dm1DmRx are optional.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgType        [MEF SOAM-PM] R52, R53, R54, O5, R88
%edes        mefSoamDmCfgVersion     This object indicates the version of the PDUs used to perform\n        Delay Measurement.\n\n        Version 0 indicates the PDU formats defined in Y.1731-2008.\n        Version 1 indicates the PDU formats defined in Y.1731-2011.\n\n        The exact PDUs to use are specified by this object in combination with\n        mefSoamDmCfgType.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgVersion     [Y.1731]
%edes        mefSoamDmCfgEnabled     This object specifies whether the Delay Measurement session is\n        enabled.\n\n        The value 'true' indicates the Delay Measurement session is enabled AND\n        SOAM PDUs are sent and/or measurements are collected when the session\n        is running according to the scheduling objects (start time, stop time,\n        etc.).\n\n        The value 'false' indicates the Delay Measurement session is disabled\n        AND SOAM PDUs are not sent and/or measurements collected.\n\n        For a Delay Measurement session to be removed the row is deleted in\n        order to release internal resources.\n\n        This object can written/modified after row creation time.\n\n        If the DM session is enabled it resumes after shutdown/restart.\n\n        If the DM session is disabled the current Measurement Interval is\n        stopped, if it in process at the time, and all the in process calculations\n        for the partially completed Measurement Interval are finalized.\n\n        This object does not affect whether the single-ended Responder is\n        enabled or not, which is enabled or disabled by the\n        mefSoamPmMepDmSingleEndedResponder object.\n       
%eref        mefSoamDmCfgEnabled     [MEF SOAM-PM] R4, R5, R6, O1, R12, R14
%edes        mefSoamDmCfgMeasurementEnable A vector of bits that indicates the type of SOAM DM counters that\n        are enabled.\n\n        A bit set to '1' enables the specific SOAM DM counter.\n\n        A bit set to '0' disables the SOAM DM counter.\n\n        If a particular SOAM DM counter is not supported the BIT value is\n        set to '0'.\n\n        Not all SOAM DM counters are supported for all SOAM DM types.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n\n        bSoamPdusSent(0)\n            Enables/disables the mefSoamDmCurrentStatsSoamPdusSent\n            and mefSoamDmHistoryStatsSoamPdusSent counters.\n        bSoamPdusReceived(1)\n            Enables/disables the mefSoamDmCurrentStatsSoamPdusReceived\n            and mefSoamDmHistoryStatsSoamPdusReceived counters.\n        bFrameDelayTwoWayBins(2)\n            Enables/disables the mefSoamDmCurrentStatsBinsEntry counter\n            and the mefSoamDmHistoryStatsBinsEntry counter\n            when the mefSoamDmCfgMeasBinType is 'twoWayFrameDelay'.\n        bFrameDelayTwoWayMin(3)\n            Enables/disables the mefSoamDmCurrentStatsFrameDelayTwoWayMin\n            and mefSoamDmHistoryStatsFrameDelayTwoWayMin counters.\n        bFrameDelayTwoWayMax(4)\n            Enables/disables the mefSoamDmCurrentStatsFrameDelayTwoWayMax\n            and mefSoamDmHistoryStatsFrameDelayTwoWayMax counters.\n        bFrameDelayTwoWayAvg(5)\n            Enables/disables the mefSoamDmCurrentStatsFrameDelayTwoWayAvg\n            and mefSoamDmHistoryStatsFrameDelayTwoWayAvg counters.\n        bFrameDelayForwardBins(6)\n            Enables/disables the mefSoamDmCurrentStatsBinsEntry counter\n            and the mefSoamDmHistoryStatsBinsEntry counter\n            when the mefSoamDmCfgMeasBinType is 'forwardFrameDelay'.\n        bFrameDelayForwardMin(7)\n            Enables/disables the mefSoamDmCurrentStatsFrameDelayForwardMin\n            and mefSoamDmHistoryStatsFrameDelayForwardMin counters.\n        bFrameDelayForwardMax(8)\n            Enables/disables the mefSoamDmCurrentStatsFrameDelayForwardMax\n            and mefSoamDmHistoryStatsFrameDelayForwardMax counters.\n        bFrameDelayForwardAvg(9)\n            Enables/disables the mefSoamDmCurrentStatsFrameDelayForwardAvg\n            and mefSoamDmHistoryStatsFrameDelayForwardAvg counters.\n        bFrameDelayBackwardBins(10)\n            Enables/disables the mefSoamDmCurrentStatsBinsEntry counter\n            and the mefSoamDmHistoryStatsBinsEntry counter\n            when the mefSoamDmCfgMeasBinType is 'backwardFrameDelay'.\n        bFrameDelayBackwardMin(11)\n            Enables/disables the mefSoamDmCurrentStatsFrameDelayBackwardMin\n            and mefSoamDmHistoryStatsFrameDelayBackwardMin counters.\n        bFrameDelayBackwardMax(12)\n            Enables/disables the mefSoamDmCurrentStatsFrameDelayBackwardMax\n            and mefSoamDmHistoryStatsFrameDelayBackwardMax counters.\n        bFrameDelayBackwardAvg(13)\n            Enables/disables the mefSoamDmCurrentStatsFrameDelayBackwardAvg\n            and mefSoamDmHistoryStatsFrameDelayBackwardAvg counters.\n        bIfdvForwardBins(14)\n            Enables/disables the mefSoamDmCurrentStatsBinsEntry counter\n            and the mefSoamDmHistoryStatsBinsEntry counter\n            when the mefSoamDmCfgMeasBinType is 'forwardIfdv'.\n        bIfdvForwardMin(15)\n            Enables/disables the mefSoamDmCurrentStatsIfdvForwardMin\n            and mefSoamDmHistoryStatsIfdvForwardMin counters.\n        bIfdvForwardMax(16)\n            Enables/disables the mefSoamDmCurrentStatsIfdvForwardMax\n            and mefSoamDmHistoryStatsIfdvForwardMax counters.\n        bIfdvForwardAvg(17)\n            Enables/disables the mefSoamDmCurrentStatsIfdvForwardAvg\n            and mefSoamDmHistoryStatsIfdvForwardAvg counters.\n        bIfdvBackwardBins(18)\n            Enables/disables the mefSoamDmCurrentStatsBinsEntry counter\n            and the mefSoamDmHistoryStatsBinsEntry counter\n            when the mefSoamDmCfgMeasBinType is 'backwardIfdv'.\n        bIfdvBackwardMin(19)\n            Enables/disables the mefSoamDmCurrentStatsIfdvBackwardMin\n            and mefSoamDmHistoryStatsIfdvBackwardMin counters.\n        bIfdvBackwardMax(20)\n            Enables/disables the mefSoamDmCurrentStatsIfdvBackwardMax\n            and mefSoamDmHistoryStatsIfdvBackwardMax counters.\n        bIfdvBackwardAvg(21)\n            Enables/disables the mefSoamDmCurrentStatsIfdvBackwardAvg\n            and mefSoamDmHistoryStatsIfdvBackwardAvg counters.\n        bIfdvTwoWayBins(22)\n            Enables/disables the mefSoamDmCurrentStatsBinsEntry counter\n            and the mefSoamDmHistoryStatsBinsEntry counter\n            when the mefSoamDmCfgMeasBinType is 'twoWayIfdv'.\n        bIfdvTwoWayMin(23)\n            Enables/disables the mefSoamDmCurrentStatsIfdvTwoWayMin\n            and mefSoamDmHistoryStatsIfdvTwoWayMin counters.\n        bIfdvTwoWayMax(24)\n            Enables/disables the mefSoamDmCurrentStatsIfdvTwoWayMax\n            and mefSoamDmHistoryStatsIfdvTwoWayMax counters.\n        bIfdvTwoWayAvg(25)\n            Enables/disables the mefSoamDmCurrentStatsIfdvTwoWayAvg\n            and mefSoamDmHistoryStatsIfdvTwoWayAvg counters.\n        bFrameDelayRangeForwardBins(26)\n            Enables/disables the mefSoamDmCurrentStatsBinsEntry counter\n            and the mefSoamDmHistoryStatsBinsEntry counter\n            when the mefSoamDmCfgMeasBinType is 'forwardFrameDelayRange'.\n        bFrameDelayRangeForwardMax(27)\n            Enables/disables the mefSoamDmCurrentStatsFrameDelayRangeForwardMax\n            and mefSoamDmHistoryStatsFrameDelayRangeForwardMax counters.\n        bFrameDelayRangeForwardAvg(28)\n            Enables/disables the mefSoamDmCurrentStatsFrameDelayRangeForwardAvg\n            and mefSoamDmHistoryStatsFrameDelayRangeForwardAvg counters.\n        bFrameDelayRangeBackwardBins(29)\n            Enables/disables the mefSoamDmCurrentStatsBinsEntry counter\n            and the mefSoamDmHistoryStatsBinsEntry counter\n            when the mefSoamDmCfgMeasBinType is 'backwardFrameDelayRange'.\n        bFrameDelayRangeBackwardMax(30)\n            Enables/disables the mefSoamDmCurrentStatsFrameDelayRangeBackwardMax\n            and mefSoamDmHistoryStatsFrameDelayRangeBackwardMax counters.\n        bFrameDelayRangeBackwardAvg(31)\n            Enables/disables the mefSoamDmCurrentStatsFrameDelayRangeBackwardAvg\n            and mefSoamDmHistoryStatsFrameDelayRangeBackwardAvg counters.\n        bFrameDelayRangeTwoWayBins(32)\n            Enables/disables the mefSoamDmCurrentStatsBinsEntry counter\n            and the mefSoamDmHistoryStatsBinsEntry counter\n            when the mefSoamDmCfgMeasBinType is 'twoWayFrameDelayRange'.\n        bFrameDelayRangeTwoWayMax(33)\n            Enables/disables the mefSoamDmCurrentStatsFrameDelayRangeTwoWayMax\n            and mefSoamDmHistoryStatsFrameDelayRangeTwoWayMax counters.\n        bFrameDelayRangeTwoWayAvg(34)\n            Enables/disables the mefSoamDmCurrentStatsFrameDelayRangeTwoWayAvg\n            and mefSoamDmHistoryStatsFrameDelayRangeTwoWayAvg counters.\n        bMeasuredStatsFrameDelayTwoWay(35)\n            Enables/disables the mefSoamDmMeasuredStatsFrameDelayTwoWay\n            counter.\n        bMeasuredStatsFrameDelayForward(36)\n            Enables/disables the mefSoamDmMeasuredStatsFrameDelayForward\n            counter.\n        bMeasuredStatsFrameDelayBackward(37)\n            Enables/disables the mefSoamDmMeasuredStatsFrameDelayBackward\n            counter.\n        bMeasuredStatsIfdvTwoWay(38)\n            Enables/disables the mefSoamDmMeasuredStatsIfdvTwoWay\n            counter.\n        bMeasuredStatsIfdvForward(39)\n            Enables/disables the mefSoamDmMeasuredStatsIfdvForward\n            counter.\n        bMeasuredStatsIfdvBackward(40)\n            Enables/disables the mefSoamDmMeasuredStatsIfdvBackward\n            counter.\n       
%eref        mefSoamDmCfgMeasurementEnable [MEF SOAM-PM]
%eunits      mefSoamDmCfgMessagePeriod ms
%edes        mefSoamDmCfgMessagePeriod This object specifies the interval between Delay Measurement\n        OAM message transmission. For Delay Measurement monitoring\n        applications, the default value is 100ms.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgMessagePeriod [MEF SOAM-PM] R61, R62, D22, R95, R96, D39
%edes        mefSoamDmCfgPriority    This object specifies the priority of frames with\n        Delay Measurement OAM message information.\n\n        The default value is to be the value which yields the lowest frame\n        loss.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgPriority    [MEF SOAM-PM] R1, R2, R56, D21, R57, R58, R90-R94, D28;\n        [MEF 10.2.1] Section 6.8
%edes        mefSoamDmCfgFrameSize   This object specifies the Delay Measurement frame size between\n        64 bytes and the maximum transmission unit of the EVC.\n\n        The range of frame sizes from 64 through 2000 octets need to be\n        supported, and the range of frame sizes from 2001 through 9600 octets\n        is suggested to be supported.\n\n        The adjustment to the frame size of the standard frame size is\n        accomplished by the addition of a Data or Test TLV. A Data or Test TLV\n        is only added to the frame if the frame size is greater than 64 bytes.\n\n        This object is only valid for the entity transmitting the Delay\n        Measurement frames (dmDmm, dm1DmTx) and is ignored by the entity\n        receiving frames.\n\n        In addition, this object is not valid when mefSoamDmCfgVersion is 0.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgFrameSize   [MEF SOAM-PM] R63, R64, D23, D24, R97, R98, D40, D41
%edes        mefSoamDmCfgDataPattern This object specifies the DM data pattern included in a Data TLV\n        when the size of the DM frame is determined by the\n        mefSoamDmFrameSize object and mefSoamDmTestTlvIncluded is 'false'.\n        If the frame size object does not define the DM frame size or\n        mefSoamDmTestTlvIncluded is 'true' the value of this object is\n        ignored.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%edes        mefSoamDmCfgTestTlvIncluded Indicates whether a Test TLV or Data TLV is included when the size\n        of the DM frame is determined by the mefSoamDmFrameSize object.\n        A value of 'true' indicates that the Test TLV is to be included. A\n        value of 'false' indicates that the Data TLV is to be included.\n\n        If the frame size object does not define the DM frame size\n        the value of this object is ignored.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgTestTlvIncluded [Y.1731] 9.3
%edes        mefSoamDmCfgTestTlvPattern This object specifies the type of test pattern to be\n        sent in the DM frame Test TLV when the size\n        of DM PDU is determined by the mefSoamDmFrameSize object and\n        mefSoamDmTestTlvIncluded is 'true'. If the frame size object\n        does not define the DM frame size or mefSoamDmTestTlvIncluded\n        is 'false' the value of this object is ignored.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eunits      mefSoamDmCfgMeasurementInterval minutes
%edes        mefSoamDmCfgMeasurementInterval This object specifies a Measurement Interval in minutes.\n\n        A Measurement Interval 15 minutes needs to be supported, other intervals\n        may be supported.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgMeasurementInterval [MEF SOAM-PM] R16, R17
%edes        mefSoamDmCfgNumIntervalsStored This object specifies the number of completed Measurement Intervals\n        to store in the history statistic table.\n\n        At least 32 completed Measurement Intervals are to be stored. 96\n        Measurement Intervals are recommended to be stored.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgNumIntervalsStored [MEF SOAM-PM] R21, D8, D9
%edes        mefSoamDmCfgDestMacAddress The Target or Destination MAC Address Field to be transmitted.\n\n        If mefSoamDmCfgType is 'dmDmm', the destination address is to be the\n        unicast address of the destination MEP. An error is returned if this\n        object is set to a multicast address.\n\n        If mefSoamDmCfgType is 'dm1DmTx', the destination address is normally the\n        unicast address of the destination MEP, but can be a multicast address\n        indicating the level of the MEG: 01-80-c2-00-00-3y, where y is the\n        level of the MEG.  An error is returned if this object is set to any\n        other multicast address.\n\n        If mefSoamDmCfgType is 'dm1DmRx', this object is ignored.\n\n        This address will be used if the value of the object\n        mefSoamDmDestIsMepId is 'false'.\n\n        This object is only valid for the entity transmitting the\n        SOAM DM frames and is ignored by the entity receiving\n        SOAM DM frames.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgDestMacAddress [MEF SOAM-PM] R55, R89
%edes        mefSoamDmCfgDestMepId   The Maintenance Association End Point Identifier of\n        another MEP in the same Maintenance Association to which\n        the SOAM DM frame is to be sent.\n\n        This address will be used if the value of the column\n        mefSoamDmDestIsMepId is 'true'. A value of zero\n        means that the destination MEP ID has not been configured.\n\n        This object is only valid for the entity transmitting the Delay\n        Measurement frames, types 'dmDmm' and 'dm1DmTx'. It is not applicable\n        for the 'dm1DmRx' type.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgDestMepId   [MEF SOAM-PM] R55, R89
%edes        mefSoamDmCfgDestIsMepId A value of 'true' indicates that MEPID of the target MEP is used for\n        SOAM DM frame transmission.\n\n        A value of 'false' indicates that the destination MAC address of the\n        target MEP is used for SOAM DM frame transmission.\n\n        This object is only valid for the entity transmitting the Delay\n        Measurement frames, types 'dmDmm' and 'dm1DmTx'. It is not applicable\n        for the 'dm1DmRx type.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgDestIsMepId [MEF SOAM-PM] R55, R89
%edes        mefSoamDmCfgSourceMacAddress The Source MAC Address Field of the received SOAM DM session PDUs.\n\n        If mefSoamDmCfgType is dm1DmRx this object indicates the source\n        address of the dm1DmTx DM session.\n\n        This object is only valid for mefSoamDmCfgType set to dm1DmRx. It is\n        ignored for mefSoamDmCfgType set to dmDmm or dm1DmTx.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgSourceMacAddress [MEF SOAM-PM] R55, R89
%edes        mefSoamDmCfgStartTimeType This object specifies the type of start time of the SOAM DM\n        session. The start time can be disabled (none), immediate, relative,\n        or fixed.\n\n        The value of 'none' is illegal and a write error will be returned\n        if this value is used.\n\n        The value of 'immediate' starts the SOAM DM session when the\n        mefSoamDmCfgEnabled is true.\n\n        The value of 'fixed' starts the SOAM DM session when the\n        mefSoamDmFixedStartDateAndTime is less than or equal to the current\n        system date and time and mefSoamDmCfgEnabled is true. This value is used\n        to implement an On-Demand fixed time PM session.\n\n        The value of 'relative' starts the SOAM DM session when the current\n        system date and time minus the mefSoamDmRelativeStartTime is greater than\n        or equal to the system date and time when the mefSoamDmStartTimeType\n        object was written and mefSoamDmCfgEnabled is true. This value is used\n        to implement an On-Demand relative time PM session.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgStartTimeType [MEF SOAM-PM] R3, R7, R8, D1
%edes        mefSoamDmCfgFixedStartDateAndTime This object specifies the fixed start date/time for the\n        SOAM Delay Measurement session. This object is used only used if\n        mefSoamDmStartTimeType is 'fixed' and is ignored otherwise.\n\n        The default value is year 0000, month 01, day 01, time 00:00:00.00.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgFixedStartDateAndTime [MEF SOAM-PM] R9
%edes        mefSoamDmCfgRelativeStartTime This object specifies the relative start time, from\n        the current system time, for the SOAM DM session. This\n        object is used only if mefSoamDmStartTimeType is 'relative'\n        and is ignored otherwise.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgRelativeStartTime [MEF SOAM-PM] R9
%edes        mefSoamDmCfgStopTimeType This object specifies the type of stop time to terminate the\n        SOAM DM session. The stop time can be forever (none), relative, or\n        fixed.\n\n        The value of 'none' indicates that the SOAM DM session never ends once it\n        has started unless the session is disabled.\n\n        The value of 'immediate' is illegal and a write error will be returned\n        if this value is used.\n\n        The value of 'fixed' stops the SOAM DM session when the\n        mefSoamDmFixedStopDateAndTime is less than or equal\n        to the current system date. This\n        value is used to implement an On-Demand fixed time PM session.\n\n        The value of 'relative' stops the SOAM DM session when the time\n        indicated by mefSoamDmRelativeStopTime has passed since the session\n        start time as determined by the mefSoamDmCfgStartTimeType,\n        mefSoamDmCfgFixedStartDateAndTime and mefSoamDmCfgRelativeStartTime\n        objects.\n        This value is used to implement an On-Demand relative time PM session.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgStopTimeType [MEF SOAM-PM] R3, R10, D2
%edes        mefSoamDmCfgFixedStopDateAndTime This object specifies the fixed stop date/time for the\n        SOAM Delay Measurement session. This object is used only used\n        if mefSoamDmStopTimeType is 'fixed' and is ignored otherwise.\n\n        The default value is year 0000, month 01, day 01, time 00:00:00.00.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgFixedStopDateAndTime [MEF SOAM-PM] R10, R13
%edes        mefSoamDmCfgRelativeStopTime This object specifies the relative stop time, from the\n        session start time, to stop the SOAM DM session.  This\n        object is used only if mefSoamDmStopTimeType is 'relative' and is\n        ignored otherwise.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgRelativeStopTime [MEF SOAM-PM] R11
%eunits      mefSoamDmCfgRepetitionTime seconds
%edes        mefSoamDmCfgRepetitionTime This object specifies a configurable repetition time between\n        Measurement Intervals in a Delay Measurement session in seconds.\n\n        If the value is 0 (none), there is no time gap between the end of one\n        Measurement Interval and the start of a new Measurement Interval.\n        This is the normal usage case.\n\n        If the value is greater than one Measurement Interval there is time gap\n        between the end of one Measurement Interval and the start of the next\n        Measurement Interval.  The repetition time specifies the time between\n        the start of consecutive Measurement Intervals; hence the gap between\n        the end of one Measurement Interval and the start of the next is equal\n        to the difference between the repetition time and the measurement\n        interval.  During this gap, no SOAM PDUs are sent for this session and\n        no measurements are made.\n\n        If the value is greater 0 but less than or equal to the measurement\n        interval, an error is returned.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgRepetitionTime [MEF SOAM-PM] R18, D3, R19, R20
%edes        mefSoamDmCfgAlignMeasurementIntervals This object specifies whether the Measurement Intervals for\n        the Delay Measurement session are aligned with a zero offset to\n        real time.\n\n        The value 'true' indicates that each Measurement Interval starts\n        at a time which is aligned to NE time source hour, if the repetition\n        time (or the Measurement Interval, if the repetition time is 0) is\n        a factor of an hour, i.e. 60min/15min = 4. For instance, a\n        Measurement Interval/Repetition Time of 15 minutes would stop/start\n        the Measurement Interval at 0, 15, 30, and 45 minutes of an hour. A\n        Measurement Interval/Repetition Time of 7 minutes would not align\n        to the hour since 7 minutes is NOT a factor of an hour, i.e.\n        60min/7min = 8.6.  In this case the behavior is the same as if the\n        object is set to 'false'.\n\n        The value 'false' indicates that the first Measurement Interval starts\n        at an arbitrary time and each subsequent Measurement Interval starts\n        at a time which is determined by mefSoamLmCfgRepetitionTime.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgAlignMeasurementIntervals [MEF SOAM-PM] D4, D5, D6
%eunits      mefSoamDmCfgAlignMeasurementOffset minutes
%edes        mefSoamDmCfgAlignMeasurementOffset This object specifies the offset in minutes from the time of day value\n        if mefSoamDmCfgAlignMeasurementIntervals is 'true' and the repetition\n        time is a factor of 60 minutes. If not, the value of this object\n        is ignored.\n\n        If the Measurement Interval is 15 minutes and\n        mefSoamDmCfgAlignMeasurementIntervals is true and if this object was\n        set to 5 minutes, the Measurement Intervals would start at 5, 20, 35, 50\n        minutes past each hour.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgAlignMeasurementOffset [MEF SOAM-PM] D7
%edes        mefSoamDmCfgNumMeasBinsPerFrameDelayInterval This object specifies the number of measurement bins\n        per Measurement Interval for Frame Delay measurements.\n\n        At least 3 bins are to be supported; at least 10 bins are recommended\n        to be supported.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n      
%eref        mefSoamDmCfgNumMeasBinsPerFrameDelayInterval [MEF SOAM-PM] R27, D11, R28, D12
%edes        mefSoamDmCfgNumMeasBinsPerInterFrameDelayVariationInterval This object specifies the number of measurement bins\n        per Measurement Interval for Inter-Frame Delay Variation\n        measurements.\n\n       The minimum number of measurement bins to be supported is 2. The\n       desired number of measurements bins to be supported is 10.\n\n       This object can only be written at row creation time and cannot be\n       modified once it has been created.\n      
%eref        mefSoamDmCfgNumMeasBinsPerInterFrameDelayVariationInterval [MEF SOAM-PM] R29, D13, R30, D14
%edes        mefSoamDmCfgInterFrameDelayVariationSelectionOffset This object specifies the selection offset for\n        Inter-Frame Delay Variation measurements.  If this value\n        is set to n, then the IFDV is calculated by taking the\n        difference in frame delay between frame F and frame (F+n).\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgInterFrameDelayVariationSelectionOffset [MEF SOAM-PM] O4, D25, O6, D42
%edes        mefSoamDmCfgNumMeasBinsPerFrameDelayRangeInterval This object specifies the number of measurement bins\n        per Measurement Interval for Frame Delay Range measurements.\n\n        At least 2 bins are to be supported; at least 10 bins are recommended\n        to be supported.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n      
%eref        mefSoamDmCfgNumMeasBinsPerFrameDelayRangeInterval [MEF SOAM-PM] R31, D15, R32, D16
%edes        mefSoamDmCfgSessionType This object indicates whether the current session is defined to\n        be 'Proactive' or 'On-Demand'. A value of 'proactive'\n        indicates the current session is 'Proactive'. A value of 'onDemand'\n        indicates the current session is 'On-Demand'.\n\n        This object can only be written at row creation time and cannot be\n        modified once it has been created.\n       
%eref        mefSoamDmCfgSessionType [MEF SOAM-PM] R3
%edes        mefSoamDmCfgSessionStatus This object indicates the current status of the DM session. A value\n        of 'active' indicates the current DM session is active, i.e. the current\n        time lies between the start time and the stop time, and\n        mefSoamDmCfgEnabled is true. A value of 'notActive' indicates the\n        current DM session is not active, i.e. it has not started yet, has\n        stopped upon reaching the stop time, or is disabled.\n       
%edes        mefSoamDmCfgHistoryClear This object when written clears the Delay Measurement history\n        tables (mefSoamDmHistoryStatsTable and mefSoamDmHistoryStatsBinsTable)\n        - all rows are deleted.  When read the value always returns 'false'.\n\n        Writing this value does not change the current stat table,\n        nor any of the items in the configuration table.\n\n        Writing this object at row creation has no effect.\n       
%edes        mefSoamDmCfgRowStatus   The status of the row.\n\n        The writable columns in a row cannot be changed if the row\n        is active, except for mefSoamDmCfgEnabled and mefSoamDmCfgHistoryClear\n        objects. All columns are to have a valid value before a row\n        can be activated.\n       
%edes        mefSoamDmCfgMeasBinTable This table includes configuration objects for the Delay Measurement\n        bins to collect stats.\n\n        Each row in the table is automatically created when the Delay\n        Measurement session is defined for the selected MEP. The number of rows\n        created is based upon three items: the DM type, the number of bins\n        defined for each type, and whether bins are enabled for each type.\n\n        The first four indices are the same as used to create the DM session:\n        Maintenance Domain, MaNet, MEP identification, and mefSoamDmCfgIndex. The\n        fifth index is the type of bin, and the sixth index is the bin number.\n\n        For a dmDmm session all nine types of bins can be created. For a dm1DmmTx\n        session no bins are created. For a dm1DmmRx session only types\n        forwardFrameDelay, forwardIfdv, and forwardFrameDelayRange can be created.\n\n        The number of bins created for a bin type is based upon: the\n        mefSoamDmCfgNumMeasBinsPerFrameDelayInterval object, the\n        mefSoamDmCfgNumMeasBinsPerInterFrameDelayVariationInterval object, the\n        mefSoamDmCfgNumMeasBinsPerFrameDelayRangeInterval object, and\n        the mefSoamDmCfgMeasurementEnable object.\n\n        For instance, if a dmDmm session with Bins per Frame Delay Interval\n        set to 5, Bins per Frame Delay Variation Interval set to 3, and Frame\n        Delay Range set to 2 (default), all of the appropriate bits set in\n        mefSoamDmMeasurementCfgEnable, the following number of rows would be\n        created:\n\n        For bin types TwoWayFrameDelay(1), forwardFrameDelay(2), and\n        backwardFrameDelay(3) = 5 bins * 3 types = 15 rows\n\n        For bin types TwoWayIfdv(4), forwardIfdv(5), backwardIfdv(6) =\n        3 bins * 3 types = 9 rows.\n\n        For bins types twoWayFrameDelayRange(7), forwardFrameDelayRange(8),\n        backwardFrameDelayRange(9) =\n        2 bins * 3 types = 6 rows.\n\n        This gives a total of 30 rows created for the DMM session example.\n\n        Each value in the bin defaults to 5000us greater than the previous bin,\n        with the first bin default value set to 0.\n\n        For the delay example above (5 bins), the following default values\n        would be written to the bins:\n              bin 1:     0  (range is 0us <= measurement < 5,000us)\n              bin 2:  5000  (range is 5,000us <= measurement < 10,000us)\n              bin 3: 10000  (range is 10,000us <= measurement < 15,000us)\n              bin 4: 15000  (range is 15,000us <= measurement < 20,000us)\n              bin 5: 20000  (range is 20,000us <= measurement < infinity)\n\n        For the delay variation example above (3 bins), the following default\n        values would be written to the bins:\n              bin 1:     0  (range is 0us <= measurement < 5,000us)\n              bin 2:  5000  (range is 5,000us <= measurement < 10,000us)\n              bin 3: 10000  (range is 10,000us <= measurement < infinity)\n\n        For the frame delay range example above (2 bins), the following default\n        values would be written to the bins:\n              bin 1:     0  (range is 0us <= measurement < 5,000us)\n              bin 2:  5000  (range is 5,000us <= measurement < infinity)\n\n        The writable objects in this table need to be persistent upon reboot\n        or restart of a device.\n\n        Rows are only created if the corresponding measurement type has been enabled\n        via the mefSoamDmCfgMeasurementEnable object.\n       
%eref        mefSoamDmCfgMeasBinTable [MEF SOAM-PM] R34, R36, R37, D17, R38, R65, D26, D27, R99, D43, D44
%edes        mefSoamDmCfgMeasBinEntry The conceptual row of mefSoamDmCfgMeasBinTable.
%edes        mefSoamDmCfgMeasBinType This object specifies whether the bin number is for\n        Frame Delay or Inter-Frame Delay Variation.\n       
%edes        mefSoamDmCfgMeasBinNumber This object specifies the bin number for the\n        configured boundary.  The first bin has bin number 1.\n       
%eunits      mefSoamDmCfgMeasBinLowerBound microseconds (us)
%edes        mefSoamDmCfgMeasBinLowerBound This object specifies the lower boundary for a\n        measurement bin. The upper boundary is defined by the next bin\n        value or infinite for the last bin defined.\n        The measurement boundary for each measurement bin is to\n        be larger than the measurement boundary of the preceding\n        measurement bin. By default, the next bin is set to 5000us larger\n        than the lower bin boundary.\n\n        The values in a bin boundary object represents the time range\n        used to segregate delay data into the appropriate statistical\n        data bin. For five bins with default values, each bin has the\n        following time range:\n\n        bin 1 =     0, range is 0us <= measurement < 5,000us\n        bin 2 =  5000, range is 5,000us <= measurement < 10,000us\n        bin 3 = 10000, range is 10,000us <= measurement < 15,000us\n        bin 4 = 15000, range is 15,000us <= measurement < 20,000us\n        bin 5 = 20000, range is 20,000us <= measurement < infinity\n\n        The first bin boundary (mefSoamDmCfgBinNumber set to 1) always contains\n        the value of 0. Attempting to write a non-zero value to this bin will\n        result in an error.\n       
%eref        mefSoamDmCfgMeasBinLowerBound [MEF SOAM-PM] R33, R35, D17
%edes        mefSoamDmMeasuredStatsTable This object contains the last measured results for a SOAM Delay\n        Measurement session.\n\n        Each row in the table represents a Delay Measurement session for\n        the defined MEP. This table uses four indices. The first three indices\n        are the indices of the Maintenance Domain, MaNet, and MEP tables. The\n        fourth index is the specific DM session on the selected MEP.\n\n        Instances of this managed object are created automatically\n        by the SNMP Agent when the Delay Measurement session is running.\n\n        Each object in this table applies only if the corresponding bit is set in\n        mefSoamDmCfgMeasurementEnable.\n\n        The objects in this table do not need to be persistent upon reboot or restart\n        of a device.\n       
%eref        mefSoamDmMeasuredStatsTable [MEF SOAM-PM] R7, R15, D18
%edes        mefSoamDmMeasuredStatsEntry The conceptual row of mefSoamDmMeasuredStatsTable
%eunits      mefSoamDmMeasuredStatsFrameDelayTwoWay microseconds
%edes        mefSoamDmMeasuredStatsFrameDelayTwoWay This object contains the two-way frame delay calculated by this\n        MEP from the last received SOAM PDU.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmMeasuredStatsFrameDelayTwoWay [MEF SOAM-PM] R66
%eunits      mefSoamDmMeasuredStatsFrameDelayForward microseconds
%edes        mefSoamDmMeasuredStatsFrameDelayForward This object contains the frame delay in the forward direction\n        calculated by this MEP from the last received SOAM PDU. The value of this\n        object may not be accurate in the absence of sufficiently precise clock\n        synchronization.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx.\n       
%eref        mefSoamDmMeasuredStatsFrameDelayForward [MEF SOAM-PM] R66
%eunits      mefSoamDmMeasuredStatsFrameDelayBackward microseconds
%edes        mefSoamDmMeasuredStatsFrameDelayBackward This object contains the frame delay in the backward direction\n        calculated by this MEP from the last received SOAM PDU. The value of this\n        object may not be accurate in the absence of sufficiently precise clock\n        synchronization.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmMeasuredStatsFrameDelayBackward [MEF SOAM-PM] R66
%eunits      mefSoamDmMeasuredStatsIfdvTwoWay microseconds
%edes        mefSoamDmMeasuredStatsIfdvTwoWay This object contains the last two-way inter-frame delay\n        interval calculated by this MEP.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmMeasuredStatsIfdvTwoWay [MEF SOAM-PM] R66
%eunits      mefSoamDmMeasuredStatsIfdvForward microseconds
%edes        mefSoamDmMeasuredStatsIfdvForward This object contains the last one-way inter-frame delay\n        interval in the forward direction calculated by this MEP.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx.\n       
%eref        mefSoamDmMeasuredStatsIfdvForward [MEF SOAM-PM] R66
%eunits      mefSoamDmMeasuredStatsIfdvBackward microseconds
%edes        mefSoamDmMeasuredStatsIfdvBackward This object contains the last one-way inter-frame delay\n        interval in the backward direction calculated by this MEP.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmMeasuredStatsIfdvBackward [MEF SOAM-PM] R66
%edes        mefSoamDmCurrentStatsTable This table contains the results for the current Measurement\n        Interval in a SOAM Delay Measurement session gathered during the interval\n        indicated by mefSoamLmCfgMeasurementInterval.\n\n        A row in this table is created automatically\n        by the SNMP Agent when the Delay Measurement session is configured.\n\n        Each row in the table represents the current statistics for a Delay\n        Measurement session for the defined MEP. This table uses four indices.\n        The first three indices are the indices of the Maintenance Domain, MaNet,\n        and MEP tables. The fourth index is the specific DM session on the\n        selected MEP. There can be more than one DM session per MEP.\n\n        The objects in this table apply regardless of the value of\n        mefSoamDmCfgType unless otherwise specified in the object description.\n        Backward and two-way statistic objects are undefined if mefSoamDmCfgType\n        is dm1DmRx.\n\n        Except for mefSoamDmCurrentStatsIndex, mefSoamDmCurrentStatsStartTime\n        mefSoamDmCurrentStatsElapsedTime and mefSoamDmCurrentStatsSuspect,\n        each object in this table applies only if the corresponding bit is set in\n        mefSoamDmCfgMeasurementEnable.\n\n        The objects in this table do not need to be persistent upon reboot or\n        restart of a device.\n       
%eref        mefSoamDmCurrentStatsTable [MEF SOAM-PM] R7, R15, D9, D18
%edes        mefSoamDmCurrentStatsEntry The conceptual row of mefSoamDmCurrentStatsTable
%edes        mefSoamDmCurrentStatsIndex The index for the current Measurement Interval for this\n        PM session.  This value will become the value for\n        mefSoamDmHistoryStatsIndex once the Measurement Interval\n        is completed.\n\n        Measurement Interval indexes are assigned sequentially by\n        the SNMP Agent.  The first Measurement Interval that occurs after\n        the session is started is assigned index 1.\n       
%edes        mefSoamDmCurrentStatsStartTime The time that the current Measurement Interval started.\n       
%eref        mefSoamDmCurrentStatsStartTime [MEF SOAM-PM] R22, R66, R100
%edes        mefSoamDmCurrentStatsElapsedTime The time that the current Measurement Interval has been running, in 0.01\n        seconds.\n       
%eref        mefSoamDmCurrentStatsElapsedTime [MEF SOAM-PM] R24, R66, R100
%edes        mefSoamDmCurrentStatsSuspect Whether the Measurement Interval has been marked as suspect.\n\n        The object is to be set to false at the start of a measurement\n        interval. It is set to true when there is a discontinuity in the\n        performance measurements during the Measurement Interval.  Conditions\n        for a discontinuity include, but are not limited to the following:\n\n        1 - The local time-of-day clock is adjusted by at least 10 seconds\n        2 - The conducting of a performance measurement is halted before the\n            current Measurement Interval is completed\n        3 - A local test, failure, or reconfiguration that disrupts service\n
%eref        mefSoamDmCurrentStatsSuspect [MEF SOAM-PM] R39, R40, R41
%eunits      mefSoamDmCurrentStatsFrameDelayTwoWayMin microseconds
%edes        mefSoamDmCurrentStatsFrameDelayTwoWayMin This object contains the minimum two-way frame delay\n        calculated by this MEP for this Measurement Interval.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmCurrentStatsFrameDelayTwoWayMin [MEF SOAM-PM] R66
%eunits      mefSoamDmCurrentStatsFrameDelayTwoWayMax microseconds
%edes        mefSoamDmCurrentStatsFrameDelayTwoWayMax This object contains the maximum two-way frame delay\n        calculated by this MEP for this Measurement Interval.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmCurrentStatsFrameDelayTwoWayMax [MEF SOAM-PM] R66
%eunits      mefSoamDmCurrentStatsFrameDelayTwoWayAvg microseconds
%edes        mefSoamDmCurrentStatsFrameDelayTwoWayAvg This object contains the average two-way frame delay\n        calculated by this MEP for this Measurement Interval.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmCurrentStatsFrameDelayTwoWayAvg [MEF SOAM-PM] R66
%eunits      mefSoamDmCurrentStatsFrameDelayForwardMin microseconds
%edes        mefSoamDmCurrentStatsFrameDelayForwardMin This object contains the minimum one-way frame delay\n        in the forward direction calculated by this MEP for this\n        Measurement Interval. The value of this object may not be accurate\n        in the absence of sufficiently precise clock synchronization.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx.\n       
%eref        mefSoamDmCurrentStatsFrameDelayForwardMin [MEF SOAM-PM] R67, R101
%eunits      mefSoamDmCurrentStatsFrameDelayForwardMax microseconds
%edes        mefSoamDmCurrentStatsFrameDelayForwardMax This object contains the maximum one-way frame delay\n        in the forward direction calculated by this MEP for this\n        Measurement Interval. The value of this object may not be accurate\n        in the absence of sufficiently precise clock synchronization.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx.\n       
%eref        mefSoamDmCurrentStatsFrameDelayForwardMax [MEF SOAM-PM] R67, R101
%eunits      mefSoamDmCurrentStatsFrameDelayForwardAvg microseconds
%edes        mefSoamDmCurrentStatsFrameDelayForwardAvg This object contains the average one-way frame delay\n        in the forward direction calculated by this MEP for this\n        Measurement Interval. The value of this object may not be accurate\n        in the absence of sufficiently precise clock synchronization.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx.\n       
%eref        mefSoamDmCurrentStatsFrameDelayForwardAvg [MEF SOAM-PM] R67, R101
%eunits      mefSoamDmCurrentStatsFrameDelayBackwardMin microseconds
%edes        mefSoamDmCurrentStatsFrameDelayBackwardMin This object contains the minimum one-way frame delay\n        in the backward direction calculated by this MEP for this\n        Measurement Interval. The value of this object may not be accurate\n        in the absence of sufficiently precise clock synchronization.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmCurrentStatsFrameDelayBackwardMin [MEF SOAM-PM] R67
%eunits      mefSoamDmCurrentStatsFrameDelayBackwardMax microseconds
%edes        mefSoamDmCurrentStatsFrameDelayBackwardMax This object contains the maximum one-way frame delay\n        in the backward direction calculated by this MEP for this\n        Measurement Interval. The value of this object may not be accurate\n        in the absence of sufficiently precise clock synchronization.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmCurrentStatsFrameDelayBackwardMax [MEF SOAM-PM] R67
%eunits      mefSoamDmCurrentStatsFrameDelayBackwardAvg microseconds
%edes        mefSoamDmCurrentStatsFrameDelayBackwardAvg This object contains the average one-way frame delay\n        in the backward direction calculated by this MEP for this\n        Measurement Interval. The value of this object may not be accurate\n        in the absence of sufficiently precise clock synchronization.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmCurrentStatsFrameDelayBackwardAvg [MEF SOAM-PM] R67
%eunits      mefSoamDmCurrentStatsIfdvForwardMin microseconds
%edes        mefSoamDmCurrentStatsIfdvForwardMin This object contains the minimum one-way inter-frame delay\n        interval in the forward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx.\n       
%eref        mefSoamDmCurrentStatsIfdvForwardMin [MEF SOAM-PM] R66, R100
%eunits      mefSoamDmCurrentStatsIfdvForwardMax microseconds
%edes        mefSoamDmCurrentStatsIfdvForwardMax This object contains the maximum one-way inter-frame delay\n        interval in the forward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx.\n       
%eref        mefSoamDmCurrentStatsIfdvForwardMax [MEF SOAM-PM] R66, R100
%eunits      mefSoamDmCurrentStatsIfdvForwardAvg microseconds
%edes        mefSoamDmCurrentStatsIfdvForwardAvg This object contains the average one-way inter-frame delay\n        interval in the forward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx.\n       
%eref        mefSoamDmCurrentStatsIfdvForwardAvg [MEF SOAM-PM] R66, R100
%eunits      mefSoamDmCurrentStatsIfdvBackwardMin microseconds
%edes        mefSoamDmCurrentStatsIfdvBackwardMin This object contains the minimum one-way inter-frame delay\n        interval in the backward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmCurrentStatsIfdvBackwardMin [MEF SOAM-PM] R66
%eunits      mefSoamDmCurrentStatsIfdvBackwardMax microseconds
%edes        mefSoamDmCurrentStatsIfdvBackwardMax This object contains the maximum one-way inter-frame delay\n        interval in the backward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmCurrentStatsIfdvBackwardMax [MEF SOAM-PM] R66
%eunits      mefSoamDmCurrentStatsIfdvBackwardAvg microseconds
%edes        mefSoamDmCurrentStatsIfdvBackwardAvg This object contains the average one-way inter-frame delay\n        interval in the backward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmCurrentStatsIfdvBackwardAvg [MEF SOAM-PM] R66
%eunits      mefSoamDmCurrentStatsIfdvTwoWayMin microseconds
%edes        mefSoamDmCurrentStatsIfdvTwoWayMin This object contains the minimum two-way inter-frame delay\n        interval calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eunits      mefSoamDmCurrentStatsIfdvTwoWayMax microseconds
%edes        mefSoamDmCurrentStatsIfdvTwoWayMax This object contains the maximum two-way inter-frame delay\n        interval calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eunits      mefSoamDmCurrentStatsIfdvTwoWayAvg microseconds
%edes        mefSoamDmCurrentStatsIfdvTwoWayAvg This object contains the average two-way inter-frame delay\n        interval calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eunits      mefSoamDmCurrentStatsFrameDelayRangeForwardMax microseconds
%edes        mefSoamDmCurrentStatsFrameDelayRangeForwardMax This object contains the maximum one-way frame delay range\n        in the forward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx.\n       
%eref        mefSoamDmCurrentStatsFrameDelayRangeForwardMax [MEF SOAM-PM] R66, R100
%eunits      mefSoamDmCurrentStatsFrameDelayRangeForwardAvg microseconds
%edes        mefSoamDmCurrentStatsFrameDelayRangeForwardAvg This object contains the average one-way frame delay range\n        in the forward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx.\n       
%eref        mefSoamDmCurrentStatsFrameDelayRangeForwardAvg [MEF SOAM-PM] R66, R100
%eunits      mefSoamDmCurrentStatsFrameDelayRangeBackwardMax microseconds
%edes        mefSoamDmCurrentStatsFrameDelayRangeBackwardMax This object contains the maximum one-way frame delay range\n        in the backward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmCurrentStatsFrameDelayRangeBackwardMax [MEF SOAM-PM] R66
%eunits      mefSoamDmCurrentStatsFrameDelayRangeBackwardAvg microseconds
%edes        mefSoamDmCurrentStatsFrameDelayRangeBackwardAvg This object contains the average one-way frame delay range\n        in the backward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmCurrentStatsFrameDelayRangeBackwardAvg [MEF SOAM-PM] R66
%eunits      mefSoamDmCurrentStatsFrameDelayRangeTwoWayMax microseconds
%edes        mefSoamDmCurrentStatsFrameDelayRangeTwoWayMax This object contains the maximum two-way frame delay range\n        calculated by this MEP for this Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eunits      mefSoamDmCurrentStatsFrameDelayRangeTwoWayAvg microseconds
%edes        mefSoamDmCurrentStatsFrameDelayRangeTwoWayAvg This object contains the average two-way frame delay range\n        calculated by this MEP for this Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%edes        mefSoamDmCurrentStatsSoamPdusSent This object contains the count of the number of SOAM PDUs sent\n        during this Measurement Interval.\n\n        This object applies when mefSoamDmCfgType is dmDmm or dm1DmTx and\n        is undefined if mefSoamDmCfgType is dm1DmRx. It indicates the\n        number of DMM or 1DM SOAM frames transmitted.\n       
%eref        mefSoamDmCurrentStatsSoamPdusSent [MEF SOAM-PM] R66, R100
%edes        mefSoamDmCurrentStatsSoamPdusReceived This object contains the count of the number of SOAM\n        PDUs received in this Measurement Interval.\n\n        This object indicates the number of DMR and 1DM SOAM frames\n        received. This object applies when mefSoamDmCfgType is dmDmm or\n        dm1DmRx and is undefined if mefSoamDmCfgType is dm1DmTx.\n       
%eref        mefSoamDmCurrentStatsSoamPdusReceived [MEF SOAM-PM] R66, R100
%edes        mefSoamDmCurrentStatsBinsTable This table contains the result bins for the current Measurement\n        Interval in a SOAM Delay Measurement session.\n\n        Each row in the table represents the current bin statistics for a\n        Delay Measurement session for the defined MEP. This table uses six\n        indices. The first three indices are the indices of the Maintenance\n        Domain, MaNet, and MEP tables. The fourth index is the specific DM\n        session on the selected MEP. The fifth index indicates bin type and\n        the sixth indicates the specific bin number.\n\n        A row in this table is created automatically by the SNMP Agent when\n        the Delay Measurement session is configured and the bin counter value\n        is set to 0.\n\n        The objects in this table are ignored if mefSoamDmCfgType is 1DmTx.\n\n        This table applies only if the corresponding bit is set in\n        mefSoamDmCfgMeasurementEnable.\n\n        The objects in this table do not need to be persistent upon reboot\n        or restart of a device.\n       
%eref        mefSoamDmCurrentStatsBinsTable [MEF SOAM-PM] R7, R15, D9
%edes        mefSoamDmCurrentStatsBinsEntry The conceptual row of mefSoamDmCurrentStatsBinsTable
%edes        mefSoamDmCurrentStatsBinsCounter This object contains the count of the number of completed\n        measurements initiated in this Measurement Interval whose value\n        falls within the range specified for this bin (that is, greater\n        than or equal to the measurement boundary for the bin, and\n        (unless the bin is the last bin) less than the measurement\n        boundary for the following bin.\n            
%eref        mefSoamDmCurrentStatsBinsCounter [MEF SOAM-PM] R66, R67, R100, R101
%edes        mefSoamDmHistoryStatsTable This table contains the results for history Measurement\n        Intervals in a SOAM Delay Measurement session.\n\n        Rows of this table are created automatically\n        by the SNMP Agent when the Delay Measurement session is running and a\n        Measurement Interval is completed.\n\n        Each row in the table represents the Measurement Interval history\n        statistics for a Delay Measurement session for the defined MEP. This\n        table uses five indices. The first three indices are the indices of\n        the Maintenance Domain, MaNet, and MEP tables. The fourth index is the\n        specific DM session on the selected MEP. The fifth index is the\n        Measurement Interval.\n\n        At least 32 completed Measurement Intervals are to be supported. 96\n        completed Measurement Intervals are recommended to be supported. If\n        there are at least 32 rows in the table and a new Measurement Interval\n        completes and a new row is to be added to the table, the oldest completed\n        Measurement Interval can be deleted (row deletion). If the measurement\n        interval is other than 15 minutes then a minimum of 8 hours of\n        completed Measurement Intervals are to be supported and 24 hours are\n        recommended to be supported.\n\n        The objects in this table apply regardless of the value of\n        mefSoamDmCfgType unless otherwise specified in the object description.\n        Backward and two-way statistic objects are undefined if mefSoamDmCfgType\n        is dm1DmRx.\n\n        Except for mefSoamDmHistoryStatsIndex, mefSoamDmHistoryStatsEndTime,\n        mefSoamDmHistoryStatsElapsedTime and mefSoamDmHistoryStatsSuspect,\n        each object in this table applies only if the corresponding bit is set in\n        mefSoamDmCfgMeasurementEnable.\n\n        The rows and objects in this table are to be persistent upon reboot\n        or restart of a device.\n       
%eref        mefSoamDmHistoryStatsTable [MEF SOAM-PM] R7, R15, R21, D8, R25
%edes        mefSoamDmHistoryStatsEntry The conceptual row of mefSoamDmHistoryStatsTable
%edes        mefSoamDmHistoryStatsIndex The index for the Measurement Interval within this\n        PM session.\n\n        Measurement Interval indexes are assigned sequentially by\n        the SNMP Agent.  The first Measurement Interval that occurs after\n        the session is started is assigned index 1.\n\n        Referential integrity is necessary, i.e., the index needs to be\n        persistent upon a reboot or restart of a device.  The index\n        is never reused while this session is active until it wraps to zero.\n        The index value keeps increasing up to that time.\n       
%edes        mefSoamDmHistoryStatsEndTime The time that the Measurement Interval ended.\n       
%eref        mefSoamDmHistoryStatsEndTime [MEF SOAM-PM] R23, R66, R100
%edes        mefSoamDmHistoryStatsElapsedTime The length of time that the Measurement Interval ran for,\n        in 0.01 seconds.\n       
%eref        mefSoamDmHistoryStatsElapsedTime [MEF SOAM-PM] R66, R100
%edes        mefSoamDmHistoryStatsSuspect Whether the Measurement Interval has been marked as suspect.\n\n        The object is set to true when there is a discontinuity in the\n        performance measurements during the Measurement Interval.  Conditions\n        for a discontinuity include, but are not limited to the following:\n\n        1 - The local time-of-day clock is adjusted by at least 10 seconds\n        2 - The conducting of a performance measurement is halted before the\n            current Measurement Interval is completed\n        3 - A local test, failure, or reconfiguration that disrupts service\n       
%eref        mefSoamDmHistoryStatsSuspect [MEF SOAM-PM] R39, R40, R41, R42
%eunits      mefSoamDmHistoryStatsFrameDelayTwoWayMin microseconds
%edes        mefSoamDmHistoryStatsFrameDelayTwoWayMin This object contains the minimum two-way frame delay\n        calculated by this MEP for this Measurement Interval.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmHistoryStatsFrameDelayTwoWayMin [MEF SOAM-PM] R66
%eunits      mefSoamDmHistoryStatsFrameDelayTwoWayMax microseconds
%edes        mefSoamDmHistoryStatsFrameDelayTwoWayMax This object contains the maximum two-way frame delay\n        calculated by this MEP for this Measurement Interval.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmHistoryStatsFrameDelayTwoWayMax [MEF SOAM-PM] R66
%eunits      mefSoamDmHistoryStatsFrameDelayTwoWayAvg microseconds
%edes        mefSoamDmHistoryStatsFrameDelayTwoWayAvg This object contains the average two-way frame delay\n        calculated by this MEP for this Measurement Interval.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmHistoryStatsFrameDelayTwoWayAvg [MEF SOAM-PM] R66
%eunits      mefSoamDmHistoryStatsFrameDelayForwardMin microseconds
%edes        mefSoamDmHistoryStatsFrameDelayForwardMin This object contains the minimum one-way frame delay\n        in the forward direction calculated by this MEP for this\n        Measurement Interval. The value of this object may not be accurate\n        in the absence of sufficiently precise clock synchronization.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx.\n       
%eref        mefSoamDmHistoryStatsFrameDelayForwardMin [MEF SOAM-PM] R66, R100
%eunits      mefSoamDmHistoryStatsFrameDelayForwardMax microseconds
%edes        mefSoamDmHistoryStatsFrameDelayForwardMax This object contains the maximum one-way frame delay\n        in the forward direction calculated by this MEP for this\n        Measurement Interval. The value of this object may not be accurate\n        in the absence of sufficiently precise clock synchronization.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx.\n       
%eref        mefSoamDmHistoryStatsFrameDelayForwardMax [MEF SOAM-PM] R66, R100
%eunits      mefSoamDmHistoryStatsFrameDelayForwardAvg microseconds
%edes        mefSoamDmHistoryStatsFrameDelayForwardAvg This object contains the average one-way frame delay\n        in the forward direction calculated by this MEP for this\n        Measurement Interval. The value of this object may not be accurate\n        in the absence of sufficiently precise clock synchronization.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx.\n       
%eref        mefSoamDmHistoryStatsFrameDelayForwardAvg [MEF SOAM-PM] R66, R100
%eunits      mefSoamDmHistoryStatsFrameDelayBackwardMin microseconds
%edes        mefSoamDmHistoryStatsFrameDelayBackwardMin This object contains the minimum one-way frame delay\n        in the backward direction calculated by this MEP for this\n        Measurement Interval. The value of this object may not be accurate\n        in the absence of sufficiently precise clock synchronization.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmHistoryStatsFrameDelayBackwardMin [MEF SOAM-PM] R66
%eunits      mefSoamDmHistoryStatsFrameDelayBackwardMax microseconds
%edes        mefSoamDmHistoryStatsFrameDelayBackwardMax This object contains the maximum one-way frame delay\n        in the backward direction calculated by this MEP for this\n        Measurement Interval. The value of this object may not be accurate\n        in the absence of sufficiently precise clock synchronization.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmHistoryStatsFrameDelayBackwardMax [MEF SOAM-PM] R66
%eunits      mefSoamDmHistoryStatsFrameDelayBackwardAvg microseconds
%edes        mefSoamDmHistoryStatsFrameDelayBackwardAvg This object contains the average one-way frame delay\n        in the backward direction calculated by this MEP for this\n        Measurement Interval. The value of this object may not be accurate\n        in the absence of sufficiently precise clock synchronization.\n\n        This object is undefined is mefSoamDmCfgType is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmHistoryStatsFrameDelayBackwardAvg [MEF SOAM-PM] R66
%eunits      mefSoamDmHistoryStatsIfdvForwardMin microseconds
%edes        mefSoamDmHistoryStatsIfdvForwardMin This object contains the minimum one-way inter-frame delay\n        interval in the forward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx.\n       
%eref        mefSoamDmHistoryStatsIfdvForwardMin [MEF SOAM-PM] R66, R100
%eunits      mefSoamDmHistoryStatsIfdvForwardMax microseconds
%edes        mefSoamDmHistoryStatsIfdvForwardMax This object contains the maximum one-way inter-frame delay\n        interval in the forward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx.\n       
%eref        mefSoamDmHistoryStatsIfdvForwardMax [MEF SOAM-PM] R66, R100
%eunits      mefSoamDmHistoryStatsIfdvForwardAvg microseconds
%edes        mefSoamDmHistoryStatsIfdvForwardAvg This object contains the average one-way inter-frame delay\n        interval in the forward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx.\n       
%eref        mefSoamDmHistoryStatsIfdvForwardAvg [MEF SOAM-PM] R66, R100
%eunits      mefSoamDmHistoryStatsIfdvBackwardMin microseconds
%edes        mefSoamDmHistoryStatsIfdvBackwardMin This object contains the minimum one-way inter-frame delay\n        interval in the backward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmHistoryStatsIfdvBackwardMin [MEF SOAM-PM] R66
%eunits      mefSoamDmHistoryStatsIfdvBackwardMax microseconds
%edes        mefSoamDmHistoryStatsIfdvBackwardMax This object contains the maximum one-way inter-frame delay\n        interval in the backward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmHistoryStatsIfdvBackwardMax [MEF SOAM-PM] R66
%eunits      mefSoamDmHistoryStatsIfdvBackwardAvg microseconds
%edes        mefSoamDmHistoryStatsIfdvBackwardAvg This object contains the average one-way inter-frame delay\n        interval in the backward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmHistoryStatsIfdvBackwardAvg [MEF SOAM-PM] R66
%eunits      mefSoamDmHistoryStatsIfdvTwoWayMin microseconds
%edes        mefSoamDmHistoryStatsIfdvTwoWayMin This object contains the minimum two-way inter-frame delay\n        interval calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eunits      mefSoamDmHistoryStatsIfdvTwoWayMax microseconds
%edes        mefSoamDmHistoryStatsIfdvTwoWayMax This object contains the maximum two-way inter-frame delay\n        interval calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eunits      mefSoamDmHistoryStatsIfdvTwoWayAvg microseconds
%edes        mefSoamDmHistoryStatsIfdvTwoWayAvg This object contains the average two-way inter-frame delay\n        interval calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n      
%eunits      mefSoamDmHistoryStatsFrameDelayRangeForwardMax microseconds
%edes        mefSoamDmHistoryStatsFrameDelayRangeForwardMax This object contains the maximum one-way Frame Delay Range\n        in the forward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx.\n       
%eref        mefSoamDmHistoryStatsFrameDelayRangeForwardMax [MEF SOAM-PM] R66, R100
%eunits      mefSoamDmHistoryStatsFrameDelayRangeForwardAvg microseconds
%edes        mefSoamDmHistoryStatsFrameDelayRangeForwardAvg This object contains the average one-way Frame Delay Range\n        in the forward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx.\n       
%eref        mefSoamDmHistoryStatsFrameDelayRangeForwardAvg [MEF SOAM-PM] R66, R100
%eunits      mefSoamDmHistoryStatsFrameDelayRangeBackwardMax microseconds
%edes        mefSoamDmHistoryStatsFrameDelayRangeBackwardMax This object contains the maximum one-way Frame Delay Range\n        in the backward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmHistoryStatsFrameDelayRangeBackwardMax [MEF SOAM-PM] R66
%eunits      mefSoamDmHistoryStatsFrameDelayRangeBackwardAvg microseconds
%edes        mefSoamDmHistoryStatsFrameDelayRangeBackwardAvg This object contains the average one-way Frame Delay Range\n        in the backward direction calculated by this MEP for this\n        Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eref        mefSoamDmHistoryStatsFrameDelayRangeBackwardAvg [MEF SOAM-PM] R66
%eunits      mefSoamDmHistoryStatsFrameDelayRangeTwoWayMax microseconds
%edes        mefSoamDmHistoryStatsFrameDelayRangeTwoWayMax This object contains the maximum two-way Frame Delay Range\n        calculated by this MEP for this Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n       
%eunits      mefSoamDmHistoryStatsFrameDelayRangeTwoWayAvg microseconds
%edes        mefSoamDmHistoryStatsFrameDelayRangeTwoWayAvg This object contains the average two-way Frame Delay Range\n        calculated by this MEP for this Measurement Interval.\n\n        The value of this object is undefined when mefSoamDmCfgType\n        is dm1DmTx or dm1DmRx.\n      
%edes        mefSoamDmHistoryStatsSoamPdusSent This object contains the count of the number of SOAM PDUs sent\n        during this Measurement Interval.\n\n        This object applies when mefSoamDmCfgType is dmDmm or dm1DmTx and\n        is undefined if mefSoamDmCfgType is dm1DmRx. It indicates the\n        number of DMM or 1DM SOAM frames transmitted.\n       
%eref        mefSoamDmHistoryStatsSoamPdusSent [MEF SOAM-PM] R66, R100
%edes        mefSoamDmHistoryStatsSoamPdusReceived This object contains the count of the number of SOAM\n        PDUs received in this Measurement Interval.\n\n        This object indicates the number of DMR and 1DM SOAM frames\n        received. This object applies when mefSoamDmCfgType is dmDmm or\n        dm1DmRx and is undefined if mefSoamDmCfgType is dm1DmTx.\n       
%eref        mefSoamDmHistoryStatsSoamPdusReceived [MEF SOAM-PM] R66, R100
%edes        mefSoamDmHistoryStatsBinsTable This table contains the result bins for the history Measurement\n        Intervals in a SOAM Delay Measurement session.\n\n        Rows of this table are created automatically\n        by the SNMP Agent when the Delay Measurement session is running and a\n        Measurement Interval is completed.\n\n        Each row in the table represents the Measurement Interval history\n        statistics for a specific bin in a Delay Measurement session for the\n        defined MEP. This table uses seven indices. The first three indices\n        are the indices of the Maintenance Domain, MaNet, and MEP tables. The\n        fourth index is the specific DM session on the selected MEP. The\n        fifth index is the Measurement Interval. The sixth index is the\n        specific bin type. The seventh index is the specific bin number.\n\n        Rows in this table pertaining to a given Measurement Interval are\n        deleted when (and only when) the corresponding row in the\n        mefSoamDmHistoryStatsTable is deleted.\n\n        The objects in this table are ignored if mefSoamDmCfgType is 1DmTx.\n\n        This table applies only if the corresponding bit is set in\n        mefSoamDmCfgMeasurementEnable.\n\n        The objects in this table need to be persistent upon reboot\n        or restart of a device.\n       
%eref        mefSoamDmHistoryStatsBinsTable [MEF SOAM-PM] R7, R15, R21, D8, R66, R67
%edes        mefSoamDmHistoryStatsBinsEntry The conceptual row of mefSoamDmHistoryStatsBinsTable
%edes        mefSoamDmHistoryStatsBinsCounter This object contains the count of the number of completed\n        measurements initiated in this Measurement Interval whose value\n        falls within the range specified for this bin (that is, greater\n        than or equal to the measurement boundary for the bin, and\n        (unless the bin is the last bin) less than the measurement\n        boundary for the following bin.\n       
%eref        mefSoamDmHistoryStatsBinsCounter [MEF SOAM-PM] R66, R67, R100, R101
%edes        mefSoamDmThresholdCfgTable This table contains the list of Delay Measurement threshold configuration\n        values for DM Performance Monitoring.\n\n        The main purpose of the threshold configuration table is to configure\n        threshold alarm notifications indicating that a specific performance\n        metric is not being met.\n\n        Each row in the table represents a Delay Measurement session threshold\n        set for the defined MEP. This table uses five indices. The first three\n        indices are the indices of the Maintenance Domain, MaNet, and MEP tables.\n        The fourth index is the specific DM session on the selected MEP. The\n        fifth index is the specific threshold set number.\n\n        Rows in this table are not created automatically. A row is created in\n        this table to set up a threshold set on a configured MEP that has a\n        configured DM session.\n\n        An NE needs to support at least one threshold set for NE SOAM PM compliance. A\n        second threshold set on the NE is desirable. More than two threshold\n        sets on the NE can be configured if supported on the NE.\n\n        All the objects in the row have a default value that disables the\n        particular threshold measurement. In order to enable a threshold\n        measurement the particular bit in the mefSoamDmThresholdCfgEnable object\n        is to be set to '1' and the selected threshold measurement is to have\n        a threshold value configured. Non-configured threshold measurements\n        are disabled by default.\n\n        The writable objects in this table need to be persistent upon reboot\n        or restart of a device.\n       
%edes        mefSoamDmThresholdCfgEntry The conceptual row of mefSoamDmThresholdCfgTable.
%edes        mefSoamDmThresholdCfgIndex The index of the threshold number for the specific DM\n        threshold entry.\n\n        An index value of '1' is to be supported. Other index values\n        can be supported.\n       
%edes        mefSoamDmThresholdCfgEnable A vector of bits that indicates the type of SOAM DM threshold\n        notifications that are enabled.\n\n        A bit set to '1' enables the specific SOAM DM threshold notification\n        and when the specific counter is enabled and the threshold is crossed a\n        notification is generated.\n\n        A bit set to '0' disables the specific SOAM DM threshold notification.\n\n        If a particular SOAM DM threshold is not supported the BIT value is\n        set to '0'.\n\n        bMefSoamDmMeasuredFrameDelayTwoWayThreshold(0)\n                Enables/disables measured frame two-way delay threshold\n                notification. The notification is sent immediately when the\n                mefSoamDmMeasuredStatsFrameDelayTwoWay value is\n                greater than or equal to threshold value.\n        bMefSoamDmMaxFrameDelayTwoWayThreshold(1)\n                Enables/disables maximum frame two-way delay threshold\n                notification. The notification is sent immediately when the\n                mefSoamDmCurrentStatsFrameDelayTwoWayMax value is\n                greater than or equal to threshold value in a Measurement Interval.\n        bMefSoamDmAvgFrameDelayTwoWayThreshold(2)\n                Enables/disables average frame two-way delay threshold\n                notification. The notification is sent when at the end of a\n                Measurement Interval if the\n                mefSoamDmCurrentStatsFrameDelayTwoWayAvg value is\n                greater than or equal to the threshold value.\n        bMefSoamDmMeasuredIfdvTwoWayThreshold(3)\n                Enables/disables measured frame IFDV two-way threshold\n                notification. The notification is sent immediately when the\n                mefSoamDmMeasuredStatsIfdvTwoWay value is greater\n                than or equal to threshold value.\n        bMefSoamDmMaxIfdvTwoWayThreshold(4)\n                Enables/disables maximum frame IFDV two-way threshold\n                notification. The notification is sent immediately when the\n                mefSoamDmCurrentStatsIfdvTwoWayMax value is greater\n                than or equal to threshold value in a Measurement Interval.\n        bMefSoamDmAvgIfdvTwoWayThreshold(5)\n                Enables/disables average frame IFDV two-way threshold\n                notification. The notification is sent when at the end of a\n                Measurement Interval if the\n                mefSoamDmCurrentStatsIfdvTwoWayAvg value is\n                greater than or equal to the threshold value.\n        bMefSoamDmMaxFrameDelayRangeTwoWayThreshold(6)\n                Enables/disables maximum Frame Delay Range two-way threshold\n                notification. The notification is sent immediately when the\n                mefSoamDmCurrentStatsFrameDelayRangeTwoWayMax value is greater\n                than or equal to threshold value in a Measurement Interval.\n        bMefSoamDmAvgFrameDelayRangeTwoWayThreshold(7)\n                Enables/disables average Frame Delay Range two-way threshold\n                notification. The notification is sent when at the end of a\n                Measurement Interval if the\n                mefSoamDmCurrentStatsFrameDelayRangeTwoWayAvg value is\n                greater than or equal to the threshold value.\n        bMefSoamDmMeasuredFrameDelayForwardThreshold(8)\n                Enables/disables measured forward frame delay threshold\n                notification. The notification is sent immediately when the\n                mefSoamDmMeasuredStatsFrameDelayForward value is\n                greater than or equal to threshold value.\n        bMefSoamDmMaxFrameDelayForwardThreshold(9)\n                Enables/disables maximum forward frame delay threshold\n                notification. The notification is sent immediately when the\n                mefSoamDmCurrentStatsFrameDelayForwardMax value is\n                greater than or equal to threshold value in a Measurement Interval.\n        bMefSoamDmAvgFrameDelayForwardThreshold(10)\n                Enables/disables average forward frame delay threshold\n                notification. The notification is sent when at the end of a\n                Measurement Interval if the\n                mefSoamDmCurrentStatsFrameDelayForwardAvg value is\n                greater than or equal to the threshold value.\n        bMefSoamDmMeasuredIfdvForwardThreshold(11)\n                Enables/disables measured frame IFDV forward threshold\n                notification. The notification is sent immediately when the\n                mefSoamDmMeasuredStatsIfdvForward value is greater\n                than or equal to threshold value.\n        bMefSoamDmMaxIfdvForwardThreshold(12)\n                Enables/disables maximum frame IFDV forward threshold\n                notification. The notification is sent immediately when the\n                mefSoamDmCurrentStatsIfdvForwardMax value is greater\n                than or equal to threshold value in a Measurement Interval.\n        bMefSoamDmAvgIfdvForwardThreshold(13)\n                Enables/disables average frame IFDV forward threshold\n                notification. The notification is sent when at the end of a\n                Measurement Interval if the\n                mefSoamDmCurrentStatsIfdvForwardAvg value is\n                greater than or equal to the threshold value.\n        bMefSoamDmMaxFrameDelayRangeForwardThreshold(14)\n                Enables/disables maximum Frame Delay Range forward threshold\n                notification. The notification is sent immediately when the\n                mefSoamDmCurrentStatsFrameDelayRangeForwardMax value is greater\n                than or equal to threshold value in a Measurement Interval.\n        bMefSoamDmAvgFrameDelayRangeForwardThreshold(15)\n                Enables/disables average Frame Delay Range forward threshold\n                notification. The notification is sent when at the end of a\n                Measurement Interval if the\n                mefSoamDmCurrentStatsFrameDelayRangeForwardAvg value is\n                greater than or equal to the threshold value.\n        bMefSoamDmMeasuredFrameDelayBackwardThreshold(16)\n                Enables/disables measured backward frame delay threshold\n                notification. The notification is sent immediately when the\n                mefSoamDmMeasuredStatsFrameDelayBackward value is\n                greater than or equal to threshold value.\n        bMefSoamDmMaxFrameDelayBackwardThreshold(17)\n                Enables/disables maximum backward frame delay threshold\n                notification. The notification is sent immediately when the\n                mefSoamDmCurrentStatsFrameDelayBackwardMax value is\n                greater than or equal to threshold value in a\n                Measurement Interval.\n        bMefSoamDmAvgFrameDelayBackwardThreshold(18)\n                Enables/disables average backward frame delay threshold\n                notification. The notification is sent when at the end of a\n                Measurement Interval if the\n                mefSoamDmCurrentStatsFrameDelayBackwardAvg value is\n                greater than or equal to the threshold value.\n        bMefSoamDmMeasuredIfdvBackwardThreshold(19)\n                Enables/disables measured frame IFDV backward threshold\n                notification. The notification is sent immediately when the\n                mefSoamDmMeasuredStatsIfdvBackward value is greater\n                than or equal to threshold value.\n        bMefSoamDmMaxIfdvBackwardThreshold(20)\n                Enables/disables maximum frame IFDV backward threshold\n                notification. The notification is sent immediately when the\n                mefSoamDmCurrentStatsIfdvBackwardMax value is greater\n                than or equal to threshold value in a Measurement Interval.\n        bMefSoamDmAvgIfdvBackwardThreshold(21)\n                Enables/disables average frame IFDV backward threshold\n                notification. The notification is sent when at the end of a\n                Measurement Interval if the\n                mefSoamDmCurrentStatsIfdvBackwardAvg value is greater\n                than or equal to the threshold value.\n        bMefSoamDmMaxFrameDelayRangeBackwardThreshold(22)\n                Enables/disables maximum Frame Delay Range backward threshold\n                notification. The notification is sent immediately when the\n                mefSoamDmCurrentStatsFrameDelayRangeBackwardMax value is greater\n                than or equal to threshold value in a Measurement Interval.\n        bMefSoamDmAvgFrameDelayRangeBackwardThreshold(23)\n                Enables/disables average Frame Delay Range backward threshold\n                notification. The notification is sent when at the end of a\n                Measurement Interval if the\n                mefSoamDmCurrentStatsFrameDelayRangeBackwardAvg value is greater\n                than or equal to the threshold value.\n       
%eunits      mefSoamDmThresholdCfgMeasuredFrameDelayTwoWayThreshold microseconds
%edes        mefSoamDmThresholdCfgMeasuredFrameDelayTwoWayThreshold This object is used to set the measurement two-way delay threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgMaxFrameDelayTwoWayThreshold microseconds
%edes        mefSoamDmThresholdCfgMaxFrameDelayTwoWayThreshold This object is used to set the maximum two-way delay threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgAvgFrameDelayTwoWayThreshold microseconds
%edes        mefSoamDmThresholdCfgAvgFrameDelayTwoWayThreshold This object is used to set the average two-way delay threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgMeasuredIfdvTwoWayThreshold microseconds
%edes        mefSoamDmThresholdCfgMeasuredIfdvTwoWayThreshold This object is used to set the measurement two-way IFDV threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgMaxIfdvTwoWayThreshold microseconds
%edes        mefSoamDmThresholdCfgMaxIfdvTwoWayThreshold This object is used to set the maximum two-way IFDV threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgAvgIfdvTwoWayThreshold microseconds
%edes        mefSoamDmThresholdCfgAvgIfdvTwoWayThreshold This object is used to set the average two-way IFDV threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgMaxFrameDelayRangeTwoWayThreshold microseconds
%edes        mefSoamDmThresholdCfgMaxFrameDelayRangeTwoWayThreshold This object is used to set the maximum two-way Frame Delay Range threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgAvgFrameDelayRangeTwoWayThreshold microseconds
%edes        mefSoamDmThresholdCfgAvgFrameDelayRangeTwoWayThreshold This object is used to set the average two-way Frame Delay Range threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgMeasuredFrameDelayForwardThreshold microseconds
%edes        mefSoamDmThresholdCfgMeasuredFrameDelayForwardThreshold This object is used to set the measurement forward delay threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgMaxFrameDelayForwardThreshold microseconds
%edes        mefSoamDmThresholdCfgMaxFrameDelayForwardThreshold This object is used to set the maximum forward delay threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgAvgFrameDelayForwardThreshold microseconds
%edes        mefSoamDmThresholdCfgAvgFrameDelayForwardThreshold This object is used to set the average forward delay threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgMeasuredIfdvForwardThreshold microseconds
%edes        mefSoamDmThresholdCfgMeasuredIfdvForwardThreshold This object is used to set the measurement IFDV threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgMaxIfdvForwardThreshold microseconds
%edes        mefSoamDmThresholdCfgMaxIfdvForwardThreshold This object is used to set the maximum IFDV threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgAvgIfdvForwardThreshold microseconds
%edes        mefSoamDmThresholdCfgAvgIfdvForwardThreshold This object is used to set the average IFDV threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgMaxFrameDelayRangeForwardThreshold microseconds
%edes        mefSoamDmThresholdCfgMaxFrameDelayRangeForwardThreshold This object is used to set the maximum Frame Delay Range threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgAvgFrameDelayRangeForwardThreshold microseconds
%edes        mefSoamDmThresholdCfgAvgFrameDelayRangeForwardThreshold This object is used to set the average Frame Delay Range threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgMeasuredFrameDelayBackwardThreshold microseconds
%edes        mefSoamDmThresholdCfgMeasuredFrameDelayBackwardThreshold This object is used to set the measurement backward delay threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgMaxFrameDelayBackwardThreshold microseconds
%edes        mefSoamDmThresholdCfgMaxFrameDelayBackwardThreshold This object is used to set the maximum backward delay threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgAvgFrameDelayBackwardThreshold microseconds
%edes        mefSoamDmThresholdCfgAvgFrameDelayBackwardThreshold This object is used to set the average backward delay threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgMeasuredIfdvBackwardThreshold microseconds
%edes        mefSoamDmThresholdCfgMeasuredIfdvBackwardThreshold This object is used to set the measurement backward IFDV threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgMaxIfdvBackwardThreshold microseconds
%edes        mefSoamDmThresholdCfgMaxIfdvBackwardThreshold This object is used to set the maximum backward IFDV threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgAvgIfdvBackwardThreshold microseconds
%edes        mefSoamDmThresholdCfgAvgIfdvBackwardThreshold This object is used to set the average backward IFDV threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgMaxFrameDelayRangeBackwardThreshold microseconds
%edes        mefSoamDmThresholdCfgMaxFrameDelayRangeBackwardThreshold This object is used to set the maximum backward Frame Delay Range threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%eunits      mefSoamDmThresholdCfgAvgFrameDelayRangeBackwardThreshold microseconds
%edes        mefSoamDmThresholdCfgAvgFrameDelayRangeBackwardThreshold This object is used to set the average backward Frame Delay Range threshold\n        value that will be used to determine if a threshold notification is\n        generated.\n       
%edes        mefSoamDmThresholdCfgRowStatus The status of the row.\n\n        The writable columns in a row cannot be changed if the row\n        is active. All columns are to have a valid value before a row\n        can be activated.\n       
%eunits      mefSoamPmNotificationCfgAlarmInterval Seconds
%edes        mefSoamPmNotificationCfgAlarmInterval A value indicating the shortest time interval in seconds between the\n        generation of the same notification type per PM session to the list of\n        notification destinations. An agent generates the first notification\n        of given type for a given PM session immediately. An agent is not to\n        generate a second specific notification of the same type for the same\n        MEP for the same session until the time interval has expired. A value of zero\n        indicates that all notifications are sent immediately upon detection\n        of the condition.\n       
%edes        mefSoamPmNotificationCfgAlarmEnable A vector of bits that indicates whether a specific notification is\n        enabled.\n\n        A bit set to '1' enables the specific notification generation.\n\n        A bit set to '0' disables the specific notification.\n\n        If a particular alarm is not supported the BIT value of the enable/disable\n        is set to '0'.\n\n        bAvailabilityChangeAlarm(0)  enables/disables mefSoamAvailabilityChangeAlarm\n        bLmSessionStartStopAlarm(1)  enables/disables mefSoamLmSessionStartStopAlarm\n        bDmSessionStartStopAlarm(2)  enables/disables mefSoamDmSessionStartStopAlarm\n        bPmThresholdAboveAlarm(3)    enables/disables mefSoamPmThresholdAboveAlarm\n        bPmThresholdSetClearAlarm(4) enables/disables mefSoamPmThresholdSetClearAlarm\n       
%edes        mefSoamPmNotificationObjDateAndTime This object contains the time and date at the time that\n        the notification event is detected, not the time of the notification\n        generation.\n\n        This object is used only for notifications. The mechanism to set and keep\n        current the date and time is not specified.\n       
%edes        mefSoamPmNotificationObjThresholdId The Object Identifier of the object that caused the generation of the\n        notification from the mefSoamLmThresholdEntry or mefSoamDmThresholdEntry.\n\n        This object is only used for the notification.\n       
%edes        mefSoamPmNotificationObjThresholdConfig The configured threshold value of the object that caused the generation\n        of the notification.\n\n        This object is only used for the notification.\n       
%edes        mefSoamPmNotificationObjThresholdValue The measured value of the object at the time of the generation of the\n        Notification, from the mefSoamLmMeasuredStatsTable,\n        mefSoamLmCurrentStatsTable, mefSoamLmCurrentAvailStatsTable,\n        mefSoamDmMeasuredStatsTable or mefSoamDmCurrentStatsTable.\n\n        This object is only used for the notification.\n       
%edes        mefSoamPmNotificationObjSuspect The suspect flag for the current Measurement Interval in which the\n        notification was generated from the mefSoamLmCurrentStatsTable,\n        mefSoamLmCurrentAvailStatsTable, or mefSoamDmCurrentStatsTable.\n\n        This object is only used for the notification.\n       
%edes        mefSoamPmNotificationObjCrossingType The Notification Crossing Type of the object that caused the generation\n        of the notification from the mefSoamLmThresholdEntry or\n        mefSoamDmThresholdEntry.\n\n        aboveAlarm(1)   indicates that the crossing type alarm was an above\n                        threshold\n\n        setAlarm(2)     indicates that the crossing type alarm was a set\n                        threshold\n\n        clearAlarm(3)   indicates that the crossing type alarm was a clear\n                        threshold\n\n        This object is only used for the notification.\n       
%edes        mefSoamPmNotificationObjDestinationMep The MAC address of the Destination MEP associated the notification found\n        in either the mefSoamDmCfgTable or mefSoamLmCfgTable.\n\n        This object is only used for the notification.\n       
%edes        mefSoamPmNotificationObjPriority The CoS priority of the associated notification found\n        in either the mefSoamDmCfgTable or mefSoamLmCfgTable.\n\n        This object is only used for the notification.\n       
%edes        mefSoamPmMepMandatoryGroup Mandatory objects for the Service OAM PM MEP group.
%edes        mefSoamPmMepOptionalGroup Optional objects for the Service OAM PM MEP group.
%edes        mefSoamLmCfgMandatoryGroup Mandatory objects for the Service OAM LM Configuration group.
%edes        mefSoamLmCfgOptionalGroup Optional objects for the Service OAM LM Configuration group.
%edes        mefSoamLmMeasuredStatsMandatoryGroup Mandatory objects for the Service OAM LM Measured Stats group.
%edes        mefSoamLmMeasuredStatsOptionalGroup Optional objects for the Service OAM LM Measured Stats group.
%edes        mefSoamLmCurrentAvailStatsMandatoryGroup Mandatory objects for the Service OAM LM Current Availability group.
%edes        mefSoamLmCurrentAvailStatsOptionalGroup Optional objects for the Service OAM LM Current Availabilty Stats group.
%edes        mefSoamLmCurrentStatsMandatoryGroup Mandatory objects for the Service OAM LM current statistics group.
%edes        mefSoamLmCurrentStatsOptionalGroup Optional objects for the Service OAM LM Current Stats group.
%edes        mefSoamLmHistoryAvailStatsMandatoryGroup Mandatory objects for the Service OAM Availability LM history\n        statistics group.\n       
%edes        mefSoamLmHistoryAvailStatsOptionalGroup Optional objects for the Service OAM Availability LM history\n        statistics group.\n       
%edes        mefSoamLmHistoryStatsMandatoryGroup Mandatory objects for the Service OAM LM history statistics group.
%edes        mefSoamLmHistoryStatsOptionalGroup Optional objects for the Service OAM LM History Stats group.
%edes        mefSoamDmCfgMandatoryGroup Mandatory objects for the Service OAM DM configuration group.
%edes        mefSoamDmCfgOptionalGroup Optional objects for the Service OAM DM Configuration group.
%edes        mefSoamDmCfgMeasBinMandatoryGroup Mandatory objects for the Service OAM DM measurement bin configuration\n        group.
%edes        mefSoamDmMeasuredStatsOptionalGroup Optional objects for the Service OAM DM Measured Stats group.
%edes        mefSoamDmCurrentStatsMandatoryGroup Mandatory objects for the Service OAM DM current statistics group.
%edes        mefSoamDmCurrentStatsOptionalGroup Optional objects for the Service OAM DM current statistics group.
%edes        mefSoamDmCurrentStatsBinsMandatoryGroup Mandatory objects for the Service OAM DM current statistics bin\n        group.
%edes        mefSoamDmHistoryStatsMandatoryGroup Mandatory objects for the Service OAM DM history statistics group.
%edes        mefSoamDmHistoryStatsOptionalGroup Optional objects for the Service OAM DM history statistics group.
%edes        mefSoamDmHistoryStatsBinsMandatoryGroup Mandatory objects for the Service OAM DM history statistics\n        bin group.
%edes        mefSoamLmThresholdMandatoryGroup Mandatory objects for the Service OAM LM threshold group.
%edes        mefSoamLmThresholdOptionalGroup Optional objects for the Service OAM LM Threshold group.
%edes        mefSoamDmThresholdMandatoryGroup Mandatory objects for the Service OAM DM threshold group.
%edes        mefSoamDmThresholdOptionalGroup Optional objects for the Service OAM DM threshold group.
%edes        mefSoamPmNotificationsMandatoryGroup Mandatory notifications for the SOAM PM Notifications group.
%edes        mefSoamPmNotificationsOptionalGroup Optional objects for the Service OAM PM Notifications group.
%edes        mefSoamPmNotificationCfgMandatoryGroup Mandatory objects for the SOAM PM Notification Configuration group.
%edes        mefSoamPmNotificationObjMandatoryGroup Mandatory objects for the SOAM PM Notification Object group.
%edes        mefSoamPmNotificationObjOptionalGroup Optional objects for the Service OAM PM Notifications group.
%edes        libvirtGuestNotif       Guest lifecycle notification.
%edes        libvirtGuestTable       A table of objects that represent active virtual guests on a host.
%edes        libvirtGuestEntry       A row within the table of active virtual guests.
%edes        libvirtGuestUUID        The UUID of the virtual guest.
%edes        libvirtGuestName        Name of active virtual guest.
%edes        libvirtGuestState       Current state of the active guest. This column is writeable, and only\n	these state transitions are allowed to be sed by SNMPSET request:\n	    running -> paused\n	    paused -> running\n	    running -> shutdown\n	A new row can be created with this column set to 'running' or 'paused'\n	or with no value of this column at all ('running' is then assumed).\n	The state transition is not instant, e.g. it can take a while until a\n	virtual machine is shut down and the agent may show the machine as\n	'running' for some time.
%edes        libvirtGuestCpuCount    Number of virtual CPUs the virtual guest uses.
%edes        libvirtGuestMemoryCurrent Current amount of memory (in MiB) used by the virtual guest.
%edes        libvirtGuestMemoryLimit The maximum amount of memory (in MiB) that can be used by the virtual\n	guest.
%edes        libvirtGuestCpuTime     The CPU time used by the virtual guest, in nanoseconds.
%edes        libvirtGuestRowStatus   Status of the virtual guest.\n\n	 A new virtual guest can be activated by setting this column to\n	 'createAndGo'. libvirtGuestState can be specified to 'paused' or\n	 'running' or does not need to be specified at all.\n	 'createAndWait' state is not supported at all.\n	 A virtual guest can be destroyed by setting this column value to\n	 'destroy'.\n	
%edes        libvirtGuestGroup       A collection of objects providing information about active\n	 guests.
%edes        snmpUDPDomain           The SNMP over UDP over IPv4 transport domain.\n            The corresponding transport address is of type\n            SnmpUDPAddress.
%edes        snmpCLNSDomain          The SNMP over CLNS transport domain.\n            The corresponding transport address is of type\n            SnmpOSIAddress.
%edes        snmpCONSDomain          The SNMP over CONS transport domain.\n            The corresponding transport address is of type\n            SnmpOSIAddress.
%edes        snmpDDPDomain           The SNMP over DDP transport domain.  The corresponding\n            transport address is of type SnmpNBPAddress.
%edes        snmpIPXDomain           The SNMP over IPX transport domain.  The corresponding\n            transport address is of type SnmpIPXAddress.
%est                 rfc1157Domain    deprecated
%edes        rfc1157Domain           The transport domain for SNMPv1 over UDP over IPv4.\n            The corresponding transport address is of type\n            SnmpUDPAddress.
%edes        snmpTrapOID             The authoritative identification of the notification\n            currently being sent.  This variable occurs as\n            the second varbind in every SNMPv2-Trap-PDU and\n            InformRequest-PDU.
%edes        snmpTrapEnterprise      The authoritative identification of the enterprise\n            associated with the trap currently being sent.  When an\n            SNMP proxy agent is mapping an RFC1157 Trap-PDU\n            into a SNMPv2-Trap-PDU, this variable occurs as the\n            last varbind.
%edes        coldStart               A coldStart trap signifies that the SNMP entity,\n            supporting a notification originator application, is\n            reinitializing itself and that its configuration may\n            have been altered.
%edes        warmStart               A warmStart trap signifies that the SNMP entity,\n            supporting a notification originator application,\n            is reinitializing itself such that its configuration\n            is unaltered.
%edes        linkDown                A linkDown trap signifies that the SNMP entity, acting in\n            an agent role, has detected that the ifOperStatus object for\n            one of its communication links is about to enter the down\n            state from some other state (but not from the notPresent\n            state).  This other state is indicated by the included value\n            of ifOperStatus.
%edes        linkUp                  A linkUp trap signifies that the SNMP entity, acting in an\n            agent role, has detected that the ifOperStatus object for\n            one of its communication links left the down state and\n            transitioned into some other state (but not into the\n            notPresent state).  This other state is indicated by the\n            included value of ifOperStatus.
%edes        authenticationFailure   An authenticationFailure trap signifies that the SNMP\n             entity has received a protocol message that is not\n             properly authenticated.  While all implementations\n             of SNMP entities MAY be capable of generating this\n             trap, the snmpEnableAuthenTraps object indicates\n             whether this trap will be generated.
%edes        snmpSetSerialNo         An advisory lock used to allow several cooperating\n            command generator applications to coordinate their\n            use of the SNMP set operation.\n\n            This object is used for coarse-grain coordination.\n            To achieve fine-grain coordination, one or more similar\n            objects might be defined within each MIB group, as\n            appropriate.
%edes        snmpSetGroup            A collection of objects which allow several cooperating\n            command generator applications to coordinate their\n            use of the set operation.
%edes        systemGroup             The system group defines objects which are common to all\n            managed systems.
%edes        snmpBasicNotificationsGroup The basic notifications implemented by an SNMP entity\n        supporting command responder applications.
%edes        snmpGroup               A collection of objects providing basic instrumentation\n            and control of an SNMP entity.
%edes        snmpCommunityGroup      A collection of objects providing basic instrumentation\n            of a SNMP entity which supports community-based\n            authentication.
%est                 snmpObsoleteGroup obsolete
%edes        snmpObsoleteGroup       A collection of objects from RFC 1213 made obsolete\n            by this MIB module.
%edes        snmpWarmStartNotificationGroup An additional notification for an SNMP entity supporting\n     command responder applications, if it is able to reinitialize\n     itself such that its configuration is unaltered.
%edes        snmpNotificationGroup   These objects are required for entities\n            which support notification originator applications.
%edes        snmpAuthProtocols       Registration point for standards-track\n                     authentication protocols used in SNMP Management\n                     Frameworks.\n                    
%edes        usmNoAuthProtocol       No Authentication Protocol.
%edes        usmHMACMD5AuthProtocol  The HMAC-MD5-96 Digest Authentication Protocol.
%eref        usmHMACMD5AuthProtocol  - H. Krawczyk, M. Bellare, R. Canetti HMAC:\n                    Keyed-Hashing for Message Authentication,\n                    RFC2104, Feb 1997.\n                  - Rivest, R., Message Digest Algorithm MD5, RFC1321.\n                 
%edes        usmHMACSHAAuthProtocol  The HMAC-SHA-96 Digest Authentication Protocol.
%eref        usmHMACSHAAuthProtocol  - H. Krawczyk, M. Bellare, R. Canetti, HMAC:\n                    Keyed-Hashing for Message Authentication,\n                    RFC2104, Feb 1997.\n                  - Secure Hash Algorithm. NIST FIPS 180-1.\n                 
%edes        usmHMAC128SHA224AuthProtocol The Authentication Protocol\n                usmHMAC128SHA224AuthProtocol uses HMAC-SHA-224 and\n                truncates output to 128 bits.
%eref        usmHMAC128SHA224AuthProtocol - Krawczyk, H., Bellare, M., and R. Canetti,\n                HMAC: Keyed-Hashing for Message Authentication,\n                RFC 2104.\n                - National Institute of Standards and Technology,\n                Secure Hash Standard (SHS), FIPS PUB 180-4, 2012.
%edes        usmHMAC192SHA256AuthProtocol The Authentication Protocol\n                usmHMAC192SHA256AuthProtocol uses HMAC-SHA-256 and\n                truncates output to 192 bits.
%eref        usmHMAC192SHA256AuthProtocol - Krawczyk, H., Bellare, M., and R. Canetti,\n                HMAC: Keyed-Hashing for Message Authentication,\n                RFC 2104.\n                - National Institute of Standards and Technology,\n                Secure Hash Standard (SHS), FIPS PUB 180-4, 2012.
%edes        usmHMAC256SHA384AuthProtocol The Authentication Protocol\n                usmHMAC256SHA384AuthProtocol uses HMAC-SHA-384 and\n                truncates output to 256 bits.
%eref        usmHMAC256SHA384AuthProtocol - Krawczyk, H., Bellare, M., and R. Canetti,\n                HMAC: Keyed-Hashing for Message Authentication,\n                RFC 2104.\n                - National Institute of Standards and Technology,\n                Secure Hash Standard (SHS), FIPS PUB 180-4, 2012.
%edes        usmHMAC384SHA512AuthProtocol The Authentication Protocol\n                usmHMAC384SHA512AuthProtocol uses HMAC-SHA-512 and\n                truncates output to 384 bits.
%eref        usmHMAC384SHA512AuthProtocol - Krawczyk, H., Bellare, M., and R. Canetti,\n                HMAC: Keyed-Hashing for Message Authentication,\n                RFC 2104.\n                - National Institute of Standards and Technology,\n                Secure Hash Standard (SHS), FIPS PUB 180-4, 2012.
%edes        snmpPrivProtocols       Registration point for standards-track privacy\n                     protocols used in SNMP Management Frameworks.\n                    
%edes        usmNoPrivProtocol       No Privacy Protocol.
%edes        usmDESPrivProtocol      The CBC-DES Symmetric Encryption Protocol.
%eref        usmDESPrivProtocol      - Data Encryption Standard, National Institute of\n                    Standards and Technology.  Federal Information\n                    Processing Standard (FIPS) Publication 46-1.\n                    Supersedes FIPS Publication 46,\n                    (January, 1977; reaffirmed January, 1988).\n\n                  - Data Encryption Algorithm, American National\n                    Standards Institute.  ANSI X3.92-1981,\n                    (December, 1980).\n\n                  - DES Modes of Operation, National Institute of\n                    Standards and Technology.  Federal Information\n                    Processing Standard (FIPS) Publication 81,\n                    (December, 1980).\n\n                  - Data Encryption Algorithm - Modes of Operation,\n                    American National Standards Institute.\n                    ANSI X3.106-1983, (May 1983).\n                 
%edes        usmAesCfb128Protocol    The CFB128-AES-128 Privacy Protocol.
%eref        usmAesCfb128Protocol    - Specification for the ADVANCED ENCRYPTION\n                    STANDARD. Federal Information Processing\n                    Standard (FIPS) Publication 197.\n                    (November 2001).\n\n                  - Dworkin, M., NIST Recommendation for Block\n                    Cipher Modes of Operation, Methods and\n                    Techniques. NIST Special Publication 800-38A\n                    (December 2001).\n                 
%edes        snmpEngineID            An SNMP engine's administratively-unique identifier.\n                   
%edes        snmpEngineBoots         The number of times that the SNMP engine has\n                    (re-)initialized itself since snmpEngineID\n                    was last configured.\n                   
%eunits      snmpEngineTime          seconds
%edes        snmpEngineTime          The number of seconds since the value of\n                    the snmpEngineBoots object last changed.\n                    When incrementing this object's value would\n                    cause it to exceed its maximum,\n                    snmpEngineBoots is incremented as if a\n                    re-initialization had occurred, and this\n                    object's value consequently reverts to zero.\n                   
%edes        snmpEngineMaxMessageSize The maximum length in octets of an SNMP message\n                    which this SNMP engine can send or receive and\n                    process, determined as the minimum of the maximum\n                    message size values supported among all of the\n                    transports available to and supported by the engine.\n                   
%edes        snmpEngineGroup         A collection of objects for identifying and\n                    determining the configuration and current timeliness\n                    values of an SNMP engine.\n                   
%edes        snmpUnknownSecurityModels The total number of packets received by the SNMP\n                    engine which were dropped because they referenced a\n                    securityModel that was not known to or supported by\n                    the SNMP engine.\n                   
%edes        snmpInvalidMsgs         The total number of packets received by the SNMP\n                    engine which were dropped because there were invalid\n                    or inconsistent components in the SNMP message.\n                   
%edes        snmpUnknownPDUHandlers  The total number of packets received by the SNMP\n                    engine which were dropped because the PDU contained\n                    in the packet could not be passed to an application\n                    responsible for handling the pduType, e.g. no SNMP\n                    application had registered for the proper\n                    combination of the contextEngineID and the pduType.\n                   
%edes        snmpMPDGroup            A collection of objects providing for remote\n                    monitoring of the SNMP Message Processing and\n                    Dispatching process.\n                   
%edes        snmpTargetSpinLock      This object is used to facilitate modification of table\n            entries in the SNMP-TARGET-MIB module by multiple\n            managers.  In particular, it is useful when modifying\n            the value of the snmpTargetAddrTagList object.\n\n            The procedure for modifying the snmpTargetAddrTagList\n            object is as follows:\n\n                1.  Retrieve the value of snmpTargetSpinLock and\n                    of snmpTargetAddrTagList.\n\n                2.  Generate a new value for snmpTargetAddrTagList.\n\n                3.  Set the value of snmpTargetSpinLock to the\n                    retrieved value, and the value of\n                    snmpTargetAddrTagList to the new value.  If\n                    the set fails for the snmpTargetSpinLock\n                    object, go back to step 1.
%edes        snmpTargetAddrTable     A table of transport addresses to be used in the generation\n            of SNMP messages.
%edes        snmpTargetAddrEntry     A transport address to be used in the generation\n            of SNMP operations.\n\n            Entries in the snmpTargetAddrTable are created and\n            deleted using the snmpTargetAddrRowStatus object.
%edes        snmpTargetAddrName      The locally arbitrary, but unique identifier associated\n            with this snmpTargetAddrEntry.
%edes        snmpTargetAddrTDomain   This object indicates the transport type of the address\n            contained in the snmpTargetAddrTAddress object.
%edes        snmpTargetAddrTAddress  This object contains a transport address.  The format of\n            this address depends on the value of the\n            snmpTargetAddrTDomain object.
%edes        snmpTargetAddrTimeout   This object should reflect the expected maximum round\n            trip time for communicating with the transport address\n            defined by this row.  When a message is sent to this\n            address, and a response (if one is expected) is not\n            received within this time period, an implementation\n            may assume that the response will not be delivered.\n\n            Note that the time interval that an application waits\n            for a response may actually be derived from the value\n            of this object.  The method for deriving the actual time\n            interval is implementation dependent.  One such method\n            is to derive the expected round trip time based on a\n            particular retransmission algorithm and on the number\n            of timeouts which have occurred.  The type of message may\n            also be considered when deriving expected round trip\n            times for retransmissions.  For example, if a message is\n            being sent with a securityLevel that indicates both\n            authentication and privacy, the derived value may be\n            increased to compensate for extra processing time spent\n            during authentication and encryption processing.
%edes        snmpTargetAddrRetryCount This object specifies a default number of retries to be\n            attempted when a response is not received for a generated\n            message.  An application may provide its own retry count,\n            in which case the value of this object is ignored.
%edes        snmpTargetAddrTagList   This object contains a list of tag values which are\n            used to select target addresses for a particular\n            operation.
%edes        snmpTargetAddrParams    The value of this object identifies an entry in the\n            snmpTargetParamsTable.  The identified entry\n            contains SNMP parameters to be used when generating\n            messages to be sent to this transport address.
%edes        snmpTargetAddrStorageType The storage type for this conceptual row.
%edes        snmpTargetAddrRowStatus The status of this conceptual row.\n\n            To create a row in this table, a manager must\n            set this object to either createAndGo(4) or\n            createAndWait(5).\n\n            Until instances of all corresponding columns are\n            appropriately configured, the value of the\n            corresponding instance of the snmpTargetAddrRowStatus\n            column is 'notReady'.\n\n            In particular, a newly created row cannot be made\n            active until the corresponding instances of\n            snmpTargetAddrTDomain, snmpTargetAddrTAddress, and\n            snmpTargetAddrParams have all been set.\n\n            The following objects may not be modified while the\n            value of this object is active(1):\n                - snmpTargetAddrTDomain\n                - snmpTargetAddrTAddress\n            An attempt to set these objects while the value of\n            snmpTargetAddrRowStatus is active(1) will result in\n            an inconsistentValue error.
%edes        snmpTargetParamsTable   A table of SNMP target information to be used\n            in the generation of SNMP messages.
%edes        snmpTargetParamsEntry   A set of SNMP target information.\n\n            Entries in the snmpTargetParamsTable are created and\n            deleted using the snmpTargetParamsRowStatus object.
%edes        snmpTargetParamsName    The locally arbitrary, but unique identifier associated\n            with this snmpTargetParamsEntry.
%edes        snmpTargetParamsMPModel The Message Processing Model to be used when generating\n            SNMP messages using this entry.
%edes        snmpTargetParamsSecurityModel The Security Model to be used when generating SNMP\n             messages using this entry.  An implementation may\n             choose to return an inconsistentValue error if an\n             attempt is made to set this variable to a value\n             for a security model which the implementation does\n             not support.
%edes        snmpTargetParamsSecurityName The securityName which identifies the Principal on\n            whose behalf SNMP messages will be generated using\n            this entry.
%edes        snmpTargetParamsSecurityLevel The Level of Security to be used when generating\n            SNMP messages using this entry.
%edes        snmpTargetParamsStorageType The storage type for this conceptual row.
%edes        snmpTargetParamsRowStatus The status of this conceptual row.\n\n            To create a row in this table, a manager must\n            set this object to either createAndGo(4) or\n            createAndWait(5).\n\n            Until instances of all corresponding columns are\n            appropriately configured, the value of the\n            corresponding instance of the snmpTargetParamsRowStatus\n            column is 'notReady'.\n\n            In particular, a newly created row cannot be made\n            active until the corresponding\n            snmpTargetParamsMPModel,\n            snmpTargetParamsSecurityModel,\n            snmpTargetParamsSecurityName,\n            and snmpTargetParamsSecurityLevel have all been set.\n            The following objects may not be modified while the\n            value of this object is active(1):\n                - snmpTargetParamsMPModel\n                - snmpTargetParamsSecurityModel\n                - snmpTargetParamsSecurityName\n                - snmpTargetParamsSecurityLevel\n            An attempt to set these objects while the value of\n            snmpTargetParamsRowStatus is active(1) will result in\n            an inconsistentValue error.
%edes        snmpUnavailableContexts The total number of packets received by the SNMP\n            engine which were dropped because the context\n            contained in the message was unavailable.
%edes        snmpUnknownContexts     The total number of packets received by the SNMP\n            engine which were dropped because the context\n            contained in the message was unknown.
%edes        snmpTargetBasicGroup    A collection of objects providing basic remote\n            configuration of management targets.
%edes        snmpTargetResponseGroup A collection of objects providing remote configuration\n            of management targets for applications which generate\n            SNMP messages for which a response message would be\n            expected.
%edes        snmpTargetCommandResponderGroup A collection of objects required for command responder\n            applications, used for counting error conditions.
%edes        snmpNotifyTable         This table is used to select management targets which should\n            receive notifications, as well as the type of notification\n            which should be sent to each selected management target.
%edes        snmpNotifyEntry         An entry in this table selects a set of management targets\n            which should receive notifications, as well as the type of\n            notification which should be sent to each selected\n            management target.\n\n            Entries in the snmpNotifyTable are created and\n            deleted using the snmpNotifyRowStatus object.
%edes        snmpNotifyName          The locally arbitrary, but unique identifier associated\n            with this snmpNotifyEntry.
%edes        snmpNotifyTag           This object contains a single tag value which is used\n            to select entries in the snmpTargetAddrTable.  Any entry\n            in the snmpTargetAddrTable which contains a tag value\n            which is equal to the value of an instance of this\n            object is selected.  If this object contains a value\n            of zero length, no entries are selected.
%edes        snmpNotifyType          This object determines the type of notification to\n            be generated for entries in the snmpTargetAddrTable\n            selected by the corresponding instance of\n            snmpNotifyTag.  This value is only used when\n            generating notifications, and is ignored when\n            using the snmpTargetAddrTable for other purposes.\n\n            If the value of this object is trap(1), then any\n            messages generated for selected rows will contain\n            Unconfirmed-Class PDUs.\n\n            If the value of this object is inform(2), then any\n            messages generated for selected rows will contain\n            Confirmed-Class PDUs.\n\n            Note that if an SNMP entity only supports\n            generation of Unconfirmed-Class PDUs (and not\n            Confirmed-Class PDUs), then this object may be\n            read-only.
%edes        snmpNotifyStorageType   The storage type for this conceptual row.
%edes        snmpNotifyRowStatus     The status of this conceptual row.\n\n            To create a row in this table, a manager must\n            set this object to either createAndGo(4) or\n            createAndWait(5).
%edes        snmpNotifyFilterProfileTable This table is used to associate a notification filter\n            profile with a particular set of target parameters.
%edes        snmpNotifyFilterProfileEntry An entry in this table indicates the name of the filter\n            profile to be used when generating notifications using\n            the corresponding entry in the snmpTargetParamsTable.\n\n            Entries in the snmpNotifyFilterProfileTable are created\n            and deleted using the snmpNotifyFilterProfileRowStatus\n            object.
%edes        snmpNotifyFilterProfileName The name of the filter profile to be used when generating\n            notifications using the corresponding entry in the\n            snmpTargetAddrTable.
%edes        snmpNotifyFilterProfileStorType The storage type of this conceptual row.
%edes        snmpNotifyFilterProfileRowStatus The status of this conceptual row.\n\n            To create a row in this table, a manager must\n            set this object to either createAndGo(4) or\n            createAndWait(5).\n\n            Until instances of all corresponding columns are\n            appropriately configured, the value of the\n            corresponding instance of the\n            snmpNotifyFilterProfileRowStatus column is 'notReady'.\n\n            In particular, a newly created row cannot be made\n            active until the corresponding instance of\n            snmpNotifyFilterProfileName has been set.
%edes        snmpNotifyFilterTable   The table of filter profiles.  Filter profiles are used\n            to determine whether particular management targets should\n            receive particular notifications.\n\n            When a notification is generated, it must be compared\n            with the filters associated with each management target\n            which is configured to receive notifications, in order to\n            determine whether it may be sent to each such management\n            target.\n\n            A more complete discussion of notification filtering\n            can be found in section 6. of [RFC2573].
%edes        snmpNotifyFilterEntry   An element of a filter profile.\n\n            Entries in the snmpNotifyFilterTable are created and\n            deleted using the snmpNotifyFilterRowStatus object.
%edes        snmpNotifyFilterSubtree The MIB subtree which, when combined with the corresponding\n            instance of snmpNotifyFilterMask, defines a family of\n            subtrees which are included in or excluded from the\n            filter profile.
%edes        snmpNotifyFilterMask    The bit mask which, in combination with the corresponding\n            instance of snmpNotifyFilterSubtree, defines a family of\n            subtrees which are included in or excluded from the\n            filter profile.\n\n            Each bit of this bit mask corresponds to a\n            sub-identifier of snmpNotifyFilterSubtree, with the\n            most significant bit of the i-th octet of this octet\n            string value (extended if necessary, see below)\n            corresponding to the (8*i - 7)-th sub-identifier, and\n            the least significant bit of the i-th octet of this\n            octet string corresponding to the (8*i)-th\n            sub-identifier, where i is in the range 1 through 16.\n\n            Each bit of this bit mask specifies whether or not\n            the corresponding sub-identifiers must match when\n            determining if an OBJECT IDENTIFIER matches this\n            family of filter subtrees; a '1' indicates that an\n            exact match must occur; a '0' indicates 'wild card',\n            i.e., any sub-identifier value matches.\n\n            Thus, the OBJECT IDENTIFIER X of an object instance\n            is contained in a family of filter subtrees if, for\n            each sub-identifier of the value of\n            snmpNotifyFilterSubtree, either:\n\n              the i-th bit of snmpNotifyFilterMask is 0, or\n\n              the i-th sub-identifier of X is equal to the i-th\n              sub-identifier of the value of\n              snmpNotifyFilterSubtree.\n\n            If the value of this bit mask is M bits long and\n            there are more than M sub-identifiers in the\n            corresponding instance of snmpNotifyFilterSubtree,\n            then the bit mask is extended with 1's to be the\n            required length.\n\n            Note that when the value of this object is the\n            zero-length string, this extension rule results in\n            a mask of all-1's being used (i.e., no 'wild card'),\n            and the family of filter subtrees is the one\n            subtree uniquely identified by the corresponding\n            instance of snmpNotifyFilterSubtree.
%edes        snmpNotifyFilterType    This object indicates whether the family of filter subtrees\n            defined by this entry are included in or excluded from a\n            filter.  A more detailed discussion of the use of this\n            object can be found in section 6. of [RFC2573].
%edes        snmpNotifyFilterStorageType The storage type of this conceptual row.
%edes        snmpNotifyFilterRowStatus The status of this conceptual row.\n\n            To create a row in this table, a manager must\n            set this object to either createAndGo(4) or\n            createAndWait(5).
%edes        snmpNotifyGroup         A collection of objects for selecting which management\n            targets are used for generating notifications, and the\n            type of notification to be generated for each selected\n            management target.
%edes        snmpNotifyFilterGroup   A collection of objects providing remote configuration\n            of notification filters.
%edes        usmStatsUnsupportedSecLevels The total number of packets received by the SNMP\n                 engine which were dropped because they requested a\n                 securityLevel that was unknown to the SNMP engine\n                 or otherwise unavailable.\n                
%edes        usmStatsNotInTimeWindows The total number of packets received by the SNMP\n                 engine which were dropped because they appeared\n                 outside of the authoritative SNMP engine's window.\n                
%edes        usmStatsUnknownUserNames The total number of packets received by the SNMP\n                 engine which were dropped because they referenced a\n                 user that was not known to the SNMP engine.\n                
%edes        usmStatsUnknownEngineIDs The total number of packets received by the SNMP\n                 engine which were dropped because they referenced an\n                 snmpEngineID that was not known to the SNMP engine.\n                
%edes        usmStatsWrongDigests    The total number of packets received by the SNMP\n                 engine which were dropped because they didn't\n                 contain the expected digest value.\n                
%edes        usmStatsDecryptionErrors The total number of packets received by the SNMP\n                 engine which were dropped because they could not be\n                 decrypted.\n                
%edes        usmUserSpinLock         An advisory lock used to allow several cooperating\n                 Command Generator Applications to coordinate their\n                 use of facilities to alter secrets in the\n                 usmUserTable.\n                
%edes        usmUserTable            The table of users configured in the SNMP engine's\n                 Local Configuration Datastore (LCD).\n\n                 To create a new user (i.e., to instantiate a new\n                 conceptual row in this table), it is recommended to\n                 follow this procedure:\n\n                   1)  GET(usmUserSpinLock.0) and save in sValue.\n                   2)  SET(usmUserSpinLock.0=sValue,\n                           usmUserCloneFrom=templateUser,\n                           usmUserStatus=createAndWait)\n                       You should use a template user to clone from\n                       which has the proper auth/priv protocol defined.\n\n                 If the new user is to use privacy:\n\n                   3)  generate the keyChange value based on the secret\n                       privKey of the clone-from user and the secret key\n                       to be used for the new user. Let us call this\n                       pkcValue.\n                   4)  GET(usmUserSpinLock.0) and save in sValue.\n                   5)  SET(usmUserSpinLock.0=sValue,\n                           usmUserPrivKeyChange=pkcValue\n                           usmUserPublic=randomValue1)\n                   6)  GET(usmUserPulic) and check it has randomValue1.\n                       If not, repeat steps 4-6.\n\n                 If the new user will never use privacy:\n\n                   7)  SET(usmUserPrivProtocol=usmNoPrivProtocol)\n\n                 If the new user is to use authentication:\n\n                   8)  generate the keyChange value based on the secret\n                       authKey of the clone-from user and the secret key\n                       to be used for the new user. Let us call this\n                       akcValue.\n                   9)  GET(usmUserSpinLock.0) and save in sValue.\n                   10) SET(usmUserSpinLock.0=sValue,\n                           usmUserAuthKeyChange=akcValue\n                           usmUserPublic=randomValue2)\n                   11) GET(usmUserPulic) and check it has randomValue2.\n                       If not, repeat steps 9-11.\n\n                 If the new user will never use authentication:\n\n                   12) SET(usmUserAuthProtocol=usmNoAuthProtocol)\n\n                 Finally, activate the new user:\n\n                   13) SET(usmUserStatus=active)\n\n                 The new user should now be available and ready to be\n                 used for SNMPv3 communication. Note however that access\n                 to MIB data must be provided via configuration of the\n                 SNMP-VIEW-BASED-ACM-MIB.\n\n                 The use of usmUserSpinlock is to avoid conflicts with\n                 another SNMP command responder application which may\n                 also be acting on the usmUserTable.\n                
%edes        usmUserEntry            A user configured in the SNMP engine's Local\n                 Configuration Datastore (LCD) for the User-based\n                 Security Model.\n                
%edes        usmUserEngineID         An SNMP engine's administratively-unique identifier.\n\n                 In a simple agent, this value is always that agent's\n                 own snmpEngineID value.\n\n                 The value can also take the value of the snmpEngineID\n                 of a remote SNMP engine with which this user can\n                 communicate.\n                
%edes        usmUserName             A human readable string representing the name of\n                 the user.\n\n                 This is the (User-based Security) Model dependent\n                 security ID.\n                
%edes        usmUserSecurityName     A human readable string representing the user in\n                 Security Model independent format.\n\n                 The default transformation of the User-based Security\n                 Model dependent security ID to the securityName and\n                 vice versa is the identity function so that the\n                 securityName is the same as the userName.\n                
%edes        usmUserCloneFrom        A pointer to another conceptual row in this\n                 usmUserTable.  The user in this other conceptual\n                 row is called the clone-from user.\n\n                 When a new user is created (i.e., a new conceptual\n                 row is instantiated in this table), the privacy and\n                 authentication parameters of the new user must be\n                 cloned from its clone-from user. These parameters are:\n                   - authentication protocol (usmUserAuthProtocol)\n                   - privacy protocol (usmUserPrivProtocol)\n                 They will be copied regardless of what the current\n                 value is.\n\n                 Cloning also causes the initial values of the secret\n                 authentication key (authKey) and the secret encryption\n                 key (privKey) of the new user to be set to the same\n                 value as the corresponding secret of the clone-from\n                 user.\n\n                 The first time an instance of this object is set by\n                 a management operation (either at or after its\n                 instantiation), the cloning process is invoked.\n                 Subsequent writes are successful but invoke no\n                 action to be taken by the receiver.\n                 The cloning process fails with an 'inconsistentName'\n                 error if the conceptual row representing the\n                 clone-from user does not exist or is not in an active\n                 state when the cloning process is invoked.\n\n                 When this object is read, the ZeroDotZero OID\n                 is returned.\n                
%edes        usmUserAuthProtocol     An indication of whether messages sent on behalf of\n                 this user to/from the SNMP engine identified by\n                 usmUserEngineID, can be authenticated, and if so,\n                 the type of authentication protocol which is used.\n\n                 An instance of this object is created concurrently\n                 with the creation of any other object instance for\n                 the same user (i.e., as part of the processing of\n                 the set operation which creates the first object\n                 instance in the same conceptual row).\n\n                 If an initial set operation (i.e. at row creation time)\n                 tries to set a value for an unknown or unsupported\n                 protocol, then a 'wrongValue' error must be returned.\n\n                 The value will be overwritten/set when a set operation\n                 is performed on the corresponding instance of\n                 usmUserCloneFrom.\n\n                 Once instantiated, the value of such an instance of\n                 this object can only be changed via a set operation to\n                 the value of the usmNoAuthProtocol.\n\n                 If a set operation tries to change the value of an\n                 existing instance of this object to any value other\n                 than usmNoAuthProtocol, then an 'inconsistentValue'\n                 error must be returned.\n\n                 If a set operation tries to set the value to the\n                 usmNoAuthProtocol while the usmUserPrivProtocol value\n                 in the same row is not equal to usmNoPrivProtocol,\n                 then an 'inconsistentValue' error must be returned.\n                 That means that an SNMP command generator application\n                 must first ensure that the usmUserPrivProtocol is set\n                 to the usmNoPrivProtocol value before it can set\n                 the usmUserAuthProtocol value to usmNoAuthProtocol.\n                
%edes        usmUserAuthKeyChange    An object, which when modified, causes the secret\n                 authentication key used for messages sent on behalf\n                 of this user to/from the SNMP engine identified by\n                 usmUserEngineID, to be modified via a one-way\n                 function.\n\n                 The associated protocol is the usmUserAuthProtocol.\n                 The associated secret key is the user's secret\n                 authentication key (authKey). The associated hash\n                 algorithm is the algorithm used by the user's\n                 usmUserAuthProtocol.\n\n                 When creating a new user, it is an 'inconsistentName'\n                 error for a set operation to refer to this object\n                 unless it is previously or concurrently initialized\n                 through a set operation on the corresponding instance\n                 of usmUserCloneFrom.\n\n                 When the value of the corresponding usmUserAuthProtocol\n                 is usmNoAuthProtocol, then a set is successful, but\n                 effectively is a no-op.\n\n                 When this object is read, the zero-length (empty)\n                 string is returned.\n\n                 The recommended way to do a key change is as follows:\n\n                   1) GET(usmUserSpinLock.0) and save in sValue.\n                   2) generate the keyChange value based on the old\n                      (existing) secret key and the new secret key,\n                      let us call this kcValue.\n\n                 If you do the key change on behalf of another user:\n\n                   3) SET(usmUserSpinLock.0=sValue,\n                          usmUserAuthKeyChange=kcValue\n                          usmUserPublic=randomValue)\n\n                 If you do the key change for yourself:\n\n                   4) SET(usmUserSpinLock.0=sValue,\n                          usmUserOwnAuthKeyChange=kcValue\n                          usmUserPublic=randomValue)\n\n                 If you get a response with error-status of noError,\n                 then the SET succeeded and the new key is active.\n                 If you do not get a response, then you can issue a\n                 GET(usmUserPublic) and check if the value is equal\n                 to the randomValue you did send in the SET. If so, then\n                 the key change succeeded and the new key is active\n                 (probably the response got lost). If not, then the SET\n                 request probably never reached the target and so you\n                 can start over with the procedure above.\n                
%edes        usmUserOwnAuthKeyChange Behaves exactly as usmUserAuthKeyChange, with one\n                 notable difference: in order for the set operation\n                 to succeed, the usmUserName of the operation\n                 requester must match the usmUserName that\n                 indexes the row which is targeted by this\n                 operation.\n                 In addition, the USM security model must be\n                 used for this operation.\n\n                 The idea here is that access to this column can be\n                 public, since it will only allow a user to change\n                 his own secret authentication key (authKey).\n                 Note that this can only be done once the row is active.\n\n                 When a set is received and the usmUserName of the\n                 requester is not the same as the umsUserName that\n                 indexes the row which is targeted by this operation,\n                 then a 'noAccess' error must be returned.\n\n                 When a set is received and the security model in use\n                 is not USM, then a 'noAccess' error must be returned.\n                
%edes        usmUserPrivProtocol     An indication of whether messages sent on behalf of\n                 this user to/from the SNMP engine identified by\n                 usmUserEngineID, can be protected from disclosure,\n                 and if so, the type of privacy protocol which is used.\n\n                 An instance of this object is created concurrently\n                 with the creation of any other object instance for\n                 the same user (i.e., as part of the processing of\n                 the set operation which creates the first object\n                 instance in the same conceptual row).\n\n                 If an initial set operation (i.e. at row creation time)\n                 tries to set a value for an unknown or unsupported\n                 protocol, then a 'wrongValue' error must be returned.\n\n                 The value will be overwritten/set when a set operation\n                 is performed on the corresponding instance of\n                 usmUserCloneFrom.\n\n                 Once instantiated, the value of such an instance of\n                 this object can only be changed via a set operation to\n                 the value of the usmNoPrivProtocol.\n\n                 If a set operation tries to change the value of an\n                 existing instance of this object to any value other\n                 than usmNoPrivProtocol, then an 'inconsistentValue'\n                 error must be returned.\n\n                 Note that if any privacy protocol is used, then you\n                 must also use an authentication protocol. In other\n                 words, if usmUserPrivProtocol is set to anything else\n                 than usmNoPrivProtocol, then the corresponding instance\n                 of usmUserAuthProtocol cannot have a value of\n                 usmNoAuthProtocol. If it does, then an\n                 'inconsistentValue' error must be returned.\n                
%edes        usmUserPrivKeyChange    An object, which when modified, causes the secret\n                 encryption key used for messages sent on behalf\n                 of this user to/from the SNMP engine identified by\n                 usmUserEngineID, to be modified via a one-way\n                 function.\n\n                 The associated protocol is the usmUserPrivProtocol.\n                 The associated secret key is the user's secret\n                 privacy key (privKey). The associated hash\n                 algorithm is the algorithm used by the user's\n                 usmUserAuthProtocol.\n\n                 When creating a new user, it is an 'inconsistentName'\n                 error for a set operation to refer to this object\n                 unless it is previously or concurrently initialized\n                 through a set operation on the corresponding instance\n                 of usmUserCloneFrom.\n\n                 When the value of the corresponding usmUserPrivProtocol\n                 is usmNoPrivProtocol, then a set is successful, but\n                 effectively is a no-op.\n\n                 When this object is read, the zero-length (empty)\n                 string is returned.\n                 See the description clause of usmUserAuthKeyChange for\n                 a recommended procedure to do a key change.\n                
%edes        usmUserOwnPrivKeyChange Behaves exactly as usmUserPrivKeyChange, with one\n                 notable difference: in order for the Set operation\n                 to succeed, the usmUserName of the operation\n                 requester must match the usmUserName that indexes\n                 the row which is targeted by this operation.\n                 In addition, the USM security model must be\n                 used for this operation.\n\n                 The idea here is that access to this column can be\n                 public, since it will only allow a user to change\n                 his own secret privacy key (privKey).\n                 Note that this can only be done once the row is active.\n\n                 When a set is received and the usmUserName of the\n                 requester is not the same as the umsUserName that\n                 indexes the row which is targeted by this operation,\n                 then a 'noAccess' error must be returned.\n\n                 When a set is received and the security model in use\n                 is not USM, then a 'noAccess' error must be returned.\n                
%edes        usmUserPublic           A publicly-readable value which can be written as part\n                 of the procedure for changing a user's secret\n                 authentication and/or privacy key, and later read to\n                 determine whether the change of the secret was\n                 effected.\n                
%edes        usmUserStorageType      The storage type for this conceptual row.\n\n                 Conceptual rows having the value 'permanent' must\n                 allow write-access at a minimum to:\n\n                 - usmUserAuthKeyChange, usmUserOwnAuthKeyChange\n                   and usmUserPublic for a user who employs\n                   authentication, and\n                 - usmUserPrivKeyChange, usmUserOwnPrivKeyChange\n                   and usmUserPublic for a user who employs\n                   privacy.\n\n                 Note that any user who employs authentication or\n                 privacy must allow its secret(s) to be updated and\n                 thus cannot be 'readOnly'.\n\n                 If an initial set operation tries to set the value to\n                 'readOnly' for a user who employs authentication or\n                 privacy, then an 'inconsistentValue' error must be\n                 returned.  Note that if the value has been previously\n                 set (implicit or explicit) to any value, then the rules\n                 as defined in the StorageType Textual Convention apply.\n\n                 It is an implementation issue to decide if a SET for\n                 a readOnly or permanent row is accepted at all. In some\n                 contexts this may make sense, in others it may not. If\n                 a SET for a readOnly or permanent row is not accepted\n                 at all, then a 'wrongValue' error must be returned.\n                
%edes        usmUserStatus           The status of this conceptual row.\n\n                 Until instances of all corresponding columns are\n                 appropriately configured, the value of the\n                 corresponding instance of the usmUserStatus column\n                 is 'notReady'.\n\n                 In particular, a newly created row for a user who\n                 employs authentication, cannot be made active until the\n                 corresponding usmUserCloneFrom and usmUserAuthKeyChange\n                 have been set.\n\n                 Further, a newly created row for a user who also\n                 employs privacy, cannot be made active until the\n                 usmUserPrivKeyChange has been set.\n\n                 The RowStatus TC [RFC2579] requires that this\n                 DESCRIPTION clause states under which circumstances\n                 other objects in this row can be modified:\n\n                 The value of this object has no effect on whether\n                 other objects in this conceptual row can be modified,\n                 except for usmUserOwnAuthKeyChange and\n                 usmUserOwnPrivKeyChange. For these 2 objects, the\n                 value of usmUserStatus MUST be active.\n                
%edes        usmMIBBasicGroup        A collection of objects providing for configuration\n                 of an SNMP engine which implements the SNMP\n                 User-based Security Model.\n                
%edes        vacmContextTable        The table of locally available contexts.\n\n                 This table provides information to SNMP Command\n                 Generator applications so that they can properly\n                 configure the vacmAccessTable to control access to\n                 all contexts at the SNMP entity.\n\n                 This table may change dynamically if the SNMP entity\n                 allows that contexts are added/deleted dynamically\n                 (for instance when its configuration changes). Such\n                 changes would happen only if the management\n                 instrumentation at that SNMP entity recognizes more\n                 (or fewer) contexts.\n\n                 The presence of entries in this table and of entries\n                 in the vacmAccessTable are independent.  That is, a\n                 context identified by an entry in this table is not\n                 necessarily referenced by any entries in the\n                 vacmAccessTable; and the context(s) referenced by an\n                 entry in the vacmAccessTable does not necessarily\n                 currently exist and thus need not be identified by an\n                 entry in this table.\n\n                 This table must be made accessible via the default\n                 context so that Command Responder applications have\n                 a standard way of retrieving the information.\n\n                 This table is read-only. It cannot be configured via\n                 SNMP.\n                
%edes        vacmContextEntry        Information about a particular context.
%edes        vacmContextName         A human readable name identifying a particular\n                 context at a particular SNMP entity.\n\n                 The empty contextName (zero length) represents the\n                 default context.\n                
%edes        vacmSecurityToGroupTable This table maps a combination of securityModel and\n                 securityName into a groupName which is used to define\n                 an access control policy for a group of principals.\n                
%edes        vacmSecurityToGroupEntry An entry in this table maps the combination of a\n                 securityModel and securityName into a groupName.\n                
%edes        vacmSecurityModel       The Security Model, by which the vacmSecurityName\n                 referenced by this entry is provided.\n\n                 Note, this object may not take the 'any' (0) value.\n                
%edes        vacmSecurityName        The securityName for the principal, represented in a\n                 Security Model independent format, which is mapped by\n                 this entry to a groupName.\n                
%edes        vacmGroupName           The name of the group to which this entry (e.g., the\n                 combination of securityModel and securityName)\n                 belongs.\n\n                 This groupName is used as index into the\n                 vacmAccessTable to select an access control policy.\n                 However, a value in this table does not imply that an\n                 instance with the value exists in table vacmAccesTable.\n                
%edes        vacmSecurityToGroupStorageType The storage type for this conceptual row.\n                 Conceptual rows having the value 'permanent' need not\n                 allow write-access to any columnar objects in the row.\n                
%edes        vacmSecurityToGroupStatus The status of this conceptual row.\n\n                 Until instances of all corresponding columns are\n                 appropriately configured, the value of the\n                 corresponding instance of the vacmSecurityToGroupStatus\n                 column is 'notReady'.\n\n                 In particular, a newly created row cannot be made\n                 active until a value has been set for vacmGroupName.\n\n                 The  RowStatus TC [RFC2579] requires that this\n                 DESCRIPTION clause states under which circumstances\n                 other objects in this row can be modified:\n\n                 The value of this object has no effect on whether\n                 other objects in this conceptual row can be modified.\n                
%edes        vacmAccessTable         The table of access rights for groups.\n\n                 Each entry is indexed by a groupName, a contextPrefix,\n                 a securityModel and a securityLevel.  To determine\n                 whether access is allowed, one entry from this table\n                 needs to be selected and the proper viewName from that\n                 entry must be used for access control checking.\n\n                 To select the proper entry, follow these steps:\n\n                 1) the set of possible matches is formed by the\n                    intersection of the following sets of entries:\n                      the set of entries with identical vacmGroupName\n                      the union of these two sets:\n                       - the set with identical vacmAccessContextPrefix\n                       - the set of entries with vacmAccessContextMatch\n                         value of 'prefix' and matching\n                         vacmAccessContextPrefix\n                      intersected with the union of these two sets:\n                       - the set of entries with identical\n                         vacmSecurityModel\n                       - the set of entries with vacmSecurityModel\n                         value of 'any'\n                      intersected with the set of entries with\n                      vacmAccessSecurityLevel value less than or equal\n                      to the requested securityLevel\n\n                 2) if this set has only one member, we're done\n                    otherwise, it comes down to deciding how to weight\n                    the preferences between ContextPrefixes,\n                    SecurityModels, and SecurityLevels as follows:\n                    a) if the subset of entries with securityModel\n                       matching the securityModel in the message is\n                       not empty, then discard the rest.\n                    b) if the subset of entries with\n                       vacmAccessContextPrefix matching the contextName\n                       in the message is not empty,\n                       then discard the rest\n                    c) discard all entries with ContextPrefixes shorter\n                       than the longest one remaining in the set\n                    d) select the entry with the highest securityLevel\n\n                 Please note that for securityLevel noAuthNoPriv, all\n                 groups are really equivalent since the assumption that\n                 the securityName has been authenticated does not hold.\n                
%edes        vacmAccessEntry         An access right configured in the Local Configuration\n                 Datastore (LCD) authorizing access to an SNMP context.\n\n                 Entries in this table can use an instance value for\n                 object vacmGroupName even if no entry in table\n                 vacmAccessSecurityToGroupTable has a corresponding\n                 value for object vacmGroupName.\n                
%edes        vacmAccessContextPrefix In order to gain the access rights allowed by this\n                 conceptual row, a contextName must match exactly\n                 (if the value of vacmAccessContextMatch is 'exact')\n                 or partially (if the value of vacmAccessContextMatch\n                 is 'prefix') to the value of the instance of this\n                 object.\n                
%edes        vacmAccessSecurityModel In order to gain the access rights allowed by this\n                 conceptual row, this securityModel must be in use.\n                
%edes        vacmAccessSecurityLevel The minimum level of security required in order to\n                 gain the access rights allowed by this conceptual\n                 row.  A securityLevel of noAuthNoPriv is less than\n                 authNoPriv which in turn is less than authPriv.\n\n                 If multiple entries are equally indexed except for\n                 this vacmAccessSecurityLevel index, then the entry\n                 which has the highest value for\n                 vacmAccessSecurityLevel is selected.\n                
%edes        vacmAccessContextMatch  If the value of this object is exact(1), then all\n                 rows where the contextName exactly matches\n                 vacmAccessContextPrefix are selected.\n\n                 If the value of this object is prefix(2), then all\n                 rows where the contextName whose starting octets\n                 exactly match vacmAccessContextPrefix are selected.\n                 This allows for a simple form of wildcarding.\n                
%edes        vacmAccessReadViewName  The value of an instance of this object identifies\n                 the MIB view of the SNMP context to which this\n                 conceptual row authorizes read access.\n\n                 The identified MIB view is that one for which the\n                 vacmViewTreeFamilyViewName has the same value as the\n                 instance of this object; if the value is the empty\n                 string or if there is no active MIB view having this\n                 value of vacmViewTreeFamilyViewName, then no access\n                 is granted.\n                
%edes        vacmAccessWriteViewName The value of an instance of this object identifies\n                 the MIB view of the SNMP context to which this\n                 conceptual row authorizes write access.\n\n                 The identified MIB view is that one for which the\n                 vacmViewTreeFamilyViewName has the same value as the\n                 instance of this object; if the value is the empty\n                 string or if there is no active MIB view having this\n                 value of vacmViewTreeFamilyViewName, then no access\n                 is granted.\n                
%edes        vacmAccessNotifyViewName The value of an instance of this object identifies\n                 the MIB view of the SNMP context to which this\n                 conceptual row authorizes access for notifications.\n\n                 The identified MIB view is that one for which the\n                 vacmViewTreeFamilyViewName has the same value as the\n                 instance of this object; if the value is the empty\n                 string or if there is no active MIB view having this\n                 value of vacmViewTreeFamilyViewName, then no access\n                 is granted.\n                
%edes        vacmAccessStorageType   The storage type for this conceptual row.\n\n                 Conceptual rows having the value 'permanent' need not\n                 allow write-access to any columnar objects in the row.\n                
%edes        vacmAccessStatus        The status of this conceptual row.\n                 The  RowStatus TC [RFC2579] requires that this\n                 DESCRIPTION clause states under which circumstances\n                 other objects in this row can be modified:\n\n                 The value of this object has no effect on whether\n                 other objects in this conceptual row can be modified.\n                
%edes        vacmViewSpinLock        An advisory lock used to allow cooperating SNMP\n                 Command Generator applications to coordinate their\n                 use of the Set operation in creating or modifying\n                 views.\n\n                 When creating a new view or altering an existing\n                 view, it is important to understand the potential\n                 interactions with other uses of the view.  The\n                 vacmViewSpinLock should be retrieved.  The name of\n                 the view to be created should be determined to be\n                 unique by the SNMP Command Generator application by\n                 consulting the vacmViewTreeFamilyTable.  Finally,\n                 the named view may be created (Set), including the\n                 advisory lock.\n                 If another SNMP Command Generator application has\n                 altered the views in the meantime, then the spin\n                 lock's value will have changed, and so this creation\n                 will fail because it will specify the wrong value for\n                 the spin lock.\n\n                 Since this is an advisory lock, the use of this lock\n                 is not enforced.\n                
%edes        vacmViewTreeFamilyTable Locally held information about families of subtrees\n                 within MIB views.\n\n                 Each MIB view is defined by two sets of view subtrees:\n                   - the included view subtrees, and\n                   - the excluded view subtrees.\n                 Every such view subtree, both the included and the\n                 excluded ones, is defined in this table.\n\n                 To determine if a particular object instance is in\n                 a particular MIB view, compare the object instance's\n                 OBJECT IDENTIFIER with each of the MIB view's active\n                 entries in this table.  If none match, then the\n                 object instance is not in the MIB view.  If one or\n                 more match, then the object instance is included in,\n                 or excluded from, the MIB view according to the\n                 value of vacmViewTreeFamilyType in the entry whose\n                 value of vacmViewTreeFamilySubtree has the most\n                 sub-identifiers.  If multiple entries match and have\n                 the same number of sub-identifiers (when wildcarding\n                 is specified with the value of vacmViewTreeFamilyMask),\n                 then the lexicographically greatest instance of\n                 vacmViewTreeFamilyType determines the inclusion or\n                 exclusion.\n\n                 An object instance's OBJECT IDENTIFIER X matches an\n                 active entry in this table when the number of\n                 sub-identifiers in X is at least as many as in the\n                 value of vacmViewTreeFamilySubtree for the entry,\n                 and each sub-identifier in the value of\n                 vacmViewTreeFamilySubtree matches its corresponding\n                 sub-identifier in X.  Two sub-identifiers match\n                 either if the corresponding bit of the value of\n                 vacmViewTreeFamilyMask for the entry is zero (the\n                 'wild card' value), or if they are equal.\n\n                 A 'family' of subtrees is the set of subtrees defined\n                 by a particular combination of values of\n                 vacmViewTreeFamilySubtree and vacmViewTreeFamilyMask.\n                 In the case where no 'wild card' is defined in the\n                 vacmViewTreeFamilyMask, the family of subtrees reduces\n                 to a single subtree.\n\n                 When creating or changing MIB views, an SNMP Command\n                 Generator application should utilize the\n                 vacmViewSpinLock to try to avoid collisions. See\n                 DESCRIPTION clause of vacmViewSpinLock.\n\n                 When creating MIB views, it is strongly advised that\n                 first the 'excluded' vacmViewTreeFamilyEntries are\n                 created and then the 'included' entries.\n\n                 When deleting MIB views, it is strongly advised that\n                 first the 'included' vacmViewTreeFamilyEntries are\n                 deleted and then the 'excluded' entries.\n\n                 If a create for an entry for instance-level access\n                 control is received and the implementation does not\n                 support instance-level granularity, then an\n                 inconsistentName error must be returned.\n                
%edes        vacmViewTreeFamilyEntry Information on a particular family of view subtrees\n                 included in or excluded from a particular SNMP\n                 context's MIB view.\n\n                 Implementations must not restrict the number of\n                 families of view subtrees for a given MIB view,\n                 except as dictated by resource constraints on the\n                 overall number of entries in the\n                 vacmViewTreeFamilyTable.\n\n                 If no conceptual rows exist in this table for a given\n                 MIB view (viewName), that view may be thought of as\n                 consisting of the empty set of view subtrees.\n                
%edes        vacmViewTreeFamilyViewName The human readable name for a family of view subtrees.\n                
%edes        vacmViewTreeFamilySubtree The MIB subtree which when combined with the\n                 corresponding instance of vacmViewTreeFamilyMask\n                 defines a family of view subtrees.\n                
%edes        vacmViewTreeFamilyMask  The bit mask which, in combination with the\n                 corresponding instance of vacmViewTreeFamilySubtree,\n                 defines a family of view subtrees.\n\n                 Each bit of this bit mask corresponds to a\n                 sub-identifier of vacmViewTreeFamilySubtree, with the\n                 most significant bit of the i-th octet of this octet\n                 string value (extended if necessary, see below)\n                 corresponding to the (8*i - 7)-th sub-identifier, and\n                 the least significant bit of the i-th octet of this\n                 octet string corresponding to the (8*i)-th\n                 sub-identifier, where i is in the range 1 through 16.\n\n                 Each bit of this bit mask specifies whether or not\n                 the corresponding sub-identifiers must match when\n                 determining if an OBJECT IDENTIFIER is in this\n                 family of view subtrees; a '1' indicates that an\n                 exact match must occur; a '0' indicates 'wild card',\n                 i.e., any sub-identifier value matches.\n\n                 Thus, the OBJECT IDENTIFIER X of an object instance\n                 is contained in a family of view subtrees if, for\n                 each sub-identifier of the value of\n                 vacmViewTreeFamilySubtree, either:\n\n                   the i-th bit of vacmViewTreeFamilyMask is 0, or\n\n                   the i-th sub-identifier of X is equal to the i-th\n                   sub-identifier of the value of\n                   vacmViewTreeFamilySubtree.\n\n                 If the value of this bit mask is M bits long and\n                 there are more than M sub-identifiers in the\n                 corresponding instance of vacmViewTreeFamilySubtree,\n                 then the bit mask is extended with 1's to be the\n                 required length.\n\n                 Note that when the value of this object is the\n                 zero-length string, this extension rule results in\n                 a mask of all-1's being used (i.e., no 'wild card'),\n                 and the family of view subtrees is the one view\n                 subtree uniquely identified by the corresponding\n                 instance of vacmViewTreeFamilySubtree.\n\n                 Note that masks of length greater than zero length\n                 do not need to be supported. In this case this\n                 object is made read-only.\n                
%edes        vacmViewTreeFamilyType  Indicates whether the corresponding instances of\n                 vacmViewTreeFamilySubtree and vacmViewTreeFamilyMask\n                 define a family of view subtrees which is included in\n                 or excluded from the MIB view.\n                
%edes        vacmViewTreeFamilyStorageType The storage type for this conceptual row.\n\n                 Conceptual rows having the value 'permanent' need not\n                 allow write-access to any columnar objects in the row.\n                
%edes        vacmViewTreeFamilyStatus The status of this conceptual row.\n\n                 The  RowStatus TC [RFC2579] requires that this\n                 DESCRIPTION clause states under which circumstances\n                 other objects in this row can be modified:\n\n                 The value of this object has no effect on whether\n                 other objects in this conceptual row can be modified.\n                
%edes        vacmBasicGroup          A collection of objects providing for remote\n                 configuration of an SNMP engine which implements\n                 the SNMP View-based Access Control Model.\n                
%edes        snmpCommunityTable      The table of community strings configured in the SNMP\n         engine's Local Configuration Datastore (LCD).
%edes        snmpCommunityEntry      Information about a particular community string.
%edes        snmpCommunityIndex      The unique index value of a row in this table.
%edes        snmpCommunityName       The community string for which a row in this table\n         represents a configuration.  There is no SIZE constraint\n         specified for this object because RFC 1157 does not\n         impose any explicit limitation on the length of community\n         strings (their size is constrained indirectly by the\n         SNMP message size).
%edes        snmpCommunitySecurityName A human readable string representing the corresponding\n         value of snmpCommunityName in a Security Model\n         independent format.
%edes        snmpCommunityContextEngineID The contextEngineID indicating the location of the\n         context in which management information is accessed\n         when using the community string specified by the\n         corresponding instance of snmpCommunityName.\n\n         The default value is the snmpEngineID of the entity in\n         which this object is instantiated.
%edes        snmpCommunityContextName The context in which management information is accessed\n         when using the community string specified by the\n         corresponding instance of snmpCommunityName.
%edes        snmpCommunityTransportTag This object specifies a set of transport endpoints\n         which are used in two ways:\n            - to specify the transport endpoints from which an\n              SNMP entity will accept management requests, and\n            - to specify the transport endpoints to which a\n              notification may be sent using the community\n              string matching the corresponding instance of\n              snmpCommunityName.\n         In either case, if the value of this object has\n         zero-length, transport endpoints are not checked when\n         either authenticating messages containing this community\n         string, nor when generating notifications.\n\n         The transports identified by this object are specified\n         in the snmpTargetAddrTable.  Entries in that table\n         whose snmpTargetAddrTagList contains this tag value\n         are identified.\n\n         If a management request containing a community string\n\n         that matches the corresponding instance of\n         snmpCommunityName is received on a transport endpoint\n         other than the transport endpoints identified by this\n         object the request is deemed unauthentic.\n\n         When a notification is to be sent using an entry in\n         this table, if the destination transport endpoint of\n         the notification does not match one of the transport\n         endpoints selected by this object, the notification\n         is not sent.
%edes        snmpCommunityStorageType The storage type for this conceptual row in the\n         snmpCommunityTable.  Conceptual rows having the value\n         'permanent' need not allow write-access to any\n         columnar object in the row.
%edes        snmpCommunityStatus     The status of this conceptual row in the\n         snmpCommunityTable.\n\n         An entry in this table is not qualified for activation\n         until instances of all corresponding columns have been\n         initialized, either through default values, or through\n         Set operations.  The snmpCommunityName and\n         snmpCommunitySecurityName objects must be explicitly set.\n\n         There is no restriction on setting columns in this table\n         when the value of snmpCommunityStatus is active(1).
%edes        snmpTargetAddrExtTable  The table of mask and maximum message size (mms) values\n         associated with the snmpTargetAddrTable.\n\n         The snmpTargetAddrExtTable augments the\n         snmpTargetAddrTable with a transport address mask value\n         and a maximum message size value.  The transport address\n         mask allows entries in the snmpTargetAddrTable to define\n         a set of addresses instead of just a single address.\n         The maximum message size value allows the maximum\n         message size of another SNMP entity to be configured for\n         use in SNMPv1 (and SNMPv2c) transactions, where the\n         message format does not specify a maximum message size.
%edes        snmpTargetAddrExtEntry  Information about a particular mask and mms value.
%edes        snmpTargetAddrTMask     The mask value associated with an entry in the\n         snmpTargetAddrTable.  The value of this object must\n         have the same length as the corresponding instance of\n         snmpTargetAddrTAddress, or must have length 0.  An\n         attempt to set it to any other value will result in\n         an inconsistentValue error.\n\n         The value of this object allows an entry in the\n         snmpTargetAddrTable to specify multiple addresses.\n         The mask value is used to select which bits of\n         a transport address must match bits of the corresponding\n         instance of snmpTargetAddrTAddress, in order for the\n\n         transport address to match a particular entry in the\n         snmpTargetAddrTable.  Bits which are 1 in the mask\n         value indicate bits in the transport address which\n         must match bits in the snmpTargetAddrTAddress value.\n         Bits which are 0 in the mask indicate bits in the\n         transport address which need not match.  If the\n         length of the mask is 0, the mask should be treated\n         as if all its bits were 1 and its length were equal\n         to the length of the corresponding value of\n         snmpTargetAddrTable.\n\n         This object may not be modified while the value of the\n         corresponding instance of snmpTargetAddrRowStatus is\n         active(1).  An attempt to set this object in this case\n         will result in an inconsistentValue error.
%edes        snmpTargetAddrMMS       The maximum message size value associated with an entry\n         in the snmpTargetAddrTable.  Note that a value of 0 means\n         that the maximum message size is unknown.
%edes        snmpTrapAddress         The value of the agent-addr field of a Trap PDU which\n         is forwarded by a proxy forwarder application using\n         an SNMP version other than SNMPv1.  The value of this\n         object SHOULD contain the value of the agent-addr field\n         from the original Trap PDU as generated by an SNMPv1\n         agent.
%edes        snmpTrapCommunity       The value of the community string field of an SNMPv1\n         message containing a Trap PDU which is forwarded by a\n         a proxy forwarder application using an SNMP version\n         other than SNMPv1.  The value of this object SHOULD\n         contain the value of the community string field from\n         the original SNMPv1 message containing a Trap PDU as\n         generated by an SNMPv1 agent.  There is no SIZE\n         constraint specified for this object because RFC 1157\n         does not impose any explicit limitation on the length\n         of community strings (their size is constrained\n         indirectly by the SNMP message size).
%edes        snmpCommunityTableGroup A collection of objects providing for configuration\n         of community strings for SNMPv1 (and SNMPv2c) usage.
%edes        snmpProxyTrapForwardGroup Objects which are used by proxy forwarding applications\n         when translating traps between SNMP versions.  These are\n         used to preserve SNMPv1-specific information when\n         translating to SNMPv2c or SNMPv3.
%edes        dot1agCfmFaultAlarm     A MEP has a persistent defect condition. A notification\n        (fault alarm) is sent to the management entity with the OID\n        of the MEP that has detected the fault.\n\n        Whenever a MEP has a persistent defect,\n        it may or may not generate a Fault Alarm to warn the system\n        administrator of the problem, as controlled by the MEP\n        Fault Notification Generator State Machine and associated\n        Managed Objects. Only the highest-priority defect, as shown\n        in Table 20-1, is reported in the Fault Alarm.\n\n        If a defect with a higher priority is raised after a Fault\n        Alarm has been issued, another Fault Alarm is issued.\n\n        The management entity receiving the notification can identify\n        the system from the network source address of the\n        notification, and can identify the MEP reporting the defect\n        by the indices in the OID of the dot1agCfmMepHighestPrDefect\n        variable in the notification:\n\n           dot1agCfmMdIndex - Also the index of the MEP's\n                              Maintenance Domain table entry\n                              (dot1agCfmMdTable).\n           dot1agCfmMaIndex - Also an index (with the MD table index)\n                              of the MEP's Maintenance Association\n                              network table entry\n                              (dot1agCfmMaNetTable), and (with the MD\n                              table index and component ID) of the\n                              MEP's MA component table entry\n                              (dot1agCfmMaCompTable).\n           dot1agCfmMepIdentifier - MEP Identifier and final index\n                              into the MEP table (dot1agCfmMepTable).\n       
%eref        dot1agCfmFaultAlarm     12.14.7.7
%edes        dot1agCfmStackTable     There is one CFM Stack table per Bridge. It permits\n        the retrieval of information about the Maintenance Points\n        configured on any given interface.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmStackTable     12.14.2
%edes        dot1agCfmStackEntry     The Stack table entry\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n
%edes        dot1agCfmStackifIndex   This object represents the  Bridge Port or aggregated port\n        on which MEPs or MHFs might be configured.\n\n        Upon a restart of the system, the system SHALL, if necessary,\n        change the value of this variable, and  rearrange the\n        dot1agCfmStackTable, so that it indexes the entry in the\n        interface table with the same value of ifAlias that it\n        indexed before the system restart.  If no such entry exists,\n        then the system SHALL delete all entries in the\n        dot1agCfmStackTable with the interface index.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmStackifIndex   12.14.2.1.2:a
%edes        dot1agCfmStackVlanIdOrNone VLAN ID to which the MP is attached, or 0, if none.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmStackVlanIdOrNone 12.14.2.1.2:d, 22.1.7
%edes        dot1agCfmStackMdLevel   MD Level of the Maintenance Point.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmStackMdLevel   12.14.2.1.2:b
%edes        dot1agCfmStackDirection Direction in which the MP faces on the Bridge Port\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmStackDirection 12.14.2.1.2:c
%edes        dot1agCfmStackMdIndex   The index of the Maintenance Domain in the dot1agCfmMdTable\n        to which the MP is associated, or 0, if none.\n       
%eref        dot1agCfmStackMdIndex   12.14.2.1.3:b
%edes        dot1agCfmStackMaIndex   The index of the MA in the dot1agCfmMaNetTable and\n        dot1agCfmMaCompTable to which the MP is associated, or 0, if\n        none.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmStackMaIndex   12.14.2.1.3:c
%edes        dot1agCfmStackMepId     If an MEP is configured, the MEPID, else 0
%eref        dot1agCfmStackMepId     12.14.2.1.3:d\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%edes        dot1agCfmStackMacAddress MAC address of the MP.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmStackMacAddress 12.14.2.1.3:e
%edes        dot1agCfmDefaultMdDefLevel A value indicating the MD Level at which MHFs are to be\n        created, and Sender ID TLV transmission by those MHFs is to\n        be controlled, for each dot1agCfmDefaultMdEntry whose\n        dot1agCfmDefaultMdLevel object contains the value -1.\n\n        After this initialization, this object needs to be persistent\n        upon reboot or restart of a device.\n        
%eref        dot1agCfmDefaultMdDefLevel 12.14.3.1.3:c, 12.14.3.2.2:b
%edes        dot1agCfmDefaultMdDefMhfCreation A value indicating if the Management entity can create MHFs\n        (MIP Half Function) for the VID, for each\n        dot1agCfmDefaultMdEntry whose dot1agCfmDefaultMdMhfCreation\n        object contains the value defMHFdefer.  Since, in this\n        variable, there is no encompassing Maintenance Domain, the\n        value defMHFdefer is not allowed.\n\n        After this initialization, this object needs to be persistent\n        upon reboot or restart of a device.\n       
%eref        dot1agCfmDefaultMdDefMhfCreation 12.14.3.1.3:d
%edes        dot1agCfmDefaultMdDefIdPermission Enumerated value indicating what, if anything, is to be\n        included in the Sender ID TLV (21.5.3) transmitted by MHFs\n        created by the Default Maintenance Domain, for each\n        dot1agCfmDefaultMdEntry whose dot1agCfmDefaultMdIdPermission\n        object contains the value sendIdDefer.  Since, in this\n        variable, there is no encompassing Maintenance Domain, the\n        value sendIdDefer is not allowed.\n\n        After this initialization, this object needs to be persistent\n        upon reboot or restart of a device.\n       
%eref        dot1agCfmDefaultMdDefIdPermission 12.14.3.1.3:e
%edes        dot1agCfmDefaultMdTable For each Bridge component, the Default MD Level Managed Object\n        controls MHF creation for VIDs that are not attached to a\n        specific Maintenance Association Managed Object, and Sender ID\n        TLV transmission by those MHFs.\n\n        For each Bridge Port, and for each VLAN ID whose data can\n        pass through that Bridge Port, an entry in this table is\n        used by the algorithm in 22.2.3 only if there is no\n        entry in the Maintenance Association table defining an MA\n        for the same VLAN ID and MD Level as this table's entry, and\n        on which MA an Up MEP is defined.  If there exists such an\n        MA, that MA's objects are used by the algorithm in\n        22.2.3 in place of this table entry's objects.  The\n        agent maintains the value of dot1agCfmDefaultMdStatus to\n        indicate whether this entry is overridden by an MA.\n\n        When first initialized, the agent creates this table\n        automatically with entries for all VLAN IDs,\n        with the default values specified for each object.\n\n        After this initialization, the writable objects in this\n        table need to be persistent upon reboot or restart of a\n        device.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmDefaultMdTable 12.14.3
%edes        dot1agCfmDefaultMdEntry The Default MD Level table entry.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%edes        dot1agCfmDefaultMdComponentId The Bridge component within the system to which the information\n        in this dot1agCfmDefaultMdEntry applies.  If the system is not\n        a Bridge, or if only one component is present in the Bridge,\n        then this variable (index) MUST be equal to 1.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmDefaultMdComponentId 12.3 l)
%edes        dot1agCfmDefaultMdPrimaryVid The Primary VID of the VLAN to which this entry's objects\n        apply.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%edes        dot1agCfmDefaultMdStatus State of this Default MD Level table entry.  True if there is\n        no entry in the Maintenance Association table defining an MA\n        for the same VLAN ID and MD Level as this table's entry, and\n        on which MA an Up MEP is defined, else false.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmDefaultMdStatus 12.14.3.1.3:b
%edes        dot1agCfmDefaultMdLevel A value indicating the MD Level at which MHFs are to be\n        created, and Sender ID TLV transmission by those MHFs is to\n        be controlled, for the VLAN to which this entry's objects\n        apply.  If this object has the value -1, the MD Level for MHF\n        creation for this VLAN is controlled by\n        dot1agCfmDefaultMdDefLevel.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmDefaultMdLevel 12.14.3.1.3:c, 12.14.3.2.2:b
%edes        dot1agCfmDefaultMdMhfCreation A value indicating if the Management entity can create MHFs\n        (MIP Half Function) for this VID at this MD Level.  If this\n        object has the value defMHFdefer, MHF creation for this VLAN\n        is controlled by dot1agCfmDefaultMdDefMhfCreation.\n\n        The value of this variable is meaningless if the values of\n        dot1agCfmDefaultMdStatus is false.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmDefaultMdMhfCreation 12.14.3.1.3:d
%edes        dot1agCfmDefaultMdIdPermission Enumerated value indicating what, if anything, is to be\n        included in the Sender ID TLV (21.5.3) transmitted by MHFs\n        created by the Default Maintenance Domain.  If this object\n        has the value sendIdDefer, Sender ID TLV transmission for\n        this VLAN is controlled by dot1agCfmDefaultMdDefIdPermission.\n\n        The value of this variable is meaningless if the values of\n        dot1agCfmDefaultMdStatus is false.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmDefaultMdIdPermission 12.14.3.1.3:e
%edes        dot1agCfmVlanTable      This table defines the association of VIDs into VLANs.  There\n        is an entry in this table, for each component of the Bridge,\n        for each VID that is:\n            a) a VID belonging to a VLAN associated with more than\n               one VID; and\n            b) not the Primary VLAN of that VID.\n        The entry in this table contains the Primary VID of the VLAN.\n\n        By default, this table is empty, meaning that every VID is\n        the Primary VID of a single-VID VLAN.\n\n        VLANs that are associated with only one VID SHOULD NOT have\n        an entry in this table.\n\n        The writable objects in this table need to be persistent\n        upon reboot or restart of a device.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmVlanTable      12.14.3.1.3:a, 12.14.3.2.2:a, 12.14.5.3.2:c,\n        12.14.6.1.3:b, 22.1.5.
%edes        dot1agCfmVlanEntry      The VLAN table entry.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%edes        dot1agCfmVlanComponentId The Bridge component within the system to which the information\n        in this dot1agCfmVlanEntry applies.  If the system is not a\n        Bridge, or if only one component is present in the Bridge, then\n        this variable (index) MUST be equal to 1.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmVlanComponentId 12.3 l)
%edes        dot1agCfmVlanVid        This is a VLAN ID belonging to a VLAN that is associated with\n        more than one VLAN ID, and this is not the Primary VID of the\n        VLAN.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%edes        dot1agCfmVlanPrimaryVid This is the Primary VLAN ID of the VLAN with which this\n        entry's dot1agCfmVlanVid is associated.  This value MUST not\n        equal the value of dot1agCfmVlanVid.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%edes        dot1agCfmVlanRowStatus  The status of the row.\n\n        The writable columns in a row can not be changed if the row\n        is active. All columns MUST have a valid value before a row\n        can be activated.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%edes        dot1agCfmConfigErrorListTable The CFM Configuration Error List table provides a list of\n        Interfaces and VIDs that are incorrectly configured.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmConfigErrorListTable 12.14.4
%edes        dot1agCfmConfigErrorListEntry The Config Error List Table  entry\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%edes        dot1agCfmConfigErrorListVid The VLAN ID of the VLAN with interfaces in error.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmConfigErrorListVid 12.14.4.1.2:a
%edes        dot1agCfmConfigErrorListIfIndex This object is the IfIndex of the interface.\n\n        Upon a restart of the system, the system SHALL, if necessary,\n        change the value of this variable so that it indexes the\n        entry in the interface table with the same value of ifAlias\n        that it indexed before the system restart.  If no such\n        entry exists, then the system SHALL delete any entries in\n        dot1agCfmConfigErrorListTable indexed by that\n        InterfaceIndex value.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmConfigErrorListIfIndex 12.14.4.1.2:b
%edes        dot1agCfmConfigErrorListErrorType A vector of Boolean error conditions from 22.2.4, any of\n        which may be true:\n\n        0) CFMleak;\n        1) ConflictingVids;\n        2) ExcessiveLevels;\n        3) OverlappedLevels.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmConfigErrorListErrorType 12.14.4.1.3:b
%edes        dot1agCfmMdTableNextIndex This object contains an unused value for dot1agCfmMdIndex in\n        the dot1agCfmMdTable, or a zero to indicate that none exist.\n       
%edes        dot1agCfmMdTable        The Maintenance Domain table. Each row in the table\n        represents a different Maintenance Domain.\n\n        A Maintenance Domain is described 3.117 as the\n        network or the part of the network for which faults in\n        connectivity are to be managed. The boundary of a Maintenance\n        Domain is defined by a set of DSAPs, each of which can become\n        a point of connectivity to a service instance.\n       
%eref        dot1agCfmMdTable        3.117, 18.1
%edes        dot1agCfmMdEntry        The Maintenance Domain table entry. This entry is not lost\n        upon reboot. It is backed up by stable storage.\n       
%edes        dot1agCfmMdIndex        The index to the Maintenance Domain table.\n\n        dot1agCfmMdTableNextIndex needs to be inspected to find an\n        available index for row-creation.\n\n        Referential integrity is required, i.e., the index needs to be\n        persistent upon a reboot or restart of a device.  The index\n        can never be reused for other Maintenance Domain.  The index\n        value SHOULD keep increasing up to the time that they wrap\n        around. This is to facilitate access control based on OID.\n       
%edes        dot1agCfmMdFormat       The type (and thereby format) of the Maintenance Domain Name.
%eref        dot1agCfmMdFormat       21.6.5.1
%edes        dot1agCfmMdName         The Maintenance Domain name. The type/format of this object\n        is determined by the value of the dot1agCfmMdNameType object.\n\n        Each Maintenance Domain has unique name among all those\n        used or available to a service provider or operator.  It\n        facilitates easy identification of administrative\n        responsibility for each Maintenance Domain.\n\n        3.122 defines a Maintenance Domain name as the\n        identifier, unique over the domain for which CFM is to\n        protect against accidental concatenation of Service\n        Instances, of a particular Maintenance Domain.\n       
%eref        dot1agCfmMdName         3.122, 12.14.5, 21.6.5.3
%edes        dot1agCfmMdMdLevel      The Maintenance Domain Level.
%eref        dot1agCfmMdMdLevel      12.14.5.1.3:b
%edes        dot1agCfmMdMhfCreation  Enumerated value indicating whether the management entity can\n        create MHFs (MIP Half Function) for this Maintenance Domain.\n        Since, in this variable, there is no encompassing Maintenance\n        Domain, the value defMHFdefer is not allowed.\n       
%eref        dot1agCfmMdMhfCreation  12.14.5.1.3:c
%edes        dot1agCfmMdMhfIdPermission Enumerated value indicating what, if anything, is to be\n        included in the Sender ID TLV (21.5.3) transmitted by MPs\n        configured in this Maintenance Domain.  Since, in this\n        variable, there is no encompassing Maintenance Domain, the\n        value sendIdDefer is not allowed.\n       
%eref        dot1agCfmMdMhfIdPermission 12.14.5.1.3:d
%edes        dot1agCfmMdMaNextIndex  Value to be used as the index of the MA table entries, both\n        the dot1agCfmMaNetTable and the dot1agCfmMaCompTable, for\n        this Maintenance Domain when the management entity wants to\n        create a new row in those tables.\n       
%edes        dot1agCfmMdRowStatus    The status of the row.\n\n        The writable columns in a row can not be changed if the row\n        is active. All columns MUST have a valid value before a row\n        can be activated.\n       
%edes        dot1agCfmMaNetTable     The Maintenance Association table.  Each row in the table\n        represents an MA.  An MA is a set of MEPs, each configured\n        with a single service instance.\n\n        This is the part of the complete MA table that is constant\n        across all Bridges in a Maintenance Domain, and across all\n        components of a single Bridge.  That part of the MA table that\n        can vary from Bridge component to Bridge component is contained\n        in the dot1agCfmMaCompTable.\n\n        Creation of a Service Instance establishes a connectionless\n        association among the selected DSAPs.  Configuring a\n        Maintenance association Endpoint (MEP) at each of the\n        DSAPs creates a Maintenance Association (MA) to monitor\n        that connectionless connectivity.  The MA is identified by a\n        Short MA Name that is unique within the Maintenance Domain\n        and chosen to facilitate easy identification of the Service\n        Instance.  Together, the Maintenance Domain Name and the\n        Short MA Name form the Maintenance Association Identifier\n        (MAID) that is carried in CFM Messages to identify\n        incorrect connectivity among Service Instances.  A small\n        integer, the Maintenance association Endpoint Identifier\n        (MEPID), identifies each MEP among those configured on a\n        single MA (3.114, 18.2).\n\n        This table uses two indices, first index is the index of the\n        Maintenance Domain table.  The second index is the same as the\n        index of the dot1agCfmMaCompEntry for the same MA.\n\n        The writable objects in this table need to be persistent\n        upon reboot or restart of a device.\n\n       
%eref        dot1agCfmMaNetTable     18.2
%edes        dot1agCfmMaNetEntry     The MA table entry.
%edes        dot1agCfmMaIndex        Index of the MA table dot1agCfmMdMaNextIndex needs to\n        be inspected to find an available index for row-creation.\n       
%edes        dot1agCfmMaNetFormat    The type (and thereby format) of the Maintenance Association\n        Name.\n       
%eref        dot1agCfmMaNetFormat    21.6.5.4
%edes        dot1agCfmMaNetName      The Short Maintenance Association name. The type/format of\n        this object is determined by the value of the\n        dot1agCfmMaNetNameType object.  This name MUST be unique within\n        a maintenance domain.\n       
%eref        dot1agCfmMaNetName      21.6.5.6, Table 2120
%edes        dot1agCfmMaNetCcmInterval Interval between CCM transmissions to be used by all MEPs\n        in the MA.\n       
%eref        dot1agCfmMaNetCcmInterval 12.14.6.1.3:e
%edes        dot1agCfmMaNetRowStatus The status of the row.\n\n        The writable columns in a row can not be changed if the row\n        is active. All columns MUST have a valid value before a row\n        can be activated.\n       
%edes        dot1agCfmMaCompTable    The Maintenance Association table.  Each row in the table\n        represents an MA.  An MA is a set of MEPs, each configured\n        with a single service instance.\n\n        This is the part of the complete MA table that is variable\n        across the Bridges in a Maintenance Domain, or across the\n        components of a single Bridge.  That part of the MA table that\n        is constant across the Bridges and their components in a\n        Maintenance Domain is contained in the dot1agCfmMaNetTable.\n\n        This table uses three indices, first index is the\n        Dot1agCfmPbbComponentIdentifier that identifies the component\n        within the Bridge for which the information in the\n        dot1agCfmMaCompEntry applies.  The second is the index of the\n        Maintenance Domain table.  The third index is the same as the\n        index of the dot1agCfmMaNetEntry for the same MA.\n\n        The writable objects in this table need to be persistent\n        upon reboot or restart of a device.\n\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmMaCompTable    18.2
%edes        dot1agCfmMaCompEntry    The MA table entry.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%edes        dot1agCfmMaComponentId  The Bridge component within the system to which the information\n        in this dot1agCfmMaCompEntry applies.  If the system is not a\n        Bridge, or if only one component is present in the Bridge, then\n        this variable (index) MUST be equal to 1.\n    **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmMaComponentId  12.3 l)
%edes        dot1agCfmMaCompPrimaryVlanId The Primary VLAN ID with which the Maintenance Association is\n        associated, or 0 if the MA is not attached to any VID.  If\n        the MA is associated with more than one VID, the\n        dot1agCfmVlanTable lists them.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmMaCompPrimaryVlanId 12.14.6.1.3:b
%edes        dot1agCfmMaCompMhfCreation Indicates if the Management entity can create MHFs (MIP Half\n        Function) for this MA.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmMaCompMhfCreation 12.14.6.1.3:c
%edes        dot1agCfmMaCompIdPermission Enumerated value indicating what, if anything, is to be\n        included in the Sender ID TLV (21.5.3) transmitted by MPs\n        configured in this MA.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmMaCompIdPermission 12.14.6.1.3:d
%edes        dot1agCfmMaCompNumberOfVids The number of VIDs associated with the MA.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%eref        dot1agCfmMaCompNumberOfVids 12.14.6.1.3:b
%edes        dot1agCfmMaCompRowStatus The status of the row.\n\n        The writable columns in a row can not be changed if the row\n        is active. All columns MUST have a valid value before a row\n        can be activated.\n        **NOTE: this object is deprecated due to re-indexing of the\n    table.\n       
%edes        dot1agCfmMaMepListTable List of MEPIDs that belong to this MA.\n\n        12.14.6.1.3 specifies that a list of MEPIDs in all\n        Bridges in that MA, but since SNMP SMI does not allow to\n        state in a MIB that an object in a table is an array, the\n        information has to be stored in another table with two\n        indices, being the first index, the index of the table that\n        contains the list or array.\n\n        For all Bridges in which the same MAID {dot1agCfmMdFormat,\n        dot1agCfmMdName, dot1agCfmMaNetFormat, and dot1agCfmMaNetName}\n        is configured, the same set of dot1agCfmMaMepListIdentifiers\n        MUST be configured in the Bridges' dot1agCfmMaMepListTables.\n        This allows each MEP to determine whether or not it is\n        receiving CCMs from all of the other MEPs in the MA.\n\n        For example, if one were creating a new MA whose MAID were\n        {charString, 'Dom1', charString, 'MA1'}, that had 2 MEPs, whose\n        MEPIDs were 1 and 3, one could, in Bridge A:\n         1. Get a new MD index d from dot1agCfmMdTableNextIndex.\n         2. Create the Maintenance Domain {charString, 'Dom1'}.\n         3. Get a new MA index a from dot1agCfmMdMaNextIndex [d].\n         4. Create the Maintenance Association {charString, 'MA1'}.\n         5. Create a new dot1agCfmMaMepListEntry for each of the MEPs\n            in the MA: [d, a, 1] and [d, a, 3].\n         6. Create one of the new MEPs, say [d, a, 1].\n        Then, in Bridge B:\n         7. Do all of these steps 1-6, except for using the other MEPID\n            for the new MEP in Step 6, in this example, MEPID 3.\n        Note that, when creating the MA, MEP List Table, and MEP\n        entries in the second Bridge, the indices 'd' and 'a'\n        identifying the MAID {charString, 'Dom1', charString, 'MA1'}\n        may have different values than those in the first Bridge.\n       
%eref        dot1agCfmMaMepListTable 12.14.6.1.3:g
%edes        dot1agCfmMaMepListEntry The known MEPS table entry.
%edes        dot1agCfmMaMepListIdentifier MEPID
%eref        dot1agCfmMaMepListIdentifier 12.14.6.1.3:g
%edes        dot1agCfmMaMepListRowStatus The status of the row. Read SNMPv2-TC (RFC1903) for an\n        explanation of the possible values this object can take.\n       
%edes        dot1agCfmMepTable       The Maintenance Association Endpoint (MEP) table.\n\n        Each row in the table represents a different MEP.  A MEP is\n        an actively managed CFM entity, associated with a specific\n        DSAP of a Service Instance, which can generate and receive\n        CFM PDUs and track any responses.  It is an endpoint of a\n        single Maintenance Association, and is an endpoint of a\n        separate Maintenance Entity for each of the other MEPs in\n        the same Maintenance Association (3.114).\n\n        This table uses three indices. The first two indices are the\n        indices of the Maintenance Domain and MA tables, the reason\n        being that a MEP is always related to an MA and Maintenance\n        Domain.\n\n        The MEP table also stores all the managed objects for sending\n        LBM and LTM.\n\n        *LBM Managed objects\n\n        LBM Managed objects in the MEP table\n        enables the management entity to initiate\n        transmission of Loopback messages.  It will signal the MEP\n        that it SHOULD transmit some number of Loopback messages\n        and detect the detection (or lack thereof) of the\n        corresponding Loopback messages.\n\n        Steps to use entries in this table:\n\n        1) Wait for dot1agCfmMepTransmitLbmStatus value to be\n           false.  To do this do this sequence:\n           a. an SNMP GET for both SnmpSetSerialNo and\n              dot1agCfmMepTransmitLbmStatus objects (in same SNMP\n              PDU).\n           b. Check if value for dot1agCfmMepTransmitLbmStatus is false.\n              - if not, wait x seconds, go to step a above.\n              - if yes, save the value of SnmpSetSerialNo and go\n                to step 2) below\n        2) Change dot1agCfmMepTransmitLbmStatus value from false to\n           true to ensure no other management entity will use\n           the service. In order to not disturb a possible other NMS\n           do this by sending an SNMP SET for both SnmpSetSerialNo\n           and dot1agCfmMepTransmitLbmStatus objects (in same SNMP\n           PDU,  and make sure SNmpSetSerialNo is the first varBind).\n           For the SnmpSetSerialNo varBind, use the value that you\n           obtained in step 1)a.. This ensures that two cooperating\n           NMSes will not step on each others toes.\n           Setting this MIB object does not set the corresponding\n           LBIactive state machine variable.\n        3) Setup the different data to be sent (number of messages,\n           optional TLVs,...), except do not set\n           dot1agCfmMepTransmitLbmMessages.\n        4) Record the current values of dot1agCfmMepLbrIn,\n           dot1agCfmMepLbrInOutOfOrder, and dot1agCfmMepLbrBadMsdu.\n        6) Set dot1agCfmMepTransmitLbmMessages to a non-zero value to\n           initiate transmission of Loopback messages.\n           The dot1agCfmMepTransmitLbmMessages indicates the\n           number of LBMs to be sent and is not decremented as\n           loopbacks are actually sent. dot1agCfmMepTransmitLbmMessages\n           is not equivalent to the LBMsToSend state machine variable.\n        7) Check the value of dot1agCfmMepTransmitLbmResultOK to\n           find out if the operation was successfully initiated or\n           not.\n        8) Monitor the value of dot1agCfmMepTransmitLbmStatus.\n           When it is reset to false, the last LBM has been transmitted.\n           Wait an additional 5 seconds to ensure that all LBRs have\n           been returned.\n        9) Compare dot1agCfmMepLbrIn, dot1agCfmMepLbrInOutOfOrder,\n           and dot1agCfmMepLbrBadMsdu to their old values from step\n           4, above, to get the results of the test.\n\n        *LTM Managed objects\n        The LTM Managed objects in the MEP table are used in a manner\n        similar to that described for LBM transmission, above. A SET\n        operation to the variable dot1agCfmMepTransmitLtmFlags\n        triggers the transmission of an LTM. Then, the variables\n        dot1agCfmMepTransmitLtmSeqNumber and\n        dot1agCfmMepTransmitLtmEgressIdentifier return the information\n        required to recover the results of the LTM from the\n        dot1agCfmLtrTable.\n       
%eref        dot1agCfmMepTable       12.14.7, 19.2
%edes        dot1agCfmMepEntry       The MEP table entry
%edes        dot1agCfmMepIdentifier  Integer that is unique among all the MEPs in the same MA.\n        Other definition is: a small integer, unique over a given\n        Maintenance Association, identifying a specific Maintenance\n        association Endpoint (3.114).\n\n        MEP Identifier is also known as the MEPID.\n       
%eref        dot1agCfmMepIdentifier  3.114, 19.2, 12.14.7
%edes        dot1agCfmMepIfIndex     This object is the interface index of the interface either a\n        Bridge Port, or an aggregated IEEE 802.1 link within a Bridge\n        port, to which the MEP is attached.\n\n        Upon a restart of the system, the system SHALL, if necessary,\n        change the value of this variable so that it indexes the\n        entry in the interface table with the same value of ifAlias\n        that it indexed before the system restart.  If no such\n        entry exists, then the system SHALL set this variable to 0.\n       
%eref        dot1agCfmMepIfIndex     12.14.7.1.3:b
%edes        dot1agCfmMepDirection   The direction in which the MEP faces on the Bridge port.
%eref        dot1agCfmMepDirection   12.14.7.1.3:c, 19.2
%edes        dot1agCfmMepPrimaryVid  An integer indicating the Primary VID of the MEP, always\n        one of the VIDs assigned to the MEP's MA.  The value 0\n        indicates that either the Primary VID is that of the\n        MEP's MA, or that the MEP's MA is associated with no VID.
%eref        dot1agCfmMepPrimaryVid  12.14.7.1.3:d
%edes        dot1agCfmMepActive      Administrative state of the MEP\n\n        A Boolean indicating the administrative state of the MEP.\n\n        True indicates that the MEP is to function normally, and\n        false that it is to cease functioning.
%eref        dot1agCfmMepActive      12.14.7.1.3:e, 20.9.1
%edes        dot1agCfmMepFngState    Current state of the MEP Fault Notification Generator\n        State Machine.\n       
%eref        dot1agCfmMepFngState    12.14.7.1.3:f, 20.35
%edes        dot1agCfmMepCciEnabled  If set to true, the MEP will generate CCM messages.
%eref        dot1agCfmMepCciEnabled  12.14.7.1.3:g, 20.10.1
%edes        dot1agCfmMepCcmLtmPriority The priority value for CCMs and LTMs transmitted by the MEP.\n        Default Value is the highest priority value allowed to pass\n        through the Bridge Port for any of this MEPs VIDs.\n        The management entity can obtain the default value for this\n        variable from the priority regeneration table by extracting the\n        highest priority value in this table on this MEPs Bridge Port.\n        (1 is lowest, then 2, then 0, then 3-7).\n       
%eref        dot1agCfmMepCcmLtmPriority 12.14.7.1.3:h
%edes        dot1agCfmMepMacAddress  MAC address of the MEP.
%eref        dot1agCfmMepMacAddress  12.14.7.1.3:i, 19.4
%edes        dot1agCfmMepLowPrDef    An integer value specifying the lowest priority defect\n        that is allowed to generate fault alarm.\n       
%eref        dot1agCfmMepLowPrDef    12.14.7.1.3:k, 20.9.5, Table 20-1
%edes        dot1agCfmMepFngAlarmTime The time that defects MUST be present before a Fault Alarm is\n        issued (fngAlarmTime, 20.3.3) (default 2.5s).\n       
%eref        dot1agCfmMepFngAlarmTime 12.14.7.1.3:l, 20.3.3
%edes        dot1agCfmMepFngResetTime The time that defects MUST be absent before resetting a\n        Fault Alarm (fngResetTime, 20.35.4) (default 10s).\n       
%eref        dot1agCfmMepFngResetTime 12.14.7.1.3:m, 20.35.4
%edes        dot1agCfmMepHighestPrDefect The highest priority defect that has been present since the\n        MEPs Fault Notification Generator State Machine was last in\n        the FNG_RESET state.\n       
%eref        dot1agCfmMepHighestPrDefect 12.14.7.1.3:n, 20.35.9, Table 211
%edes        dot1agCfmMepDefects     A vector of Boolean error conditions from Table 20-1, any of\n        which may be true:\n\n        DefRDICCM(0)\n        DefMACstatus(1)\n        DefRemoteCCM(2)\n        DefErrorCCM(3)\n        DefXconCCM(4)\n       
%eref        dot1agCfmMepDefects     12.14.7.1.3:o, 12.14.7.1.3:p, 12.14.7.1.3:q,\n        12.14.7.1.3:r, 12.14.7.1.3:s, 20.21.3, 20.23.3, 20.35.5,\n        20.35.6, 20.35.7.
%edes        dot1agCfmMepErrorCcmLastFailure The last-received CCM that triggered an DefErrorCCM fault.
%eref        dot1agCfmMepErrorCcmLastFailure 12.14.7.1.3:t, 20.21.2
%edes        dot1agCfmMepXconCcmLastFailure The last-received CCM that triggered a DefXconCCM fault.
%eref        dot1agCfmMepXconCcmLastFailure 12.14.7.1.3:u, 20.23.2
%edes        dot1agCfmMepCcmSequenceErrors The total number of out-of-sequence CCMs received from all\n        remote MEPs.\n       
%eref        dot1agCfmMepCcmSequenceErrors 12.14.7.1.3:v, 20.16.12
%edes        dot1agCfmMepCciSentCcms Total number of Continuity Check messages transmitted.
%eref        dot1agCfmMepCciSentCcms 12.14.7.1.3:w, 20.10.2
%edes        dot1agCfmMepNextLbmTransId Next sequence number/transaction identifier to be sent in a\n        Loopback message. This sequence number can be zero because\n        it wraps around.\n       
%eref        dot1agCfmMepNextLbmTransId 12.14.7.1.3:x, 20.28.2
%edes        dot1agCfmMepLbrIn       Total number of valid, in-order Loopback Replies received.
%eref        dot1agCfmMepLbrIn       12.14.7.1.3:y, 20.31.1
%edes        dot1agCfmMepLbrInOutOfOrder The total number of valid, out-of-order Loopback Replies\n        received.\n       
%eref        dot1agCfmMepLbrInOutOfOrder 12.14.7.1.3:z, 20.31.1
%edes        dot1agCfmMepLbrBadMsdu  The total number of LBRs received whose\n        mac_service_data_unit did not match (except for the OpCode)\n        that of the corresponding LBM (20.2.3).\n       
%eref        dot1agCfmMepLbrBadMsdu  12.14.7.1.3:aa, 20.2.3
%edes        dot1agCfmMepLtmNextSeqNumber Next transaction identifier/sequence number to be sent in a\n        Linktrace message. This sequence number can be zero because\n        it wraps around.\n       
%eref        dot1agCfmMepLtmNextSeqNumber 12.14.7.1.3:ab, 20.41.1
%edes        dot1agCfmMepUnexpLtrIn  The total number of unexpected LTRs received (20.39.1).\n       
%eref        dot1agCfmMepUnexpLtrIn  12.14.7.1.3:ac,  20.44.1
%edes        dot1agCfmMepLbrOut      Total number of Loopback Replies transmitted.
%eref        dot1agCfmMepLbrOut      12.14.7.1.3:ad, 20.28.2
%edes        dot1agCfmMepTransmitLbmStatus A Boolean flag set to true by the MEP Loopback Initiator State\n       Machine or an MIB manager to indicate\n       that another LBM is being transmitted.\n       Reset to false by the MEP Loopback Initiator State Machine.
%edes        dot1agCfmMepTransmitLbmDestMacAddress The Target MAC Address Field to be transmitted: A unicast\n        destination MAC address.\n        This address will be used if the value of the column\n        dot1agCfmMepTransmitLbmDestIsMepId is 'false'.\n       
%eref        dot1agCfmMepTransmitLbmDestMacAddress 12.14.7.3.2:b
%edes        dot1agCfmMepTransmitLbmDestMepId The Maintenance association Endpoint Identifier of another\n        MEP in the same Maintenance Association to which the LBM is\n        to be sent.\n        This address will be used if the value of the column\n        dot1agCfmMepTransmitLbmDestIsMepId is 'true'.\n       
%eref        dot1agCfmMepTransmitLbmDestMepId 12.14.7.3.2:b
%edes        dot1agCfmMepTransmitLbmDestIsMepId True indicates that MEPID of the target MEP is used for\n        Loopback transmission.\n        False indicates that unicast destination MAC address of the\n        target MEP is used for Loopback transmission.\n       
%eref        dot1agCfmMepTransmitLbmDestIsMepId 12.14.7.3.2:b
%edes        dot1agCfmMepTransmitLbmMessages The number of Loopback messages to be transmitted.
%eref        dot1agCfmMepTransmitLbmMessages 12.14.7.3.2:c
%edes        dot1agCfmMepTransmitLbmDataTlv An arbitrary amount of data to be included in the Data TLV,\n        if the Data TLV is selected to be sent.  The intent is to be able\n        to fill the frame carrying the CFM PDU to its maximum length.\n        This may lead to fragmentation in some cases.\n       
%eref        dot1agCfmMepTransmitLbmDataTlv 12.14.7.3.2:d
%edes        dot1agCfmMepTransmitLbmVlanPriority Priority. 3 bit value to be used in the VLAN tag, if present\n        in the transmitted frame.\n\n        The default value is CCM priority.\n       
%eref        dot1agCfmMepTransmitLbmVlanPriority 12.14.7.3.2:e
%edes        dot1agCfmMepTransmitLbmVlanDropEnable Drop Enable bit value to be used in the VLAN tag, if present\n        in the transmitted frame.\n\n        For more information about VLAN Drop Enable, check\n        IEEE 802.1ad.\n       
%eref        dot1agCfmMepTransmitLbmVlanDropEnable 12.14.7.3.2:e
%edes        dot1agCfmMepTransmitLbmResultOK Indicates the result of the operation:\n\n        - true       The Loopback Message(s) will be\n                     (or has been) sent.\n        - false      The Loopback Message(s) will not\n                     be sent.\n       
%eref        dot1agCfmMepTransmitLbmResultOK 12.14.7.3.3:a
%edes        dot1agCfmMepTransmitLbmSeqNumber The Loopback Transaction Identifier\n       (dot1agCfmMepNextLbmTransId) of the first LBM (to be) sent.\n        The value returned is undefined if\n        dot1agCfmMepTransmitLbmResultOK is false.\n       
%eref        dot1agCfmMepTransmitLbmSeqNumber 12.14.7.3.3:a
%edes        dot1agCfmMepTransmitLtmStatus A Boolean flag set to true by the Bridge Port to indicate\n       that another LTM may be transmitted.\n       Reset to false by the MEP Linktrace Initiator State Machine.
%edes        dot1agCfmMepTransmitLtmFlags The flags field for LTMs transmitted by the MEP.
%eref        dot1agCfmMepTransmitLtmFlags 12.14.7.4.2:b, 20.42.1
%edes        dot1agCfmMepTransmitLtmTargetMacAddress The Target MAC Address Field to be transmitted: A unicast\n        destination MAC address.\n        This address will be used if the value of the column\n        dot1agCfmMepTransmitLtmTargetIsMepId is 'false'.\n       
%eref        dot1agCfmMepTransmitLtmTargetMacAddress 12.14.7.4.2:c
%edes        dot1agCfmMepTransmitLtmTargetMepId An indication of the Target MAC Address Field to be\n        transmitted:\n        The Maintenance association Endpoint Identifier of\n        another MEP in the same Maintenance Association\n        This address will be used if the value of the column\n        dot1agCfmMepTransmitLtmTargetIsMepId is 'true'.\n       
%eref        dot1agCfmMepTransmitLtmTargetMepId 12.14.7.4.2:c
%edes        dot1agCfmMepTransmitLtmTargetIsMepId True indicates that MEPID of the target MEP is used for\n        Linktrace transmission.\n        False indicates that unicast destination MAC address of the\n        target MEP is used for Loopback transmission.\n       
%eref        dot1agCfmMepTransmitLtmTargetIsMepId 12.14.7.4.2:c
%edes        dot1agCfmMepTransmitLtmTtl The LTM TTL field. Default value, if not specified, is 64.\n        The TTL field indicates the number of hops remaining to the\n        LTM.  Decremented by 1 by each Linktrace Responder that\n        handles the LTM.  The value returned in the LTR is one less\n        than that received in the LTM.  If the LTM TTL is 0 or 1, the\n        LTM is not forwarded to the next hop, and if 0, no LTR is\n        generated.\n       
%eref        dot1agCfmMepTransmitLtmTtl 12.14.7.4.2:d, 21.8.4
%edes        dot1agCfmMepTransmitLtmResult Indicates the result of the operation:\n\n        - true    The Linktrace Message will be (or has been) sent.\n        - false   The Linktrace Message will not be sent
%eref        dot1agCfmMepTransmitLtmResult 12.14.7.4.3:a
%edes        dot1agCfmMepTransmitLtmSeqNumber The LTM Transaction Identifier\n        (dot1agCfmMepLtmNextSeqNumber) of the LTM sent.\n        The value returned is undefined if\n        dot1agCfmMepTransmitLtmResult is false.\n       
%eref        dot1agCfmMepTransmitLtmSeqNumber 12.14.7.4.3:a
%edes        dot1agCfmMepTransmitLtmEgressIdentifier Identifies the MEP Linktrace Initiator that is originating,\n        or the Linktrace Responder that is forwarding, this LTM.\n        The low-order six octets contain a 48-bit IEEE MAC address\n        unique to the system in which the MEP Linktrace Initiator\n        or Linktrace Responder resides.  The high-order two octets\n        contain a value sufficient to uniquely identify the MEP\n        Linktrace Initiator or Linktrace Responder within that system.\n\n        For most Bridges, the address of any MAC attached to the\n        Bridge will suffice for the low-order six octets, and 0 for\n        the high-order octets.  In some situations, e.g., if multiple\n        virtual Bridges utilizing emulated LANs are implemented in a\n        single physical system, the high-order two octets can be used\n        to differentiate among the transmitting entities.\n\n        The value returned is undefined if\n        dot1agCfmMepTransmitLtmResult is false.\n       
%eref        dot1agCfmMepTransmitLtmEgressIdentifier 12.14.7.4.3:b, 21.8.8
%edes        dot1agCfmMepRowStatus   The status of the row.\n\n        The writable columns in a row can not be changed if the row\n        is active. All columns MUST have a valid value before a row\n        can be activated.\n       
%edes        dot1agCfmMepPbbTeCanReportPbbTePresence A Boolean valued parameter that is set to true if the system\n       has the capability to report the presence of traffic and that\n       the capability is enabled. Traffic presence reporting is an\n       optional PBB-TE feature.
%eref        dot1agCfmMepPbbTeCanReportPbbTePresence 12.14.7.1.3:af, 21.6.1.4
%edes        dot1agCfmMepPbbTeTrafficMismatchDefect A Boolean valued parameter that is set to true if the system\n       has detected a traffic field mismatch defect.  Mismatch detection\n        is an optional PBB-TE feature.
%eref        dot1agCfmMepPbbTeTrafficMismatchDefect 12.14.7.1.3:ah, 21.6.1.4
%edes        dot1agCfmMepPbbTransmitLbmLtmReverseVid This column specifies the value to use in the Reverse VID value\n       field of PBB-TE MIP TLVs contained within TransmitLTM pdus.
%eref        dot1agCfmMepPbbTransmitLbmLtmReverseVid 12.14.7.4.2
%edes        dot1agCfmMepPbbTeMismatchAlarm A Boolean valued parameter that is set to true if the system\n       is to allow a mismatch defect to generate a fault alarm.
%eref        dot1agCfmMepPbbTeMismatchAlarm 12.14.7.1.3:ag, 21.6.1.4
%edes        dot1agCfmMepPbbTeLocalMismatchDefect A Boolean valued parameter that is set to true if the system\n       has detected a local mismatch defect.  Mismatch detection\n       is an optional PBB-TE feature.
%eref        dot1agCfmMepPbbTeLocalMismatchDefect 12.14.7.1.3:ai, 21.6.1.4
%edes        dot1agCfmMepPbbTeMismatchSinceReset A Boolean valued parameter indicating if the mismatch defect\n       has been present since the MEP Mismatch Fault Notification\n       Generator was last in the MFNG_RESET state.
%eref        dot1agCfmMepPbbTeMismatchSinceReset 12.14.7.1.3:aj
%edes        dot1agCfmLtrTable       This table extends the MEP table and contains a list of\n        Linktrace replies received by a specific MEP in response to\n        a linktrace message.\n\n        SNMP SMI does not allow to state in a MIB that an object in\n        a table is an array.  The solution is to take the index (or\n        indices) of the first table and add one or more indices.\n       
%eref        dot1agCfmLtrTable       12.14.7.5
%edes        dot1agCfmLtrEntry       The Linktrace Reply table entry.
%edes        dot1agCfmLtrSeqNumber   Transaction identifier/Sequence number returned by a previous\n        transmit linktrace message command, indicating which LTM's\n        response is going to be returned.\n       
%eref        dot1agCfmLtrSeqNumber   12.14.7.5.2:b
%edes        dot1agCfmLtrReceiveOrder An index to distinguish among multiple LTRs with the same LTR\n        Transaction Identifier field value.  dot1agCfmLtrReceiveOrder\n        are assigned sequentially from 1, in the order that the\n        Linktrace Initiator received the LTRs.\n       
%eref        dot1agCfmLtrReceiveOrder 12.14.7.5.2:c
%edes        dot1agCfmLtrTtl         TTL field value for a returned LTR.
%eref        dot1agCfmLtrTtl         12.14.7.5, 20.41.2.2
%edes        dot1agCfmLtrForwarded   Indicates if a LTM was forwarded by the responding MP, as\n        returned in the 'FwdYes' flag of the flags field.\n       
%eref        dot1agCfmLtrForwarded   12.14.7.5.3:c, 20.41.2.1
%edes        dot1agCfmLtrTerminalMep A Boolean value stating whether the forwarded LTM reached a\n        MEP enclosing its MA, as returned in the Terminal MEP flag of\n        the Flags field.\n       
%eref        dot1agCfmLtrTerminalMep 12.14.7.5.3:d, 20.41.2.1
%edes        dot1agCfmLtrLastEgressIdentifier An octet field holding the Last Egress Identifier returned\n        in the LTR Egress Identifier TLV of the LTR.\n        The Last Egress Identifier identifies the MEP Linktrace\n        Initiator that originated, or the Linktrace Responder that\n        forwarded, the LTM to which this LTR is the response.  This\n        is the same value as the Egress Identifier TLV of that LTM.\n       
%eref        dot1agCfmLtrLastEgressIdentifier 12.14.7.5.3:e, 20.41.2.3
%edes        dot1agCfmLtrNextEgressIdentifier An octet field holding the Next Egress Identifier returned\n        in the LTR Egress Identifier TLV of the LTR.  The Next Egress\n        Identifier Identifies the Linktrace Responder that\n        transmitted this LTR, and can forward the LTM to the next\n        hop.  This is the same value as the Egress Identifier TLV of\n        the forwarded LTM, if any. If the FwdYes bit of the Flags\n        field is false, the contents of this field are undefined,\n        i.e., any value can be transmitted, and the field is ignored\n        by the receiver.\n       
%eref        dot1agCfmLtrNextEgressIdentifier 12.14.7.5.3:f, 20.41.2.4
%edes        dot1agCfmLtrRelay       Value returned in the Relay Action field.
%eref        dot1agCfmLtrRelay       12.14.7.5.3:g, 20.41.2.5
%edes        dot1agCfmLtrChassisIdSubtype This object specifies the format of the Chassis ID returned\n        in the Sender ID TLV of the LTR, if any.  This value is\n        meaningless if the dot1agCfmLtrChassisId has a length of 0.
%eref        dot1agCfmLtrChassisIdSubtype 12.14.7.5.3:h, 21.5.3.2
%edes        dot1agCfmLtrChassisId   The Chassis ID returned in the Sender ID TLV of the LTR, if\n        any. The format of this object is determined by the\n        value of the dot1agCfmLtrChassisIdSubtype object.\n       
%eref        dot1agCfmLtrChassisId   12.14.7.5.3:i, 21.5.3.2
%edes        dot1agCfmLtrManAddressDomain The TDomain that identifies the type and format of\n        the related dot1agCfmMepDbManAddress object, used to access\n        the SNMP agent of the system transmitting the LTR.  Received\n        in the LTR Sender ID TLV from that system.\n\n        Typical values will be one of (not all inclusive) list:\n\n\n           snmpUDPDomain          (from SNMPv2-TM, RFC3417)\n           snmpIeee802Domain      (from SNMP-IEEE802-TM-MIB, RFC4789)\n\n        The value 'zeroDotZero' (from RFC2578) indicates 'no management\n        address was present in the LTR', in which case the related\n        object dot1agCfmMepDbManAddress MUST have a zero-length OCTET\n        STRING as a value.\n       
%eref        dot1agCfmLtrManAddressDomain 12.14.7.5.3:j, 21.5.3.5, 21.9.6
%edes        dot1agCfmLtrManAddress  The TAddress that can be used to access the SNMP\n        agent of the system transmitting the CCM, received in the CCM\n        Sender ID TLV from that system.\n\n        If the related object dot1agCfmLtrManAddressDomain contains\n        the value 'zeroDotZero', this object dot1agCfmLtrManAddress\n        MUST have a zero-length OCTET STRING as a value.\n      
%eref        dot1agCfmLtrManAddress  12.14.7.5.3:j, 21.5.3.7, 21.9.6
%edes        dot1agCfmLtrIngress     The value returned in the Ingress Action Field of the LTM.\n        The value ingNoTlv(0) indicates that no Reply Ingress TLV was\n        returned in the LTM.
%eref        dot1agCfmLtrIngress     12.14.7.5.3:k, 20.41.2.6
%edes        dot1agCfmLtrIngressMac  MAC address returned in the ingress MAC address field.\n        If the dot1agCfmLtrIngress object contains the value\n        ingNoTlv(0), then the contents of this object are meaningless.
%eref        dot1agCfmLtrIngressMac  12.14.7.5.3:l, 20.41.2.7
%edes        dot1agCfmLtrIngressPortIdSubtype Format of the Ingress Port ID.\n        If the dot1agCfmLtrIngress object contains the value\n        ingNoTlv(0), then the contents of this object are meaningless.
%eref        dot1agCfmLtrIngressPortIdSubtype 12.14.7.5.3:m, 20.41.2.8
%edes        dot1agCfmLtrIngressPortId Ingress Port ID. The format of this object is determined by\n        the value of the dot1agCfmLtrIngressPortIdSubtype object.\n        If the dot1agCfmLtrIngress object contains the value\n        ingNoTlv(0), then the contents of this object are meaningless.
%eref        dot1agCfmLtrIngressPortId 12.14.7.5.3:n, 20.41.2.9
%edes        dot1agCfmLtrEgress      The value returned in the Egress Action Field of the LTM.\n        The value egrNoTlv(0) indicates that no Reply Egress TLV was\n        returned in the LTM.
%eref        dot1agCfmLtrEgress      12.14.7.5.3:o, 20.41.2.10
%edes        dot1agCfmLtrEgressMac   MAC address returned in the egress MAC address field.\n        If the dot1agCfmLtrEgress object contains the value\n        egrNoTlv(0), then the contents of this object are meaningless.
%eref        dot1agCfmLtrEgressMac   12.14.7.5.3:p, 20.41.2.11
%edes        dot1agCfmLtrEgressPortIdSubtype Format of the egress Port ID.\n        If the dot1agCfmLtrEgress object contains the value\n        egrNoTlv(0), then the contents of this object are meaningless.
%eref        dot1agCfmLtrEgressPortIdSubtype 12.14.7.5.3:q, 20.41.2.12
%edes        dot1agCfmLtrEgressPortId Egress Port ID. The format of this object is determined by\n        the value of the dot1agCfmLtrEgressPortIdSubtype object.\n        If the dot1agCfmLtrEgress object contains the value\n        egrNoTlv(0), then the contents of this object are meaningless.
%eref        dot1agCfmLtrEgressPortId 12.14.7.5.3:r, 20.41.2.13
%edes        dot1agCfmLtrOrganizationSpecificTlv All Organization specific TLVs returned in the LTR, if\n        any.  Includes all octets including and following the TLV\n        Length field of each TLV, concatenated together.
%eref        dot1agCfmLtrOrganizationSpecificTlv 12.14.7.5.3:s, 21.5.2
%edes        dot1agCfmMepDbTable     The MEP Database. A database, maintained by every MEP, that\n        maintains received information about other MEPs in the\n        Maintenance Domain.\n\n        The SMI does not allow to state in a MIB that an object in\n        a table is an array. The solution is to take the index (or\n        indices) of the first table and add one or more indices.\n       
%eref        dot1agCfmMepDbTable     19.2.15
%edes        dot1agCfmMepDbEntry     The MEP Database table entry.
%edes        dot1agCfmMepDbRMepIdentifier Maintenance association Endpoint Identifier of a remote MEP\n        whose information from the MEP Database is to be returned.\n       
%eref        dot1agCfmMepDbRMepIdentifier 12.14.7.6.2:b
%edes        dot1agCfmMepDbRMepState The operational state of the remote MEP IFF State machines.
%eref        dot1agCfmMepDbRMepState 12.14.7.6.3:b, 20.22
%edes        dot1agCfmMepDbRMepFailedOkTime The time (SysUpTime) at which the IFF Remote MEP state machine\n        last entered either the RMEP_FAILED or RMEP_OK state.\n       
%eref        dot1agCfmMepDbRMepFailedOkTime 12.14.7.6.3:c
%edes        dot1agCfmMepDbMacAddress The MAC address of the remote MEP.
%eref        dot1agCfmMepDbMacAddress 12.14.7.6.3:d, 20.19.7
%edes        dot1agCfmMepDbRdi       State of the RDI bit in the last received CCM (true for\n        RDI=1), or false if none has been received.\n       
%eref        dot1agCfmMepDbRdi       12.14.7.6.3:e, 20.19.2
%edes        dot1agCfmMepDbPortStatusTlv An enumerated value of the Port status TLV received in the\n        last CCM from the remote MEP or the default value\n        psNoPortStateTLV indicating either no CCM has been received,\n        or that nor port status TLV was received in the last CCM.\n       
%eref        dot1agCfmMepDbPortStatusTlv 12.14.7.6.3:f, 20.19.3
%edes        dot1agCfmMepDbInterfaceStatusTlv An enumerated value of the Interface status TLV received\n        in the last CCM from the remote MEP or the default value\n        isNoInterfaceStatus TLV indicating either no CCM has been\n        received, or that no interface status TLV was received in\n        the last CCM.\n       
%eref        dot1agCfmMepDbInterfaceStatusTlv 12.14.7.6.3:g, 20.19.4
%edes        dot1agCfmMepDbChassisIdSubtype This object specifies the format of the Chassis ID received\n        in the last CCM.
%eref        dot1agCfmMepDbChassisIdSubtype 12.14.7.6.3:h, 21.5.3.2
%edes        dot1agCfmMepDbChassisId The Chassis ID. The format of this object is determined by the\n        value of the dot1agCfmLtrChassisIdSubtype object.\n       
%eref        dot1agCfmMepDbChassisId 12.14.7.6.3:h, 21.5.3.3
%edes        dot1agCfmMepDbManAddressDomain The TDomain that identifies the type and format of\n        the related dot1agCfmMepDbManAddress object, used to access\n        the SNMP agent of the system transmitting the CCM.  Received\n        in the CCM Sender ID TLV from that system.\n\n        Typical values will be one of (not all inclusive) list:\n\n\n           snmpUDPDomain          (from SNMPv2-TM, RFC3417)\n           snmpIeee802Domain      (from SNMP-IEEE802-TM-MIB, RFC4789)\n\n        The value 'zeroDotZero' (from RFC2578) indicates 'no management\n        address was present in the LTR', in which case the related\n        object dot1agCfmMepDbManAddress MUST have a zero-length OCTET\n        STRING as a value.\n       
%eref        dot1agCfmMepDbManAddressDomain 12.14.7.6.3:h, 21.5.3.5, 21.6.7
%edes        dot1agCfmMepDbManAddress The TAddress that can be used to access the SNMP\n        agent of the system transmitting the CCM, received in the CCM\n        Sender ID TLV from that system.\n\n        If the related object dot1agCfmMepDbManAddressDomain contains\n        the value 'zeroDotZero', this object dot1agCfmMepDbManAddress\n        MUST have a zero-length OCTET STRING as a value.\n       
%eref        dot1agCfmMepDbManAddress 12.14.7.6.3:h, 21.5.3.7, 21.6.7
%edes        dot1agCfmMepDbRMepIsActive A Boolean value stating if the remote MEP is active.
%eref        dot1agCfmMepDbRMepIsActive 12.14.7.1.3:ae
%est                 dot1agCfmStackGroup deprecated
%edes        dot1agCfmStackGroup     Objects for the Stack group.
%est                 dot1agCfmDefaultMdGroup deprecated
%edes        dot1agCfmDefaultMdGroup Objects for the Default MD Level group.
%est                 dot1agCfmVlanIdGroup deprecated
%edes        dot1agCfmVlanIdGroup    Objects for the VLAN ID group.
%est                 dot1agCfmConfigErrorListGroup deprecated
%edes        dot1agCfmConfigErrorListGroup Objects for the CFM Configuration Error List Group.
%edes        dot1agCfmMdGroup        Objects for the Maintenance Domain Group.
%est                 dot1agCfmMaGroup deprecated
%edes        dot1agCfmMaGroup        Objects for the MA group.
%edes        dot1agCfmMepGroup       Objects for the MEP group.
%edes        dot1agCfmMepDbGroup     Objects for the MEP group.
%edes        dot1agCfmNotificationsGroup Objects for the Notifications group.
%edes        ieee8021CfmMaNetGroup   Objects for the MA Net group.
%edes        ieee8021CfmDefaultMdDefGroup Objects for the Default MD default Level group.
%edes        ieee8021CfmPbbTeExtensionGroup Objects needed for systems that support PBB-TE CFM functionality.
%edes        ieee8021CfmPbbTeTrafficBitGroup Objects needed for PBB-TE supporting systems that support the\n        optional traffic bit.
zeroDotZero             25
dot1xPaeSystemAuthControl 149
dot1xPaePortTable       403
dot1xPaePortEntry       695
dot1xPaePortNumber      817
dot1xPaePortProtocolVersion 1011
dot1xPaePortCapabilities 1228
dot1xPaePortInitialize  1498
dot1xPaePortReauthenticate 1865
dot1xAuthConfigTable    2325
dot1xAuthConfigEntry    2719
dot1xAuthPaeState       2823
dot1xAuthBackendAuthState 3065
dot1xAuthAdminControlledDirections 3326
dot1xAuthOperControlledDirections 3608
dot1xAuthAuthControlledPortStatus 3883
dot1xAuthAuthControlledPortControl 4161
dot1xAuthQuietPeriod    4444
dot1xAuthTxPeriod       4721
dot1xAuthSuppTimeout    4950
dot1xAuthServerTimeout  5232
dot1xAuthMaxReq         5520
dot1xAuthReAuthPeriod   5728
dot1xAuthReAuthEnabled  6013
dot1xAuthKeyTxEnabled   6264
dot1xAuthStatsTable     6561
dot1xAuthStatsEntry     6949
dot1xAuthEapolFramesRx  7041
dot1xAuthEapolFramesTx  7313
dot1xAuthEapolStartFramesRx 7588
dot1xAuthEapolLogoffFramesRx 7868
dot1xAuthEapolRespIdFramesRx 8153
dot1xAuthEapolRespFramesRx 8439
dot1xAuthEapolReqIdFramesTx 8767
dot1xAuthEapolReqFramesTx 9057
dot1xAuthInvalidEapolFramesRx 9381
dot1xAuthEapLengthErrorFramesRx 9714
dot1xAuthLastEapolFrameVersion 10064
dot1xAuthLastEapolFrameSource 10343
dot1xAuthDiagTable      10613
dot1xAuthDiagEntry      10949
dot1xAuthEntersConnecting 11042
dot1xAuthEapLogoffsWhileConnecting 11291
dot1xAuthEntersAuthenticating 11594
dot1xAuthAuthSuccessWhileAuthenticating 11933
dot1xAuthAuthTimeoutsWhileAuthenticating 12353
dot1xAuthAuthFailWhileAuthenticating 12740
dot1xAuthAuthReauthsWhileAuthenticating 13112
dot1xAuthAuthEapStartsWhileAuthenticating 13443
dot1xAuthAuthEapLogoffWhileAuthenticating 13794
dot1xAuthAuthReauthsWhileAuthenticated 14146
dot1xAuthAuthEapStartsWhileAuthenticated 14486
dot1xAuthAuthEapLogoffWhileAuthenticated 14837
dot1xAuthBackendResponses 15191
dot1xAuthBackendAccessChallenges 15623
dot1xAuthBackendOtherRequestsToSupplicant 16078
dot1xAuthBackendNonNakResponsesFromSupplicant 16549
dot1xAuthBackendAuthSuccesses 17156
dot1xAuthBackendAuthFails 17614
dot1xAuthSessionStatsTable 18040
dot1xAuthSessionStatsEntry 18389
dot1xAuthSessionOctetsRx 18723
dot1xAuthSessionOctetsTx 18992
dot1xAuthSessionFramesRx 19270
dot1xAuthSessionFramesTx 19529
dot1xAuthSessionId      19797
dot1xAuthSessionAuthenticMethod 20087
dot1xAuthSessionTime    20356
dot1xAuthSessionTerminateCause 20549
dot1xAuthSessionUserName 20778
dot1xSuppConfigTable    21015
dot1xSuppConfigEntry    21375
dot1xSuppPaeState       21466
dot1xSuppHeldPeriod     21707
dot1xSuppAuthPeriod     21990
dot1xSuppStartPeriod    22273
dot1xSuppMaxStart       22559
dot1xSuppControlledPortStatus 22814
dot1xSuppAccessCtrlWithAuth 23067
dot1xSuppBackendState   23843
dot1xSuppStatsTable     24034
dot1xSuppStatsEntry     24391
dot1xSuppEapolFramesRx  24479
dot1xSuppEapolFramesTx  24742
dot1xSuppEapolStartFramesTx 25014
dot1xSuppEapolLogoffFramesTx 25300
dot1xSuppEapolRespIdFramesTx 25591
dot1xSuppEapolRespFramesTx 25879
dot1xSuppEapolReqIdFramesRx 26201
dot1xSuppEapolReqFramesRx 26475
dot1xSuppInvalidEapolFramesRx 26766
dot1xSuppEapLengthErrorFramesRx 27096
dot1xSuppLastEapolFrameVersion 27451
dot1xSuppLastEapolFrameSource 27730
dot1xPaeSystemGroup     28000
dot1xPaeAuthConfigGroup 28133
dot1xPaeAuthStatsGroup  28327
dot1xPaeAuthDiagGroup   28448
dot1xPaeAuthSessionStatsGroup 28636
dot1xPaeSuppConfigGroup 28796
dot1xPaeSuppStatsGroup  28928
dot1xPaeAuthConfigGroup2 29102
dot1xPaeSuppConfigGroup2 29239
dot1xPaeSuppStatsGroup2 29372
lldpRemTablesChange     29489
lldpMessageTxInterval   29939
lldpMessageTxHoldMultiplier 30426
lldpReinitDelay         31331
lldpTxDelay             31933
lldpNotificationInterval 32670
lldpPortConfigTable     33834
lldpPortConfigEntry     33955
lldpPortConfigPortNum   34228
lldpPortConfigAdminStatus 34531
lldpPortConfigNotificationEnable 35797
lldpPortConfigTLVsTxEnable 36110
lldpConfigManAddrTable  37821
lldpConfigManAddrEntry  37987
lldpConfigManAddrPortsTxEnable 38701
lldpStatsRemTablesLastChangeTime 39301
lldpStatsRemTablesInserts 39740
lldpStatsRemTablesDeletes 41024
lldpStatsRemTablesDrops 41732
lldpStatsRemTablesAgeouts 42077
lldpStatsTxPortTable    42713
lldpStatsTxPortEntry    42974
lldpStatsTxPortNum      43679
lldpStatsTxPortFramesTotal 43977
lldpStatsRxPortTable    44181
lldpStatsRxPortEntry    44426
lldpStatsRxPortNum      45128
lldpStatsRxPortFramesDiscardedTotal 45426
lldpStatsRxPortFramesErrors 45961
lldpStatsRxPortFramesTotal 46206
lldpStatsRxPortTLVsDiscardedTotal 46447
lldpStatsRxPortTLVsUnrecognizedTotal 46676
lldpStatsRxPortAgeoutsTotal 47231
lldpLocChassisIdSubtype 48827
lldpLocChassisId        49028
lldpLocSysName          49235
lldpLocSysDesc          49561
lldpLocSysCapSupported  49894
lldpLocSysCapEnabled    50106
lldpLocPortTable        50316
lldpLocPortEntry        50480
lldpLocPortNum          50657
lldpLocPortIdSubtype    50957
lldpLocPortId           51158
lldpLocPortDesc         51378
lldpLocManAddrTable     51741
lldpLocManAddrEntry     51885
lldpLocManAddrSubtype   52402
lldpLocManAddr          52624
lldpLocManAddrLen       52921
lldpLocManAddrIfSubtype 53473
lldpLocManAddrIfId      53746
lldpLocManAddrOID       54009
lldpRemTable            54297
lldpRemEntry            56985
lldpRemTimeMark         57225
lldpRemLocalPortNum     57552
lldpRemIndex            57971
lldpRemChassisIdSubtype 58457
lldpRemChassisId        58659
lldpRemPortIdSubtype    58867
lldpRemPortId           59068
lldpRemPortDesc         59273
lldpRemSysName          59493
lldpRemSysDesc          59682
lldpRemSysCapSupported  59878
lldpRemSysCapEnabled    60091
lldpRemManAddrTable     60302
lldpRemManAddrEntry     60541
lldpRemManAddrSubtype   61160
lldpRemManAddr          61382
lldpRemManAddrIfSubtype 61680
lldpRemManAddrIfId      61954
lldpRemManAddrOID       62218
lldpRemUnknownTLVTable  62507
lldpRemUnknownTLVEntry  63419
lldpRemUnknownTLVType   63696
lldpRemUnknownTLVInfo   63887
lldpRemOrgDefInfoTable  64079
lldpRemOrgDefInfoEntry  64676
lldpRemOrgDefInfoOUI    65606
lldpRemOrgDefInfoSubtype 65972
lldpRemOrgDefInfoIndex  66540
lldpRemOrgDefInfo       67155
lldpConfigGroup         67457
lldpConfigRxGroup       67673
lldpConfigTxGroup       67951
lldpStatsRxGroup        68232
lldpStatsTxGroup        68503
lldpLocSysGroup         68780
lldpRemSysGroup         69058
lldpNotificationsGroup  69629
sysDescr                69926
sysObjectID             70192
sysUpTime               70772
sysContact              70950
sysName                 71231
sysLocation             71492
sysServices             71697
sysORLastChange         72919
sysORTable              73078
sysOREntry              73455
sysORIndex              73539
sysORID                 73688
sysORDescr              73933
sysORUpTime             74080
ifNumber                74210
ifTable                 74355
ifEntry                 74494
ifIndex                 74627
ifDescr                 75031
ifType                  75297
ifMtu                   75558
ifSpeed                 75896
ifPhysAddress           76561
ifAdminStatus           77062
ifOperStatus            77622
ifLastChange            78517
ifInOctets              78849
ifInUcastPkts           79219
ifInNUcastPkts          79672
ifInDiscards            80229
ifInErrors              80805
ifInUnknownProtos       81475
ifOutOctets             82308
ifOutUcastPkts          82683
ifOutNUcastPkts         83208
ifOutDiscards           83839
ifOutErrors             84374
ifOutQLen               84951
ifSpecific              85042
atTable                 85771
atEntry                 86214
atIfIndex               86340
atPhysAddress           86621
atNetAddress            87480
ipForwarding            87644
ipDefaultTTL            88316
ipInReceives            88576
ipInHdrErrors           88725
ipInAddrErrors          89040
ipForwDatagrams         89641
ipInUnknownProtos       90147
ipInDiscards            90337
ipInDelivers            90704
ipOutRequests           90854
ipOutDiscards           91153
ipOutNoRoutes           91593
ipReasmTimeout          92039
ipReasmReqds            92219
ipReasmOKs              92354
ipReasmFails            92461
ipFragOKs               92898
ipFragFails             93032
ipFragCreates           93281
ipAddrTable             93452
ipAddrEntry             93580
ipAdEntAddr             93698
ipAdEntIfIndex          93820
ipAdEntNetMask          94130
ipAdEntBcastAddr        94378
ipAdEntReasmMaxSize     94893
ipRouteTable            95094
ipRouteEntry            95165
ipRouteDest             95241
ipRouteIfIndex          95663
ipRouteMetric1          96017
ipRouteMetric2          96325
ipRouteMetric3          96634
ipRouteMetric4          96943
ipRouteNextHop          97252
ipRouteType             97546
ipRouteProto            98537
ipRouteAge              98790
ipRouteMask             99108
ipRouteMetric5          100012
ipRouteInfo             100321
ipNetToMediaTable       100894
ipNetToMediaEntry       101037
ipNetToMediaIfIndex     101158
ipNetToMediaPhysAddress 101439
ipNetToMediaNetAddress  101518
ipNetToMediaType        101642
ipRoutingDiscards       102477
icmpInMsgs              102772
icmpInErrors            102966
icmpInDestUnreachs      103171
icmpInTimeExcds         103285
icmpInParmProbs         103389
icmpInSrcQuenchs        103497
icmpInRedirects         103601
icmpInEchos             103687
icmpInEchoReps          103792
icmpInTimestamps        103880
icmpInTimestampReps     103990
icmpInAddrMasks         104096
icmpInAddrMaskReps      104207
icmpOutMsgs             104316
icmpOutErrors           104521
icmpOutDestUnreachs     105009
icmpOutTimeExcds        105119
icmpOutParmProbs        105206
icmpOutSrcQuenchs       105310
icmpOutRedirects        105397
icmpOutEchos            105588
icmpOutEchoReps         105676
icmpOutTimestamps       105760
icmpOutTimestampReps    105866
icmpOutAddrMasks        105968
icmpOutAddrMaskReps     106075
tcpRtoAlgorithm         106180
tcpRtoMin               106329
tcpRtoMax               106831
tcpMaxConn              107333
tcpActiveOpens          107590
tcpPassiveOpens         107766
tcpAttemptFails         107942
tcpEstabResets          108302
tcpCurrEstab            108512
tcpInSegs               108673
tcpOutSegs              108902
tcpRetransSegs          109099
tcpConnTable            109324
tcpConnEntry            109432
tcpConnState            109721
tcpConnLocalAddress     110633
tcpConnLocalPort        110932
tcpConnRemAddress       111018
tcpConnRemPort          111104
tcpInErrs               111191
tcpOutRsts              111317
udpInDatagrams          111426
udpNoPorts              111536
udpInErrors             111704
udpOutDatagrams         111909
udpTable                112018
udpEntry                112102
udpLocalAddress         112207
udpLocalPort            112473
egpInMsgs               112557
egpInErrors             112660
egpOutMsgs              112776
egpOutErrors            112880
egpNeighTable           113049
egpNeighEntry           113112
egpNeighState           113241
egpNeighAddr            113535
egpNeighAs              113619
egpNeighInMsgs          113816
egpNeighInErrs          113938
egpNeighOutMsgs         114111
egpNeighOutErrs         114226
egpNeighInErrMsgs       114412
egpNeighOutErrMsgs      114534
egpNeighStateUps        114650
egpNeighStateDowns      114774
egpNeighIntervalHello   114919
egpNeighIntervalPoll    115121
egpNeighMode            115324
egpNeighEventTrigger    115439
egpAs                   116375
mplsXCUp                116463
mplsXCDown              117615
mplsInterfaceTable      118760
mplsInterfaceEntry      118887
mplsInterfaceIndex      120378
mplsInterfaceLabelMinIn 121144
mplsInterfaceLabelMaxIn 121290
mplsInterfaceLabelMinOut 121436
mplsInterfaceLabelMaxOut 121582
mplsInterfaceTotalBandwidth 121726
mplsInterfaceAvailableBandwidth 122163
mplsInterfaceLabelParticipationType 122725
mplsInterfacePerfTable  124459
mplsInterfacePerfEntry  124582
mplsInterfacePerfInLabelsInUse 124941
mplsInterfacePerfInLabelLookupFailures 125548
mplsInterfacePerfOutLabelsInUse 125927
mplsInterfacePerfOutFragmentedPkts 126256
mplsInSegmentIndexNext  126575
mplsInSegmentTable      127036
mplsInSegmentEntry      128436
mplsInSegmentIndex      129116
mplsInSegmentInterface  129278
mplsInSegmentLabel      129947
mplsInSegmentLabelPtr   130214
mplsInSegmentNPop       130650
mplsInSegmentAddrFamily 131146
mplsInSegmentXCIndex    131870
mplsInSegmentOwner      132358
mplsInSegmentTrafficParamPtr 132484
mplsInSegmentRowStatus  133472
mplsInSegmentStorageType 133785
mplsInSegmentPerfTable  134189
mplsInSegmentPerfEntry  134319
mplsInSegmentPerfOctets 134743
mplsInSegmentPerfPackets 135070
mplsInSegmentPerfErrors 135160
mplsInSegmentPerfDiscards 135264
mplsInSegmentPerfHCOctets 135612
mplsInSegmentPerfDiscontinuityTime 135862
mplsOutSegmentIndexNext 136250
mplsOutSegmentTable     136711
mplsOutSegmentEntry     136834
mplsOutSegmentIndex     137991
mplsOutSegmentInterface 138384
mplsOutSegmentPushTopLabel 138736
mplsOutSegmentTopLabel  139533
mplsOutSegmentTopLabelPtr 139942
mplsOutSegmentNextHopAddrType 140382
mplsOutSegmentNextHopAddr 140870
mplsOutSegmentXCIndex   141159
mplsOutSegmentOwner     141673
mplsOutSegmentTrafficParamPtr 141800
mplsOutSegmentRowStatus 142849
mplsOutSegmentStorageType 143135
mplsOutSegmentPerfTable 143487
mplsOutSegmentPerfEntry 143723
mplsOutSegmentPerfOctets 144027
mplsOutSegmentPerfPackets 144342
mplsOutSegmentPerfErrors 144464
mplsOutSegmentPerfDiscards 144585
mplsOutSegmentPerfHCOctets 144952
mplsOutSegmentPerfDiscontinuityTime 145197
mplsXCIndexNext         145586
mplsXCTable             146018
mplsXCEntry             146377
mplsXCIndex             147913
mplsXCInSegmentIndex    148117
mplsXCOutSegmentIndex   148426
mplsXCLspId             148833
mplsXCLabelStackIndex   149074
mplsXCOwner             149637
mplsXCRowStatus         149769
mplsXCStorageType       150028
mplsXCAdminStatus       150553
mplsXCOperStatus        150640
mplsMaxLabelStackDepth  150742
mplsLabelStackIndexNext 150828
mplsLabelStackTable     151316
mplsLabelStackEntry     151520
mplsLabelStackIndex     151826
mplsLabelStackLabelIndex 152082
mplsLabelStackLabel     152475
mplsLabelStackLabelPtr  152535
mplsLabelStackRowStatus 152970
mplsLabelStackStorageType 153236
mplsInSegmentMapTable   153874
mplsInSegmentMapEntry   154205
mplsInSegmentMapInterface 155102
mplsInSegmentMapLabel   155240
mplsInSegmentMapLabelPtrIndex 155376
mplsInSegmentMapIndex   155903
mplsXCNotificationsEnable 156219
mplsLdpInitSessionThresholdExceeded 156619
mplsLdpPathVectorLimitMismatch 156934
mplsLdpSessionUp        157246
mplsLdpSessionDown      157407
mplsLdpLsrId            157565
mplsLdpLsrLoopDetectionCapable 157645
mplsLdpEntityLastChange 158684
mplsLdpEntityIndexNext  159149
mplsLdpEntityTable      159413
mplsLdpEntityEntry      159640
mplsLdpEntityLdpId      159841
mplsLdpEntityIndex      159995
mplsLdpEntityProtocolVersion 160836
mplsLdpEntityAdminStatus 161365
mplsLdpEntityOperStatus 162285
mplsLdpEntityTcpPort    162611
mplsLdpEntityUdpDscPort 162898
mplsLdpEntityMaxPduLength 163308
mplsLdpEntityKeepAliveHoldTimer 164104
mplsLdpEntityHelloHoldTimer 164305
mplsLdpEntityInitSessionThreshold 165835
mplsLdpEntityLabelDistMethod 167073
mplsLdpEntityLabelRetentionMode 167205
mplsLdpEntityPathVectorLimit 167738
mplsLdpEntityHopCountLimit 168446
mplsLdpEntityTransportAddrKind 169089
mplsLdpEntityTargetPeer 169674
mplsLdpEntityTargetPeerAddrType 169783
mplsLdpEntityTargetPeerAddr 170023
mplsLdpEntityLabelType  170265
mplsLdpEntityDiscontinuityTime 171004
mplsLdpEntityStorageType 171555
mplsLdpEntityRowStatus  171776
mplsLdpEntityStatsTable 172662
mplsLdpEntityStatsEntry 172896
mplsLdpEntityStatsSessionAttempts 173499
mplsLdpEntityStatsSessionRejectedNoHelloErrors 173994
mplsLdpEntityStatsSessionRejectedAdErrors 174400
mplsLdpEntityStatsSessionRejectedMaxPduErrors 174822
mplsLdpEntityStatsSessionRejectedLRErrors 175246
mplsLdpEntityStatsBadLdpIdentifierErrors 175655
mplsLdpEntityStatsBadPduLengthErrors 176194
mplsLdpEntityStatsBadMessageLengthErrors 176721
mplsLdpEntityStatsBadTlvLengthErrors 177260
mplsLdpEntityStatsMalformedTlvValueErrors 177787
mplsLdpEntityStatsKeepAliveTimerExpErrors 178338
mplsLdpEntityStatsShutdownReceivedNotifications 178887
mplsLdpEntityStatsShutdownSentNotifications 179327
mplsLdpPeerLastChange   179758
mplsLdpPeerTable        179940
mplsLdpPeerEntry        180346
mplsLdpPeerLdpId        180519
mplsLdpPeerLabelDistMethod 180595
mplsLdpPeerPathVectorLimit 180725
mplsLdpPeerTransportAddrType 181210
mplsLdpPeerTransportAddr 181987
mplsLdpSessionTable     182433
mplsLdpSessionEntry     182655
mplsLdpSessionStateLastChange 183610
mplsLdpSessionState     183802
mplsLdpSessionRole      184104
mplsLdpSessionProtocolVersion 184661
mplsLdpSessionKeepAliveHoldTimeRem 185012
mplsLdpSessionKeepAliveTime 185124
mplsLdpSessionMaxPduLength 186012
mplsLdpSessionDiscontinuityTime 186679
mplsLdpSessionStatsTable 187449
mplsLdpSessionStatsEntry 187621
mplsLdpSessionStatsUnknownMesTypeErrors 187793
mplsLdpSessionStatsUnknownTlvErrors 188185
mplsLdpHelloAdjacencyTable 188564
mplsLdpHelloAdjacencyEntry 188649
mplsLdpHelloAdjacencyIndex 188814
mplsLdpHelloAdjacencyHoldTimeRem 188899
mplsLdpHelloAdjacencyHoldTime 189413
mplsLdpHelloAdjacencyType 190100
mplsInSegmentLdpLspTable 190317
mplsInSegmentLdpLspEntry 190464
mplsInSegmentLdpLspIndex 190892
mplsInSegmentLdpLspLabelType 191051
mplsInSegmentLdpLspType 191119
mplsOutSegmentLdpLspTable 191186
mplsOutSegmentLdpLspEntry 191327
mplsOutSegmentLdpLspIndex 191718
mplsOutSegmentLdpLspLabelType 191880
mplsOutSegmentLdpLspType 191949
mplsFecLastChange       192017
mplsFecIndexNext        192450
mplsFecTable            192702
mplsFecEntry            192856
mplsFecIndex            192937
mplsFecType             193024
mplsFecAddrPrefixLength 193407
mplsFecAddrType         194040
mplsFecAddr             194331
mplsFecStorageType      194925
mplsFecRowStatus        195145
mplsLdpLspFecLastChange 195585
mplsLdpLspFecTable      196023
mplsLdpLspFecEntry      196198
mplsLdpLspFecSegment    196294
mplsLdpLspFecSegmentIndex 196744
mplsLdpLspFecIndex      197140
mplsLdpLspFecStorageType 197446
mplsLdpLspFecRowStatus  197664
mplsLdpSessionPeerAddrTable 198739
mplsLdpSessionPeerAddrEntry 199309
mplsLdpSessionPeerAddrIndex 199575
mplsLdpSessionPeerNextHopAddrType 199697
mplsLdpSessionPeerNextHopAddr 200011
mplsL3VpnVrfUp          200305
mplsL3VpnVrfDown        200894
mplsL3VpnVrfRouteMidThreshExceeded 201474
mplsL3VpnVrfNumVrfRouteMaxThreshExceeded 201963
mplsL3VpnNumVrfSecIllglLblThrshExcd 203355
mplsL3VpnNumVrfRouteMaxThreshCleared 203816
mplsL3VpnConfiguredVrfs 205564
mplsL3VpnActiveVrfs     205656
mplsL3VpnConnectedInterfaces 205867
mplsL3VpnNotificationEnable 205958
mplsL3VpnVrfConfMaxPossRts 206374
mplsL3VpnVrfConfRteMxThrshTime 206722
mplsL3VpnIllLblRcvThrsh 207663
mplsL3VpnIfConfTable    207914
mplsL3VpnIfConfEntry    208041
mplsL3VpnIfConfIndex    208290
mplsL3VpnIfVpnClassification 208833
mplsL3VpnIfVpnRouteDistProtocol 208998
mplsL3VpnIfConfStorageType 209329
mplsL3VpnIfConfRowStatus 209602
mplsL3VpnVrfTable       210355
mplsL3VpnVrfEntry       210761
mplsL3VpnVrfName        210981
mplsL3VpnVrfVpnId       211479
mplsL3VpnVrfDescription 211697
mplsL3VpnVrfRD          211780
mplsL3VpnVrfCreationTime 211857
mplsL3VpnVrfOperStatus  211943
mplsL3VpnVrfActiveInterfaces 212342
mplsL3VpnVrfAssociatedInterfaces 213011
mplsL3VpnVrfConfMidRteThresh 213153
mplsL3VpnVrfConfHighRteThresh 213284
mplsL3VpnVrfConfMaxRoutes 213417
mplsL3VpnVrfConfLastChanged 213641
mplsL3VpnVrfConfRowStatus 213907
mplsL3VpnVrfConfAdminStatus 214254
mplsL3VpnVrfConfStorageType 214361
mplsL3VpnVrfRTTable     214640
mplsL3VpnVrfRTEntry     214826
mplsL3VpnVrfRTIndex     215135
mplsL3VpnVrfRTType      215250
mplsL3VpnVrfRT          215325
mplsL3VpnVrfRTDescr     215402
mplsL3VpnVrfRTRowStatus 215474
mplsL3VpnVrfRTStorageType 215736
mplsL3VpnVrfSecTable    216025
mplsL3VpnVrfSecEntry    216146
mplsL3VpnVrfSecIllegalLblVltns 216399
mplsL3VpnVrfSecDiscontinuityTime 216743
mplsL3VpnVrfPerfTable   217113
mplsL3VpnVrfPerfEntry   217234
mplsL3VpnVrfPerfRoutesAdded 217374
mplsL3VpnVrfPerfRoutesDeleted 217722
mplsL3VpnVrfPerfCurrNumRoutes 218039
mplsL3VpnVrfPerfRoutesDropped 218152
mplsL3VpnVrfPerfDiscTime 218633
mplsL3VpnVrfRteTable    218995
mplsL3VpnVrfRteEntry    219417
mplsL3VpnVrfRteInetCidrDestType 220130
mplsL3VpnVrfRteInetCidrDest 220479
mplsL3VpnVrfRteInetCidrPfxLen 221314
mplsL3VpnVrfRteInetCidrPolicy 222213
mplsL3VpnVrfRteInetCidrNHopType 222577
mplsL3VpnVrfRteInetCidrNextHop 223022
mplsL3VpnVrfRteInetCidrIfIndex 223323
mplsL3VpnVrfRteInetCidrType 223618
mplsL3VpnVrfRteInetCidrProto 224526
mplsL3VpnVrfRteInetCidrAge 224795
mplsL3VpnVrfRteInetCidrNextHopAS 225133
mplsL3VpnVrfRteInetCidrMetric1 225521
mplsL3VpnVrfRteInetCidrMetric2 225887
mplsL3VpnVrfRteInetCidrMetric3 226252
mplsL3VpnVrfRteInetCidrMetric4 226617
mplsL3VpnVrfRteInetCidrMetric5 226965
mplsL3VpnVrfRteXCPointer 227313
mplsL3VpnVrfRteInetCidrStatus 228601
mplsL3VpnScalarGroup    228855
mplsL3VpnVrfGroup       228972
mplsL3VpnIfGroup        229084
mplsL3VpnPerfGroup      229202
mplsL3VpnPerfRouteGroup 229323
mplsL3VpnSecGroup       229454
mplsL3VpnVrfRteGroup    229580
mplsL3VpnVrfRTGroup     229668
mplsL3VpnNotificationGroup 229757
snmpInPkts              229844
snmpOutPkts             229982
snmpInBadVersions       230155
snmpInBadCommunityNames 230336
snmpInBadCommunityUses  231225
snmpInASNParseErrs      232034
snmpInTooBigs           232195
snmpInNoSuchNames       232416
snmpInBadValues         232641
snmpInReadOnlys         232864
snmpInGenErrs           233372
snmpInTotalReqVars      233580
snmpInTotalSetVars      233826
snmpInGetRequests       234044
snmpInGetNexts          234219
snmpInSetRequests       234378
snmpInGetResponses      234553
snmpInTraps             234729
snmpOutTooBigs          234884
snmpOutNoSuchNames      235092
snmpOutBadValues        235298
snmpOutGenErrs          235508
snmpOutGetRequests      235716
snmpOutGetNexts         235865
snmpOutSetRequests      236011
snmpOutGetResponses     236160
snmpOutTraps            236310
snmpEnableAuthenTraps   236452
snmpSilentDrops         237013
snmpProxyDrops          237619
ospfRouterId            238168
ospfAdminStat           238646
ospfVersionNumber       239023
ospfAreaBdrRtrStatus    239177
ospfASBdrRtrStatus      239392
ospfExternLsaCount      239763
ospfExternLsaCksumSum   240017
ospfTOSSupport          240485
ospfOriginateNewLsas    240816
ospfRxNewLsas           241249
ospfExtLsdbLimit        241731
ospfMulticastExtensions 242595
ospfExitOverflowInterval 243903
ospfDemandExtensions    244386
ospfRFC1583Compatibility 244685
ospfOpaqueLsaSupport    245379
ospfReferenceBandwidth  245527
ospfRestartSupport      245915
ospfRestartInterval     246261
ospfRestartStrictLsaChecking 246538
ospfRestartStatus       246802
ospfRestartAge          246882
ospfRestartExitReason   247037
ospfAsLsaCount          247306
ospfAsLsaCksumSum       247443
ospfStubRouterSupport   247839
ospfStubRouterAdvertisement 248000
ospfDiscontinuityTime   248403
ospfAreaTable           248765
ospfAreaEntry           249168
ospfAreaId              249655
ospfAuthType            249883
ospfImportAsExtern      250050
ospfSpfRuns             250405
ospfAreaBdrRtrCount     250848
ospfAsBdrRtrCount       251059
ospfAreaLsaCount        251272
ospfAreaLsaCksumSum     251443
ospfAreaSummary         251974
ospfAreaStatus          252442
ospfAreaNssaTranslatorRole 252763
ospfAreaNssaTranslatorState 252930
ospfAreaNssaTranslatorStabilityInterval 253495
ospfAreaNssaTranslatorEvents 253792
ospfStubAreaTable       254147
ospfStubAreaEntry       254375
ospfStubAreaId          254800
ospfStubTOS             254955
ospfStubMetric          255119
ospfStubStatus          255352
ospfStubMetricType      255673
ospfLsdbTable           255796
ospfLsdbEntry           256104
ospfLsdbAreaId          256178
ospfLsdbType            256379
ospfLsdbLsid            256840
ospfLsdbRouterId        257183
ospfLsdbSequence        257411
ospfLsdbAge             258012
ospfLsdbChecksum        258252
ospfLsdbAdvertisement   258779
ospfAreaRangeTable      259103
ospfAreaRangeEntry      259888
ospfAreaRangeAreaId     260207
ospfAreaRangeNet        260396
ospfAreaRangeMask       260590
ospfAreaRangeStatus     260776
ospfAreaRangeEffect     261097
ospfHostTable           261345
ospfHostEntry           261703
ospfHostIpAddress       262007
ospfHostTOS             262164
ospfHostMetric          262344
ospfHostStatus          262502
ospfHostAreaID          262823
ospfHostCfgAreaID       263031
ospfIfTable             263208
ospfIfEntry             263515
ospfIfIpAddress         263808
ospfAddressLessIf       263886
ospfIfAreaId            264191
ospfIfType              264380
ospfIfAdminStat         264817
ospfIfRtrPriority       265120
ospfIfTransitDelay      265557
ospfIfRetransInterval   265829
ospfIfHelloInterval     266220
ospfIfRtrDeadInterval   266501
ospfIfPollInterval      266875
ospfIfState             267104
ospfIfDesignatedRouter  267169
ospfIfBackupDesignatedRouter 267249
ospfIfEvents            267352
ospfIfAuthKey           267698
ospfIfStatus            268821
ospfIfMulticastForwarding 269142
ospfIfDemand            269562
ospfIfAuthType          269801
ospfIfLsaCount          270088
ospfIfLsaCksumSum       270247
ospfIfDesignatedRouterId 270673
ospfIfBackupDesignatedRouterId 270753
ospfIfMetricTable       270846
ospfIfMetricEntry       272362
ospfIfMetricIpAddress   272772
ospfIfMetricAddressLessIf 272918
ospfIfMetricTOS         273279
ospfIfMetricValue       273441
ospfIfMetricStatus      273620
ospfVirtIfTable         273941
ospfVirtIfEntry         274195
ospfVirtIfAreaId        274446
ospfVirtIfNeighbor      274583
ospfVirtIfTransitDelay  274661
ospfVirtIfRetransInterval 274930
ospfVirtIfHelloInterval 275422
ospfVirtIfRtrDeadInterval 275694
ospfVirtIfState         276053
ospfVirtIfEvents        276123
ospfVirtIfAuthKey       276447
ospfVirtIfStatus        277571
ospfVirtIfAuthType      277892
ospfVirtIfLsaCount      278186
ospfVirtIfLsaCksumSum   278353
ospfNbrTable            278790
ospfNbrEntry            279026
ospfNbrIpAddr           279383
ospfNbrAddressLessIndex 279637
ospfNbrRtrId            279912
ospfNbrOptions          280094
ospfNbrPriority         281112
ospfNbrState            281376
ospfNbrEvents           281549
ospfNbrLsRetransQLen    281898
ospfNbmaNbrStatus       281996
ospfNbmaNbrPermanence   282317
ospfNbrHelloSuppressed  282492
ospfNbrRestartHelperStatus 282605
ospfNbrRestartHelperAge 282744
ospfNbrRestartHelperExitReason 282972
ospfVirtNbrTable        283129
ospfVirtNbrEntry        283406
ospfVirtNbrArea         283475
ospfVirtNbrRtrId        283543
ospfVirtNbrIpAddr       283680
ospfVirtNbrOptions      283766
ospfVirtNbrState        284246
ospfVirtNbrEvents       284333
ospfVirtNbrLsRetransQLen 284677
ospfVirtNbrHelloSuppressed 284776
ospfVirtNbrRestartHelperStatus 284892
ospfVirtNbrRestartHelperAge 285035
ospfVirtNbrRestartHelperExitReason 285271
ospfExtLsdbTable        285432
ospfExtLsdbEntry        285996
ospfExtLsdbType         286070
ospfExtLsdbLsid         286348
ospfExtLsdbRouterId     286691
ospfExtLsdbSequence     286919
ospfExtLsdbAge          287525
ospfExtLsdbChecksum     287765
ospfExtLsdbAdvertisement 288301
ospfAreaAggregateTable  288516
ospfAreaAggregateEntry  289457
ospfAreaAggregateAreaID 289778
ospfAreaAggregateLsdbType 289972
ospfAreaAggregateNet    290265
ospfAreaAggregateMask   290459
ospfAreaAggregateStatus 290645
ospfAreaAggregateEffect 290966
ospfAreaAggregateExtRouteTag 291216
ospfBasicGroup          291329
ospfAreaGroup           291547
ospfStubAreaGroup       291719
ospfLsdbGroup           291832
ospfAreaRangeGroup      291962
ospfHostGroup           292184
ospfIfGroup             292354
ospfIfMetricGroup       292554
ospfVirtIfGroup         292680
ospfNbrGroup            292908
ospfVirtNbrGroup        293106
ospfExtLsdbGroup        293313
ospfAreaAggregateGroup  293695
ospfLocalLsdbGroup      293894
ospfVirtLocalLsdbGroup  294069
ospfAsLsdbGroup         294242
ospfBasicGroup2         294382
ospfAreaGroup2          294497
ospfIfGroup2            294606
ospfVirtIfGroup2        294703
ospfNbrGroup2           294819
ospfVirtNbrGroup2       294926
ospfAreaAggregateGroup2 295041
ospfAreaLsaCountGroup   295183
ospfHostGroup2          295319
ospfObsoleteGroup       295438
ospfSetTrap             295675
ospfConfigErrorType     296186
ospfPacketType          296582
ospfPacketSrc           296855
ospfVirtIfStateChange   297220
ospfNbrStateChange      297621
ospfVirtNbrStateChange  298334
ospfIfConfigError       298719
ospfVirtIfConfigError   299139
ospfIfAuthFailure       299559
ospfVirtIfAuthFailure   299897
ospfIfRxBadPacket       300221
ospfVirtIfRxBadPacket   300412
ospfTxRetransmit        300603
ospfVirtIfTxRetransmit  300968
ospfOriginateLsa        301331
ospfMaxAgeLsa           301856
ospfLsdbOverflow        302032
ospfLsdbApproachingOverflow 302225
ospfIfStateChange       302465
ospfNssaTranslatorStatusChange 302877
ospfRestartStatusChange 303268
ospfNbrRestartHelperStatusChange 303551
ospfVirtNbrRestartHelperStatusChange 303889
ospfTrapControlGroup    304259
ospfTrapEventGroup      304375
ospfLocalLsdbTable      304506
ospfLocalLsdbEntry      305165
ospfLocalLsdbIpAddress  305239
ospfLocalLsdbAddressLessIf 305483
ospfLocalLsdbType       305740
ospfLocalLsdbLsid       306018
ospfLocalLsdbRouterId   306366
ospfLocalLsdbSequence   306594
ospfLocalLsdbAge        307195
ospfLocalLsdbChecksum   307435
ospfLocalLsdbAdvertisement 307971
ospfVirtLocalLsdbTable  308312
ospfVirtLocalLsdbEntry  308950
ospfVirtLocalLsdbTransitArea 309024
ospfVirtLocalLsdbNeighbor 309260
ospfVirtLocalLsdbType   309431
ospfVirtLocalLsdbLsid   309709
ospfVirtLocalLsdbRouterId 310057
ospfVirtLocalLsdbSequence 310289
ospfVirtLocalLsdbAge    310894
ospfVirtLocalLsdbChecksum 311134
ospfVirtLocalLsdbAdvertisement 311676
ospfAsLsdbTable         312026
ospfAsLsdbEntry         312665
ospfAsLsdbType          312739
ospfAsLsdbLsid          313017
ospfAsLsdbRouterId      313362
ospfAsLsdbSequence      313590
ospfAsLsdbAge           314196
ospfAsLsdbChecksum      314436
ospfAsLsdbAdvertisement 314972
ospfAreaLsaCountTable   315308
ospfAreaLsaCountEntry   315400
ospfAreaLsaCountAreaId  315536
ospfAreaLsaCountLsaType 315595
ospfAreaLsaCountNumber  315655
bgpEstablishedNotification 315743
bgpBackwardTransNotification 316010
bgpVersion              316343
bgpLocalAs              317168
bgpPeerTable            317329
bgpPeerEntry            317524
bgpPeerIdentifier       317652
bgpPeerState            317981
bgpPeerAdminStatus      318115
bgpPeerNegotiatedVersion 318771
bgpPeerLocalAddr        319278
bgpPeerLocalPort        319392
bgpPeerRemoteAddr       319514
bgpPeerRemotePort       319623
bgpPeerRemoteAs         320032
bgpPeerInUpdates        320225
bgpPeerOutUpdates       320411
bgpPeerInTotalMessages  320600
bgpPeerOutTotalMessages 320800
bgpPeerLastError        321001
bgpPeerFsmEstablishedTransitions 321453
bgpPeerFsmEstablishedTime 321707
bgpPeerConnectRetryInterval 322222
bgpPeerHoldTime         322620
bgpPeerKeepAlive        323571
bgpPeerHoldTimeConfigured 324490
bgpPeerKeepAliveConfigured 325467
bgpPeerMinASOriginationInterval 326640
bgpPeerMinRouteAdvertisementInterval 327043
bgpPeerInUpdateElapsedTime 327544
bgpIdentifier           328009
bgpRcvdPathAttrTable    328150
bgpPathAttrEntry        328408
bgpPathAttrPeer         328486
bgpPathAttrDestNetwork  328614
bgpPathAttrOrigin       328755
bgpPathAttrASPath       328944
bgpPathAttrNextHop      329601
bgpPathAttrInterASMetric 329849
bgp4PathAttrTable       330158
bgp4PathAttrEntry       330391
bgp4PathAttrPeer        330469
bgp4PathAttrIpAddrPrefixLen 330597
bgp4PathAttrIpAddrPrefix 330777
bgp4PathAttrOrigin      331274
bgp4PathAttrASPathSegment 331489
bgp4PathAttrNextHop     333095
bgp4PathAttrMultiExitDisc 333460
bgp4PathAttrLocalPref   334093
bgp4PathAttrAtomicAggregate 334699
bgp4PathAttrAggregatorAS 335323
bgp4PathAttrAggregatorAddr 335788
bgp4PathAttrCalcLocalPref 336147
bgp4PathAttrBest        336726
bgp4PathAttrUnknown     336965
bgpEstablished          337719
bgpBackwardTransition   338046
bgp4MIBGlobalsGroup     338441
bgp4MIBPeerGroup        338569
bgpRcvdPathAttrGroup    338678
bgp4MIBPathAttrGroup    338932
bgp4MIBTrapGroup        339048
bgp4MIBNotificationGroup 339301
rmonEventsV2            339494
risingAlarm             339574
fallingAlarm            339790
etherStatsTable         340007
etherStatsEntry         340085
etherStatsIndex         340302
etherStatsDataSource    340419
etherStatsDropEvents    341655
etherStatsOctets        341967
etherStatsPkts          343083
etherStatsBroadcastPkts 343283
etherStatsMulticastPkts 343528
etherStatsCRCAlignErrors 343822
etherStatsUndersizePkts 344281
etherStatsOversizePkts  344552
etherStatsFragments     344822
etherStatsJabbers       345453
etherStatsCollisions    346223
etherStatsPkts64Octets  347832
etherStatsPkts65to127Octets 348080
etherStatsPkts128to255Octets 348372
etherStatsPkts256to511Octets 348667
etherStatsPkts512to1023Octets 348962
etherStatsPkts1024to1518Octets 349260
etherStatsOwner         349561
etherStatsStatus        349701
tokenRingMLStatsTable   349777
tokenRingMLStatsEntry   349880
tokenRingMLStatsIndex   350013
tokenRingMLStatsDataSource 350139
tokenRingMLStatsDropEvents 351033
tokenRingMLStatsMacOctets 351458
tokenRingMLStatsMacPkts 351707
tokenRingMLStatsRingPurgeEvents 351847
tokenRingMLStatsRingPurgePkts 352121
tokenRingMLStatsBeaconEvents 352241
tokenRingMLStatsBeaconTime 352683
tokenRingMLStatsBeaconPkts 352810
tokenRingMLStatsClaimTokenEvents 352927
tokenRingMLStatsClaimTokenPkts 353220
tokenRingMLStatsNAUNChanges 353346
tokenRingMLStatsLineErrors 353458
tokenRingMLStatsInternalErrors 353604
tokenRingMLStatsBurstErrors 353779
tokenRingMLStatsACErrors 353927
tokenRingMLStatsAbortErrors 354100
tokenRingMLStatsLostFrameErrors 354252
tokenRingMLStatsCongestionErrors 354409
tokenRingMLStatsFrameCopiedErrors 354588
tokenRingMLStatsFrequencyErrors 354749
tokenRingMLStatsTokenErrors 354905
tokenRingMLStatsSoftErrorReports 355053
tokenRingMLStatsRingPollEvents 355182
tokenRingMLStatsOwner   355397
tokenRingMLStatsStatus  355540
tokenRingPStatsTable    355622
tokenRingPStatsEntry    355727
tokenRingPStatsIndex    355894
tokenRingPStatsDataSource 356019
tokenRingPStatsDropEvents 356912
tokenRingPStatsDataOctets 357336
tokenRingPStatsDataPkts 357547
tokenRingPStatsDataBroadcastPkts 357662
tokenRingPStatsDataMulticastPkts 357868
tokenRingPStatsDataPkts18to63Octets 358173
tokenRingPStatsDataPkts64to127Octets 358417
tokenRingPStatsDataPkts128to255Octets 358663
tokenRingPStatsDataPkts256to511Octets 358911
tokenRingPStatsDataPkts512to1023Octets 359159
tokenRingPStatsDataPkts1024to2047Octets 359409
tokenRingPStatsDataPkts2048to4095Octets 359661
tokenRingPStatsDataPkts4096to8191Octets 359913
tokenRingPStatsDataPkts8192to18000Octets 360165
tokenRingPStatsDataPktsGreaterThan18000Octets 360419
tokenRingPStatsOwner    360651
tokenRingPStatsStatus   360794
etherStats2Table        360875
etherStats2Entry        360959
etherStatsDroppedFrames 361043
etherStatsCreateTime    361661
tokenRingMLStats2Table  361913
tokenRingMLStats2Entry  362189
tokenRingMLStatsDroppedFrames 362273
tokenRingMLStatsCreateTime 362897
tokenRingPStats2Table   363152
tokenRingPStats2Entry   363428
tokenRingPStatsDroppedFrames 363512
tokenRingPStatsCreateTime 364135
historyControlTable     364389
historyControlEntry     364463
historyControlIndex     364705
historyControlDataSource 364945
historyControlBucketsRequested 366272
historyControlBucketsGranted 366748
historyControlInterval  368585
historyControlOwner     369817
historyControlStatus    369957
etherHistoryTable       370235
etherHistoryEntry       370310
etherHistoryIndex       370702
etherHistorySampleIndex 370950
etherHistoryIntervalStart 371244
etherHistoryDropEvents  371939
etherHistoryOctets      372302
etherHistoryPkts        372560
etherHistoryBroadcastPkts 372742
etherHistoryMulticastPkts 372963
etherHistoryCRCAlignErrors 373276
etherHistoryUndersizePkts 373759
etherHistoryOversizePkts 374057
etherHistoryFragments   374352
etherHistoryJabbers     375031
etherHistoryCollisions  375835
etherHistoryUtilization 377484
tokenRingMLHistoryTable 377685
tokenRingMLHistoryEntry 377788
tokenRingMLHistoryIndex 377921
tokenRingMLHistorySampleIndex 378178
tokenRingMLHistoryIntervalStart 378511
tokenRingMLHistoryDropEvents 379255
tokenRingMLHistoryMacOctets 379628
tokenRingMLHistoryMacPkts 379922
tokenRingMLHistoryRingPurgeEvents 380105
tokenRingMLHistoryRingPurgePkts 380415
tokenRingMLHistoryBeaconEvents 380584
tokenRingMLHistoryBeaconTime 381031
tokenRingMLHistoryBeaconPkts 381184
tokenRingMLHistoryClaimTokenEvents 381333
tokenRingMLHistoryClaimTokenPkts 381649
tokenRingMLHistoryNAUNChanges 381820
tokenRingMLHistoryLineErrors 381964
tokenRingMLHistoryInternalErrors 382155
tokenRingMLHistoryBurstErrors 382362
tokenRingMLHistoryACErrors 382555
tokenRingMLHistoryAbortErrors 382759
tokenRingMLHistoryLostFrameErrors 382956
tokenRingMLHistoryCongestionErrors 383158
tokenRingMLHistoryFrameCopiedErrors 383369
tokenRingMLHistoryFrequencyErrors 383575
tokenRingMLHistoryTokenErrors 383776
tokenRingMLHistorySoftErrorReports 383969
tokenRingMLHistoryRingPollEvents 384143
tokenRingMLHistoryActiveStations 384294
tokenRingPHistoryTable  384471
tokenRingPHistoryEntry  384576
tokenRingPHistoryIndex  384711
tokenRingPHistorySampleIndex 384968
tokenRingPHistoryIntervalStart 385279
tokenRingPHistoryDropEvents 386022
tokenRingPHistoryDataOctets 386394
tokenRingPHistoryDataPkts 386650
tokenRingPHistoryDataBroadcastPkts 386784
tokenRingPHistoryDataMulticastPkts 387035
tokenRingPHistoryDataPkts18to63Octets 387372
tokenRingPHistoryDataPkts64to127Octets 387648
tokenRingPHistoryDataPkts128to255Octets 387926
tokenRingPHistoryDataPkts256to511Octets 388206
tokenRingPHistoryDataPkts512to1023Octets 388486
tokenRingPHistoryDataPkts1024to2047Octets 388768
tokenRingPHistoryDataPkts2048to4095Octets 389052
tokenRingPHistoryDataPkts4096to8191Octets 389336
tokenRingPHistoryDataPkts8192to18000Octets 389620
tokenRingPHistoryDataPktsGreaterThan18000Octets 389906
historyControl2Table    390183
historyControl2Entry    390267
historyControlDroppedFrames 390351
alarmTable              390973
alarmEntry              391037
alarmIndex              391250
alarmInterval           391481
alarmVariable           392109
alarmSampleType         393470
alarmValue              394183
alarmStartupAlarm       394868
alarmRisingThreshold    395622
alarmFallingThreshold   396519
alarmRisingEventIndex   397404
alarmFallingEventIndex  398053
alarmOwner              398693
alarmStatus             398833
hostControlTable        398904
hostControlEntry        398981
hostControlIndex        399293
hostControlDataSource   399642
hostControlTableSize    400858
hostControlLastDeleteTime 401011
hostControlOwner        401268
hostControlStatus       401408
hostTable               401667
hostEntry               401730
hostAddress             402022
hostCreationOrder       402096
hostIndex               403203
hostInPkts              403508
hostOutPkts             403696
hostInOctets            403903
hostOutOctets           404194
hostOutErrors           404484
hostOutBroadcastPkts    404678
hostOutMulticastPkts    404927
hostTimeTable           405276
hostTimeEntry           405358
hostTimeAddress         405749
hostTimeCreationOrder   405823
hostTimeIndex           407187
hostTimeInPkts          407492
hostTimeOutPkts         407684
hostTimeInOctets        407895
hostTimeOutOctets       408190
hostTimeOutErrors       408484
hostTimeOutBroadcastPkts 408682
hostTimeOutMulticastPkts 408947
hostControl2Table       409302
hostControl2Entry       409386
hostControlDroppedFrames 409470
hostControlCreateTime   410095
hostTopNControlTable    410347
hostTopNControlEntry    410424
hostTopNControlIndex    410691
hostTopNHostIndex       410903
hostTopNRateBase        411328
hostTopNTimeRemaining   411566
hostTopNDuration        412618
hostTopNRequestedSize   413316
hostTopNGrantedSize     413654
hostTopNStartTime       414361
hostTopNOwner           414621
hostTopNStatus          414761
hostTopNTable           414967
hostTopNEntry           415036
hostTopNReport          415244
hostTopNIndex           415555
hostTopNAddress         416059
hostTopNRate            416133
matrixControlTable      416370
matrixControlEntry      416491
matrixControlIndex      416745
matrixControlDataSource 417110
matrixControlTableSize  418346
matrixControlLastDeleteTime 418581
matrixControlOwner      418872
matrixControlStatus     419012
matrixSDTable           419269
matrixSDEntry           419398
matrixSDSourceAddress   419681
matrixSDDestAddress     419749
matrixSDIndex           419822
matrixSDPkts            420150
matrixSDOctets          420377
matrixSDErrors          420652
matrixDSTable           420838
matrixDSEntry           420967
matrixDSSourceAddress   421250
matrixDSDestAddress     421318
matrixDSIndex           421391
matrixDSPkts            421719
matrixDSOctets          421946
matrixDSErrors          422221
matrixControl2Table     422407
matrixControl2Entry     422491
matrixControlDroppedFrames 422575
matrixControlCreateTime 423196
filterTable             423448
filterEntry             423520
filterIndex             423742
filterChannelIndex      423975
filterPktDataOffset     424269
filterPktData           424811
filterPktDataMask       426359
filterPktDataNotMask    427146
filterPktStatus         428115
filterPktStatusMask     430602
filterPktStatusNotMask  431413
filterOwner             432465
filterStatus            432605
channelTable            432677
channelEntry            432750
channelIndex            432974
channelIfIndex          433449
channelAcceptType       434586
channelDataControl      435469
channelTurnOnEventIndex 435761
channelTurnOffEventIndex 436507
channelEventIndex       437247
channelEventStatus      437979
channelMatches          439018
channelDescription      439256
channelOwner            439330
channelStatus           439470
channel2Table           439543
channel2Entry           439627
channelDroppedFrames    439711
channelCreateTime       440329
filter2Table            440581
filter2Entry            440706
filterProtocolDirDataLocalIndex 440831
filterProtocolDirLocalIndex 441746
bufferControlTable      441973
bufferControlEntry      442047
bufferControlIndex      442333
bufferControlChannelIndex 442629
bufferControlFullStatus 443059
bufferControlFullAction 444128
bufferControlCaptureSliceSize 444474
bufferControlDownloadSliceSize 445116
bufferControlDownloadOffset 446124
bufferControlMaxOctetsRequested 446652
bufferControlMaxOctetsGranted 447375
bufferControlCapturedPackets 449431
bufferControlTurnOnTime 449582
bufferControlOwner      449700
bufferControlStatus     449840
captureBufferTable      449920
captureBufferEntry      450004
captureBufferControlIndex 450221
captureBufferIndex      450346
captureBufferPacketID   450833
captureBufferPacketData 451374
captureBufferPacketLength 451992
captureBufferPacketTime 452182
captureBufferPacketStatus 452413
eventTable              453707
eventEntry              453780
eventIndex              454036
eventDescription        454266
eventType               454344
eventCommunity          454646
eventLastTimeSent       454796
eventOwner              455012
eventStatus             455457
logTable                455649
logEntry                455728
logEventIndex           455933
logIndex                456201
logTime                 456823
logDescription          456918
ringStationControlTable 457051
ringStationControlEntry 457135
ringStationControlIfIndex 457340
ringStationControlTableSize 457765
ringStationControlActiveStations 457937
ringStationControlRingState 458121
ringStationControlBeaconSender 458197
ringStationControlBeaconNAUN 458460
ringStationControlActiveMonitor 458719
ringStationControlOrderChanges 458922
ringStationControlOwner 459116
ringStationControlStatus 459259
ringStationTable        459504
ringStationEntry        459732
ringStationIfIndex      459910
ringStationMacAddress   460313
ringStationLastNAUN     460390
ringStationStationStatus 460499
ringStationLastEnterTime 460579
ringStationLastExitTime 460767
ringStationDuplicateAddresses 460976
ringStationInLineErrors 461106
ringStationOutLineErrors 461278
ringStationInternalErrors 461515
ringStationInBurstErrors 461701
ringStationOutBurstErrors 461875
ringStationACErrors     462114
ringStationAbortErrors  462365
ringStationLostFrameErrors 462542
ringStationCongestionErrors 462723
ringStationFrameCopiedErrors 462913
ringStationFrequencyErrors 463098
ringStationTokenErrors  463278
ringStationInBeaconErrors 463450
ringStationOutBeaconErrors 463586
ringStationInsertions   463733
ringStationOrderTable   463862
ringStationOrderEntry   464005
ringStationOrderIfIndex 464308
ringStationOrderOrderIndex 464711
ringStationOrderMacAddress 465041
ringStationConfigControlTable 465121
ringStationConfigControlEntry 465233
ringStationConfigControlIfIndex 465449
ringStationConfigControlMacAddress 465860
ringStationConfigControlRemove 465948
ringStationConfigControlUpdateStats 466193
ringStationConfigTable  466488
ringStationConfigEntry  466620
ringStationConfigIfIndex 466797
ringStationConfigMacAddress 467201
ringStationConfigUpdateTime 467282
ringStationConfigLocation 467448
ringStationConfigMicrocode 467537
ringStationConfigGroupAddress 467619
ringStationConfigFunctionalAddress 467749
sourceRoutingStatsTable 467865
sourceRoutingStatsEntry 467949
sourceRoutingStatsIfIndex 468087
sourceRoutingStatsRingNumber 468522
sourceRoutingStatsInFrames 469134
sourceRoutingStatsOutFrames 469248
sourceRoutingStatsThroughFrames 469361
sourceRoutingStatsAllRoutesBroadcastFrames 469501
sourceRoutingStatsSingleRouteBroadcastFrames 469645
sourceRoutingStatsInOctets 469793
sourceRoutingStatsOutOctets 469922
sourceRoutingStatsThroughOctets 470050
sourceRoutingStatsAllRoutesBroadcastOctets 470200
sourceRoutingStatsSingleRoutesBroadcastOctets 470354
sourceRoutingStatsLocalLLCFrames 470513
sourceRoutingStats1HopFrames 470762
sourceRoutingStats2HopsFrames 471122
sourceRoutingStats3HopsFrames 471484
sourceRoutingStats4HopsFrames 471846
sourceRoutingStats5HopsFrames 472208
sourceRoutingStats6HopsFrames 472570
sourceRoutingStats7HopsFrames 472932
sourceRoutingStats8HopsFrames 473294
sourceRoutingStatsMoreThan8HopsFrames 473656
sourceRoutingStatsOwner 474036
sourceRoutingStatsStatus 474179
ringStationControl2Table 474264
ringStationControl2Entry 474541
ringStationControlDroppedFrames 474626
ringStationControlCreateTime 475252
sourceRoutingStats2Table 475515
sourceRoutingStats2Entry 475792
sourceRoutingStatsDroppedFrames 475877
sourceRoutingStatsCreateTime 476503
protocolDirLastChange   476760
protocolDirTable        477064
protocolDirEntry        477766
protocolDirID           478429
protocolDirParameters   479609
protocolDirLocalIndex   480576
protocolDirDescr        481318
protocolDirType         481714
protocolDirAddressMapConfig 484059
protocolDirHostConfig   485723
protocolDirMatrixConfig 487956
protocolDirOwner        490418
protocolDirStatus       490557
protocolDistControlTable 490994
protocolDistControlEntry 491785
protocolDistControlIndex 491976
protocolDistControlDataSource 492066
protocolDistControlDroppedFrames 492437
protocolDistControlCreateTime 493068
protocolDistControlOwner 493326
protocolDistControlStatus 493466
protocolDistStatsTable  493786
protocolDistStatsEntry  494263
protocolDistStatsPkts   494822
protocolDistStatsOctets 495144
addressMapInserts       495608
addressMapDeletes       495981
addressMapMaxDesiredEntries 496369
addressMapControlTable  497192
addressMapControlEntry  497849
addressMapControlIndex  498033
addressMapControlDataSource 498133
addressMapControlDroppedFrames 498228
addressMapControlOwner  498853
addressMapControlStatus 498992
addressMapTable         499324
addressMapEntry         499929
addressMapTimeMark      500534
addressMapNetworkAddress 500673
addressMapSource        501159
addressMapPhysicalAddress 502362
addressMapLastChange    502798
hlHostControlTable      503096
hlHostControlEntry      504213
hlHostControlIndex      504397
hlHostControlDataSource 504760
hlHostControlNlDroppedFrames 505115
hlHostControlNlInserts  505902
hlHostControlNlDeletes  506673
hlHostControlNlMaxDesiredEntries 507465
hlHostControlAlDroppedFrames 508451
hlHostControlAlInserts  509275
hlHostControlAlDeletes  510046
hlHostControlAlMaxDesiredEntries 510838
hlHostControlOwner      511825
hlHostControlStatus     511964
nlHostTable             512302
nlHostEntry             513066
nlHostTimeMark          513770
nlHostAddress           513909
nlHostInPkts            514388
nlHostOutPkts           514751
nlHostInOctets          515108
nlHostOutOctets         515534
nlHostOutMacNonUnicastPkts 515960
nlHostCreateTime        516429
hlMatrixControlTable    516663
hlMatrixControlEntry    517702
hlMatrixControlIndex    517880
hlMatrixControlDataSource 518319
hlMatrixControlNlDroppedFrames 518684
hlMatrixControlNlInserts 519467
hlMatrixControlNlDeletes 520546
hlMatrixControlNlMaxDesiredEntries 521588
hlMatrixControlAlDroppedFrames 522582
hlMatrixControlAlInserts 523388
hlMatrixControlAlDeletes 524409
hlMatrixControlAlMaxDesiredEntries 525425
hlMatrixControlOwner    526419
hlMatrixControlStatus   526558
nlMatrixSDTable         526972
nlMatrixSDEntry         528067
nlMatrixSDTimeMark      528831
nlMatrixSDSourceAddress 528970
nlMatrixSDDestAddress   529460
nlMatrixSDPkts          529970
nlMatrixSDOctets        530383
nlMatrixSDCreateTime    530865
nlMatrixDSTable         531099
nlMatrixDSEntry         532192
nlMatrixDSTimeMark      532956
nlMatrixDSSourceAddress 533095
nlMatrixDSDestAddress   533585
nlMatrixDSPkts          534095
nlMatrixDSOctets        534508
nlMatrixDSCreateTime    534990
nlMatrixTopNControlTable 535224
nlMatrixTopNControlEntry 535400
nlMatrixTopNControlIndex 535584
nlMatrixTopNControlMatrixIndex 535796
nlMatrixTopNControlRateBase 536253
nlMatrixTopNControlTimeRemaining 536962
nlMatrixTopNControlGeneratedReports 538377
nlMatrixTopNControlDuration 538490
nlMatrixTopNControlRequestedSize 538997
nlMatrixTopNControlGrantedSize 539343
nlMatrixTopNControlStartTime 540863
nlMatrixTopNControlOwner 541314
nlMatrixTopNControlStatus 541454
nlMatrixTopNTable       541812
nlMatrixTopNEntry       541984
nlMatrixTopNIndex       542312
nlMatrixTopNProtocolDirLocalIndex 543174
nlMatrixTopNSourceAddress 543321
nlMatrixTopNDestAddress 543836
nlMatrixTopNPktRate     544366
nlMatrixTopNReversePktRate 544730
nlMatrixTopNOctetRate   545418
nlMatrixTopNReverseOctetRate 545786
alHostTable             546483
alHostEntry             547464
alHostTimeMark          548398
alHostInPkts            548537
alHostOutPkts           548925
alHostInOctets          549313
alHostOutOctets         549770
alHostCreateTime        550227
alMatrixSDTable         550461
alMatrixSDEntry         551648
alMatrixSDTimeMark      552844
alMatrixSDPkts          552983
alMatrixSDOctets        553418
alMatrixSDCreateTime    553933
alMatrixDSTable         554167
alMatrixDSEntry         555346
alMatrixDSTimeMark      556548
alMatrixDSPkts          556687
alMatrixDSOctets        557122
alMatrixDSCreateTime    557637
alMatrixTopNControlTable 557871
alMatrixTopNControlEntry 558047
alMatrixTopNControlIndex 558231
alMatrixTopNControlMatrixIndex 558443
alMatrixTopNControlRateBase 558900
alMatrixTopNControlTimeRemaining 559783
alMatrixTopNControlGeneratedReports 561198
alMatrixTopNControlDuration 561311
alMatrixTopNControlRequestedSize 561818
alMatrixTopNControlGrantedSize 562164
alMatrixTopNControlStartTime 563743
alMatrixTopNControlOwner 564198
alMatrixTopNControlStatus 564338
alMatrixTopNTable       564696
alMatrixTopNEntry       564875
alMatrixTopNIndex       565207
alMatrixTopNProtocolDirLocalIndex 566131
alMatrixTopNSourceAddress 566278
alMatrixTopNDestAddress 566805
alMatrixTopNAppProtocolDirLocalIndex 567335
alMatrixTopNPktRate     567442
alMatrixTopNReversePktRate 567866
alMatrixTopNOctetRate   568603
alMatrixTopNReverseOctetRate 569032
usrHistoryControlTable  569780
usrHistoryControlEntry  569868
usrHistoryControlIndex  570163
usrHistoryControlObjects 570442
usrHistoryControlBucketsRequested 570750
usrHistoryControlBucketsGranted 571211
usrHistoryControlInterval 573219
usrHistoryControlOwner  574005
usrHistoryControlStatus 574144
usrHistoryObjectTable   574482
usrHistoryObjectEntry   574570
usrHistoryObjectIndex   575005
usrHistoryObjectVariable 575207
usrHistoryObjectSampleType 576407
usrHistoryTable         577355
usrHistoryEntry         577434
usrHistorySampleIndex   578207
usrHistoryIntervalStart 578492
usrHistoryIntervalEnd   579168
usrHistoryAbsValue      579303
usrHistoryValStatus     580396
probeCapabilities       581105
probeSoftwareRev        581241
probeHardwareRev        581392
probeDateTime           581543
probeResetControl       582712
probeDownloadFile       583227
probeDownloadTFTPServer 583660
probeDownloadAction     584114
probeDownloadStatus     585178
serialConfigTable       585581
serialConfigEntry       585979
serialMode              586279
serialProtocol          586401
serialTimeout           586522
serialModemInitString   586966
serialModemHangUpString 587417
serialModemConnectResp  587787
serialModemNoConnectResp 588839
serialDialoutTimeout    589546
serialStatus            589880
netConfigTable          590079
netConfigEntry          590339
netConfigIPAddress      590641
netConfigSubnetMask     591308
netConfigStatus         591976
netDefaultGateway       592172
trapDestTable           592332
trapDestEntry           592407
trapDestIndex           592544
trapDestCommunity       592636
trapDestProtocol        593289
trapDestAddress         593377
trapDestOwner           594676
trapDestStatus          594815
serialConnectionTable   595019
serialConnectionEntry   595285
serialConnectIndex      595374
serialConnectDestIpAddress 595484
serialConnectType       595734
serialConnectDialString 596571
serialConnectSwitchConnectSeq 597146
serialConnectSwitchDisconnectSeq 597395
serialConnectSwitchResetSeq 597647
serialConnectOwner      597905
serialConnectStatus     598044
protocolDirectoryGroup  599002
protocolDistributionGroup 599213
addressMapGroup         599374
nlHostGroup             599535
nlMatrixGroup           599878
alHostGroup             600241
alMatrixGroup           600500
usrHistoryGroup         600767
probeInformationGroup   600925
probeConfigurationGroup 601078
rmon1EnhancementGroup   601434
rmon1EthernetEnhancementGroup 601557
rmon1TokenRingEnhancementGroup 601686
rmonEtherStatsGroup     602047
rmonHistoryControlGroup 602122
rmonEthernetHistoryGroup 602193
rmonAlarmGroup          602266
rmonHostGroup           602327
rmonHostTopNGroup       602387
rmonMatrixGroup         602455
rmonFilterGroup         602517
rmonPacketCaptureGroup  602579
rmonEventGroup          602649
rmonNotificationGroup   602710
newRoot                 602778
topologyChange          603179
dot1dBaseBridgeAddress  603581
dot1dBaseNumPorts       604144
dot1dBaseType           604371
dot1dBasePortTable      604639
dot1dBasePortEntry      604854
dot1dBasePort           605023
dot1dBasePortIfIndex    605163
dot1dBasePortCircuit    605340
dot1dBasePortDelayExceededDiscards 606022
dot1dBasePortMtuExceededDiscards 606354
dot1dStpProtocolSpecification 606645
dot1dStpPriority        607116
dot1dStpTimeSinceTopologyChange 607669
dot1dStpTopChanges      608155
dot1dStpDesignatedRoot  608411
dot1dStpRootCost        608808
dot1dStpRootPort        608990
dot1dStpMaxAge          609211
dot1dStpHelloTime       609625
dot1dStpHoldTime        610100
dot1dStpForwardDelay    610475
dot1dStpBridgeMaxAge    611433
dot1dStpBridgeHelloTime 612067
dot1dStpBridgeForwardDelay 612551
dot1dStpPortTable       613198
dot1dStpPortEntry       613329
dot1dStpPort            613481
dot1dStpPortPriority    613712
dot1dStpPortState       614249
dot1dStpPortEnable      614796
dot1dStpPortPathCost    614948
dot1dStpPortDesignatedRoot 615715
dot1dStpPortDesignatedCost 616043
dot1dStpPortDesignatedBridge 616337
dot1dStpPortDesignatedPort 616596
dot1dStpPortForwardTransitions 616807
dot1dStpPortPathCost32  616961
dot1dTpLearnedEntryDiscards 617453
dot1dTpAgingTime        618177
dot1dTpFdbTable         618499
dot1dTpFdbEntry         618821
dot1dTpFdbAddress       619004
dot1dTpFdbPort          619220
dot1dTpFdbStatus        619932
dot1dTpPortTable        621371
dot1dTpPortEntry        621522
dot1dTpPort             621634
dot1dTpPortMaxInfo      621788
dot1dTpPortInFrames     621972
dot1dTpPortOutFrames    622491
dot1dTpPortInDiscards   623014
dot1dTpHCPortTable      623281
dot1dTpHCPortEntry      623453
dot1dTpHCPortInFrames   623577
dot1dTpHCPortOutFrames  624034
dot1dTpHCPortInDiscards 624495
dot1dTpPortOverflowTable 624766
dot1dTpPortOverflowEntry 625557
dot1dTpPortInOverflowFrames 625862
dot1dTpPortOutOverflowFrames 626071
dot1dTpPortInOverflowDiscards 626283
dot1dStaticTable        626498
dot1dStaticEntry        627285
dot1dStaticAddress      627674
dot1dStaticReceivePort  628015
dot1dStaticAllowedToGoTo 628373
dot1dStaticStatus       629825
dot1dDeviceCapabilities 630717
dot1dTrafficClassesEnabled 632579
dot1dGmrpStatus         632911
dot1dPortCapabilitiesTable 633649
dot1dPortCapabilitiesEntry 633801
dot1dPortCapabilities   633928
dot1dPortPriorityTable  634881
dot1dPortPriorityEntry  635029
dot1dPortDefaultUserPriority 635185
dot1dPortNumTrafficClasses 635501
dot1dUserPriorityRegenTable 635768
dot1dUserPriorityRegenEntry 636290
dot1dUserPriority       636410
dot1dRegenUserPriority  636502
dot1dTrafficClassTable  636753
dot1dTrafficClassEntry  637040
dot1dTrafficClassPriority 637119
dot1dTrafficClass       637755
dot1dPortOutboundAccessPriorityTable 637958
dot1dPortOutboundAccessPriorityEntry 638261
dot1dPortOutboundAccessPriority 638385
dot1dPortGarpTable      638503
dot1dPortGarpEntry      638647
dot1dPortGarpJoinTime   638730
dot1dPortGarpLeaveTime  638919
dot1dPortGarpLeaveAllTime 639109
dot1dPortGmrpTable      639304
dot1dPortGmrpEntry      639458
dot1dPortGmrpStatus     639552
dot1dPortGmrpFailedRegistrations 640562
dot1dPortGmrpLastPduOrigin 640710
dot1dPortRestrictedGroupRegistration 640832
pBridgeExtCapGroup      641429
pBridgeDeviceGmrpGroup  641553
pBridgeDevicePriorityGroup 641710
pBridgeDefaultPriorityGroup 641843
pBridgeRegenPriorityGroup 642031
pBridgePriorityGroup    642212
pBridgeAccessPriorityGroup 642363
pBridgePortGarpGroup    642508
pBridgePortGmrpGroup    642652
pBridgeHCPortGroup      642851
pBridgePortOverflowGroup 642993
pBridgePortGmrpGroup2   643137
dot1qVlanVersionNumber  643281
dot1qMaxVlanId          643463
dot1qMaxSupportedVlans  643641
dot1qNumVlans           643829
dot1qGvrpStatus         644025
dot1qFdbTable           644726
dot1qFdbEntry           645031
dot1qFdbId              645119
dot1qFdbDynamicCount    645199
dot1qTpFdbTable         645387
dot1qTpFdbEntry         645767
dot1qTpFdbAddress       645944
dot1qTpFdbPort          646080
dot1qTpFdbStatus        646767
dot1qTpGroupTable       648107
dot1qTpGroupEntry       648484
dot1qTpGroupAddress     648865
dot1qTpGroupEgressPorts 649011
dot1qTpGroupLearnt      649337
dot1qForwardAllTable    649528
dot1qForwardAllEntry    649961
dot1qForwardAllPorts    650195
dot1qForwardAllStaticPorts 650497
dot1qForwardAllForbiddenPorts 651424
dot1qForwardUnregisteredTable 652049
dot1qForwardUnregisteredEntry 652592
dot1qForwardUnregisteredPorts 652907
dot1qForwardUnregisteredStaticPorts 653277
dot1qForwardUnregisteredForbiddenPorts 654151
dot1qStaticUnicastTable 654803
dot1qStaticUnicastEntry 655650
dot1qStaticUnicastAddress 655964
dot1qStaticUnicastReceivePort 656170
dot1qStaticUnicastAllowedToGoTo 656521
dot1qStaticUnicastStatus 657473
dot1qStaticMulticastTable 658379
dot1qStaticMulticastEntry 659264
dot1qStaticMulticastAddress 659606
dot1qStaticMulticastReceivePort 659829
dot1qStaticMulticastStaticEgressPorts 660182
dot1qStaticMulticastForbiddenEgressPorts 660816
dot1qStaticMulticastStatus 661455
dot1qVlanNumDeletes     662363
dot1qVlanCurrentTable   662625
dot1qVlanCurrentEntry   662891
dot1qVlanTimeMark       663094
dot1qVlanIndex          663233
dot1qVlanFdbId          663328
dot1qVlanCurrentEgressPorts 663792
dot1qVlanCurrentUntaggedPorts 664019
dot1qVlanStatus         664233
dot1qVlanCreationTime   665121
dot1qVlanStaticTable    665211
dot1qVlanStaticEntry    665479
dot1qVlanStaticName     665618
dot1qVlanStaticEgressPorts 665816
dot1qVlanForbiddenEgressPorts 666483
dot1qVlanStaticUntaggedPorts 667233
dot1qVlanStaticRowStatus 667958
dot1qNextFreeLocalVlanIndex 668046
dot1qPortVlanTable      668971
dot1qPortVlanEntry      669116
dot1qPvid               669268
dot1qPortAcceptableFrameTypes 669601
dot1qPortIngressFiltering 670407
dot1qPortGvrpStatus     671011
dot1qPortGvrpFailedRegistrations 671829
dot1qPortGvrpLastPduOrigin 671963
dot1qPortRestrictedVlanRegistration 672085
dot1qPortVlanStatisticsTable 672708
dot1qPortVlanStatisticsEntry 673683
dot1qTpVlanPortInFrames 673774
dot1qTpVlanPortOutFrames 674360
dot1qTpVlanPortInDiscards 674777
dot1qTpVlanPortInOverflowFrames 675189
dot1qTpVlanPortOutOverflowFrames 675410
dot1qTpVlanPortInOverflowDiscards 675634
dot1qPortVlanHCStatisticsTable 675861
dot1qPortVlanHCStatisticsEntry 676006
dot1qTpVlanPortHCInFrames 676121
dot1qTpVlanPortHCOutFrames 676712
dot1qTpVlanPortHCInDiscards 677133
dot1qLearningConstraintsTable 677549
dot1qLearningConstraintsEntry 677764
dot1qConstraintVlan     677851
dot1qConstraintSet      677985
dot1qConstraintType     678170
dot1qConstraintStatus   678663
dot1qConstraintSetDefault 678728
dot1qConstraintTypeDefault 679042
dot1vProtocolGroupTable 679409
dot1vProtocolGroupEntry 679671
dot1vProtocolTemplateFrameType 679787
dot1vProtocolTemplateProtocolValue 680002
dot1vProtocolGroupId    680789
dot1vProtocolGroupRowStatus 681007
dot1vProtocolPortTable  681098
dot1vProtocolPortEntry  681296
dot1vProtocolPortGroupId 681357
dot1vProtocolPortGroupVid 681547
dot1vProtocolPortRowStatus 681735
qBridgeBaseGroup        681825
qBridgeFdbUnicastGroup  681997
qBridgeFdbMulticastGroup 682217
qBridgeServiceRequirementsGroup 682440
qBridgeFdbStaticGroup   682667
qBridgeVlanGroup        682881
qBridgeVlanStaticGroup  683028
qBridgePortGroup        683171
qBridgeVlanStatisticsGroup 683366
qBridgeVlanStatisticsOverflowGroup 683538
qBridgeVlanHCStatisticsGroup 683903
qBridgeLearningConstraintsGroup 684240
qBridgeLearningConstraintDefaultGroup 684396
qBridgeClassificationDeviceGroup 684596
qBridgeClassificationPortGroup 684692
qBridgePortGroup2       684792
dot1dBaseBridgeGroup    684936
dot1dBasePortGroup      685017
dot1dStpBridgeGroup     685098
dot1dStpPortGroup       685186
dot1dStpPortGroup2      685274
dot1dStpPortGroup3      685362
dot1dTpBridgeGroup      685475
dot1dTpFdbGroup         685554
dot1dTpGroup            685640
dot1dStaticGroup        685759
dot1dNotificationGroup  685877
hrSystemUptime          685967
hrSystemDate            686252
hrSystemInitialLoadDevice 686344
hrSystemInitialLoadParameters 686818
hrSystemNumUsers        687265
hrSystemProcesses       687552
hrSystemMaxProcesses    687675
hrStorageOther          687990
hrStorageRam            688114
hrStorageVirtualMemory  688195
hrStorageFixedDisk      688342
hrStorageRemovableDisk  688482
hrStorageFloppyDisk     688618
hrStorageCompactDisc    688748
hrStorageRamDisk        688877
hrStorageFlashMemory    688999
hrStorageNetworkDisk    689089
hrMemorySize            689199
hrStorageTable          689378
hrStorageEntry          690835
hrStorageIndex          691042
hrStorageType           691158
hrStorageDescr          691244
hrStorageAllocationUnits 691371
hrStorageSize           691732
hrStorageUsed           692270
hrStorageAllocationFailures 692436
hrDeviceOther           692905
hrDeviceUnknown         693028
hrDeviceProcessor       693141
hrDeviceNetwork         693223
hrDevicePrinter         693319
hrDeviceDiskStorage     693405
hrDeviceVideo           693494
hrDeviceAudio           693585
hrDeviceCoprocessor     693677
hrDeviceKeyboard        693768
hrDeviceModem           693862
hrDeviceParallelPort    693946
hrDevicePointing        694038
hrDeviceSerialPort      694157
hrDeviceTape            694247
hrDeviceClock           694345
hrDeviceVolatileMemory  694436
hrDeviceNonVolatileMemory 694554
hrDeviceTable           694680
hrDeviceEntry           694785
hrDeviceIndex           694986
hrDeviceType            695233
hrDeviceDescr           696004
hrDeviceID              696184
hrDeviceStatus          696255
hrDeviceErrors          697160
hrProcessorTable        697548
hrProcessorEntry        697849
hrProcessorFrwID        698253
hrProcessorLoad         698363
hrNetworkTable          698603
hrNetworkEntry          698907
hrNetworkIfIndex        699314
hrPrinterTable          699515
hrPrinterEntry          699799
hrPrinterStatus         700193
hrPrinterDetectedErrorState 700275
hrDiskStorageTable      701693
hrDiskStorageEntry      702114
hrDiskStorageAccess     702495
hrDiskStorageMedia      702787
hrDiskStorageRemoveble  702910
hrDiskStorageCapacity   703027
hrPartitionTable        703259
hrPartitionEntry        703498
hrPartitionIndex        703880
hrPartitionLabel        704171
hrPartitionID           704251
hrPartitionSize         704461
hrPartitionFSIndex      704574
hrFSTable               704980
hrFSEntry               705257
hrFSIndex               705700
hrFSMountPoint          705955
hrFSRemoteMountPoint    706041
hrFSType                706375
hrFSAccess              706489
hrFSBootable            706808
hrFSStorageIndex        706912
hrFSLastFullBackupDate  707321
hrFSLastPartialBackupDate 707787
hrFSOther               708257
hrFSUnknown             708385
hrFSBerkeleyFFS         708511
hrFSSys5FS              708631
hrFSFat                 708746
hrFSHPFS                708858
hrFSHFS                 708984
hrFSMFS                 709113
hrFSNTFS                709229
hrFSVNode               709346
hrFSJournaled           709458
hrFSiso9660             709574
hrFSRockRidge           709698
hrFSNFS                 709823
hrFSNetware             709933
hrFSAFS                 710047
hrFSDFS                 710160
hrFSAppleshare          710286
hrFSRFS                 710403
hrFSDGCFS               710513
hrFSBFS                 710626
hrFSFAT32               710742
hrFSLinuxExt2           710862
hrSWOSIndex             710979
hrSWRunTable            711254
hrSWRunEntry            711358
hrSWRunIndex            711992
hrSWRunName             712198
hrSWRunID               712542
hrSWRunPath             712631
hrSWRunParameters       712796
hrSWRunType             712932
hrSWRunStatus           712998
hrSWRunPerfTable        713241
hrSWRunPerfEntry        713353
hrSWRunPerfCPU          713573
hrSWRunPerfMem          713880
hrSWInstalledLastChange 714040
hrSWInstalledLastUpdateTime 714393
hrSWInstalledTable      714770
hrSWInstalledEntry      714877
hrSWInstalledIndex      715157
hrSWInstalledName       715388
hrSWInstalledID         715626
hrSWInstalledType       715717
hrSWInstalledDate       715783
hrSystemGroup           716136
hrStorageGroup          716208
hrDeviceGroup           716281
hrSWRunGroup            716353
hrSWRunPerfGroup        716435
hrSWInstalledGroup      716542
ifXTable                716626
ifXEntry                716843
ifName                  716987
ifInMulticastPkts       718003
ifInBroadcastPkts       718532
ifOutMulticastPkts      718968
ifOutBroadcastPkts      719567
ifHCInOctets            720077
ifHCInUcastPkts         720506
ifHCInMulticastPkts     721023
ifHCInBroadcastPkts     721618
ifHCOutOctets           722122
ifHCOutUcastPkts        722559
ifHCOutMulticastPkts    723149
ifHCOutBroadcastPkts    723817
ifLinkUpDownTrapEnable  724394
ifHighSpeed             724766
ifPromiscuousMode       725344
ifConnectorPresent      726011
ifAlias                 726199
ifCounterDiscontinuityTime 727692
ifStackTable            728265
ifStackEntry            729496
ifStackHigherLayer      729772
ifStackLowerLayer       730162
ifStackStatus           730516
ifTestTable             731019
ifTestEntry             737300
ifTestId                737416
ifTestStatus            737539
ifTestType              737959
ifTestResult            739072
ifTestCode              739489
ifTestOwner             740143
ifRcvAddressTable       740287
ifRcvAddressEntry       741175
ifRcvAddressAddress     741396
ifRcvAddressStatus      741534
ifRcvAddressType        741658
ifTableLastChange       742240
ifStackLastChange       742588
ifGeneralGroup          743077
ifFixedLengthGroup      743255
ifHCFixedLengthGroup    743591
ifPacketGroup           743832
ifHCPacketGroup         744123
ifVHCPacketGroup        744394
ifRcvAddressGroup       744606
ifTestGroup             744759
ifStackGroup            744941
ifGeneralInformationGroup 745139
ifStackGroup2           745277
ifOldObjectsGroup       745413
ifCounterDiscontinuityGroup 745598
linkUpDownNotificationsGroup 745747
entPhysicalTable        745884
entPhysicalEntry        746053
entPhysicalIndex        746503
entPhysicalDescr        746568
entPhysicalVendorType   746890
entPhysicalContainedIn  747606
entPhysicalClass        748267
entPhysicalParentRelPos 748892
entPhysicalName         751735
entPhysicalHardwareRev  752659
entPhysicalFirmwareRev  753412
entPhysicalSoftwareRev  754008
entPhysicalSerialNum    754604
entPhysicalMfgName      756722
entPhysicalModelName    757451
entPhysicalAlias        757905
entPhysicalAssetID      759019
entPhysicalIsFRU        760711
entPhysicalMfgDate      761217
entPhysicalUris         761540
entPhysicalUUID         762327
entLogicalTable         762839
entLogicalEntry         763176
entLogicalIndex         763380
entLogicalDescr         763646
entLogicalType          763947
entLogicalCommunity     764639
entLogicalTAddress      767007
entLogicalTDomain       767663
entLogicalContextEngineID 768051
entLogicalContextName   768820
entLPMappingTable       769573
entLPMappingEntry       771302
entLPPhysicalIndex      771744
entAliasMappingTable    771942
entAliasMappingEntry    772504
entAliasLogicalIndexOrZero 773167
entAliasMappingIdentifier 775043
entPhysicalContainsTable 776459
entPhysicalContainsEntry 777100
entPhysicalChildIndex   777185
entLastChangeTime       777302
entConfigChange         777689
entityPhysicalGroup     779021
entityLogicalGroup      779215
entityMappingGroup      779464
entityGeneralGroup      779750
entityNotificationsGroup 779944
entityPhysical2Group    780106
entityLogical2Group     780384
entityPhysical3Group    780586
entityPhysical4Group    780864
entityPhysicalCRGroup   781181
intSrvIfAttribTable     781423
intSrvIfAttribEntry     781531
intSrvIfAttribAllocatedBits 781635
intSrvIfAttribMaxAllocatedBits 781835
intSrvIfAttribAllocatedBuffer 782068
intSrvIfAttribFlows     782298
intSrvIfAttribPropagationDelay 782560
intSrvIfAttribStatus    782817
intSrvFlowTable         782921
intSrvFlowEntry         783048
intSrvFlowNumber        783290
intSrvFlowType          783464
intSrvFlowOwner         783581
intSrvFlowDestAddr      783702
intSrvFlowSenderAddr    783927
intSrvFlowDestAddrLength 784218
intSrvFlowSenderAddrLength 784527
intSrvFlowProtocol      784838
intSrvFlowDestPort      785026
intSrvFlowPort          785574
intSrvFlowFlowId        786122
intSrvFlowInterface     786247
intSrvFlowIfAddr        786370
intSrvFlowRate          786623
intSrvFlowBurst         787036
intSrvFlowWeight        787487
intSrvFlowQueue         787748
intSrvFlowMinTU         788006
intSrvFlowMaxTU         788194
intSrvFlowBestEffort    788398
intSrvFlowPoliced       788517
intSrvFlowDiscard       788643
intSrvFlowService       788839
intSrvFlowOrder         788922
intSrvFlowStatus        789305
intSrvFlowNewIndex      789537
intSrvIfAttribGroup     790162
intSrvFlowsGroup        790306
diffServDataPathTable   790450
diffServDataPathEntry   790719
diffServDataPathIfDirection 791489
diffServDataPathStart   791636
diffServDataPathStorage 792522
diffServDataPathStatus  792729
diffServClfrNextFree    792873
diffServClfrTable       793016
diffServClfrEntry       794081
diffServClfrId          794317
diffServClfrStorage     794520
diffServClfrStatus      794727
diffServClfrElementNextFree 795061
diffServClfrElementTable 795215
diffServClfrElementEntry 796422
diffServClfrElementId   796557
diffServClfrElementPrecedence 796767
diffServClfrElementNext 797579
diffServClfrElementSpecific 798672
diffServClfrElementStorage 799284
diffServClfrElementStatus 799494
diffServMultiFieldClfrNextFree 799830
diffServMultiFieldClfrTable 799990
diffServMultiFieldClfrEntry 800141
diffServMultiFieldClfrId 800246
diffServMultiFieldClfrAddrType 800471
diffServMultiFieldClfrDstAddr 800820
diffServMultiFieldClfrDstPrefixLength 801108
diffServMultiFieldClfrSrcAddr 801586
diffServMultiFieldClfrSrcPrefixLength 801868
diffServMultiFieldClfrDscp 802346
diffServMultiFieldClfrFlowId 802594
diffServMultiFieldClfrProtocol 802677
diffServMultiFieldClfrDstL4PortMin 802983
diffServMultiFieldClfrDstL4PortMax 803165
diffServMultiFieldClfrSrcL4PortMin 803481
diffServMultiFieldClfrSrcL4PortMax 803658
diffServMultiFieldClfrStorage 803969
diffServMultiFieldClfrStatus 804182
diffServMeterNextFree   804521
diffServMeterTable      804665
diffServMeterEntry      805185
diffServMeterId         805309
diffServMeterSucceedNext 805501
diffServMeterFailNext   806462
diffServMeterSpecific   807423
diffServMeterStorage    808039
diffServMeterStatus     808246
diffServTBParamNextFree 808580
diffServTBParamTable    808726
diffServTBParamEntry    809066
diffServTBParamId       809178
diffServTBParamType     809388
diffServTBParamRate     809939
diffServTBParamBurstSize 810291
diffServTBParamInterval 810598
diffServTBParamStorage  811109
diffServTBParamStatus   811316
diffServActionNextFree  811650
diffServActionTable     811795
diffServActionEntry     812264
diffServActionId        812410
diffServActionInterface 812604
diffServActionNext      813454
diffServActionSpecific  814372
diffServActionStorage   815101
diffServActionStatus    815308
diffServDscpMarkActTable 815642
diffServDscpMarkActEntry 815878
diffServDscpMarkActDscp 816012
diffServCountActNextFree 816459
diffServCountActTable   816607
diffServCountActEntry   816738
diffServCountActId      816864
diffServCountActOctets  817068
diffServCountActPkts    817399
diffServCountActStorage 817731
diffServCountActStatus  817938
diffServAlgDropNextFree 818274
diffServAlgDropTable    818420
diffServAlgDropEntry    818581
diffServAlgDropId       818889
diffServAlgDropType     819096
diffServAlgDropNext     820819
diffServAlgDropQMeasure 821791
diffServAlgDropQThreshold 822355
diffServAlgDropSpecific 822941
diffServAlgDropOctets   823918
diffServAlgDropPkts     824287
diffServAlgRandomDropOctets 824657
diffServAlgRandomDropPkts 825088
diffServAlgDropStorage  825517
diffServAlgDropStatus   825724
diffServRandomDropNextFree 826058
diffServRandomDropTable 826210
diffServRandomDropEntry 826419
diffServRandomDropId    826547
diffServRandomDropMinThreshBytes 826750
diffServRandomDropMinThreshPkts 827087
diffServRandomDropMaxThreshBytes 827427
diffServRandomDropMaxThreshPkts 827910
diffServRandomDropProbMax 828394
diffServRandomDropWeight 828781
diffServRandomDropSamplingRate 829501
diffServRandomDropStorage 829773
diffServRandomDropStatus 829982
diffServQNextFree       830317
diffServQTable          830457
diffServQEntry          830804
diffServQId             830925
diffServQNext           831113
diffServQMinRate        831765
diffServQMaxRate        832324
diffServQStorage        832890
diffServQStatus         833097
diffServSchedulerNextFree 833431
diffServSchedulerTable  833581
diffServSchedulerEntry  833812
diffServSchedulerId     833947
diffServSchedulerNext   834147
diffServSchedulerMethod 835429
diffServSchedulerMinRate 835795
diffServSchedulerMaxRate 836447
diffServSchedulerStorage 837220
diffServSchedulerStatus 837428
diffServMinRateNextFree 837762
diffServMinRateTable    837908
diffServMinRateEntry    838098
diffServMinRateId       838292
diffServMinRatePriority 838499
diffServMinRateAbsolute 838771
diffServMinRateRelative 839728
diffServMinRateStorage  840717
diffServMinRateStatus   840924
diffServMaxRateNextFree 841258
diffServMaxRateTable    841404
diffServMaxRateEntry    841593
diffServMaxRateId       841786
diffServMaxRateLevel    841996
diffServMaxRateAbsolute 842658
diffServMaxRateRelative 843717
diffServMaxRateThreshold 844820
diffServMaxRateStorage  845220
diffServMaxRateStatus   845427
diffServTBParamSimpleTokenBucket 845761
diffServTBParamAvgRate  845924
diffServTBParamSrTCMBlind 846064
diffServTBParamSrTCMAware 846278
diffServTBParamTrTCMBlind 846492
diffServTBParamTrTCMAware 846703
diffServTBParamTswTCM   846914
diffServSchedulerPriority 847081
diffServSchedulerWRR    847576
diffServSchedulerWFQ    848096
transportDomainUdpIpv4  848552
transportDomainUdpIpv6  848743
transportDomainUdpIpv4z 848934
transportDomainUdpIpv6z 849144
transportDomainTcpIpv4  849354
transportDomainTcpIpv6  849545
transportDomainTcpIpv4z 849736
transportDomainTcpIpv6z 849946
transportDomainSctpIpv4 850156
transportDomainSctpIpv6 850459
transportDomainSctpIpv4z 850762
transportDomainSctpIpv6z 851085
transportDomainLocal    851408
transportDomainUdpDns   851673
transportDomainTcpDns   851861
transportDomainSctpDns  852049
isisDatabaseOverload    852238
isisManualAddressDrops  852507
isisCorruptedLSPDetected 853285
isisAttemptToExceedMaxSequence 853757
isisIDLenMismatch       854257
isisMaxAreaAddressesMismatch 854979
isisOwnLSPPurge         855669
isisSequenceNumberSkip  856011
isisAuthenticationTypeFailure 856449
isisAuthenticationFailure 857113
isisVersionSkew         857780
isisAreaMismatch        858459
isisRejectedAdjacency   859132
isisLSPTooLargeToPropagate 859656
isisOrigLSPBuffSizeMismatch 860195
isisProtocolsSupportedMismatch 861110
isisAdjacencyChange     861966
isisLSPErrorDetected    862271
isisSysVersion          863002
isisSysLevelType        863179
isisSysID               863552
isisSysMaxPathSplits    864152
isisSysMaxLSPGenInt     864581
isisSysPollESHelloRate  865159
isisSysWaitTime         865533
isisSysAdminState       865906
isisSysL2toL1Leaking    866209
isisSysMaxAge           866365
isisSysReceiveLSPBufferSize 866694
isisSysProtSupported    867306
isisSysNotificationEnable 867443
isisManAreaAddrTable    867724
isisManAreaAddrEntry    868417
isisManAreaAddr         868614
isisManAreaAddrExistState 868935
isisAreaAddrTable       869458
isisAreaAddrEntry       869826
isisAreaAddr            870080
isisSummAddrTable       870162
isisSummAddrEntry       870632
isisSummAddressType     871166
isisSummAddress         871254
isisSummAddrPrefixLen   871619
isisSummAddrExistState  872293
isisSummAddrMetric      872560
isisSummAddrFullMetric  872701
isisRedistributeAddrTable 872847
isisRedistributeAddrEntry 873388
isisRedistributeAddrType 874022
isisRedistributeAddrAddress 874111
isisRedistributeAddrPrefixLen 874491
isisRedistributeAddrExistState 875235
isisRouterTable         875507
isisRouterEntry         875582
isisRouterSysID         875782
isisRouterLevel         875863
isisRouterHostName      875996
isisRouterID            876114
isisSysLevelTable       876202
isisSysLevelEntry       876286
isisSysLevelIndex       876449
isisSysLevelOrigLSPBuffSize 876525
isisSysLevelMinLSPGenInt 876899
isisSysLevelState       877231
isisSysLevelSetOverload 877947
isisSysLevelSetOverloadUntil 878328
isisSysLevelMetricStyle 879197
isisSysLevelSPFConsiders 879314
isisSysLevelTEEnabled   879443
isisNextCircIndex       879526
isisCircTable           880432
isisCircEntry           880541
isisCircIndex           880754
isisCircIfIndex         881177
isisCircAdminState      881366
isisCircExistState      881446
isisCircType            881967
isisCircExtDomain       882306
isisCircLevelType       882547
isisCircPassiveCircuit  883062
isisCircMeshGroupEnabled 883203
isisCircMeshGroup       883585
isisCircSmallHellos     883983
isisCircLastUpTime      884315
isisCirc3WayEnabled     884577
isisCircExtendedCircID  884663
isisCircLevelTable      884922
isisCircLevelEntry      885018
isisCircLevelIndex      885257
isisCircLevelMetric     885333
isisCircLevelWideMetric 885492
isisCircLevelISPriority 885585
isisCircLevelIDOctet    885802
isisCircLevelID         886528
isisCircLevelDesIS      887215
isisCircLevelHelloMultiplier 887648
isisCircLevelHelloTimer 888012
isisCircLevelDRHelloTimer 888603
isisCircLevelLSPThrottle 888982
isisCircLevelMinLSPRetransInt 889288
isisCircLevelCSNPInterval 889816
isisCircLevelPartSNPInterval 890253
isisSystemCounterTable  890596
isisSystemCounterEntry  890686
isisSysStatLevel        890753
isisSysStatCorrLSPs     890829
isisSysStatAuthTypeFails 891299
isisSysStatAuthFails    891531
isisSysStatLSPDbaseOloads 891755
isisSysStatManAddrDropFromAreas 891946
isisSysStatAttmptToExMaxSeqNums 892166
isisSysStatSeqNumSkips  892404
isisSysStatOwnLSPPurges 892571
isisSysStatIDFieldLenMismatches 892783
isisSysStatPartChanges  893133
isisSysStatSPFRuns      893191
isisSysStatLSPErrors    893272
isisCircuitCounterTable 893446
isisCircuitCounterEntry 893555
isisCircuitType         893700
isisCircAdjChanges      894025
isisCircNumAdj          894233
isisCircInitFails       894394
isisCircRejAdjs         894646
isisCircIDFieldLenMismatches 894842
isisCircMaxAreaAddrMismatches 895209
isisCircAuthTypeFails   895493
isisCircAuthFails       895680
isisCircLANDesISChanges 895861
isisPacketCounterTable  896064
isisPacketCounterEntry  896206
isisPacketCountLevel    896348
isisPacketCountDirection 896444
isisPacketCountIIHello  896525
isisPacketCountISHello  897003
isisPacketCountESHello  897355
isisPacketCountLSP      897706
isisPacketCountCSNP     898014
isisPacketCountPSNP     898324
isisPacketCountUnknown  898634
isisISAdjTable          898904
isisISAdjEntry          898993
isisISAdjIndex          899201
isisISAdjState          899458
isisISAdj3WayState      899595
isisISAdjNeighSNPAAddress 899894
isisISAdjNeighSysType   900057
isisISAdjNeighSysID     900207
isisISAdjNbrExtendedCircID 900388
isisISAdjUsage          900531
isisISAdjHoldTimer      900889
isisISAdjNeighPriority  901198
isisISAdjLastUpTime     901415
isisISAdjAreaAddrTable  901713
isisISAdjAreaAddrEntry  901976
isisISAdjAreaAddrIndex  902202
isisISAdjAreaAddress    902354
isisISAdjIPAddrTable    902476
isisISAdjIPAddrEntry    902657
isisISAdjIPAddrIndex    902881
isisISAdjIPAddrType     903019
isisISAdjIPAddrAddress  903153
isisISAdjProtSuppTable  903390
isisISAdjProtSuppEntry  903578
isisISAdjProtSuppProtocol 903827
isisRATable             903957
isisRAEntry             904073
isisRAIndex             904277
isisRAExistState        904468
isisRAAdminState        904805
isisRAAddrPrefix        904963
isisRAMapType           905267
isisRAMetric            907208
isisRAMetricType        907467
isisRASNPAAddress       907715
isisRASNPAMask          908060
isisRASNPAPrefix        908768
isisRAType              909361
isisIPRATable           909670
isisIPRAEntry           909869
isisIPRADestType        910653
isisIPRADest            910731
isisIPRADestPrefixLen   911023
isisIPRANextHopIndex    911689
isisIPRANextHopType     911851
isisIPRANextHop         911927
isisIPRAType            912120
isisIPRAExistState      912476
isisIPRAAdminState      912839
isisIPRAMetric          913035
isisIPRAMetricType      913230
isisIPRAFullMetric      913404
isisIPRASNPAAddress     913604
isisIPRASourceType      913859
isisLSPSummaryTable     913924
isisLSPSummaryEntry     913989
isisLSPLevel            914211
isisLSPID               914287
isisLSPSeq              914369
isisLSPZeroLife         914442
isisLSPChecksum         914522
isisLSPLifetimeRemain   914604
isisLSPPDULength        914740
isisLSPAttributes       914803
isisLSPTLVTable         914868
isisLSPTLVEntry         914942
isisLSPTLVIndex         915157
isisLSPTLVSeq           915307
isisLSPTLVChecksum      915380
isisLSPTLVType          915462
isisLSPTLVLen           915523
isisLSPTLVValue         915586
isisNotificationSysLevelIndex 915648
isisNotificationCircIfIndex 915733
isisPduLspId            915852
isisPduFragment         915964
isisPduFieldLen         916088
isisPduMaxAreaAddress   916183
isisPduProtocolVersion  916296
isisPduLspSize          916391
isisPduOriginatingBufferSize 916506
isisPduBufferSize       916763
isisPduProtocolsSupported 916844
isisAdjState            916974
isisErrorOffset         917048
isisErrorTLVType        917317
isisNotificationAreaAddress 917386
isisSystemGroup         917446
isisCircuitGroup        917558
isisISAdjGroup          917673
isisNotificationObjectGroup 917788
isisNotificationGroup   917883
isisISPDUCounterGroup   917970
isisRATableGroup        918065
isisISIPRADestGroup     918191
isisLSPGroup            918311
srSecStatsCacheNumber   918425
srSecStatsClockNumber   918551
srSecStatsClockHistNumber 918643
srSecStatsDupHistNumber 918731
srSecStatsStorageTime   918815
srSecControlCacheStatus 919040
srSecControlClockHistStatus 919239
srSecControlDupHistStatus 919370
srSecControlCacheStorageType 919497
srSecControlClockStorageType 919658
srSecControlClockHistStorageType 919791
srSecControlDupHistStorageType 919922
srSecAddrToEngineIDTable 920049
srSecAddrToEngineIDEntry 920170
srSecAddrToEngineIDAddressType 920249
srSecAddrToEngineIDAddress 920337
srSecAddrToEngineIDPort 920416
srSecAddrToEngineIDEngineID 920487
srSecAddrToEngineIDLastUpdated 920584
srSecAddrToEngineIDStorageType 920719
srSecAddrToEngineIDStatus 920807
srSecEngineIDToAddrTable 921101
srSecEngineIDToAddrEntry 921222
srSecEngineIDToAddrEngineID 921301
srSecEngineIDToAddrAddressType 921377
srSecEngineIDToAddrAddress 921465
srSecEngineIDToAddrPort 921572
srSecEngineIDToAddrLastUpdated 921665
srSecEngineIDToAddrStorageType 921800
srSecEngineIDToAddrStatus 921888
srSecEngineIDToClockTable 922182
srSecEngineIDToClockEntry 922431
srSecEngineIDToClockEngineID 922512
srSecEngineIDToClockEngineBoots 922664
srSecEngineIDToClockEngineTime 922806
srSecEngineIDToClockLatestRecvd 922946
srSecEngineIDToClockStorageType 923392
srSecEngineIDToClockStatus 923481
srSecClockHistTable     923747
srSecClockHistEntry     923841
srSecClockHistEngineID  923914
srSecClockHistEngineBoots 924003
srSecClockHistEngineTime 924173
srSecClockHistEventType 924341
srSecClockHistRecordedTime 924960
srSecClockHistStorageType 925047
srSecClockHistStatus    925130
srSecDupHistTable       925254
srSecDupHistEntry       925398
srSecDupHistEngineID    925469
srSecDupHistAddressType 925555
srSecDupHistAddr        925636
srSecDupHistPort        925740
srSecDupHistDetectedTime 925833
srSecDupHistStorageType 925924
srSecDupHistStatus      926005
srSecClockLatch         926127
srSecClockRollback      926441
srSecDuplicateEngineID  926600
srSecBasicGroup         926808
srSecReverseGroup       926980
srSecHistoryGroup       927121
srSecNotificationsGroup 927382
srSecDateAndTimeGroup   927498
srSecControlGroup       927600
cienaCommon             927813
cienaProducts           927988
cienaGlobalSeverity     928215
cienaGlobalMacAddress   928348
cienaGlobalSystemUpTime 928434
cienaCes                928590
cienaCesConfig          928758
cienaCesLogicalPortConfigTable 928854
cienaCesLogicalPortConfigEntry 928925
cienaCesLogicalPortConfigPgId 929010
cienaCesLogicalPortConfigPortAdminState 929275
cienaCesLogicalPortConfigPortOperState 929368
cienaCesLogicalPortConfigPortLinkUpDownTrapState 929465
cienaCesLogicalPortConfigPortAllTrapState 929605
cienaCesLogicalPortConfigPortPortMacAddress 929734
cienaCesLogicalPortConfigPortName 929837
cienaCesLogicalPortConfigPortDesc 930057
cienaCesLogicalPortConfigPortType 930150
cienaCesLogicalPortConfigPortIfIndex 930227
cienaCesPortAdminSpeed  930365
cienaCesPortOperSpeed   930435
cienaCesPortMaxFrameSize 930517
cienaCesLogicalPortConfigEttpAid 930629
cienaCesLogicalPortLastDownReason1 930797
cienaCesLogicalPortLastDownReason2 930972
cienaCesLogicalPortLastDownReason3 931161
cienaCesLogicalPortMaskedDownReason 931350
cienaCesLogicalPortFacilityLoopback 931527
cienaCesPortIngressRcosProfileId 931682
cienaCesPortIngressRcosProfileName 931805
cienaCesPortIngressRcosPolicy 931932
cienaCesLogicalPortConfigEttpId 932032
cienaCesLogicalPortConfigEttpType 932393
cienaCesLogicalPortConfigIngMirrorPort 932481
cienaCesLogicalPortConfigEgrMirrorPort 932752
cienaCesLogicalPortConfigIngFloodContainer 933021
cienaCesLogicalPortConfigPriorityTagMode 933327
cienaCesLogicalPortConfigVidTpidCount 933565
cienaCesPortOperationalSpeed 933736
cienaCesPortOuterTpidList 933912
cienaCesPortEgressOuterTpid 934061
cienaCesPortOuterVtagTpid 934147
cienaCesPortAdministrativeSpeed 934230
cienaCesPortTerminalLoopbackState 934419
cienaCesPortLearnLimit  934586
cienaCesLogicalPortConfigSignalDegradeDetection 934674
cienaCesLogicalPortConfigSignalDegradeState 934946
cienaCesPortL2CftStatus 935043
cienaCesPortL2CftProfileId 935134
cienaCesPortConfigHoldOffState 935603
cienaCesPortConfigHoldOffTime 935702
cienaCesPortOperFecState 935947
cienaCesPortConfigYProtection 936061
cienaCesLogicalPortConfigMplsSpeculativeHash 936311
cienaCesPortConfigHoldOffTimeMsec 936416
cienaCesPortConfigLinkFlapHoldTimeSec 936655
cienaCesPortPgIdMappingTable 936891
cienaCesPortPgIdMappingEntry 937000
cienaCesPortPgIdMappingChassisIndex 937077
cienaCesPortPgIdMappingShelfIndex 937181
cienaCesPortPgIdMappingSlotIndex 937281
cienaCesPortPgidMappingPortNumber 937379
cienaCesPortPgIdMappingPgId 937493
cienaCesPortPgIdMappingNotifChassisIndex 937615
cienaCesPortPgIdMappingNotifShelfIndex 937749
cienaCesPortPgIdMappingNotifSlotIndex 937879
cienaCesPortPgIdMappingNotifPortNumber 938007
cienaCesEttpConfigTable 938155
cienaCesEttpConfigEntry 938247
cienaCesEttpConfigEttpId 938342
cienaCesEttpConfigOperState 938579
cienaCesEttpConfigLinkUpDownTrapState 938665
cienaCesEttpConfigAllTrapState 938794
cienaCesEttpConfigMacAddress 938912
cienaCesEttpConfigName  939000
cienaCesEttpConfigEttpType 939210
cienaCesEttpConfigAdminSpeed 939280
cienaCesEttpConfigOperSpeed 939355
cienaCesEttpConfigEthLpPgid 939441
cienaCesEttpConfigDuplex 939637
cienaCesEttpConfigFlowCntl 939762
cienaCesEttpConfigAutoNeg 939906
cienaCesEttpConfigAdvertisedFlowCntl 940067
cienaCesEttpConfigIfgDecr 940187
cienaCesEttpConfigXcvrFreq 940356
cienaCesLogicalPortTpidTable 940469
cienaCesLogicalPortTpidEntry 940551
cienaCesLogicalPortTpidIndex 940836
cienaCesLogicalPortInnerVidTpid 940968
cienaCesLogicalPortOuterVidTpid 941105
cienaCesChPortPgIdMappingTable 941242
cienaCesChPortPgIdMappingEntry 941411
cienaCesChPortPgIdMappingChassisIndex 941490
cienaCesChPortPgIdMappingShelfIndex 941596
cienaCesChPortPgIdMappingSlotIndex 941698
cienaCesChPortPgIdMappingPortNumber 941798
cienaCesChPortPgIdMappingChannelNumber 941914
cienaCesChPortPgIdMappingPgId 942105
cienaCesChPortPgIdMappingNotifChassisIndex 942237
cienaCesChPortPgIdMappingNotifShelfIndex 942373
cienaCesChPortPgIdMappingNotifSlotIndex 942505
cienaCesChPortPgIdMappingNotifPortNumber 942635
cienaCesChPortPgIdMappingNotifChannelNumber 942785
portConfigGroup         943010
portNotifGroup          943138
portPgIdMappingGroup    943265
cienaCesModuleGlobalPostState 943392
cienaCesModuleTable     943497
cienaCesModuleEntry     943604
cienaCesModuleChassisIndx 943697
cienaCesModuleShelfIndx 943794
cienaCesModuleSlotIndx  943887
cienaCesModuleModel     943979
cienaCesModuleType      944058
cienaCesModuleDescription 944136
cienaCesModuleAdminState 944230
cienaCesModuleOperState 944332
cienaCesModuleProtectionRole 944430
cienaCesModuleStandbyStatus 944546
cienaCesModuleLastRebootReason 944645
cienaCesModuleAdminPostState 944751
cienaCesModuleOperPostState 944864
cienaCesModuleTrapState 944978
cienaCesModuleChassisNotifIndx 945099
cienaCesModuleShelfNotifIndx 945225
cienaCesModuleSlotNotifIndx 945347
cienaCesModuleSlotName  945467
cienaCesModuleDescriptionTable 945575
cienaCesModuleDescriptionEntry 945707
cienaCesModuleDescriptionBoardName 945818
cienaCesModuleDescriptionBoardPartNum 945907
cienaCesModuleDescriptionBoardSerialNum 946005
cienaCesModuleDescriptionBoardDesc 946107
cienaCesModuleDescriptionHwVersion 946202
cienaCesModuleDescriptionMfgDate 946303
cienaCesModuleDescriptionBaseMac 946404
cienaCesModuleDescriptionUpTime 946503
cienaCesModuleDescriptionTotalNumPorts 946676
cienaCesModuleTempSensorTable 946788
cienaCesModuleTempSensorEntry 946904
cienaCesModuleSensorIndx 947013
cienaCesModuleSensorDescription 947136
cienaCesModuleSensorCurrentTemp 947229
cienaCesModuleSensorHighTemp 947337
cienaCesModuleSensorLowTemp 947484
cienaCesModuleSensorHighTempThreshold 947628
cienaCesModuleSensorLowTempThreshold 947751
cienaCesModuleSensorNotifIndx 947872
cienaCesGlobalSwState   947995
cienaCesModuleSwTable   948075
cienaCesModuleSwEntry   948193
cienaCesModuleSwState   948289
cienaCesModuleSwRunningRelease 948362
cienaCesModuleSwRunningReleasePartition 948474
cienaCesModuleSwReleasePartition0Pkg 948595
cienaCesModuleSwReleasePartition0PkgStatus 948693
cienaCesModuleSwReleasePartition1Pkg 948796
cienaCesModuleSwReleasePartition1PkgStatus 948894
cienaCesModuleSwReleasePartition2Pkg 948997
cienaCesModuleSwReleasePartition2PkgStatus 949095
cienaCesModuleSwBank0KernelVersion 949198
cienaCesModuleSwBank0KernelStatus 949270
cienaCesModuleSwBank1KernelVersion 949349
cienaCesModuleSwBank1KernelStatus 949421
cienaCesModuleSwBank0UbootVersion 949491
cienaCesModuleSwBank0UbootStatus 949562
cienaCesModuleSwBank1UbootVersion 949632
cienaCesModuleSwBank1UbootStatus 949703
cienaCesModuleSwUbootGoldVersion 949773
cienaCesModuleSwUbootGoldStatus 949842
cienaCesModuleSwMIBVer  949910
cienaCesModulePOSTErrorTable 950008
cienaCesModulePOSTErrorEntry 950114
cienaCesModulePOSTErrorIndex 950229
cienaCesModulePOSTErrorDescription 950313
cienaCesModulePOSTErrorSeverity 950403
cienaCesModulePOSTErrorScope 950493
cienaCesModulePOSTScopeIndex 950577
cienaCesModuleResourceHealthTable 950683
cienaCesModuleResourceHealthEntry 950793
cienaCesModuleResourceHealthSubCategory 950893
cienaCesModuleResourceDeviceIndx 951073
cienaCesModuleResourceHealthState 951158
cienaCesModuleResourceHealthCurrMeasurement 951263
cienaCesModuleResourceHealthMaxMeasurement 951379
cienaCesModuleResourceHealthMaxThreshold 951507
cienaCesModuleIDPTable  951634
cienaCesModuleIDPEntry  951756
cienaCesModuleIDPEthBaseMac 951852
cienaCesModuleIDPEthBaseMacRange 951980
cienaCesModuleIDPModuleSerialNumber 952107
cienaCesModuleIDPModelPartNumber 952231
cienaCesModuleIDPModelRevision 952349
cienaCesModuleIDPProductID 952462
cienaCesModuleIDPMfgDate 952574
cienaCesModuleIDPCleiCode 952684
cienaCesModuleIDPBarcode 952787
cienaCesModuleIDPSWCompat 952887
cienaCesModuleIDPFTC    953010
cienaCesModuleSystemProtectionMode 953123
cienaCesModuleSwitchOverReason 953230
cienaCesModuleNotifTable 953683
cienaCesModuleNotifEntry 953792
cienaCesModuleHealthCategory 953897
cienaCesModuleHealthSubCategory 954042
cienaCesModuleHealthStatus 954193
cienaCesModuleHealthStatusLast 954365
cienaCesModuleHealthOriginType 954544
cienaCesModuleHealthOriginName 954658
cienaCesModuleHealthOriginUnitId 954777
moduleConfigGroup       954889
moduleDescriptionGroup  955018
moduleSensorGroup       955147
moduleNotifGroup        955263
modulePostErrorGroup    955392
cienaCesCfmServiceTable 955500
cienaCesCfmServiceEntry 955642
cienaCesCfmServiceIndex 955739
cienaCesCfmServiceType  955822
cienaCesCfmServiceValue 956120
cienaCesCfmServiceAdminState 956413
cienaCesCfmServiceOperState 956534
cienaCesCfmServiceName  956651
cienaCesCfmServiceMdLevel 956738
cienaCesCfmServiceFaultState 956867
cienaCesCfmServiceAlarmTime 957017
cienaCesCfmServiceCCMInterval 957285
cienaCesCfmServiceResetTime 957701
cienaCesCfmServiceLastFaultCCM 957953
cienaCesCfmServiceRMEPFailureFlag 958050
cienaCesCfmServiceCCMErrorFlag 958163
cienaCesCfmServiceCrossConnectErrorFlag 958270
cienaCesCfmServiceNumMEP 958396
cienaCesCfmServiceNumRemoteMEP 958484
cienaCesCfmServiceNumActiveMEP 958585
cienaCesCfmServiceNextMepId 958680
cienaCesCfmServiceAlarmPriority 958788
cienaCesCfmServiceNumCCMForFault 959178
cienaCesCfmServiceDMMInterval 959548
cienaCesCfmServiceLMMInterval 960108
cienaCesCfmServiceCCMLossStatsState 960724
cienaCesCfmServiceCCMLossBucketInterval 960898
cienaCesCfmServiceY1731 961159
cienaCesCfmServiceTlvSenderIdType 961263
cienaCesCfmServiceRMEPHoldTime 961362
cienaCesCfmServiceCCMTxState 961535
cienaCesCfmServicePortStatusFlag 961645
cienaCesCfmServiceRDIFlag 961744
cienaCesCfmServiceInstabilityFlag 961828
cienaCesCfmServiceRMEPAging 961928
cienaCesCfmServiceRMEPDiscovery 962024
cienaCesCfmServiceChargedAgainstGlobalBudget 962128
cienaCesCfmServiceControlModuleFrameBudget 962289
cienaCesCfmServiceMulticastDa 962486
cienaCesCfmServiceCCMRxStats 962683
cienaCesCfmServiceDMMVersion 962772
cienaCesCfmServiceLMMVersion 962980
cienaCesCfmServiceLmmMode 963187
cienaCesCfmServiceLmmCounterProfile 963310
cienaCesCfmServiceYProtectionMonitoringState 963486
cienaCesCfmMEPTable     963819
cienaCesCfmMEPEntry     963957
cienaCesCfmMEPId        964050
cienaCesCfmMEPMacAddr   964204
cienaCesCfmMEPAdminState 964340
cienaCesCfmMEPOperState 964452
cienaCesCfmMEPDirection 964560
cienaCesCfmMEPCCMState  964664
cienaCesCfmMEPCCMPriority 964799
cienaCesCfmMEPLTMPriority 964904
cienaCesCfmMEPLiType    965020
cienaCesCfmMEPLiIndex   965137
cienaCesCfmMEPServiceName 965248
cienaCesCfmMEPSubPortName 965360
cienaCesCfmMEPVsPbtName 965508
cienaCesCfmMEPLogicalPortName 965645
cienaCesCfmMEPSubPortIndex 965774
cienaCesCfmMEPEncapsulation 965871
cienaCesCfmMEPLeadPortSlotIndex 965996
cienaCesCfmMEPPBTBvid   966112
cienaCesCfmMEPPBTEtype  966222
cienaCesCfmMEPL2XformType 966337
cienaCesCfmMEPSignalDegradeMonitoringStatus 966592
cienaCesCfmMEPSignalDegradeTriggerMode 966720
cienaCesCfmRemoteMEPTable 967245
cienaCesCfmRemoteMEPEntry 967383
cienaCesCfmRemoteMEPID  967484
cienaCesCfmRemoteMEPMacAddr 967603
cienaCesCfmRemoteMEPAdminState 967749
cienaCesCfmRemoteMEPOperState 967884
cienaCesCfmRemoteMEPTime 968015
cienaCesCfmRemoteMEPKLastMacStatus 968195
cienaCesCfmRemoteMEPFailureFlag 968306
cienaCesCfmRemoteMEPCCMErrorFlag 968413
cienaCesCfmRemoteMEPRDIErrorFlag 968516
cienaCesCfmRemoteMEPSubPortName 968619
cienaCesCfmRemoteMEPServiceName 968723
cienaCesCfmRemoteMEPLastPortStatus 968837
cienaCesCfmRemoteMEPLastInterfaceStatus 968954
cienaCesCfmRemoteMEPCCMLevel 969076
cienaCesCfmRemoteMEPHoldState 969168
cienaCesCfmDelayMsgTable 969276
cienaCesCfmDelayMsgEntry 969421
cienaCesCfmDelayMsgLocalMEPId 969520
cienaCesCfmDelayMsgTargetMEPID 969614
cienaCesCfmDelayMsgServiceName 969703
cienaCesCfmDelayMsgAverageDelayThreshold 969835
cienaCesCfmDelayMsgAverageJitterThreshold 969966
cienaCesCfmDelayMsgMaximumDelayThreshold 970101
cienaCesCfmDelayMsgMaximumJitterThreshold 970216
cienaCesCfmDelayMsgAverageDelay 970335
cienaCesCfmDelayMsgAverageJitter 970483
cienaCesCfmDelayMsgMaximumDelay 970634
cienaCesCfmDelayMsgMaximumJitter 970782
cienaCesCfmDelayMsgMinimumDelay 970933
cienaCesCfmDelayMsgMinimumJitter 971081
cienaCesCfmDelayMsgAverageDelayVariation 971232
cienaCesCfmDelayMsgMaximumDelayVariation 971420
cienaCesCfmDelayMsgMinimumDelayVariation 971608
cienaCesCfmDelayMsgAverageDelayVariationThreshold 971796
cienaCesCfmDelayMsgMaximumDelayVariationThreshold 972260
cienaCesCfmDelayMsgPriority 972724
cienaCesCfmDelayMsgCount 972843
cienaCesCfmDelayMsgIterations 972976
cienaCesCfmDelayMsgRepeatDelay 973188
cienaCesCfmDelayMsgDuration 973314
cienaCesCfmDelayTestTable 973452
cienaCesCfmDelayTestEntry 973597
cienaCesCfmDelayTestServiceIndex 973698
cienaCesCfmDelayTestLocalMEPId 973814
cienaCesCfmDelayTestRemoteMEPId 973909
cienaCesCfmDelayTestId  973999
cienaCesCfmDelayTestServiceName 974100
cienaCesCfmDelayTestAverageDelayThreshold 974233
cienaCesCfmDelayTestAverageDelayVariationThreshold 974365
cienaCesCfmDelayTestMaximumDelayThreshold 974830
cienaCesCfmDelayTestMaximumDelayVariationThreshold 974946
cienaCesCfmDelayTestAverageDelay 975411
cienaCesCfmDelayTestAverageDelayVariation 975561
cienaCesCfmDelayTestMaximumDelay 975739
cienaCesCfmDelayTestMaximumDelayVariation 975889
cienaCesCfmDelayTestMinimumDelay 976067
cienaCesCfmDelayTestMinimumDelayVariation 976217
cienaCesCfmDelayTestPriority 976397
cienaCesCfmDelayTestCount 976517
cienaCesCfmDelayTestDMMInterval 976651
cienaCesCfmDelayTestIterations 976991
cienaCesCfmDelayTestRepeatDelay 977203
cienaCesCfmDelayTestTimeout 977330
cienaCesCfmDelayTestDuration 977500
cienaCesCfmDelayTestPduVersion 977639
cienaCesCfmFrameLossMsgTable 977771
cienaCesCfmFrameLossMsgEntry 977924
cienaCesCfmFrameLossMsgLocalMEPId 978031
cienaCesCfmFrameLossMsgTargetMEPID 978143
cienaCesCfmFrameLossMsgNearLossThreshold 978236
cienaCesCfmFrameLossMsgFarLossThreshold 978351
cienaCesCfmFrameLossMsgServiceName 978476
cienaCesCfmFrameLossMsgFrameLossNear 978635
cienaCesCfmFrameLossMsgFrameLossFar 978860
cienaCesCfmFrameLossTestTable 979081
cienaCesCfmFrameLossTestEntry 979236
cienaCesCfmFrameLossTestServiceIndex 979345
cienaCesCfmFrameLossTestLocalMEPId 979464
cienaCesCfmFrameLossTestRemoteMEPId 979577
cienaCesCfmFrameLossTestId 979671
cienaCesCfmFrameLossTestServiceName 979774
cienaCesCfmFrameLossTestPriority 979940
cienaCesCfmFrameLossTestDataPriority 980064
cienaCesCfmFrameLossTestCount 980214
cienaCesCfmFrameLossTestLMMInterval 980354
cienaCesCfmFrameLossTestIterations 980483
cienaCesCfmFrameLossTestRepeatDelay 980853
cienaCesCfmFrameLossTestTimeout 980984
cienaCesCfmFrameLossTestDuration 981180
cienaCesCfmFrameLossTestAccelerate 981328
cienaCesCfmFrameLossTestNearLossThreshold 981488
cienaCesCfmFrameLossTestFarLossThreshold 981651
cienaCesCfmFrameLossTestNearLoss 981824
cienaCesCfmFrameLossTestFarLoss 982041
cienaCesCfmFrameLossTestNumLMMSent 982254
cienaCesCfmFrameLossTestNumLMRReceived 982388
cienaCesCfmFrameLossTestMinNearLoss 982530
cienaCesCfmFrameLossTestAvgNearLoss 982656
cienaCesCfmFrameLossTestMaxNearLoss 982782
cienaCesCfmFrameLossTestMinFarLoss 982908
cienaCesCfmFrameLossTestAvgFarLoss 983032
cienaCesCfmFrameLossTestMaxFarLoss 983156
cienaCesCfmFrameLossTestNearLossRatio 983280
cienaCesCfmFrameLossTestFarLossRatio 983617
cienaCesCfmFrameLossTestPduVersion 983952
cienaCesCfmServiceFaultNotifTable 984129
cienaCesCfmServiceFaultNotifEntry 984281
cienaCesCfmServiceFaultTime 984398
cienaCesCfmServiceFaultType 984501
cienaCesCfmServiceFaultDesc 984585
cienaCesCfmServiceFaultMep 984680
cienaCesCfmServiceVsPbtName 984787
cienaCesCfmMaintenanceDomainTable 984936
cienaCesCfmMaintenanceDomainEntry 985099
cienaCesCfmMaintenanceDomainIndex 985216
cienaCesCfmMaintenanceDomainLevel 985318
cienaCesCfmMaintenanceDomainName 985419
cienaCesCfmMaintenanceDomainServiceCount 985518
cienaCesCfmServiceFrameBudgetTable 985658
cienaCesCfmServiceFrameBudgetEntry 985824
cienaCesCfmSlotIndex    985943
cienaCesCfmServiceFrameBudgetSlot 986021
cienaCesCfmGlobalControlModuleFrameBudget 986209
cienaCesCfmFrameBudgetGlobalTable 986295
cienaCesCfmFrameBudgetGlobalEntry 986459
cienaCesCfmFrameBudgetGlobalSlot 986576
cienaCesCfmState        986747
cienaCesCfmEtherType    986843
cienaCesCfmMEPHoldTime  986945
cienaCesCfmY1731EtherType 987103
cienaCesCfmGlobalSLMDefaultCount 987218
cienaCesCfmGlobalSLMDefaultInterval 987329
cienaCesCfmGlobalSLMDefaultTimeout 987675
cienaCesCfmGlobalLMMDefaultCount 987790
cienaCesCfmGlobalLMMDefaultInterval 987897
cienaCesCfmGlobalLMMDefaultTimeout 988050
cienaCesCfmGlobalDMMDefaultInterval 988161
cienaCesCfmGlobalLmmDefaultMode 988504
cienaCesCfmSyntheticLossSessionTable 988597
cienaCesCfmSyntheticLossSessionEntry 988769
cienaCesCfmSyntheticLossSessionServiceIndex 988875
cienaCesCfmSyntheticLossSessionLocalMEPId 988994
cienaCesCfmSyntheticLossSessionTargetMEPId 989110
cienaCesCfmSyntheticLossSessionTestId 989227
cienaCesCfmSyntheticLossSessionServiceName 989334
cienaCesCfmSyntheticLossSessionPriority 989451
cienaCesCfmSyntheticLossSessionCount 989582
cienaCesCfmSyntheticLossSessionSLMInterval 989729
cienaCesCfmSyntheticLossSessionIterations 990105
cienaCesCfmSyntheticLossSessionRepeatDelay 990609
cienaCesCfmSyntheticLossSessionFrameSize 990747
cienaCesCfmSyntheticLossSessionTimeout 990932
cienaCesCfmSyntheticLossSessionDuration 991134
cienaCesCfmSyntheticLossSessionLossNearThreshold 991289
cienaCesCfmSyntheticLossSessionLossFarThreshold 991658
cienaCesCfmSyntheticLossSessionNumSLMSent 992024
cienaCesCfmSyntheticLossSessionNumSLRReceived 992165
cienaCesCfmSyntheticLossSessionFrameLossNear 992314
cienaCesCfmSyntheticLossSessionFrameLossFar 992450
cienaCesCfmSyntheticLossSessionAvgFrameLossNear 992584
cienaCesCfmSyntheticLossSessionMinFrameLossNear 992722
cienaCesCfmSyntheticLossSessionMaxFrameLossNear 992860
cienaCesCfmSyntheticLossSessionAvgFrameLossFar 992998
cienaCesCfmSyntheticLossSessionMinFrameLossFar 993134
cienaCesCfmSyntheticLossSessionMaxFrameLossFar 993270
cienaCesCfmSyntheticLossSessionFrameLossRatioNear 993406
cienaCesCfmSyntheticLossSessionFrameLossRatioFar 993607
cienaCesCfmSyntheticLossSessionSdSetThreshold 993806
cienaCesCfmSyntheticLossSessionSdClearThreshold 994402
cienaCesCfmSyntheticLossResponderTable 995015
cienaCesCfmSyntheticLossResponderEntry 995147
cienaCesCfmSyntheticLossResponderServiceIndex 995274
cienaCesCfmSyntheticLossResponderLocalMEPId 995397
cienaCesCfmSyntheticLossResponderRemoteMEPId 995517
cienaCesCfmSyntheticLossResponderTestId 995639
cienaCesCfmSyntheticLossResponderServiceName 995750
cienaCesCfmSyntheticLossResponderLocalMac 995871
cienaCesCfmSyntheticLossResponderRemoteMac 995985
cienaCesCfmSyntheticLossResponderNumSLMReceived 996101
cienaCesCfmSyntheticLossResponderNumSLRSent 996239
cienaCesChassisMacAddress 996369
cienaCesChassisDeviceId 996457
cienaCesChassisPartNumber 996541
cienaCesChassisSerialNumber 996629
cienaCesChassisMfgDate  996721
cienaCesChassisParamVersion 996814
cienaCesChassisSystemDateAndTime 996906
cienaCesChassisSystemUTCDateAndTime 997003
cienaCesChassisSystemTimeOffset 997113
cienaCesChassisRebootReasonErrorType 997356
cienaCesChassisSystemId 997530
cienaCesChassisAlarmCutoffOrigin 997667
cienaCesChassisRestart  997847
cienaCesChassisMefSourceMacAddress 998066
cienaCesChassisPowerTable 998174
cienaCesChassisPowerEntry 998247
cienaCesChassisPowerSupplyIndx 998368
cienaCesChassisPowerSupplyState 998467
cienaCesChassisPowerSupplyType 998555
cienaCesChassisPowerSupplyManufacturer 998634
cienaCesChassisPowerSupplySerialNumber 998805
cienaCesChassisPowerSupplyPartNum 998901
cienaCesChassisPowerSupplyNotifIndx 998990
cienaCesChassisPowerSupplyFRU 999161
cienaCesChassisPowerSupplySlotName 999335
cienaCesChassisPowerSupplyRevInfo 999480
cienaCesChassisPowerSupplyChassisIndx 999585
cienaCesChassisPowerSupplyShelfIndx 999680
cienaCesChassisPowerSupplySlotIndx 999779
cienaCesChassisFanTable 999889
cienaCesChassisFanEntry 999958
cienaCesChassisFanTrayIndx 1000080
cienaCesChassisFanIndx  1000208
cienaCesChassisFanStatus 1000328
cienaCesChassisFanAvgSpeed 1000662
cienaCesChassisFanCurrentSpeed 1000876
cienaCesChassisFanMinSpeed 1001009
cienaCesChassisFanTrayNotifIndex 1001134
cienaCesChassisFanNotifIndex 1001305
cienaCesChassisFanName  1001467
cienaCesChassisFanChassisIndx 1001541
cienaCesChassisFanShelfIndx 1001628
cienaCesChassisFanTrayTable 1001719
cienaCesChassisFanTrayEntry 1001797
cienaCesChassisFanTrayStatus 1001932
cienaCesChassisFanTrayType 1002026
cienaCesChassisFanTrayMode 1002112
cienaCesChassisFanTrayNumFans 1002214
cienaCesChassisFanTrayName 1002313
cienaCesChassisFanTrayChassisIndx 1002396
cienaCesChassisFanTrayShelfIndx 1002487
cienaCesChassisFanTraySlotIndx 1002582
cienaCesChassisFanTraySerialNumber 1002684
cienaCesChassisFanTempTable 1002784
cienaCesChassisFanTempEntry 1002869
cienaCesChassisFanTempTrayIndx 1003007
cienaCesChassisFanTempId 1003106
cienaCesChassisFanTempDesc 1003199
cienaCesChassisFanTemp  1003310
cienaCesChassisFanTempHigh 1003408
cienaCesChassisFanTempLow 1003529
cienaCesChassisFanTempLoThreshold 1003648
cienaCesChassisFanTempHiThreshold 1003775
cienaCesChassisFanTempTrayNotifIndx 1003903
cienaCesChassisFanTempNotifId 1004034
cienaCesChassisFanTempName 1004159
cienaCesChassisFanTempChassisIndx 1004256
cienaCesChassisFanTempShelfIndx 1004347
cienaCesChassisHealthCategory 1004442
cienaCesChassisHealthSubCategory 1004589
cienaCesChassisHealthStatus 1008695
cienaCesChassisHealthStatusLast 1008869
cienaCesChassisCPUHealthTable 1009050
cienaCesChassisCPUHealthEntry 1009150
cienaCesChassisCPUHealthSubCategory 1009242
cienaCesChassisCPUHealthOriginIndex 1009394
cienaCesChassisCPUHealthState 1009480
cienaCesChassisCPUHealthCurrMeasurement 1009579
cienaCesChassisCPUHealthMaxMeasurement 1009764
cienaCesChassisCPUHealthMaxThreshold 1009953
cienaCesChassisDatapathHealthTable 1010112
cienaCesChassisDatapathHealthEntry 1010222
cienaCesChassisDatapathHealthSubCategory 1010324
cienaCesChassisDatapathHealthOriginIndex 1010499
cienaCesChassisDatapathHealthState 1010590
cienaCesChassisControlPlaneHealthTable 1010694
cienaCesChassisControlPlaneHealthEntry 1010813
cienaCesChassisControlPlaneHealthSubCategory 1010923
cienaCesChassisControlPlaneHealthOriginIndex 1011113
cienaCesChassisControlPlaneHealthState 1011208
cienaCesChassisControlPlaneHealthCurrMeasurement 1011329
cienaCesChassisControlPlaneHealthMaxMeasurement 1011539
cienaCesChassisControlPlaneHealthMaxThreshold 1011756
cienaCesChassisFabricHealthTable 1011941
cienaCesChassisFabricHealthEntry 1012047
cienaCesChassisFabricHealthSubCategory 1012145
cienaCesChassisFabricHealthOriginIndex 1012313
cienaCesChassisFabricHealthState 1012402
cienaCesChassisSMHealthTable 1012476
cienaCesChassisSMHealthEntry 1012564
cienaCesChassisSMHealthSubCategory 1012654
cienaCesChassisSMHealthOriginIndex 1012814
cienaCesChassisSMHealthState 1012899
cienaCesChassisSMTempHealthTable 1012965
cienaCesChassisSMTempHealthEntry 1013079
cienaCesChassisSMTempHealthSubCategory 1013177
cienaCesChassisSMTempHealthOriginIndex 1013353
cienaCesChassisSMTempHealthState 1013442
cienaCesChassisSMTempHealthCurrMeasurement 1013548
cienaCesChassisSMTempHealthMinMeasurement 1013726
cienaCesChassisSMTempHealthMaxMeasurement 1013923
cienaCesChassisSMTempHealthMinThreshold 1014120
cienaCesChassisSMTempHealthMaxThreshold 1014308
cienaCesChassisSMSamplesHealthTable 1014496
cienaCesChassisSMSamplesHealthEntry 1014591
cienaCesChassisSMSamplesHealthSubCategory 1014688
cienaCesChassisSMSamplesHealthOriginIndex 1015124
cienaCesChassisSMSamplesHealthState 1015216
cienaCesChassisSMSamplesHealthCurrMeasurement 1015289
cienaCesChassisSMSamplesHealthMaxMeasurement 1015372
cienaCesChassisDiskHealthTable 1015454
cienaCesChassisDiskHealthEntry 1015556
cienaCesChassisDiskHealthSubCategory 1015650
cienaCesChassisDiskHealthOriginIndex 1015820
cienaCesChassisDiskHealthState 1015907
cienaCesChassisDiskHealthCurrMeasurement 1016002
cienaCesChassisDiskHealthMaxMeasurement 1016171
cienaCesChassisDiskHealthMaxThreshold 1016350
cienaCesChassisModuleTempHealthTable 1016502
cienaCesChassisModuleTempHealthEntry 1016624
cienaCesChassisModuleTempHealthSubCategory 1016730
cienaCesChassisModuleTempHealthOriginIndex 1016848
cienaCesChassisModuleTempHealthState 1016941
cienaCesChassisModuleTempHealthCurrMeasurement 1017051
cienaCesChassisModuleTempHealthMinMeasurement 1017241
cienaCesChassisModuleTempHealthMaxMeasurement 1017450
cienaCesChassisModuleTempHealthMinThreshold 1017659
cienaCesChassisModuleTempHealthMaxThreshold 1018006
cienaCesChassisModuleTempHealthWideRangedMinThreshold 1018206
cienaCesChassisModuleTempHealthOriginName 1018426
cienaCesChassisModuleSamplesHealthTable 1018544
cienaCesChassisModuleSamplesHealthEntry 1018643
cienaCesChassisModuleSamplesHealthSubCategory 1018755
cienaCesChassisModuleSamplesHealthOriginIndex 1019219
cienaCesChassisModuleSamplesHealthState 1019315
cienaCesChassisModuleSamplesHealthCurrMeasurement 1019404
cienaCesChassisModuleSamplesHealthMaxMeasurement 1019526
cienaCesChassisFanTrayHealthTable 1019641
cienaCesChassisFanTrayHealthEntry 1019750
cienaCesChassisFanTrayHealthSubCategory 1019850
cienaCesChassisFanTrayHealthOriginIndex 1020029
cienaCesChassisFanTrayHealthState 1020123
cienaCesChassisFanTraySpeedMismatchHealthTable 1020219
cienaCesChassisFanTraySpeedMismatchHealthEntry 1020352
cienaCesChassisFanTraySpeedMismatchHealthSubCategory 1020478
cienaCesChassisFanTraySpeedMismatchHealthOriginIndex 1020670
cienaCesChassisFanTraySpeedMismatchHealthState 1020777
cienaCesChassisFanTraySpeedMismatchHealthCurrMeasurement 1020886
cienaCesChassisFanTraySpeedMismatchHealthMaxMeasurement 1021010
cienaCesChassisFanTraySpeedMismatchHealthMaxThreshold 1021134
cienaCesChassisFanSpeedMismatchHealthTable 1021265
cienaCesChassisFanSpeedMismatchHealthEntry 1021389
cienaCesChassisFanSpeedMismatchHealthSubCategory 1021507
cienaCesChassisFanSpeedMismatchHealthOriginIndex 1021691
cienaCesChassisFanSpeedMismatchHealthState 1021789
cienaCesChassisFanTempHealthTable 1021889
cienaCesChassisFanTempHealthEntry 1022005
cienaCesChassisFanTempHealthSubCategory 1022105
cienaCesChassisFanTempHealthOriginIndex 1022282
cienaCesChassisFanTempHealthState 1022386
cienaCesChassisFanTempHealthCurrMeasurement 1022528
cienaCesChassisFanTempHealthMinMeasurement 1022723
cienaCesChassisFanTempHealthMaxMeasurement 1022934
cienaCesChassisFanTempHealthMinThreshold 1023145
cienaCesChassisFanTempHealthMaxThreshold 1023331
cienaCesChassisFanSamplesHealthTable 1023517
cienaCesChassisFanSamplesHealthEntry 1023622
cienaCesChassisFanSamplesHealthSubCategory 1023728
cienaCesChassisFanSamplesHealthOriginIndex 1024175
cienaCesChassisFanSamplesHealthState 1024268
cienaCesChassisFanSamplesHealthCurrMeasurement 1024351
cienaCesChassisFanSamplesHealthMaxMeasurement 1024449
cienaCesChassisFanRPMHealthTable 1024546
cienaCesChassisFanRPMHealthEntry 1024653
cienaCesChassisFanRPMHealthSubCategory 1024751
cienaCesChassisFanRPMHealthOriginIndex 1024924
cienaCesChassisFanRPMHealthState 1025012
cienaCesChassisFanRPMHealthCurrMeasurement 1025107
cienaCesChassisFanRPMHealthMinMeasurement 1025275
cienaCesChassisFanRPMHealthMinThreshold 1025921
cienaCesChassisPowerHealthTable 1026721
cienaCesChassisPowerHealthEntry 1026825
cienaCesChassisPowerHealthSubCategory 1026921
cienaCesChassisPowerHealthOriginIndex 1027098
cienaCesChassisPowerHealthState 1027194
cienaCesChassisFeedPowerHealthTable 1027291
cienaCesChassisFeedPowerHealthEntry 1027399
cienaCesChassisFeedPowerHealthSubCategory 1027499
cienaCesChassisFeedPowerHealthOriginIndex 1027680
cienaCesChassisFeedPowerHealthState 1027780
cienaCesChassisResourceHealthTable 1027881
cienaCesChassisResourceHealthEntry 1027992
cienaCesChassisResourceHealthSubCategory 1028094
cienaCesChassisResourceHealthState 1028275
cienaCesChassisResourceHealthCurrMeasurement 1028381
cienaCesChassisResourceHealthMaxMeasurement 1028498
cienaCesChassisResourceHealthMaxThreshold 1028627
cienaCesChassisMemoryHealthTable 1028755
cienaCesChassisMemoryHealthEntry 1028861
cienaCesChassisMemoryHealthSubCategory 1028959
cienaCesChassisMemoryHealthOriginIndex 1029126
cienaCesChassisMemoryHealthState 1029215
cienaCesChassisMemoryHealthCurrMeasurement 1029320
cienaCesChassisMemoryHealthMaxMeasurement 1029497
cienaCesChassisMemoryHealthMaxThreshold 1029685
cienaCesChassisMACHealthTable 1029869
cienaCesChassisMACHealthEntry 1029975
cienaCesChassisMACHealthSubCategory 1030067
cienaCesChassisMACHealthOriginIndex 1030234
cienaCesChassisMACHealthState 1030320
cienaCesChassisMACHealthCurrMeasurement 1030432
cienaCesChassisMACHealthMaxMeasurement 1030560
cienaCesChassisMACHealthMaxThreshold 1030700
cienaCesChassisI2CHealthTable 1030838
cienaCesChassisI2CHealthEntry 1030944
cienaCesChassisI2CHealthSubCategory 1031036
cienaCesChassisI2CHealthOriginIndex 1031204
cienaCesChassisI2CHealthState 1031290
cienaCesChassisFlashDriverHealthTable 1031396
cienaCesChassisFlashDriverHealthEntry 1031513
cienaCesChassisFlashDriverHealthSubCategory 1031621
cienaCesChassisFlashDriverHealthOriginIndex 1031798
cienaCesChassisFlashDriverHealthState 1031892
cienaCesChassisFlashDriverHealthCurrMeasurement 1032021
cienaCesChassisFlashDriverHealthMaxMeasurement 1032227
cienaCesChassisXcvrHealthTable 1032435
cienaCesChassisXcvrHealthEntry 1032544
cienaCesChassisXcvrHealthSubCategory 1032638
cienaCesChassisXcvrHealthOriginIndex 1032808
cienaCesChassisXcvrHealthState 1032901
cienaCesChassisXcvrHealthCurrMeasurement 1033022
cienaCesChassisXcvrHealthMinMeasurement 1033154
cienaCesChassisXcvrHealthMaxMeasurement 1033298
cienaCesChassisXcvrHealthMinThreshold 1033442
cienaCesChassisXcvrHealthMaxThreshold 1033588
cienaCesChassisXcvrHealthUnit 1033734
cienaCesChassisPortLinkHealthTable 1033954
cienaCesChassisPortLinkHealthEntry 1034071
cienaCesChassisPortLinkHealthSubCategory 1034173
cienaCesChassisPortLinkHealthOriginIndex 1034345
cienaCesChassisPortLinkHealthState 1034435
cienaCesChassisIOMStatusHealthTable 1034545
cienaCesChassisIOMStatusHealthEntry 1034641
cienaCesChassisIOMStatusHealthSubCategory 1034745
cienaCesChassisIOMStatusHealthOriginIndex 1034912
cienaCesChassisIOMStatusHealthState 1034995
cienaCesChassisLinxStatHealthTable 1035100
cienaCesChassisLinxStatHealthEntry 1035202
cienaCesChassisLinxStatHealthSubCategory 1035304
cienaCesChassisLinxStatHealthOriginIndex 1035478
cienaCesChassisLinxStatHealthState 1035569
cienaCesChassisLinxStatHealthCurrMeasurement 1035672
cienaCesChassisLinxStatHealthMaxMeasurement 1035790
cienaCesChassisLinxStatHealthMaxThreshold 1035919
cienaCesChassisSMFabricHealthTable 1036023
cienaCesChassisSMFabricHealthEntry 1036134
cienaCesChassisSMFabricHealthSubCategory 1036236
cienaCesChassisSMFabricHealthOriginIndex 1036409
cienaCesChassisSMFabricHealthState 1036500
cienaCesChassisSPIHealthTable 1036594
cienaCesChassisSPIHealthEntry 1036700
cienaCesChassisSPIHealthSubCategory 1036792
cienaCesChassisSPIHealthOriginIndex 1036960
cienaCesChassisSPIHealthState 1037046
cienaCesChassisUsbFlashHealthTable 1037152
cienaCesChassisUsbFlashHealthEntry 1037269
cienaCesChassisUsbFlashHealthSubCategory 1037371
cienaCesChassisUsbFlashHealthOriginIndex 1037543
cienaCesChassisUsbFlashHealthState 1037634
cienaCesChassisIomTempHealthTable 1037744
cienaCesChassisIomTempHealthEntry 1037860
cienaCesChassisIomTempHealthSubCategory 1037960
cienaCesChassisIomTempHealthOriginIndex 1038138
cienaCesChassisIomTempHealthState 1038228
cienaCesChassisIomTempHealthCurrMeasurement 1038332
cienaCesChassisIomTempHealthMinMeasurement 1038513
cienaCesChassisIomTempHealthMaxMeasurement 1038713
cienaCesChassisIomTempHealthMinThreshold 1038913
cienaCesChassisIomTempHealthMaxThreshold 1039104
cienaCesChassisPowerParamsHealthTable 1039295
cienaCesChassisPowerParamsHealthEntry 1039413
cienaCesChassisPowerParamsHealthSubCategory 1039521
cienaCesChassisPowerParamsHealthOriginIndex 1039700
cienaCesChassisPowerParamsHealthState 1039794
cienaCesChassisPowerOutputVoltageHealthTable 1039901
cienaCesChassisPowerOutputVoltageHealthEntry 1040030
cienaCesChassisPowerOutputVoltageHealthSubCategory 1040152
cienaCesChassisPowerOutputVoltageHealthOriginIndex 1040353
cienaCesChassisPowerOutputVoltageHealthState 1040454
cienaCesChassisPowerOutputVoltageHealthCurrMeasurement 1040564
cienaCesChassisPowerOutputVoltageHealthMinMeasurement 1040759
cienaCesChassisPowerOutputVoltageHealthMaxMeasurement 1040986
cienaCesChassisPowerOutputVoltageHealthMinThreshold 1041213
cienaCesChassisPowerOutputVoltageHealthMaxThreshold 1041431
cienaCesChassisModemTempHealthTable 1041649
cienaCesChassisModemTempHealthEntry 1041765
cienaCesChassisModemTempHealthSubCategory 1041869
cienaCesChassisModemTempHealthOriginIndex 1042049
cienaCesChassisModemTempHealthState 1042141
cienaCesChassisModemTempHealthCurrMeasurement 1042263
cienaCesChassisModemTempHealthMinMeasurement 1042450
cienaCesChassisModemTempHealthMaxMeasurement 1042656
cienaCesChassisModemTempHealthMinThreshold 1042862
cienaCesChassisModemTempHealthMaxThreshold 1043059
cienaCesChassisModemWatermarkHealthTable 1043256
cienaCesChassisModemWatermarkHealthEntry 1043369
cienaCesChassisModemWatermarkHealthSubCategory 1043483
cienaCesChassisModemWatermarkHealthOriginIndex 1043673
cienaCesChassisModemWatermarkHealthState 1043770
cienaCesChassisFileDescriptorHealthTable 1043861
cienaCesChassisFileDescriptorHealthEntry 1043984
cienaCesChassisFileDescriptorHealthSubCategory 1044098
cienaCesChassisFileDescriptorHealthOriginIndex 1044283
cienaCesChassisFileDescriptorHealthState 1044380
cienaCesChassisFileDescriptorHealthCurrMeasurement 1044502
cienaCesChassisFileDescriptorHealthMaxMeasurement 1044635
cienaCesChassisFileDescriptorHealthMaxThreshold 1044780
cienaCesChassisProcessHealthTable 1044923
cienaCesChassisProcessHealthEntry 1045031
cienaCesChassisProcessHealthSubCategory 1045131
cienaCesChassisProcessHealthOriginIndex 1045300
cienaCesChassisProcessHealthState 1045390
cienaCesChassisProcessHealthCurrMeasurement 1045497
cienaCesChassisProcessHealthMaxMeasurement 1045615
cienaCesChassisProcessHealthMaxThreshold 1045745
cienaCesChassisThreadHealthTable 1045873
cienaCesChassisThreadHealthEntry 1045979
cienaCesChassisThreadHealthSubCategory 1046077
cienaCesChassisThreadHealthOriginIndex 1046244
cienaCesChassisThreadHealthState 1046333
cienaCesChassisThreadHealthCurrMeasurement 1046438
cienaCesChassisThreadHealthMaxMeasurement 1046554
cienaCesChassisThreadHealthMaxThreshold 1046682
cienaCesChassisIDPEthBaseMac 1046808
cienaCesChassisIDPEthBaseMacRange 1046931
cienaCesChassisIDPModuleSerialNumber 1047060
cienaCesChassisIDPModelPartNumber 1047186
cienaCesChassisIDPModelRevision 1047306
cienaCesChassisIDPProductID 1047429
cienaCesChassisIDPMfgDate 1047536
cienaCesChassisIDPCleiCode 1047648
cienaCesChassisIDPBarcode 1047753
cienaCesChassisIDPSWCompat 1047855
cienaCesChassisIDPFTC   1047980
cienaCesChassisIOMState 1048094
cienaCesChassisIOMBuzzerEnable 1048159
cienaCesChassisIOMBuzzerState 1048449
cienaCesChassisIOMAlarmOutputTable 1048767
cienaCesChassisIOMAlarmOutputEntry 1048894
cienaCesChassisIOMAlarmOutputIndex 1048984
cienaCesChassisIOMAlarmOutputDescription 1049114
cienaCesChassisIOMAlarmOutputState 1049214
cienaCesChassisIOMAlarmInputTable 1049567
cienaCesChassisIOMAlarmInputEntry 1049692
cienaCesChassisIOMAlarmInputIndex 1049780
cienaCesChassisIOMAlarmInputDescription 1049907
cienaCesChassisIOMAlarmInputState 1050005
cienaCesChassisIOMName  1050348
cienaCesChassisIOMChassisIndx 1050423
cienaCesChassisIOMShelfIndx 1050510
cienaCesChassisIOMSlotIndx 1050601
cienaCesChassisIOMSerialNumber 1050686
cienaCesChassisExternalAlarmInterfaceNumber 1050777
cienaCesChassisExternalAlarmDescription 1050902
cienaCesChassisExternalAlarmTimestamp 1051017
cienaCesChassisPlatformType 1051138
cienaCesChassisPlatformName 1051230
cienaCesChassisPlatformDesc 1051322
cienaCesChassisNumSlots 1051412
cienaCesChassisPrimaryCtrlSlot 1051517
cienaCesChassisSecondaryCtrlSlot 1051626
cienaCesChassisNumFanTrays 1051739
cienaCesChassisNumFansPerTray 1051843
cienaCesChassisDcPower  1051939
cienaCesChassisRedunPower 1052050
cienaCesChassisPhysicalPortsMax 1052170
cienaCesChassisAggPortsMax 1052295
cienaCesChassisVirtualSwitchMax 1052415
cienaCesChassisVirtualInterfaceMax 1052549
cienaCesChassisMulticastGrpsMax 1052688
cienaCesChassisRstpDomainsMax 1052822
cienaCesChassisVirtualInterfacePerVsMax 1052950
cienaCesChassisReplicPerPortPerVsMax 1053101
cienaCesChassisReplicMCPortPerVsMax 1053286
cienaCesChassisSubPortsMax 1053476
cienaCesChassisQosFlowsMax 1053598
cienaCesChassisAccessFlowsMax 1053720
cienaCesChassisCPUSubIntfcsMax 1053848
cienaCesChassisPBTTunnelGroupsMax 1053983
cienaCesChassisPBTEncapTunnelsMax 1054120
cienaCesChassisPBTDecapTunnelsMax 1054257
cienaCesChassisPBTServiceIntfcsMax 1054394
cienaCesChassisPBTTransitIntfcsMax 1054537
cienaCesChassisMeterProfilesMax 1054680
cienaCesChassisFloodContainersMax 1054812
cienaCesChassisRCOSProfilesMax 1054948
cienaCesChassisRCOSMappingsMax 1055085
cienaCesChassisFCOSMappingsMax 1055222
cienaCesChassisShapingProfilesMax 1055356
cienaCesChassisMPLSTunnelGroupsMax 1055492
cienaCesChassisMPLSTunnelsPerGroupMax 1055631
cienaCesChassisMPLSEncapTunnelsMax 1055804
cienaCesChassisMPLSDecapTunnelsMax 1055943
cienaCesChassisMPLSVCMax 1056082
cienaCesChassisMPLSInterfacesMax 1056214
cienaCesChassisMPLSTransitTunnelsMax 1056348
cienaCesChassisRedundancyGroupsMax 1056491
cienaCesChassisLinksPerRedundancyGroupMax 1056608
chassisGlobalGroup      1056741
chassisPlatformGroup    1056876
chassisPowerSupplyGroup 1057013
chassisFanGroup         1057154
chassisFanTrayGroup     1057276
chassisFanTempGroup     1057403
chassisNotifGroup       1057536
chassisHealthGroup      1057666
chassisIomStateGroup    1057801
chassisIomNotifGroup    1057902
chassisExternalAlarmGroup 1058031
chassisExternalAlarmNotifGroup 1058141
cienaCesIpMgmtInterfaceTable 1058285
cienaCesIpMgmtInterfaceEntry 1058395
cienaCesIpMgmtInterfaceIndex 1058509
cienaCesIpMgmtInterfaceName 1058590
cienaCesIpMgmtInterfaceOperIpAddr 1058684
cienaCesIpMgmtInterfaceOperSubnet 1058792
cienaCesIpMgmtInterfaceAdminState 1058912
cienaCesIpMgmtInterfaceOperState 1059232
cienaCesIpMgmtInterfaceType 1059486
cienaCesIpMgmtInterfaceVirtualSwitchIndex 1059566
cienaCesIpMgmtInterfaceParentInterfaceIndex 1059695
cienaCesIpGatewayAddr   1059828
cienaCesIpDataInterfaceTable 1059888
cienaCesIpDataInterfaceEntry 1059954
cienaCesIpDataInterfaceIndex 1060062
cienaCesIpDataInterfaceName 1060135
cienaCesIpDataInterfaceIpAddr 1060215
cienaCesIpDataInterfaceMask 1060369
cienaCesIpDataInterfaceVsIndex 1060549
cienaCesIpDataInterfaceType 1060646
cienaCesIpDataInterfaceIfIndex 1060720
cienaCesIpDataInterfaceMac 1060811
cienaCesIpDataInterfaceIfMtu 1060912
cienaCesIpDataInterfaceAdminState 1061250
cienaCesIpDataInterfaceOperState 1061337
cienaCesIpDataInterfaceIpForwarding 1061422
cienaCesIpDataInterfaceLdpEnable 1061519
cienaCesIpDataInterfaceRsvpEnable 1061623
cienaCesIpDataInterfaceTunnelDependency 1061729
cienaCesIpDataInterfaceL2VpnDependency 1061835
cienaCesIpDataInterfaceOspfEnable 1061929
cienaCesIpDataInterfaceIsisEnable 1062021
cienaCesIpDataInterfaceStaticArpEnable 1062113
cienaCesIpDataInterfaceVccvDependency 1062216
cienaCesIpDataInterfacePtpEnable 1062321
cienaCesIpDataInterfaceIfNum 1062411
cienaCesIpDataInterfaceStaticArpDestinationIp 1062488
cienaCesIpDataInterfaceStaticArpDestinationMac 1062745
cienaCesIpDataInterfaceRole 1063005
cienaCesIpDataInterfaceVrf 1063401
cienaCesIpInterfaceL3InterfaceBaseMac 1063485
cienaCesIpDataInterfaceInetTable 1063578
cienaCesIpDataInterfaceInetEntry 1063694
cienaCesIpDataInterfaceInetIndexAddrType 1063805
cienaCesIpDataInterfaceInetIndexAddr 1064207
cienaCesIpDataInterfaceInetAddrPrefixLength 1064483
cienaCesIpDataInterfaceInetAddrType 1064759
cienaCesIpDataInterfaceInetAddr 1065225
cienaCesPortXcvrTable   1065491
cienaCesPortXcvrEntry   1065630
cienaCesPortXcvrId      1065699
cienaCesPortXcvrOperState 1065766
cienaCesPortXcvrTemperature 1065849
cienaCesPortXcvrVcc     1066008
cienaCesPortXcvrBias    1066154
cienaCesPortXcvrRxPower 1066295
cienaCesPortXcvrHighTempAlarmThreshold 1066454
cienaCesPortXcvrLowTempAlarmThreshold 1066657
cienaCesPortXcvrHighVccAlarmThreshold 1066857
cienaCesPortXcvrLowVccAlarmThreshold 1067052
cienaCesPortXcvrHighBiasAlarmThreshold 1067244
cienaCesPortXcvrLowBiasAlarmThreshold 1067437
cienaCesPortXcvrHighTxPwAlarmThreshold 1067627
cienaCesPortXcvrLowTxPwAlarmThreshold 1067822
cienaCesPortXcvrHighRxPwAlarmThreshold 1068015
cienaCesPortXcvrLowRxPwAlarmThreshold 1068211
cienaCesPortXcvrNotifChassisIndex 1068404
cienaCesPortXcvrNotifShelfIndex 1068520
cienaCesPortXcvrNotifSlotIndex 1068632
cienaCesPortXcvrNotifPortNumber 1068742
cienaCesPortXcvrIdentiferType 1068872
cienaCesPortXcvrExtIdentiferType 1068943
cienaCesPortXcvrConnectorType 1069049
cienaCesPortXcvrType    1069527
cienaCesPortXcvrVendorName 1069587
cienaCesPortXcvrVendorOUI 1069679
cienaCesPortXcvrVendorPartNum 1069769
cienaCesPortXcvrRevNum  1069871
cienaCesPortXcvrSerialNum 1069968
cienaCesPortXcvrMfgDate 1070065
cienaCesPortXcvrWaveLength 1070160
cienaCesPortXcvrTxState 1070259
cienaCesPortXcvrTxFaultStatus 1070363
cienaCesPortXcvrAdminState 1070456
cienaCesPortXcvrTxOutputPower 1070543
cienaCesPortXcvrFecMode 1070725
cienaCesPortXcvrNotifPortName 1070919
cienaCesPortXcvrEventType 1071044
cienaCesPortXcvrErrorType 1071204
cienaCesLdpAdminStatus  1071487
cienaCesLdpOperStatus   1071558
cienaCesLdpHelloHoldTime 1071631
cienaCesLdpKeepAliveHoldTime 1072332
cienaCesLdpGRAdminStatus 1072522
cienaCesLdpGRMode       1072616
cienaCesLdpReconnectTime 1072696
cienaCesLdpRecoveryTime 1073205
cienaCesLdpMaxPeerReconnect 1073831
cienaCesLdpMaxPeerRecovery 1074222
cienaCesLdpSessionTable 1074862
cienaCesLdpSessionEntry 1075031
cienaCesLdpEntityLdpId  1075973
cienaCesLdpEntityIndex  1076283
cienaCesLdpPeerLdpId    1076720
cienaCesLdpSessionConfiguredHoldTime 1076796
cienaCesLdpSessionPeerHoldTime 1077201
cienaCesLdpSessionHoldTimeInUse 1077629
cienaCesLdpPeerType     1077764
cienaCesLdpHelloAdjacencyTable 1077838
cienaCesLdpHelloAdjacencyEntry 1077927
cienaCesLdpHelloAdjacencyIndex 1078096
cienaCesLdpHelloAdjacencyConfiguredHoldTime 1078185
cienaCesLdpHelloAdjacencyPeerHoldTime 1078324
cienaCesLdpIfIpAddr     1078456
cienaCesMplsInSegmentTable 1078517
cienaCesMplsInSegmentEntry 1079920
cienaCesMplsInSegmentIndex 1080534
cienaCesMplsInSegmentLabel 1080699
cienaCesMplsInSegmentNPop 1080969
cienaCesMplsInSegmentInterface 1081467
cienaCesMplsInSegmentAddrFamily 1082143
cienaCesMplsInSegmentXCIndex 1082596
cienaCesMplsInSegmentRowStatus 1083089
cienaCesMplsInSegmentStorageType 1083409
cienaCesMplsOutSegmentTable 1083768
cienaCesMplsOutSegmentEntry 1083895
cienaCesMplsOutSegmentIndex 1085056
cienaCesMplsOutSegmentInterface 1085453
cienaCesMplsOutSegmentPushTopLabel 1085813
cienaCesMplsOutSegmentTopLabel 1086618
cienaCesMplsOutSegmentNextHopAddrType 1087034
cienaCesMplsOutSegmentNextHopAddr 1087472
cienaCesMplsOutSegmentXCIndex 1087769
cienaCesMplsOutSegmentRowStatus 1088289
cienaCesMplsOutSegmentStorageType 1088583
cienaCesMplsOutSegmentType 1088943
cienaCesMplsXCTable     1089119
cienaCesMplsXCEntry     1089478
cienaCesMplsXCIndex     1089843
cienaCesMplsXCInSegmentIndex 1090047
cienaCesMplsXCOutSegmentIndex 1090361
cienaCesMplsXCLabelStackIndex 1090774
cienaCesMplsXCRowStatus 1091343
cienaCesMplsXCStorageType 1091602
cienaCesMplsXCAdminStatus 1092129
cienaCesMplsXCOperStatus 1092218
cienaCesMplsXcEntryState 1092321
cienaCesMplsInSegmentLdpLspTable 1092438
cienaCesMplsInSegmentLdpLspEntry 1092593
cienaCesMplsInSegmentLdpLspIndex 1093029
cienaCesMplsInSegmentLdpLspLabelType 1093196
cienaCesMplsInSegmentLdpLspType 1093272
cienaCesmplsOutSegmentLdpLspTable 1093347
cienaCesMplsOutSegmentLdpLspEntry 1093497
cienaCesMplsOutSegmentLdpLspIndex 1093895
cienaCesMplsOutSegmentLdpLspLabelType 1094065
cienaCesMplsOutSegmentLdpLspType 1094142
cienaCesmplsFecTable    1094218
cienaCesMplsFecEntry    1094372
cienaCesMplsFecIndex    1094453
cienaCesMplsFecType     1094540
cienaCesMplsFecAddrType 1094851
cienaCesMplsFecAddr     1095070
cienaCesMplsFecAddrPrefixLength 1095591
cienaCesMplsFecStorageType 1096158
cienaCesMplsFecRowStatus 1096381
cienaCesmplsLdpLspFecTable 1096822
cienaCesMplsLdpLspFecEntry 1097004
cienaCesMplsLdpLspFecSegment 1097105
cienaCesMplsLdpLspFecSegmentIndex 1097566
cienaCesMplsLdpLspFecIndex 1097973
cienaCesMplsLdpLspFecStorageType 1098282
cienaCesMplsLdpLspFecRowStatus 1098511
cienaCesBfdSessionTable 1099591
cienaCesBfdSessionEntry 1099731
cienaCesBfdSessionIndex 1099822
cienaCesBfdSessionName  1099904
cienaCesBfdSessionAdminState 1099991
cienaCesBfdSessionOperState 1100089
cienaCesBfdSessionProfileIndex 1100192
cienaCesBfdDampSessionAdminState 1100303
cienaCesBfdDampSessionOperState 1100424
cienaCesBfdDampSessionProfileIndex 1100550
cienaCesBfdNegotiatedTxInterval 1100812
cienaCesBfdNegotiatedRxInterval 1100944
cienaCesBfdDetectionTime 1101075
cienaCesBfdProfileTable 1101181
cienaCesBfdProfileEntry 1101243
cienaCesBfdProfileIndex 1101340
cienaCesBfdProfileName  1101422
cienaCesBfdTransmitInterval 1101509
cienaCesBfdReceiveInterval 1101788
cienaCesBfdRole         1102060
cienaCesBfdLspGachType  1102139
cienaCesBfdDetectMultiplier 1102246
cienaCesBfdUseCount     1102342
cienaCesBfdDesiredMinTxInterval 1102419
cienaCesBfdReqMinRxInterval 1102535
cienaCesBfdDampProfileTable 1102646
cienaCesBfdDampProfileEntry 1102722
cienaCesBfdDampProfileIndex 1102810
cienaCesBfdDampProfileName 1102906
cienaCesBfdDampSuppressThreshold 1103006
cienaCesBfdDampReuseThreshold 1103188
cienaCesBfdDampMaxSupressDuration 1103364
cienaCesBfdDampDecayHalfLife 1103558
cienaCesBfdDampMode     1103745
cienaCesBfdDampUseCount 1103834
cienaCesBfdDampSessionTable 1103921
cienaCesBfdDampSessionEntry 1104066
cienaCesBfdDampSessionName 1104154
cienaCesBfdDampSessionType 1104236
cienaCesBfdDampSessionServiceName 1104318
cienaCesBfdDampSessionState 1104410
cienaCesBfdDampSessionSuppressState 1104513
cienaCesBfdDampSessionSuppressReason 1104623
cienaCesSyncAdminState  1104740
cienaCesSyncOptionType  1104808
cienaCesSyncRevertiveMode 1104983
cienaCesSyncWaitToRestoreTimer 1105040
cienaCesSyncInputProtectionGroupTable 1105208
cienaCesSyncInputProtectionGroupEntry 1105318
cienaCesInputPGEntityId 1105476
cienaCesInputPGEntityName 1105569
cienaCesInputPGPreferredReference 1105658
cienaCesInputPGSelectedReference 1105763
cienaCesInputPGForcedReference 1105852
cienaCesInputPGThresholdQualityLevel 1105954
cienaCesInputPGState    1106089
cienaCesInputPGStateDuration 1106171
cienaCesInputPGReferenceSwitchCount 1106264
cienaCesInputPGOperationalStatus 1106384
cienaCesInputPGTimingType 1106477
cienaCesInputPGOperationalQualityLevel 1106592
cienaCesSyncInputProtectionUnitTable 1106697
cienaCesSyncInputProtectionUnitEntry 1106805
cienaCesInputPUEntityId 1106962
cienaCesInputPUEntityName 1107054
cienaCesInputPUPGEntityName 1107142
cienaCesInputPUTimingInterfaceName 1107288
cienaCesInputPUTimingInterfaceProtocol 1107388
cienaCesInputPUUserPriority 1107496
cienaCesInputPUOperationalQL 1107599
cienaCesInputPUForcedQL 1107706
cienaCesInputPUReceivedQL 1107848
cienaCesInputPUSsmEnabled 1107956
cienaCesInputPUOperationalStatus 1108102
cienaCesInputPUBITSSignalMode 1108200
cienaCesInputPUBITSSignalFormat 1108312
cienaCesInputPUBITSSignalEncoding 1108428
cienaCesInputPUUserOverridePriority 1108548
cienaCesInputPUPTPEncapType 1108668
cienaCesInputPUGPSClockMode 1108784
cienaCesInputPUGPSFreqClock 1108892
cienaCesInputPUBITSSignalSsmLocation 1109071
cienaCesInputPUTDMClockMode 1109199
cienaCesInputPUSignalCondition 1109307
cienaCesSyncOutputTable 1109401
cienaCesSyncOutputEntry 1109477
cienaCesOutputEntityId  1109605
cienaCesOutputEntityName 1109699
cienaCesOutputTimingInterfaceName 1109788
cienaCesOutputTimingInterfaceProtocol 1109882
cienaCesOutputOperationalQL 1109984
cienaCesOutputOperationalStatus 1110085
cienaCesOutputBITSSignalMode 1110177
cienaCesOutputBITSSignalFormat 1110290
cienaCesOutputBITSSignalEncoding 1110407
cienaCesOutputBITSSignalLineBuildout 1110528
cienaCesOutputBITSSignalSsmLocation 1110658
cienaCesOutputGPSClockMode 1110786
cienaCesOutputGPSFreqClock 1110896
cienaCesOutputPTPEncapType 1111076
cienaCesSyncPTPAddrMode 1111194
cienaCesSyncPTPTagPriority 1111251
cienaCesSyncPTPProtocolVersion 1111310
cienaCesSyncPTPProfileVersion 1111378
cienaCesSyncPTPProfileIdentifier 1111444
cienaCesSyncPTPDomainNumber 1111524
cienaCesSyncPTPClockType 1111586
cienaCesSyncPTPClockID  1111642
cienaCesSyncPTPDscp     1111703
cienaCesSyncPTPProfile  1111752
cienaCesSyncPTPInputUnicastReqDuration 1111809
cienaCesSyncPTPInputAnnounceRxLossNum 1111910
cienaCesSyncPTPInputAnnounceTxRateReq 1112016
cienaCesSyncPTPInputSyncTxRateReq 1112111
cienaCesSyncPTPInputDelayReqTxRate 1112198
cienaCesSyncPTPOutputMaxSlaveSessions 1112287
cienaCesSyncPTPOutputTimestampMode 1112402
cienaCesSyncPTPOutputAnnounceTxRate 1112472
cienaCesSyncPTPOutputSyncTxRate 1112558
cienaCesSyncPTPOutputPriority1 1112636
cienaCesSyncPTPOutputPriority2 1112703
cienaCesSyncGPSOutput1ppsPulseWidth 1112770
cienaCesSyncHoldoverInterval 1112909
cienaCesSyncModuleSlotClockStatus 1113022
cienaCesSyncGnssAlmanacStatus 1113099
cienaCesSyncPtpClientIpAddress 1113171
cienaCesSyncPtpClientType 1113257
cienaCesSyncPtpClientEventType 1113349
cienaCesSyncPtpClientEventReason 1113434
cienaCesSyncPtpSignallingEvent 1113546
cienaCesSyncPtpSourceIpAddress 1113650
cienaCesSyncPtpMasterIpAddress 1113742
cienaCesSyncPtpBackupStatus 1113832
cienaCesSyncPtpOffsetFromLocalTimeSource 1113936
cienaCesConfigMgmtConfigLastSaved 1114076
cienaCesConfigMgmtConfigLastChanged 1114190
cienaCesConfigMgmtConfigLastContext 1114308
cienaCesConfigMgmtConfigLastUser 1114415
cienaCesConfigMgmtConfigLastOrigin 1114516
cienaCesBenchmarkGlobalAdminState 1114665
cienaCesBenchmarkGlobalGeneratorDefaultEmixSequenceId 1114799
cienaCesBenchmarkGlobalGeneratorDefaultKpiProfileId 1115092
cienaCesBenchmarkGlobalGeneratorDefaultBwAllocProfileId 1115395
cienaCesBenchmarkGlobalPlatformMaxConfigEntities 1115716
cienaCesBenchmarkGlobalPlatformMaxConfigTestInstances 1115863
cienaCesBenchmarkGlobalPlatformMaxConfigTestProfiles 1116021
cienaCesBenchmarkGlobalPlatformMaxConfigKpiProfiles 1116177
cienaCesBenchmarkGlobalPlatformMaxConfigBwAllocProfiles 1116331
cienaCesBenchmarkGlobalPlatformMaxConfigEmixSequences 1116508
cienaCesBenchmarkGlobalPlatformMaxSimultaneousRunningTests 1116701
cienaCesBenchmarkGlobalConfiguredEntities 1116879
cienaCesBenchmarkGlobalConfiguredTestInstances 1116977
cienaCesBenchmarkGlobalConfiguredProfiles 1117086
cienaCesBenchmarkGlobalConfiguredEmixSequences 1117189
cienaCesBenchmarkGlobalConfiguredKpiProfiles 1117351
cienaCesBenchmarkGlobalConfiguredBwAllocProfiles 1117456
cienaCesBenchmarkGlobalEnabledTestInstances 1117602
cienaCesBenchmarkGlobalGeneratorRunningTestInstances 1117743
cienaCesBenchmarkEntityTable 1117903
cienaCesBenchmarkEntityEntry 1117982
cienaCesBenchmarkEntityEntryId 1118060
cienaCesBenchmarkEntityEntryName 1118123
cienaCesBenchmarkEntityEntryRole 1118225
cienaCesBenchmarkEntityEntryPortId 1118285
cienaCesBenchmarkEntityEntryMode 1118358
cienaCesBenchmarkEntityEntryAdminState 1118418
cienaCesBenchmarkEntityEntryLocalMac 1118492
cienaCesBenchmarkEntityEntrySlotId 1118594
cienaCesBenchmarkEntityEntryReflectorVendorType 1118722
cienaCesBenchmarkEntityEntryReflectionLevel 1118893
cienaCesBenchmarkEntityEntryGeneratorHFrameSize 1119613
cienaCesBenchmarkEntityEntryMaxConfigTestInstances 1120149
cienaCesBenchmarkEntityEntryMaxSimultaneousTestInstances 1120305
cienaCesBenchmarkEntityEntryOperEnabled 1120575
cienaCesBenchmarkEntityEntryNumTestInstancesConfigured 1120929
cienaCesBenchmarkEntityEntryNumTestInstancesEnabled 1121086
cienaCesBenchmarkEntityEntryGenNumTestInstancesRunning 1121197
cienaCesBenchmarkEntityEntryBwAvailable 1121311
cienaCesBenchmarkEntityEntryGenBwUsedByRunningTests 1121545
cienaCesBenchmarkEntityEntryAvailableHwSessions 1121708
cienaCesBenchmarkEntityEntryAllocatedHwSessions 1121874
cienaCesBenchmarkEntityEntryRowStatus 1121979
cienaCesBenchmarkEntityEntryClearStats 1122414
cienaCesBenchmarkEntityEntryReflectorMacValidation 1122779
cienaCesBenchmarkEntityStatsTable 1123223
cienaCesBenchmarkEntityStatsEntry 1123318
cienaCesBenchmarkEntityStatsEntryClear 1123401
cienaCesBenchmarkEntityStatsEntryPortTxBytes 1123881
cienaCesBenchmarkEntityStatsEntryPortTxPkts 1123991
cienaCesBenchmarkEntityStatsEntryPortTxCrcErrorPkts 1124102
cienaCesBenchmarkEntityStatsEntryPortTxUcastPkts 1124203
cienaCesBenchmarkEntityStatsEntryPortTxMcastPkts 1124327
cienaCesBenchmarkEntityStatsEntryPortTxBcastPkts 1124453
cienaCesBenchmarkEntityStatsEntryPortRxUndersizePkts 1124579
cienaCesBenchmarkEntityStatsEntryPortRxOversizePkts 1124847
cienaCesBenchmarkEntityStatsEntryPortRxFragmentsPkts 1125113
cienaCesBenchmarkEntityStatsEntryPortRxJabbersPkts 1125546
cienaCesBenchmarkEntityStatsEntryPortTxPausePkts 1125973
cienaCesBenchmarkEntityStatsEntryPortTxDropPkts 1126078
cienaCesBenchmarkEntityStatsEntryPortTxDiscardPkts 1126261
cienaCesBenchmarkEntityStatsEntryPortTxLOutRangePkts 1126366
cienaCesBenchmarkEntityStatsEntryPortTx64OctsPkts 1126481
cienaCesBenchmarkEntityStatsEntryPortTx65To127Pkts 1126607
cienaCesBenchmarkEntityStatsEntryPortTx128To255Pkts 1126756
cienaCesBenchmarkEntityStatsEntryPortTx256To511Pkts 1126907
cienaCesBenchmarkEntityStatsEntryPortTx512To1023Pkts 1127058
cienaCesBenchmarkEntityStatsEntryPortTx1024To1518Pkts 1127211
cienaCesBenchmarkEntityStatsEntryPortTx1519To2047Pkts 1127366
cienaCesBenchmarkEntityStatsEntryPortTx2048To4095Pkts 1127521
cienaCesBenchmarkEntityStatsEntryPortTx4096To9216Pkts 1127676
cienaCesBenchmarkEntityStatsEntryPortRxBytes 1127831
cienaCesBenchmarkEntityStatsEntryPortRxPkts 1127939
cienaCesBenchmarkEntityStatsEntryPortRxExDeferPkts 1128048
cienaCesBenchmarkEntityStatsEntryPortRxDeferPkts 1128152
cienaCesBenchmarkEntityStatsEntryPortRxGiantPkts 1128244
cienaCesBenchmarkEntityStatsEntryPortRxUnderRunPkts 1128335
cienaCesBenchmarkEntityStatsEntryPortRxCrcErrorPkts 1128448
cienaCesBenchmarkEntityStatsEntryPortRxLCheckErrorPkts 1128559
cienaCesBenchmarkEntityStatsEntryPortRxLOutRangePkts 1128673
cienaCesBenchmarkEntityStatsEntryPortRxPausePkts 1128856
cienaCesBenchmarkEntityStatsEntryPortRxUcastPkts 1128966
cienaCesBenchmarkEntityStatsEntryPortRxMcastPkts 1129094
cienaCesBenchmarkEntityStatsEntryPortRxBcastPkts 1129224
cienaCesBenchmarkEntityStatsEntryPortRx64OctsPkts 1129354
cienaCesBenchmarkEntityStatsEntryPortRx65To127Pkts 1129483
cienaCesBenchmarkEntityStatsEntryPortRx128To255Pkts 1129635
cienaCesBenchmarkEntityStatsEntryPortRx256To511Pkts 1129789
cienaCesBenchmarkEntityStatsEntryPortRx512To1023Pkts 1129943
cienaCesBenchmarkEntityStatsEntryPortRx1024To1518Pkts 1130099
cienaCesBenchmarkEntityStatsEntryPortRx1519To2047Pkts 1130257
cienaCesBenchmarkEntityStatsEntryPortRx2048To4095Pkts 1130415
cienaCesBenchmarkEntityStatsEntryPortRx4096To9216Pkts 1130573
cienaCesBenchmarkEntityStatsEntryFpgaMissClassPkts 1130731
cienaCesBenchmarkEntityStatsEntryFpgaCrcErrPkts 1130881
cienaCesBenchmarkEntityStatsEntryFpgaUdpChkSumErrPkts 1130982
cienaCesBenchmarkEmixSequenceTable 1131098
cienaCesBenchmarkEmixSequenceEntry 1131231
cienaCesBenchmarkEmixSequenceId 1131302
cienaCesBenchmarkEmixSequenceName 1131386
cienaCesBenchmarkEmixSequence 1131462
cienaCesBenchmarkEmixSequenceUFrameSize 1132670
cienaCesBenchmarkEmixSequenceNumOfRef 1132858
cienaCesBenchmarkEmixSequenceUserCreated 1133166
cienaCesBenchmarkEmixSequenceRowStatus 1133423
cienaCesBenchmarkEmixFrameSizeTable 1133834
cienaCesBenchmarkEmixFrameSizeEntry 1133988
cienaCesBenchmarkEmixFrameSizeIndex 1134148
cienaCesBenchmarkEmixFrameSizeEntryFrameSize 1134291
cienaCesBenchmarkEmixAvgFrameSizeTable 1134569
cienaCesBenchmarkEmixAvgFrameSizeEntry 1134743
cienaCesBenchmarkEmixAvgFrameSize 1134941
cienaCesBenchmarkKpiProfileTable 1135173
cienaCesBenchmarkKpiProfileEntry 1135324
cienaCesBenchmarkKpiProfileId 1135401
cienaCesBenchmarkKpiProfileName 1135481
cienaCesBenchmarkKpiProfileNumOfRef 1135554
cienaCesBenchmarkKpiProfileRowStatus 1135845
cienaCesBenchmarkKpiPcpColorTable 1136257
cienaCesBenchmarkKpiPcpColorEntry 1136426
cienaCesBenchmarkKpiPcpIndex 1136561
cienaCesBenchmarkKpiColorIndex 1136654
cienaCesBenchmarkKpiPcp 1136789
cienaCesBenchmarkKpiColor 1137021
cienaCesBenchmarkKpiThroughput 1137276
cienaCesBenchmarkKpiFrameloss 1137494
cienaCesBenchmarkKpiLatency 1137710
cienaCesBenchmarkKpiPdv 1137969
cienaCesBenchmarkKpiOutageMaxNum 1138218
cienaCesBenchmarkKpiOutageMaxDurationSingle 1138518
cienaCesBenchmarkKpiOutageMaxDurationSum 1138869
cienaCesBenchmarkKpiUntagged 1139611
cienaCesBenchmarkBwAllocProfileTable 1140008
cienaCesBenchmarkBwAllocProfileEntry 1140158
cienaCesBenchmarkBwAllocProfileId 1140238
cienaCesBenchmarkBwAllocProfileName 1140358
cienaCesBenchmarkBwAllocProfileNumOfRef 1140472
cienaCesBenchmarkBwAllocProfileRowStatus 1140825
cienaCesBenchmarkBwRatioTable 1141238
cienaCesBenchmarkBwRatioEntry 1141375
cienaCesBenchmarkBwRatioPcpIndex 1141502
cienaCesBenchmarkBwRatioPcp 1141568
cienaCesBenchmarkBwRatio 1141649
cienaCesBenchmarkProfileTable 1141785
cienaCesBenchmarkProfileEntry 1141856
cienaCesBenchmarkProfileEntryId 1141936
cienaCesBenchmarkProfileEntryName 1142020
cienaCesBenchmarkProfileEntryBandwidth 1142114
cienaCesBenchmarkProfileEntryExcessBandwidth 1142263
cienaCesBenchmarkProfileEntryInterval 1142516
cienaCesBenchmarkProfileEntryDuration 1142669
cienaCesBenchmarkProfileEntrySetFrameSizeList 1142901
cienaCesBenchmarkProfileEntryMaxSearches 1143115
cienaCesBenchmarkProfileEntryMaxSamples 1143333
cienaCesBenchmarkProfileEntrySamplingInterval 1143557
cienaCesBenchmarkProfileEntryFrameLossStartBw 1143724
cienaCesBenchmarkProfileEntryVidValidation 1144165
cienaCesBenchmarkProfileEntryPcpValidation 1144478
cienaCesBenchmarkProfileEntryColorValidation 1144804
cienaCesBenchmarkProfileEntryKpiProfileId 1145128
cienaCesBenchmarkProfileEntryBwAllocProfileId 1145365
cienaCesBenchmarkProfileEntryEmixSequenceId 1145732
cienaCesBenchmarkProfileEntryEncapType 1146070
cienaCesBenchmarkProfileEntryPduType 1146173
cienaCesBenchmarkProfileEntryDstmac 1146288
cienaCesBenchmarkProfileEntrySVid 1146433
cienaCesBenchmarkProfileEntrySPcp 1146552
cienaCesBenchmarkProfileEntrySColor 1146905
cienaCesBenchmarkProfileEntryCVid 1147764
cienaCesBenchmarkProfileEntryCPcp 1147911
cienaCesBenchmarkProfileEntryCColor 1148414
cienaCesBenchmarkProfileEntryTpid 1149462
cienaCesBenchmarkProfileEntryDscp 1149742
cienaCesBenchmarkProfileEntrySrcInetAddrType 1149839
cienaCesBenchmarkProfileEntrySrcInetAddr 1150421
cienaCesBenchmarkProfileEntryDstInetAddrType 1150738
cienaCesBenchmarkProfileEntryDstInetAddr 1151320
cienaCesBenchmarkProfileEntryCustomPayload 1151642
cienaCesBenchmarkProfileEntryThroughputTest 1151752
cienaCesBenchmarkProfileEntryFramelossTest 1151831
cienaCesBenchmarkProfileEntryLatencyTest 1151909
cienaCesBenchmarkProfileEntryPdvTest 1151982
cienaCesBenchmarkProfileEntryBurstTest 1152066
cienaCesBenchmarkProfileEntryRfc2544Suite 1152142
cienaCesBenchmarkProfileEntryY1564Test 1152304
cienaCesBenchmarkProfileEntryHwSessionsRequired 1152715
cienaCesBenchmarkProfileEntryNumOfRef 1153672
cienaCesBenchmarkProfileEntryRowStatus 1153832
cienaCesBenchmarkProfileEntryOutageTest 1154271
cienaCesBenchmarkProfileEntryCustomDuration 1154586
cienaCesBenchmarkTestInstanceTable 1154798
cienaCesBenchmarkTestInstanceEntry 1154880
cienaCesBenchmarkTestInstanceEntryId 1154971
cienaCesBenchmarkTestInstanceEntryName 1155064
cienaCesBenchmarkTestInstanceEntrySubPortId 1155175
cienaCesBenchmarkTestInstanceEntryProfileId 1155405
cienaCesBenchmarkTestInstanceEntrySvid 1155810
cienaCesBenchmarkTestInstanceEntryCvid 1156306
cienaCesBenchmarkTestInstanceEntryUntagged 1156839
cienaCesBenchmarkTestInstanceEntryDstMac 1157089
cienaCesBenchmarkTestInstanceEntryAdminState 1157374
cienaCesBenchmarkTestInstanceEntryStarted 1157793
cienaCesBenchmarkTestInstanceEntryCurrentInterval 1158029
cienaCesBenchmarkTestInstanceEntryTotalIntervals 1158422
cienaCesBenchmarkTestInstanceEntryLastIterStart 1158861
cienaCesBenchmarkTestInstanceEntryClearStats 1159101
cienaCesBenchmarkTestInstanceEntryRowStatus 1159245
cienaCesBenchmarkTestInstanceEntryAssocEntityId 1159604
cienaCesBenchmarkTestInstanceEntryOperState 1159771
cienaCesBenchmarkTestInstanceEntryConnectivityTest 1160364
cienaCesBenchmarkTestInstanceEntrySuspectFlag 1160769
cienaCesBenchmarkTestInstanceEntryPortProtectionSwitchCount 1161214
cienaCesBenchmarkTestInstanceEntryPortLastProtectionSwitchTime 1161490
cienaCesBenchmarkGenTestSessionAllocationTable 1161732
cienaCesBenchmarkGenTestSessionAllocationEntry 1161907
cienaCesBenchmarkGenTestSessionPcpIndex 1162486
cienaCesBenchmarkGenTestSessionColorIndex 1162552
cienaCesBenchmarkGenTestSessionPcp 1162622
cienaCesBenchmarkGenTestSessionColor 1162714
cienaCesBenchmarkGenTestSessionId 1162845
cienaCesBenchmarkGenTestSessionEmixSequenceId 1162995
cienaCesBenchmarkGenTestSessionCurrentPktSize 1163338
cienaCesBenchmarkGenTestSessionThroughputTestState 1163456
cienaCesBenchmarkGenTestSessionFramelossTestState 1163643
cienaCesBenchmarkGenTestSessionLatencyTestState 1163828
cienaCesBenchmarkGenTestSessionPdvTestState 1164009
cienaCesBenchmarkGenTestSessionRfc2544TestState 1164182
cienaCesBenchmarkGenTestSessionY1564TestState 1164363
cienaCesBenchmarkGenTestSessionCurrentRate 1164540
cienaCesBenchmarkGenTestSessionSamplesCompleted 1164693
cienaCesBenchmarkGenTestSessionOutageTestState 1164871
cienaCesBenchmarkGenTestSessionNumOutagesDetected 1164985
cienaCesBenchmarkGenTestSessionOutageProgress 1165085
cienaCesBenchmarkTestInstanceStatsTable 1165617
cienaCesBenchmarkTestInstanceStatsEntry 1165722
cienaCesBenchmarkTestInstanceStatsRxPkts 1165819
cienaCesBenchmarkTestInstanceStatsRxIpv4Pkts 1165948
cienaCesBenchmarkTestInstanceStatsRxIpv4UdpPkts 1166085
cienaCesBenchmarkTestInstanceStatsRxIpv6Pkts 1166229
cienaCesBenchmarkTestInstanceStatsRxIpv6UdpPkts 1166366
cienaCesBenchmarkTestInstanceStatsRxNonIpPkts 1166510
cienaCesBenchmarkTestInstanceStatsRxUnrecognizedPkts 1166650
cienaCesBenchmarkTestInstanceStatsRxDuplicatePkts 1166803
cienaCesBenchmarkTestInstanceStatsRxDuplicatePktsOverflow 1166953
cienaCesBenchmarkTestInstanceStatsRxOOOPkts 1167251
cienaCesBenchmarkTestInstanceStatsRxOOOPktsOverflow 1167499
cienaCesBenchmarkTestInstanceStatsRxDiscSeqNumPkts 1167788
cienaCesBenchmarkTestInstanceStatsRxDiscSeqNumPktsOverflow 1167991
cienaCesBenchmarkTestInstanceStatsRxUdpCheckSumPkts 1168314
cienaCesBenchmarkTestInstanceStatsTxPkts 1168460
cienaCesBenchmarkGenTestSessionThroughputResultsTable 1168576
cienaCesBenchmarkGenTestSessionThroughputResultsEntry 1168715
cienaCesBenchmarkGenTestSessionThroughputResultsPcpIndex 1168837
cienaCesBenchmarkGenTestSessionThroughputResultsColorIndex 1168932
cienaCesBenchmarkGenTestSessionThroughputResultsFrameSizeIndex 1169019
cienaCesBenchmarkGenTestSessionThroughputResultsPcp 1169519
cienaCesBenchmarkGenTestSessionThroughputResultsColor 1169665
cienaCesBenchmarkGenTestSessionThroughputResultsFrameSize 1169809
cienaCesBenchmarkGenTestSessionThroughputResultsEmixSequenceId 1170075
cienaCesBenchmarkGenTestSessionThroughputResultsMin 1170383
cienaCesBenchmarkGenTestSessionThroughputResultsMax 1170788
cienaCesBenchmarkGenTestSessionThroughputResultsAvg 1171192
cienaCesBenchmarkGenTestSessionThroughputResultsIterations 1171596
cienaCesBenchmarkGenTestSessionThroughputResultsKpiResult 1171730
cienaCesBenchmarkGenTestSessionThroughputResultsSuspect 1172133
cienaCesBenchmarkGenTestSessionFramelossResultsTable 1172460
cienaCesBenchmarkGenTestSessionFramelossResultsEntry 1172589
cienaCesBenchmarkGenTestSessionFramelossResultsPcpIndex 1172709
cienaCesBenchmarkGenTestSessionFramelossResultsColorIndex 1172791
cienaCesBenchmarkGenTestSessionFramelossResultsFrameSizeIndex 1172877
cienaCesBenchmarkGenTestSessionFramelossResultsRateIndex 1172972
cienaCesBenchmarkGenTestSessionFramelossResultsPcp 1173056
cienaCesBenchmarkGenTestSessionFramelossResultsColor 1173201
cienaCesBenchmarkGenTestSessionFramelossResultsFrameSize 1173344
cienaCesBenchmarkGenTestSessionFramelossResultsEmixSequenceId 1173608
cienaCesBenchmarkGenTestSessionFramelossResultsRate 1173915
cienaCesBenchmarkGenTestSessionFramelossResultsFirst 1174012
cienaCesBenchmarkGenTestSessionFramelossResultsSecond 1174130
cienaCesBenchmarkGenTestSessionFramelossResultsKpiResult 1174250
cienaCesBenchmarkGenTestSessionFramelossResultsResult 1174653
cienaCesBenchmarkGenTestSessionFramelossResultsSuspect 1174786
cienaCesBenchmarkGenTestSessionLatencyResultsTable 1175112
cienaCesBenchmarkGenTestSessionLatencyResultsEntry 1175245
cienaCesBenchmarkGenTestSessionLatencyResultsPcpIndex 1175361
cienaCesBenchmarkGenTestSessionLatencyResultsColorIndex 1175441
cienaCesBenchmarkGenTestSessionLatencyResultsFrameSizeIndex 1175525
cienaCesBenchmarkGenTestSessionLatencyResultsPcp 1175618
cienaCesBenchmarkGenTestSessionLatencyResultsColor 1175761
cienaCesBenchmarkGenTestSessionLatencyResultsFrameSize 1175902
cienaCesBenchmarkGenTestSessionLatencyResultsEmixSequenceId 1175994
cienaCesBenchmarkGenTestSessionLatencyResultsMin 1176299
cienaCesBenchmarkGenTestSessionLatencyResultsMax 1176415
cienaCesBenchmarkGenTestSessionLatencyResultsAvg 1176531
cienaCesBenchmarkGenTestSessionLatencyResultsSamples 1176647
cienaCesBenchmarkGenTestSessionLatencyResultsKpiResult 1176756
cienaCesBenchmarkGenTestSessionLatencyResultsSuspect 1177155
cienaCesBenchmarkGenTestSessionPdvResultsTable 1177479
cienaCesBenchmarkGenTestSessionPdvResultsEntry 1177639
cienaCesBenchmarkGenTestSessionPdvResultsPcpIndex 1177766
cienaCesBenchmarkGenTestSessionPdvResultsColorIndex 1177842
cienaCesBenchmarkGenTestSessionPdvResultsFrameSizeIndex 1177922
cienaCesBenchmarkGenTestSessionPdvResultsPcp 1178041
cienaCesBenchmarkGenTestSessionPdvResultsColor 1178180
cienaCesBenchmarkGenTestSessionPdvResultsFrameSize 1178317
cienaCesBenchmarkGenTestSessionPdvResultsEmixSequenceId 1178405
cienaCesBenchmarkGenTestSessionPdvResultsAvg 1178706
cienaCesBenchmarkGenTestSessionPdvResultsSamples 1178814
cienaCesBenchmarkGenTestSessionPdvResultsKpiResult 1178915
cienaCesBenchmarkGenTestSessionPdvResultsSuspect 1179312
cienaCesBenchmarkEmixCharacterSetTable 1179632
cienaCesBenchmarkEmixCharacterSetEntry 1179867
cienaCesBenchmarkEmixCharacterSetEntryIndex 1179977
cienaCesBenchmarkEmixCharacterSetEntryCharacter 1180053
cienaCesBenchmarkEmixCharacterSetEntryFrameSize 1180261
cienaCesBenchmarkGenTestSessionOutageResultsTable 1180743
cienaCesBenchmarkGenTestSessionOutageResultsEntry 1180886
cienaCesBenchmarkGenTestSessionOutageResultsPcpIndex 1181005
cienaCesBenchmarkGenTestSessionOutageResultsColorIndex 1181084
cienaCesBenchmarkGenTestSessionOutageUntagged 1181167
cienaCesBenchmarkGenTestSessionOutageResultsPcp 1181330
cienaCesBenchmarkGenTestSessionOutageResultsColor 1181558
cienaCesBenchmarkGenTestSessionOutageResultsFrameSize 1181784
cienaCesBenchmarkGenTestSessionOutageResultsEmixSequenceId 1181875
cienaCesBenchmarkGenTestSessionOutageResultsNumDetected 1182179
cienaCesBenchmarkGenTestSessionOutageResultsSumDurationRecorded 1182301
cienaCesBenchmarkGenTestSessionOutageResultsStartTime 1182504
cienaCesBenchmarkGenTestSessionOutageResultsEndTime 1182620
cienaCesBenchmarkGenTestSessionOutageResultsMaxNumKpiResult 1182732
cienaCesBenchmarkGenTestSessionOutageResultsSumDurationKpiResult 1183220
cienaCesBenchmarkGenTestSessionOutageResultsOverallKpiResult 1183737
cienaCesBenchmarkGenTestSessionOutageResultsNumRecorded 1184246
cienaCesBenchmarkGenTestSessionOutageResultsThroughput 1184368
cienaCesBenchmarkGenTestSessionOutageResultsSuspect 1184759
cienaCesBenchmarkOutageRecordTable 1185082
cienaCesBenchmarkOutageRecordEntry 1185326
cienaCesBenchmarkOutageRecordIndex 1185417
cienaCesBenchmarkOutageRecordStartTime 1185586
cienaCesBenchmarkOutageRecordEndTime 1185684
cienaCesBenchmarkOutageRecordDuration 1185777
cienaCesBenchmarkOutageRecordDroppedFrames 1185938
cienaCesBenchmarkOutageRecordSingleDurationKpiResult 1186051
cienaCesBenchmarkOutageRecordId 1186287
cienaCes8021xPortTable  1186413
cienaCes8021xPortEntry  1186501
cienaCes8021xPort       1186597
cienaCes8021xRole       1186653
cienaCes8021xAuthPortStatsClear 1186717
cienaCes8021xNotificationAuthenticationEvent 1186840
cienaCes8021xPortName   1187046
cienaCes8021xSuppTable  1187162
cienaCes8021xSuppEntry  1187463
cienaCes8021xSuppPort   1187554
cienaCes8021xSuppUserName 1187677
cienaCes8021xSuppPassword 1187878
cienaCes8021xSuppPortStatsClear 1188099
cienaCes8021xSuppEAPMethod 1188219
cienaCes8021xSuppEAPAllowedMethods 1188319
cienaCes8021xSuppOperationalState 1188441
cienaCes8021xSuppMutualAuthenticationAdminState 1188540
cienaCes8021xSuppCheckCertificateTimeAdminState 1188723
cienaCes8021xSuppMutualAuthenticationOperState 1188957
cienaCes8021xSuppCheckCertificateTimeOperState 1189120
cienaCes8021xSuppDeviceCertificateStatus 1189317
cienaCes8021xSuppSecret 1189467
cienaCes8021xSuppAdminState 1189737
cienaCes8021xSuppEAPVersion 1189884
cienaCes8021xSuppOCSPAdminState 1190019
cienaCes8021xSuppCertificateName 1190232
cienaCes8021xSuppMinimumTlsVersion 1190389
cienaCes8021xSuppPeerCertReauthAdminState 1190591
cienaCes8021xAuthStatsClear 1190792
cienaCes8021xSuppStatsClear 1190913
cienaCesPlatformPostErrorCategory 1191031
cienaCesPlatformPostErrorMsg 1191223
cienaCesPlatformFanModuleNum 1191380
cienaCesPlatformFanModuleStatus 1191448
cienaCesPlatformPowerSupplyNum 1191606
cienaCesPlatformPowerSupplyState 1191678
cienaCesPlatformTempSensorState 1191762
cienaCesPlatformTempSensorValue 1191921
cienaCesRtucState       1192118
cienaCesRtucFileName    1192199
cienaCesPlatformFanModuleTable 1192289
cienaCesPlatformFanModuleEntry 1192384
cienaCesPlatformFanModuleIndex 1192473
cienaCesPlatformFanModuleName 1192558
cienaCesPlatformFanModuleType 1192641
cienaCesPlatformFanModuleCurrentSpeed 1192724
cienaCesPlatformFanModuleMaxSpeed 1192824
cienaCesPlatformFanModuleMinSpeed 1192920
cienaCesPlatformFanModuleAvgSpeed 1193016
cienaCesPlatformFanModuleFanTray 1193112
cienaCesPlatformTempSensorName 1193202
cienaCesMplsL3VpnVrfAfiType 1193280
cienaCesEvpnEthernetSegmentIdentifier 1193364
cienaCesEvpnEthernetSegmentLogicalPortName 1193480
cienaCesEvpnEthernetSegmentOperState 1193602
cienaCesEvpnInstanceName 1193721
cienaCesEvpnEthernetSegmentFailureType 1193798
cienaCesEvpnEthernetSegmentActiveMode 1193943
cienaCesEvpnEthernetSegmentDfMode 1194069
cienaCesAAAUserName     1194208
cienaCesAAAHostIp       1194312
cienaCesAAAUserPort     1194412
cienaCesAAAUserAuthenticationServiceType 1194526
cienaCesAAAUserAuthenticationStatus 1194639
cienaCesAAAUserAuthenticationDescription 1194740
cienaCesBgpMaxPrefixLimit 1194851
cienaCesBgpMaxPrefixLimitAfi 1194947
cienaCesBgpMaxPrefixLimitSafi 1195050
cienaCesBgpMaxPrefixLimitDropPercentage 1195157
cienaCesBgpMaxPrefixLimitIpAddress 1195277
cienaCesEgressQosInterfaceBindingTable 1195361
cienaCesEgressQosInterfaceBindingEntry 1195512
cienaCesEgressQosInterfaceBindingIndex 1195614
cienaCesEgressQosInterfaceBindingName 1195711
cienaCesEgressQosQueueGroupName 1195812
cienaCesEgressQosInterfaceName 1195924
cienaCesEgressQosSchedulerInstanceTable 1196036
cienaCesEgressQosSchedulerInstanceEntry 1196182
cienaCesEgressQosSchedulerInstanceIndex 1196282
cienaCesEgressQosSchedulerInstanceName 1196377
cienaCesEgressQosSchedulerProfileName 1196470
cienaCesEgressQosSchedulerInterfaceName 1196594
cienaCesEgressQosSchedulerProfileTable 1196713
cienaCesEgressQosSchedulerProfileEntry 1196838
cienaCesEgressQosSchedulerProfileEntryIndex 1196936
cienaCesEgressQosSchedulerProfileEntryName 1197034
cienaCesEgressQosSchedulerProfileEntryCIR 1197131
cienaCesEgressQosSchedulerProfileEntryEIR 1197225
cienaNgSaosDebugInteger 1197319
cienaNgSaosDebugString  1197378
cienaNgSaosDebugErrorMessage 1197436
cienaCesNotifications   1197503
cienaCesNotificationsControlModule 1197603
cienaCesPortNotificationPortDown 1197723
cienaCesPortNotificationPortUp 1198978
cienaCesChPortNotificationPortUp 1200283
cienaCesChPortNotificationPortDown 1201661
cienaCesPortNotificationPortSignalDegradeSet 1202988
cienaCesPortNotificationPortSignalDegradeClear 1204211
cienaCesModuleStateChangeNotification 1205366
cienaCesModuleHealthStatusUnknownNotification 1206033
cienaCesModuleHealthStatusWarningNotification 1206945
cienaCesModuleHealthStatusFaultedNotification 1207873
cienaCesModuleHealthStatusDegradedNotification 1208784
cienaCesModuleHealthStatusGoodNotification 1209713
cienaCesModuleSensorHighTempNotification 1210636
cienaCesModuleSensorLowTempNotification 1211420
cienaCesModuleSensorNormalTempNotification 1212194
cienaCesModuleHASwitchOverNotification 1213039
cienaCesModuleProtectionModeColdNotification 1213670
cienaCesModuleProtectionModeWarmNotification 1215240
cienaCesModuleProtectionModeUnprotectedNotification 1215830
cienaCesModuleProtectionModeHotNotification 1216744
cienaCesModulePostErrorNotification 1218324
cienaCesModuleFastReloadUnsuccessfulNotification 1218922
cienaCesModuleHitlessModeUnsuccessfulNotification 1219556
cienaCesModuleSwitchFabricDisruptedUnrecoverableNotification 1220189
cienaCesModuleSwitchFabricDisruptedRecoverableNotification 1221006
cienaCesModuleBladeInsertedNotification 1221669
cienaCesModuleBladeRemovedNotification 1222289
cienaCesModuleSwitchFabricDisruptedRecoverableClrNotification 1222906
cienaCesModuleConfigEntryCreatedNotification 1223546
cienaCesModuleConfigEntryDeletedNotification 1224176
cienaCesClockRateMismatchNotification 1224806
cienaCesModuleIncompatibilityNotification 1225410
cienaCesChassisPowerSupplyFaultedNotification 1226093
cienaCesChassisPowerSupplyOnlineNotification 1226661
cienaCesChassisFanHiTempNotification 1227081
cienaCesChassisFanNormalTempNotification 1227444
cienaCesChassisFanLoTempNotification 1227813
cienaCesChassisFanSpeedMaxThresholdNotification 1228175
cienaCesChassisFanSpeedMinThresholdNotification 1228423
cienaCesChassisFanSpeedNormalRangeNotification 1228818
cienaCesChassisFanTrayRemoveNotification 1229191
cienaCesChassisFanTrayInsertNotification 1229538
cienaCesChassisFanTrayStatusFaultedNotification 1229884
cienaCesChassisFanTrayStatusOkNotification 1230420
cienaCesChassisHealthStatusUnknownNotification 1230767
cienaCesChassisHealthStatusWarningNotification 1231814
cienaCesChassisHealthStatusFaultedNotification 1232665
cienaCesChassisHealthStatusDegradedNotification 1233496
cienaCesChassisHealthStatusGoodNotification 1234399
cienaCesChassisRebootNotification 1235196
cienaCesChassisIOMStateChangeNotification 1235536
cienaCesChassisIOMBuzzerEnableChangeNotification 1235675
cienaCesChassisIOMBuzzerStateChangeNotification 1235828
cienaCesChassisIOMAlarmOutputStateChangeNotification 1235979
cienaCesChassisIOMAlarmInputStateChangeNotification 1236140
cienaCesChassisUsbFlashEnabledNotification 1236299
cienaCesChassisUsbFlashDisabledNotification 1236435
cienaCesChassisAirFilterServiceNotification 1236573
cienaCesChassisAlarmCutoffNotification 1236712
cienaCesChassisDyingGaspNotification 1237129
cienaCesChassisExternalAlarmSetNotification 1237236
cienaCesChassisExternalAlarmClearNotification 1237354
cienaCesCfmFaultTrapSet 1237475
cienaCesCfmFaultTrapClear 1238104
cienaCesCfmAverageDelayFaultTrapSet 1238748
cienaCesCfmAverageDelayFaultTrapClear 1239261
cienaCesCfmMaximumDelayFaultTrapSet 1239727
cienaCesCfmMaximumDelayFaultTrapClear 1240239
cienaCesCfmAverageJitterTrapSet 1240704
cienaCesCfmAverageJitterTrapClear 1241226
cienaCesCfmMaximumJitterTrapSet 1241692
cienaCesCfmMaximumJitterTrapClear 1242205
cienaCesCfmFrameLossNearTrapSet 1242671
cienaCesCfmFrameLossNearTrapClear 1243207
cienaCesCfmFrameLossFarTrapSet 1243713
cienaCesCfmFrameLossFarTrapClear 1244244
cienaCesSyntheticLossSessionNearFaultTrap 1244768
cienaCesSyntheticLossSessionFarFaultTrap 1245290
cienaCesSyntheticLossSessionNearFaultClearTrap 1245762
cienaCesSyntheticLossSessionFarFaultClearTrap 1246286
cienaCesCfmAverageDelayVariationTrapSet 1246803
cienaCesCfmAverageDelayVariationTrapClear 1247403
cienaCesCfmMaximumDelayVariationTrapSet 1247996
cienaCesCfmMaximumDelayVariationTrapClear 1248596
cienaCesCfmSyntheticLossSessionSignalDegradeFaultTrapSet 1249189
cienaCesCfmSyntheticLossSessionSignalDegradeFaultTrapClear 1249388
cienaCesCfmFrameLossTestNearTrapSet 1249588
cienaCesCfmFrameLossTestNearTrapClear 1250114
cienaCesCfmFrameLossTestFarTrapSet 1250625
cienaCesCfmFrameLossTestFarTrapClear 1251145
cienaCesIpMgmtInterfaceAddrChgNotification 1251651
cienaCesIpMgmtInterfaceGatewayChgNotification 1252213
cienaCesIpInterfaceUpNotification 1252721
cienaCesIpInterfaceDownNotification 1253244
cienaCesPortXcvrRemovedNotification 1253771
cienaCesPortXcvrInsertedNotification 1254400
cienaCesPortXcvrErrorTypeNotification 1255032
cienaCesPortXcvrTempHighNotification 1255753
cienaCesPortXcvrTempLowNotification 1256391
cienaCesPortXcvrTempNormalNotification 1257030
cienaCesPortXcvrVoltageHighNotification 1257676
cienaCesPortXcvrVoltageLowNotification 1258338
cienaCesPortXcvrVoltageNormalNotification 1258981
cienaCesPortXcvrBiasHighNotification 1259635
cienaCesPortXcvrBiasLowNotification 1260266
cienaCesPortXcvrBiasNormalNotification 1260899
cienaCesPortXcvrTxPowerHighNotification 1261538
cienaCesPortXcvrTxPowerLowNotification 1262180
cienaCesPortXcvrTxPowerNormalNotification 1262825
cienaCesPortXcvrRxPowerHighNotification 1263491
cienaCesPortXcvrRxPowerLowNotification 1264135
cienaCesPortXcvrRxPowerNormalNotification 1264785
cienaCesPortXcvrSpeedInfoMissingNotification 1265443
cienaCesPortXcvrUncertifiedNotification 1266099
cienaCesPortXcvrRxPowerHighWarningNotification 1266769
cienaCesPortXcvrRxPowerLowWarningNotification 1267447
cienaCesPortXcvrTxPowerHighWarningNotification 1268135
cienaCesPortXcvrTxPowerLowWarningNotification 1268813
cienaCesOamLinkEventTrap 1269501
cienaCesBfdSessionOperStateChangeTrap 1270195
cienaCesBfdDampSessionSuppressStateChangeTrap 1270656
cienaCesSyncInputPUStateChangeNotification 1270944
cienaCesSyncInputProtectionGroupStateChangeNotification 1271068
cienaCesSyncModuleSlotClockStateChangeNotification 1271199
cienaCesSyncOutputStateChangeNotification 1271373
cienaCesSyncAlmanacStatusChangeNotification 1271497
cienaCesPtpClientListChangeNotification 1271594
cienaCesPtpInputRefUnicastSessionChangeNotification 1271759
cienaCesPtpInputRefAssistedBackupStatusNotification 1271980
cienaCesConfigMgmtConfigSavedNotification 1272191
cienaCesConfigMgmtConfigChangeNotification 1272307
cienaCesBenchmarkTestStarted 1272984
cienaCesBenchmarkTestStopped 1273399
cienaCesBenchmarkTestCompleted 1273590
cienaCesBenchmarkTestFailedThroughputKpi 1273834
cienaCesBenchmarkTestFailedFramelossKpi 1274100
cienaCesBenchmarkTestFailedLatencyKpi 1274364
cienaCesBenchmarkTestFailedPdvKpi 1274623
cienaCesBenchmarkTestIterationCompleted 1274868
cienaCesBenchmarkTestFailedMaxNumOutagesKpi 1274993
cienaCesBenchmarkTestFailedMaxDurationSingleOutageKpi 1275281
cienaCesBenchmarkTestFailedMaxDurationSumOutagesKpi 1275591
cienaCesBenchmarkEntityPortProtectionSwitchEvent 1275926
cienaCes8021xSuppAuthenticationEvent 1276127
cienaCes8021xAuthAuthenticationEvent 1276443
cienaCes8021xGlobalStateChangeEvent 1276762
cienaCes8021xAuthConfigChangeEvent 1276914
cienaCes8021xSuppConfigChangeEvent 1277093
cienaCesPlatformPostErrorNotification 1277268
cienaCesPlatformFanModuleNotification 1277432
cienaCesPlatformPowerSupplyStatusNotification 1277566
cienaCesPlatformTempNotification 1277726
cienaCesRtucNotification 1277875
cienaCesMplsL3VpnVrfUpNotification 1278008
cienaCesMplsL3VpnVrfDownNotification 1278608
cienaCesMplsL3VpnVrfRouteMidThreshExceeded 1279201
cienaCesMplsL3VpnNumVrfRouteMaxThreshCleared 1279698
cienaCesMplsL3VpnVrfNumVrfRouteMaxThreshExceeded 1281454
cienaCesMplsLdpSessionUp 1282854
cienaCesMplsLdpSessionDown 1283016
cienaCesAAAUserAuthenticationEvent 1283180
cienaCesEvpnEvlagEthernetSegmentFailureNotification 1283407
cienaCesEvpnEvlagEthernetSegmentProtectionNotification 1283571
cienaCesBgpMaxPrefixLimitExceededNotification 1283742
cienaCesBgpMaxPrefixLimitDropExcessNotification 1283928
cienaCesBgpMaxPrefixLimitClearedNotification 1284118
cienaNgSaosDebugTestNotif 1284252
cienaNgSaosDebugFailedNotif 1284312
cienaCesStatistics      1284403
cienaCesCfmGlobalStatsClear 1284505
cienaCesCfmGlobalFrameBudgetControlModule 1284600
cienaCesCfmGlobalFrameBudgetSlot1 1284756
cienaCesCfmGlobalFrameBudgetSlot2 1284825
cienaCesCfmGlobalFrameBudgetSlot3 1284894
cienaCesCfmGlobalFrameBudgetSlot4 1284963
cienaCesCfmGlobalFrameBudgetSlot5 1285032
cienaCesCfmGlobalFrameBudgetSlot6 1285101
cienaCesCfmGlobalFrameBudgetSlot7 1285170
cienaCesCfmGlobalFrameBudgetSlot8 1285239
cienaCesCfmGlobalFrameBudgetSlot9 1285308
cienaCesCfmGlobalFrameBudgetSlot10 1285377
cienaCesCfmGlobalStatsTxTotalFrames 1285448
cienaCesCfmGlobalStatsTxFloodedframes 1285530
cienaCesCfmGlobalStatsTxFloodignoredInvalidLevel 1285618
cienaCesCfmGlobalStatsTxFloodignoredHighLevelMepExist 1285815
cienaCesCfmGlobalStatsTxFloodignoredSTPState 1286021
cienaCesCfmGlobalStatsRxTotalFrames 1286194
cienaCesCfmGlobalStatsRxDropInvalidEtype 1286276
cienaCesCfmGlobalStatsRxDropInvalidOpCode 1286405
cienaCesCfmGlobalStatsRxDropL2DAHeaderLevelMismatch 1286516
cienaCesCfmGlobalStatsRxTotalMalformedFrames 1286659
cienaCesCfmGlobalCCMStatsTxTotalCCM 1286764
cienaCesCfmGlobalCCMStatsTxTotalCCMFlooded 1286852
cienaCesCfmGlobalCCMStatsRxTotalCCM 1286955
cienaCesCfmGlobalCCMStatsRxTotalCCMSequenceErrors 1287043
cienaCesCfmGlobalCCMStatsRxInvalidMAID 1287163
cienaCesCfmGlobalCCMStatsRxInvalidCCMInterval 1287261
cienaCesCfmGlobalCCMStatsRxInvalidFirstTlvOffset 1287367
cienaCesCfmGlobalCCMStatsRxInvalidPortStatusTlv 1287504
cienaCesCfmGlobalCCMStatsRxInvalidInterfaceStatusTlv 1287631
cienaCesCfmGlobalCCMStatsRxInvalidLogicalInterface 1287776
cienaCesCfmGlobalCCMStatsRxInvalidServiceInstance 1287927
cienaCesCfmGlobalCCMStatsRxInvalidPBTEncapTunnel 1288063
cienaCesCfmGlobalCCMStatsRxDropAdminDisable 1288209
cienaCesCfmGlobalCCMStatsRxDropSTPstatenotForwarding 1288345
cienaCesCfmGlobalCCMStatsRxDropCCMBlockedbyOppMep 1288484
cienaCesCfmGlobalCCMStatsRxDropCCMLeakage 1288631
cienaCesCfmGlobalCCMStatsRxDropCCMTooLong 1288745
cienaCesCfmGlobalCCMStatsRxDropCCMServiceDisabled 1288878
cienaCesCfmGlobalCCMStatsRxTotalErrorCCM 1289023
cienaCesCfmGlobalCCMStatsRxTotalMalformedCCM 1289135
cienaCesCfmGlobalCCMStatsRxTotalMEPCCM 1289240
cienaCesCfmGlobalCCMStatsRxTotalMIPCCM 1289341
cienaCesCfmGlobalLoopbackStatsTxTotalLBM 1289442
cienaCesCfmGlobalLoopbackStatsTxTotalLBR 1289542
cienaCesCfmGlobalLoopbackStatsRxTotalLBM 1289646
cienaCesCfmGlobalLoopbackStatsRxTotalLBR 1289756
cienaCesCfmGlobalLoopbackStatsRxTotalInOrderLBR 1289864
cienaCesCfmGlobalLoopbackStatsRxTotalOutOfOrderLBR 1289988
cienaCesCfmGlobalLoopbackStatsRxTotalContentMismatchLBR 1290119
cienaCesCfmGlobalLoopbackStatsRxTotalUnexpectedLBR 1290255
cienaCesCfmGlobalLoopbackStatsRxLBMInvalidFirstTLVOffset 1290384
cienaCesCfmGlobalLoopbackStatsRxLBRInvalidFirstTLVOffset 1290534
cienaCesCfmGlobalLoopbackStatsRxUnresolvedLBM 1290688
cienaCesCfmGlobalLoopbackStatsRxUnresolvedLBR 1290814
cienaCesCfmGlobalLoopbackStatsRxTotalMalformedLBM 1290938
cienaCesCfmGlobalLinkTraceStatsTxTotalLTM 1291061
cienaCesCfmGlobalLinkTraceStatsTxTotalLTR 1291164
cienaCesCfmGlobalLinkTraceStatsRxTotalLTM 1291266
cienaCesCfmGlobalLinkTraceStatsRxTotalLTR 1291366
cienaCesCfmGlobalLinkTraceStatsRxTotalUnexpectedLTR 1291465
cienaCesCfmGlobalLinkTraceStatsRxLTMInvalidFirstTLVOffset 1291585
cienaCesCfmGlobalLinkTraceStatsRxLTRInvalidFirstTLVOffset 1291734
cienaCesCfmGlobalLinkTraceStatsRxLTRInvalidRelayAction 1291882
cienaCesCfmGlobalLinkTraceStatsRxUnresolvedLTM 1292023
cienaCesCfmGlobalLinkTraceStatsRxUnresolvedLTR 1292155
cienaCesCfmGlobalDelayMeasurementStatsTxTotalDMM 1292286
cienaCesCfmGlobalDelayMeasurementStatsTxTotalDMR 1292388
cienaCesCfmGlobalDelayMeasurementStatsRxTotalDMM 1292490
cienaCesCfmGlobalDelayMeasurementStatsRxTotalDMR 1292589
cienaCesCfmGlobalLossMeasurementStatsTxTotalLMM 1292688
cienaCesCfmGlobalLossMeasurementStatsTxTotalLMR 1292789
cienaCesCfmGlobalLossMeasurementStatsRxTotalLMM 1292890
cienaCesCfmGlobalLossMeasurementStatsRxTotalLMR 1292988
cienaCesCfmGlobalSyntheticLossMeasurementStatsTxTotalSLM 1293086
cienaCesCfmGlobalSyntheticLossMeasurementStatsTxTotalSLR 1293215
cienaCesCfmGlobalSyntheticLossMeasurementStatsRxTotalSLM 1293343
cienaCesCfmGlobalSyntheticLossMeasurementStatsRxTotalSLR 1293469
cienaCesCfmGlobalSyntheticLossMeasurementStatsRxTotalValidSLM 1293594
cienaCesCfmGlobalSyntheticLossMeasurementStatsRxTotalValidSLR 1293731
cienaCesCfmGlobalSyntheticLossMeasurementStatsRxTotalInvalidSLM 1293867
cienaCesCfmGlobalSyntheticLossMeasurementStatsRxTotalInvalidSLR 1294008
cienaCesCfmGlobalSyntheticLossMeasurementStatsRxDropSLM 1294148
cienaCesCfmServiceStatsTable 1294307
cienaCesCfmServiceStatsEntry 1294438
cienaCesCfmServiceStatsTotalTx 1294540
cienaCesCfmServiceStatsTotalRx 1294629
cienaCesCfmServiceStatsTotalTxLTM 1294722
cienaCesCfmServiceStatsTotalTxLTR 1294843
cienaCesCfmServiceStatsTotalRxLTM 1294963
cienaCesCfmServiceStatsTotalRxLTR 1295082
cienaCesCfmServiceStatsTotalRxUnexpectedLTR 1295199
cienaCesCfmServiceStatsTotalTxLBM 1295337
cienaCesCfmServiceStatsTotalTxLBR 1295457
cienaCesCfmServiceStatsTotalRxLBM 1295576
cienaCesCfmServiceStatsTotalRxInorderLBR 1295694
cienaCesCfmServiceStatsTotalRxOutOforderLBR 1295806
cienaCesCfmServiceStatsTotalRxContentMismatchLBR 1295925
cienaCesCfmServiceStatsTotalRxUnexpectedLBR 1296055
cienaCesCfmServiceStatsClear 1296173
cienaCesCfmMepStatsTable 1296326
cienaCesCfmMepStatsEntry 1296465
cienaCesCfmMepInterfaceType 1296564
cienaCesCfmMepInterfaceIndex 1296725
cienaCesCfmMepStatsTxTotalCCM 1296893
cienaCesCfmMepStatsRxTotalCCM 1296999
cienaCesCfmMepStatsTxLoopbackMessages 1297102
cienaCesCfmMepStatsTxLoopbackReply 1297221
cienaCesCfmMepStatsRxLoopbackMessages 1297336
cienaCesCfmMepStatsRxInorderLoopbackReply 1297452
cienaCesCfmMepStatsRxOutoforderLoopbackReply 1297580
cienaCesCfmMepStatsRxContentMismatchLoopbackReply 1297715
cienaCesCfmMepStatsRxUnexpectedLoopbackReply 1297861
cienaCesCfmMepStatsTxLinktraceMessage 1297994
cienaCesCfmMepStatsTxLinktraceReply 1298114
cienaCesCfmMepStatsRxLinktraceMessage 1298231
cienaCesCfmMepStatsRxLinktraceReply 1298348
cienaCesCfmMepStatsRxUnexpectedLinktraceReply 1298462
cienaCesCfmMepStatsTxDelayMeasurementMessage 1298597
cienaCesCfmMepStatsTxDelayMeasurementReply 1298718
cienaCesCfmMepStatsRxDelayMeasurementMessage 1298836
cienaCesCfmMepStatsRxDelayMeasurementReply 1298954
cienaCesCfmMepStatsTxLossMeasurementMessage 1299069
cienaCesCfmMepStatsTxLossMeasurementReply 1299189
cienaCesCfmMepStatsRxLossMeasurementMessage 1299306
cienaCesCfmMepStatsRxLossMeasurementReply 1299423
cienaCesCfmMepStatsLastLBMTargetRemoteMepId 1299537
cienaCesCfmMepStatsLastLBMTargetMacAddress 1299666
cienaCesCfmMepStatsLastLBMPriority 1299800
cienaCesCfmMepStatsLastLBMCount 1299908
cienaCesCfmMepStatsLastLBMFirstSeqNum 1300010
cienaCesCfmMepStatsLastLTMTargetRemoteMepId 1300134
cienaCesCfmMepStatsLastLTMTargetMacAddress 1300264
cienaCesCfmMepStatsLastLTMPriority 1300403
cienaCesCfmMepStatsLastLTMSeqNum 1300527
cienaCesCfmMepStatsLastLTMInitialTTL 1300656
cienaCesCfmMepStatsLastDMMTargetRemoteMepId 1300785
cienaCesCfmMepStatsLastDMMTargetMacAddress 1300917
cienaCesCfmMepStatsLastDMMPriority 1301046
cienaCesCfmMepStatsLastDMMRepeatInterval 1301157
cienaCesCfmMepStatsLastDMMNumOfDmmToSend 1301281
cienaCesCfmMepStatsLastLMMTargetRemoteMepId 1301420
cienaCesCfmMepStatsLastLMMTargetMacAddress 1301552
cienaCesCfmMepStatsLastLMMPriority 1301681
cienaCesCfmMepStatsLastLMMRepeatInterval 1301792
cienaCesCfmMepStatsLastLMMNumOfLmmToSend 1301916
cienaCesCfmMepStatsNextLBMSeqNumber 1302055
cienaCesCfmMepStatsNextLTMSeqNumber 1302197
cienaCesCfmMepStatsTxSyntheticLossMeasurementMessage 1302339
cienaCesCfmMepStatsTxSyntheticLossMeasurementReply 1302479
cienaCesCfmMepStatsRxSyntheticLossMeasurementMessage 1302616
cienaCesCfmMepStatsRxSyntheticLossMeasurementReply 1302753
cienaCesCfmMepStatsRxValidSyntheticLossMeasurementMessage 1302887
cienaCesCfmMepStatsRxValidSyntheticLossMeasurementReply 1303035
cienaCesCfmMepStatsRxInvalidSyntheticLossMeasurementMessage 1303180
cienaCesCfmMepStatsRxInvalidSyntheticLossMeasurementReply 1303332
cienaCesCfmMepStatsRxCCMWithErrorCCMFault 1303481
cienaCesCfmMepStatsRxCCMWithXCONFault 1303609
cienaCesCfmMepStatsRxCCMWithRMEPLOCFault 1303728
cienaCesCfmMepStatsRxCCMWithRDI0 1303854
cienaCesCfmMepStatsRxCCMWithRDI1 1303967
cienaCesCfmMepStatsRxCCMWithSequenceNumberMismatch 1304082
cienaCesCfmMepStatsRxCCMDroppedWithMalformedTlv 1304228
cienaCesCfmMepStatsToTxLoopbackMessages 1304385
cienaCesCfmRemoteMepStatsTable 1304517
cienaCesCfmRemoteMepStatsEntry 1304669
cienaCesCfmRemoteMepStatsRxTotalCCM 1304774
cienaCesCfmRemoteMepStatsLastSeqNum 1304892
cienaCesCfmRemoteMepStatsCCMSeqErrors 1304997
cienaCesCfmRemoteMepStatsClear 1305124
cienaCesOamStatsTable   1305278
cienaCesOamStatsEntry   1305399
cienaCesOamInformationTx 1305572
cienaCesOamInformationRx 1306439
cienaCesOamUniqueEventNotificationTx 1307294
cienaCesOamUniqueEventNotificationRx 1308580
cienaCesOamLoopbackControlTx 1309875
cienaCesOamLoopbackControlRx 1310808
cienaCesOamVariableRequestTx 1311740
cienaCesOamVariableRequestRx 1312673
cienaCesOamVariableResponseTx 1313509
cienaCesOamVariableResponseRx 1314377
cienaCesOamOrgSpecificTx 1315250
cienaCesOamOrgSpecificRx 1316122
cienaCesOamUnsupportedCodesTx 1316991
cienaCesOamUnsupportedCodesRx 1317904
cienaCesOamframesLostDueToOam 1318798
cienaCesOamStatsPort    1319549
cienaCesOamDuplicateEventNotificationTx 1319620
cienaCesOamDuplicateEventNotificationRx 1320920
cienaCesOamEventLogTable 1322214
cienaCesOamEventLogEntry 1322721
cienaCesOamEventLogPort 1322803
cienaCesOamEventLogIndex 1322874
cienaCesOamEventLogTimestamp 1323001
cienaCesOamEventLogOui  1323757
cienaCesOamEventLogType 1324167
cienaCesOamEventLogLocation 1325228
cienaCesOamEventLogWindowHi 1325369
cienaCesOamEventLogWindowLo 1326128
cienaCesOamEventLogThresholdHi 1326881
cienaCesOamEventLogThresholdLo 1327639
cienaCesOamEventLogValue 1328395
cienaCesOamEventLogRunningTotal 1328927
cienaCesOamEventLogEventTotal 1329353
cienaCesOamEventNotifChassisIndex 1329780
cienaCesOamEventNotifShelfIndex 1329908
cienaCesOamEventNotifSlotIndex 1330032
cienaCesOamEventNotifPortNumber 1330154
cienaCesOamEventNotifChannelNumber 1330301
cienaCesOamStatsClear   1330522
cienaCesOamTable        1330779
cienaCesOamEntry        1331071
cienaCesOamPort         1331264
cienaCesOamAdminState   1331335
cienaCesOamOperStatus   1331970
cienaCesOamMode         1335114
cienaCesMaxOamPduSize   1336368
cienaCesOamConfigRevision 1336713
cienaCesOamFunctionsSupported 1337139
cienaCesOamPduTimer     1337581
cienaCesOamLinkLostTimer 1337776
cienaCesOamPeerTable    1338006
cienaCesOamPeerEntry    1338578
cienaCesOamLocalPort    1338932
cienaCesOamPeerStatus   1339009
cienaCesOamPeerMacAddress 1339546
cienaCesOamPeerVendorOui 1340254
cienaCesOamPeerVendorInfo 1341120
cienaCesOamPeerMode     1342143
cienaCesOamPeerMaxOamPduSize 1343091
cienaCesOamPeerConfigRevision 1344229
cienaCesOamPeerFunctionsSupported 1345365
cienaCesOamLoopbackTable 1346581
cienaCesOamLoopbackEntry 1347281
cienaCesOamLoopbackPort 1347648
cienaCesOamLoopbackCommand 1347719
cienaCesOamLoopbackStatus 1348475
cienaCesOamLoopbackIgnoreRx 1350933
cienaCesOamSystemEnableDisable 1351643
cienaCesOamEventConfigTable 1351788
cienaCesOamEventConfigEntry 1353224
cienaCesOamEventPort    1353641
cienaCesOamErrFramePeriodWindow 1353711
cienaCesOamErrFramePeriodThreshold 1354965
cienaCesOamErrFramePeriodEvNotifEnable 1355613
cienaCesOamErrFrameWindow 1356157
cienaCesOamErrFrameThreshold 1356814
cienaCesOamErrFrameEvNotifEnable 1357452
cienaCesOamErrFrameSecsSummaryWindow 1357975
cienaCesOamErrFrameSecsSummaryThreshold 1358695
cienaCesOamErrFrameSecsEvNotifEnable 1359455
cienaCesOamDyingGaspEnable 1360010
cienaCesOamCriticalEventEnable 1360640
cienaCesBfdSessionStatsTable 1361285
cienaCesBfdSessionStatsEntry 1361413
cienaCesBfdSessionStatsTotalTx 1361520
cienaCesBfdSessionStatsTotalRx 1361640
cienaCesBfdSessionUpTime 1361757
cienaCesBfdSessionDownTimeCount 1361885
cienaCesBfdDampSessionStatsTable 1362049
cienaCesBfdDampSessionStatsEntry 1362187
cienaCesBfdDampSessionCurrentPenalty 1362299
cienaCesBfdDampSessionLastSupressTime 1362447
cienaCesBfdDampSessionSuppressRecoveryTime 1362598
cienaCesBfdDampSessionSuppressCount 1362787
cienaCesBfdDampSessionDampTrapCount 1362956
cienaGenericMIBs        1363141
cienaOpterametro        1363298
prTable                 1363403
prEntry                 1363722
prIndex                 1363811
prNames                 1363893
prMin                   1363977
prMax                   1364159
prCount                 1364341
prErrorFlag             1364450
prErrMessage            1364592
prErrFix                1364688
prErrFixCmd             1364910
memIndex                1365017
memErrorName            1365111
memTotalSwap            1365207
memAvailSwap            1365345
memTotalReal            1365482
memAvailReal            1365638
memTotalSwapTXT         1365795
memAvailSwapTXT         1366170
memTotalRealTXT         1366787
memAvailRealTXT         1367141
memTotalFree            1367737
memMinimumSwap          1367985
memShared               1368415
memBuffer               1368789
memCached               1369164
memUsedSwapTXT          1369538
memUsedRealTXT          1369917
memSwapError            1370275
memSwapErrorMsg         1370493
extTable                1370711
extEntry                1370886
extIndex                1370990
extNames                1371103
extCommand              1371199
extResult               1371271
extOutput               1371367
extErrFix               1371456
extErrFixCmd            1371678
dskTable                1371786
dskEntry                1371931
dskIndex                1372017
dskPath                 1372112
dskDevice               1372183
dskMinimum              1372259
dskMinPercent           1372475
dskTotal                1372690
dskAvail                1372849
dskUsed                 1373009
dskPercent              1373164
dskPercentNode          1373236
dskTotalLow             1373309
dskTotalHigh            1373442
dskAvailLow             1373574
dskAvailHigh            1373704
dskUsedLow              1373833
dskUsedHigh             1373957
dskErrorFlag            1374080
dskErrorMsg             1374225
laTable                 1374338
laEntry                 1374403
laIndex                 1374493
laNames                 1374586
laLoad                  1374667
laConfig                1374757
laLoadInt               1374932
laLoadFloat             1375160
laErrorFlag             1375284
laErrMessage            1375492
ssIndex                 1375615
ssErrorName             1375709
ssSwapIn                1375812
ssSwapOut               1375987
ssIOSent                1376161
ssIOReceive             1376535
ssSysInterrupts         1376912
ssSysContext            1377291
ssCpuUser               1377640
ssCpuSystem             1377962
ssCpuIdle               1378288
ssCpuRawUser            1378594
ssCpuRawNice            1378891
ssCpuRawSystem          1379354
ssCpuRawIdle            1379877
ssCpuRawWait            1380152
ssCpuRawKernel          1380680
ssCpuRawInterrupt       1381222
ssIORawSent             1381683
ssIORawReceived         1381762
ssRawInterrupts         1381847
ssRawContexts           1381917
ssCpuRawSoftIRQ         1381983
ssRawSwapIn             1382444
ssRawSwapOut            1382511
ssCpuRawSteal           1382579
ssCpuRawGuest           1383120
ssCpuRawGuestNice       1383590
lmTempSensorsTable      1384066
lmTempSensorsEntry      1384152
lmTempSensorsIndex      1384240
lmTempSensorsDevice     1384321
lmTempSensorsValue      1384411
lmFanSensorsTable       1384488
lmFanSensorsEntry       1384566
lmFanSensorsIndex       1384654
lmFanSensorsDevice      1384735
lmFanSensorsValue       1384817
lmVoltSensorsTable      1384894
lmVoltSensorsEntry      1384976
lmVoltSensorsIndex      1385064
lmVoltSensorsDevice     1385145
lmVoltSensorsValue      1385223
lmMiscSensorsTable      1385281
lmMiscSensorsEntry      1385376
lmMiscSensorsIndex      1385464
lmMiscSensorsDevice     1385545
lmMiscSensorsValue      1385623
fileTable               1385688
fileEntry               1385753
fileIndex               1385806
fileName                1385859
fileSize                1385907
fileMax                 1386006
fileErrorFlag           1386110
fileErrorMsg            1386169
logMatchMaxEntries      1386231
logMatchTable           1386343
logMatchEntry           1386408
logMatchIndex           1386461
logMatchName            1386518
logMatchFilename        1386580
logMatchRegEx           1386645
logMatchGlobalCounter   1386703
logMatchGlobalCount     1386766
logMatchCurrentCounter  1386818
logMatchCurrentCount    1386936
logMatchCounter         1386988
logMatchCount           1387093
logMatchCycle           1387145
logMatchErrorFlag       1387233
logMatchRegExCompilation 1387318
versionIndex            1387390
versionTag              1387453
versionDate             1387508
versionCDate            1387576
versionIdent            1387641
versionConfigureOptions 1387707
versionClearCache       1387812
versionUpdateConfig     1387896
versionRestartAgent     1387977
versionSavePersistentData 1388047
versionDoDebugging      1388158
snmperrIndex            1388275
snmperrNames            1388351
snmperrErrorFlag        1388395
snmperrErrMessage       1388537
mrTable                 1388633
mrEntry                 1388868
mrIndex                 1388949
mrModuleName            1389022
ucdStart                1389103
ucdShutdown             1389200
usm3DESPrivProtocol     1389283
usmAESCfb128PrivProtocol 1390547
usmAESCfb192PrivProtocol 1392223
usmAESCfb256PrivProtocol 1393045
usmAESCfb192Protocol    1393868
usmAESCfb256Protocol    1394541
mefSoamAvailabilityChangeAlarm 1395218
mefSoamLmSessionStartStopAlarm 1396818
mefSoamDmSessionStartStopAlarm 1398260
mefSoamPmThresholdCrossingAlarm 1399695
mefSoamPmMepTable       1404632
mefSoamPmMepEntry       1405187
mefSoamPmMepOperNextIndex 1405267
mefSoamPmMepLmSingleEndedResponder 1406389
mefSoamPmMepSlmSingleEndedResponder 1407083
mefSoamPmMepDmSingleEndedResponder 1407762
mefSoamLmCfgTable       1408459
mefSoamLmCfgEntry       1409549
mefSoamLmCfgIndex       1409629
mefSoamLmCfgType        1410336
mefSoamLmCfgVersion     1411144
mefSoamLmCfgEnabled     1411731
mefSoamLmCfgMeasurementEnable 1413083
mefSoamLmCfgMessagePeriod 1419043
mefSoamLmCfgPriority    1419643
mefSoamLmCfgFrameSize   1420319
mefSoamLmCfgDataPattern 1421402
mefSoamLmCfgTestTlvIncluded 1421936
mefSoamLmCfgTestTlvPattern 1422573
mefSoamLmCfgMeasurementInterval 1423120
mefSoamLmCfgNumIntervalsStored 1423633
mefSoamLmCfgDestMacAddress 1424264
mefSoamLmCfgDestMepId   1425315
mefSoamLmCfgDestIsMepId 1426079
mefSoamLmCfgStartTimeType 1426728
mefSoamLmCfgFixedStartDateAndTime 1428012
mefSoamLmCfgRelativeStartTime 1428535
mefSoamLmCfgStopTimeType 1428994
mefSoamLmCfgFixedStopDateAndTime 1430285
mefSoamLmCfgRelativeStopTime 1430810
mefSoamLmCfgRepetitionTime 1431269
mefSoamLmCfgAlignMeasurementIntervals 1432612
mefSoamLmCfgAlignMeasurementOffset 1433964
mefSoamLmCfgAvailabilityMeasurementInterval 1434765
mefSoamLmCfgAvailabilityNumConsecutiveMeasPdus 1435296
mefSoamLmCfgAvailabilityFlrThreshold 1437166
mefSoamLmCfgAvailabilityNumConsecutiveIntervals 1437984
mefSoamLmCfgAvailabilityNumConsecutiveHighFlr 1438740
mefSoamLmCfgSessionType 1439783
mefSoamLmCfgSessionStatus 1440268
mefSoamLmCfgHistoryClear 1440746
mefSoamLmCfgRowStatus   1441168
mefSoamLmMeasuredStatsTable 1441483
mefSoamLmMeasuredStatsEntry 1442382
mefSoamLmMeasuredStatsForwardFlr 1442475
mefSoamLmMeasuredStatsBackwardFlr 1442971
mefSoamLmMeasuredStatsAvailForwardStatus 1443471
mefSoamLmMeasuredStatsAvailBackwardStatus 1443998
mefSoamLmMeasuredStatsAvailForwardLastTransitionTime 1444522
mefSoamLmMeasuredStatsAvailBackwardLastTransitionTime 1444928
mefSoamLmCurrentAvailStatsTable 1445337
mefSoamLmCurrentAvailStatsEntry 1446670
mefSoamLmCurrentAvailStatsIndex 1446771
mefSoamLmCurrentAvailStatsStartTime 1447358
mefSoamLmCurrentAvailStatsElapsedTime 1447549
mefSoamLmCurrentAvailStatsSuspect 1447784
mefSoamLmCurrentAvailStatsForwardHighLoss 1448565
mefSoamLmCurrentAvailStatsBackwardHighLoss 1448973
mefSoamLmCurrentAvailStatsForwardConsecutiveHighLoss 1449385
mefSoamLmCurrentAvailStatsBackwardConsecutiveHighLoss 1449878
mefSoamLmCurrentAvailStatsForwardAvailable 1450374
mefSoamLmCurrentAvailStatsBackwardAvailable 1450702
mefSoamLmCurrentAvailStatsForwardUnavailable 1451019
mefSoamLmCurrentAvailStatsBackwardUnavailable 1451339
mefSoamLmCurrentAvailStatsForwardMinFlr 1451662
mefSoamLmCurrentAvailStatsForwardMaxFlr 1452423
mefSoamLmCurrentAvailStatsForwardAvgFlr 1453183
mefSoamLmCurrentAvailStatsBackwardMinFlr 1453944
mefSoamLmCurrentAvailStatsBackwardMaxFlr 1454709
mefSoamLmCurrentAvailStatsBackwardAvgFlr 1455473
mefSoamLmCurrentStatsTable 1456238
mefSoamLmCurrentStatsEntry 1457742
mefSoamLmCurrentStatsIndex 1457833
mefSoamLmCurrentStatsStartTime 1458285
mefSoamLmCurrentStatsElapsedTime 1458471
mefSoamLmCurrentStatsSuspect 1458696
mefSoamLmCurrentStatsForwardTransmittedFrames 1459460
mefSoamLmCurrentStatsForwardReceivedFrames 1459976
mefSoamLmCurrentStatsForwardMinFlr 1460484
mefSoamLmCurrentStatsForwardMaxFlr 1461027
mefSoamLmCurrentStatsForwardAvgFlr 1461569
mefSoamLmCurrentStatsBackwardTransmittedFrames 1462112
mefSoamLmCurrentStatsBackwardReceivedFrames 1462630
mefSoamLmCurrentStatsBackwardMinFlr 1463129
mefSoamLmCurrentStatsBackwardMaxFlr 1463676
mefSoamLmCurrentStatsBackwardAvgFlr 1464222
mefSoamLmCurrentStatsSoamPdusSent 1464769
mefSoamLmCurrentStatsSoamPdusReceived 1465178
mefSoamLmHistoryAvailStatsTable 1465606
mefSoamLmHistoryAvailStatsEntry 1467505
mefSoamLmHistoryAvailStatsIndex 1467606
mefSoamLmHistoryAvailStatsEndTime 1468475
mefSoamLmHistoryAvailStatsElapsedTime 1468657
mefSoamLmHistoryAvailStatsSuspect 1468885
mefSoamLmHistoryAvailStatsForwardHighLoss 1469596
mefSoamLmHistoryAvailStatsBackwardHighLoss 1470004
mefSoamLmHistoryAvailStatsForwardConsecutiveHighLoss 1470415
mefSoamLmHistoryAvailStatsBackwardConsecutiveHighLoss 1470908
mefSoamLmHistoryAvailStatsForwardAvailable 1471403
mefSoamLmHistoryAvailStatsBackwardAvailable 1471731
mefSoamLmHistoryAvailStatsForwardUnavailable 1472048
mefSoamLmHistoryAvailStatsBackwardUnavailable 1472368
mefSoamLmHistoryAvailStatsForwardMinFlr 1472691
mefSoamLmHistoryAvailStatsForwardMaxFlr 1473452
mefSoamLmHistoryAvailStatsForwardAvgFlr 1474212
mefSoamLmHistoryAvailStatsBackwardMinFlr 1474973
mefSoamLmHistoryAvailStatsBackwardMaxFlr 1475738
mefSoamLmHistoryAvailStatsBackwardAvgFlr 1476502
mefSoamLmHistoryStatsTable 1477267
mefSoamLmHistoryStatsEntry 1479097
mefSoamLmHistoryStatsIndex 1479188
mefSoamLmHistoryStatsEndTime 1480040
mefSoamLmHistoryStatsElapsedTime 1480212
mefSoamLmHistoryStatsSuspect 1480430
mefSoamLmHistoryStatsForwardTransmittedFrames 1481131
mefSoamLmHistoryStatsForwardReceivedFrames 1481646
mefSoamLmHistoryStatsForwardMinFlr 1482152
mefSoamLmHistoryStatsForwardMaxFlr 1482695
mefSoamLmHistoryStatsForwardAvgFlr 1483238
mefSoamLmHistoryStatsBackwardTransmittedFrames 1483781
mefSoamLmHistoryStatsBackwardReceivedFrames 1484289
mefSoamLmHistoryStatsBackwardMinFlr 1484799
mefSoamLmHistoryStatsBackwardMaxFlr 1485356
mefSoamLmHistoryStatsBackwardAvgFlr 1485903
mefSoamLmHistoryStatsSoamPdusSent 1486450
mefSoamLmHistoryStatsSoamPdusReceived 1486853
mefSoamLmThresholdCfgTable 1487270
mefSoamLmThresholdCfgEntry 1489270
mefSoamLmThresholdCfgIndex 1489362
mefSoamLmThresholdCfgEnable 1489600
mefSoamLmThresholdCfgMeasuredFlrForwardThreshold 1495454
mefSoamLmThresholdCfgMaxFlrForwardThreshold 1495777
mefSoamLmThresholdCfgAvgFlrForwardThreshold 1496089
mefSoamLmThresholdCfgMeasuredFlrBackwardThreshold 1496401
mefSoamLmThresholdCfgMaxFlrBackwardThreshold 1496727
mefSoamLmThresholdCfgAvgFlrBackwardThreshold 1497042
mefSoamLmThresholdCfgForwardHighLossThreshold 1497357
mefSoamLmThresholdCfgForwardConsecutiveHighLossThreshold 1497574
mefSoamLmThresholdCfgBackwardHighLossThreshold 1497823
mefSoamLmThresholdCfgBackwardConsecutiveHighLossThreshold 1498042
mefSoamLmThresholdCfgForwardUnavailCountThreshold 1498293
mefSoamLmThresholdCfgForwardAvailRatioThreshold 1498528
mefSoamLmThresholdCfgBackwardUnavailCountThreshold 1499101
mefSoamLmThresholdCfgBackwardAvailRatioThreshold 1499338
mefSoamLmThresholdCfgRowStatus 1499914
mefSoamDmCfgTable       1500160
mefSoamDmCfgEntry       1501208
mefSoamDmCfgIndex       1501288
mefSoamDmCfgType        1501999
mefSoamDmCfgVersion     1502865
mefSoamDmCfgEnabled     1503422
mefSoamDmCfgMeasurementEnable 1504728
mefSoamDmCfgMessagePeriod 1512865
mefSoamDmCfgPriority    1513345
mefSoamDmCfgFrameSize   1513839
mefSoamDmCfgDataPattern 1514911
mefSoamDmCfgTestTlvIncluded 1515443
mefSoamDmCfgTestTlvPattern 1516078
mefSoamDmCfgMeasurementInterval 1516625
mefSoamDmCfgNumIntervalsStored 1517096
mefSoamDmCfgDestMacAddress 1517600
mefSoamDmCfgDestMepId   1518791
mefSoamDmCfgDestIsMepId 1519559
mefSoamDmCfgSourceMacAddress 1520223
mefSoamDmCfgStartTimeType 1520794
mefSoamDmCfgFixedStartDateAndTime 1522078
mefSoamDmCfgRelativeStartTime 1522602
mefSoamDmCfgStopTimeType 1523060
mefSoamDmCfgFixedStopDateAndTime 1524339
mefSoamDmCfgRelativeStopTime 1524865
mefSoamDmCfgRepetitionTime 1525324
mefSoamDmCfgAlignMeasurementIntervals 1526662
mefSoamDmCfgAlignMeasurementOffset 1528015
mefSoamDmCfgNumMeasBinsPerFrameDelayInterval 1528816
mefSoamDmCfgNumMeasBinsPerInterFrameDelayVariationInterval 1529323
mefSoamDmCfgInterFrameDelayVariationSelectionOffset 1529916
mefSoamDmCfgNumMeasBinsPerFrameDelayRangeInterval 1530457
mefSoamDmCfgSessionType 1530980
mefSoamDmCfgSessionStatus 1531465
mefSoamDmCfgHistoryClear 1531943
mefSoamDmCfgRowStatus   1532402
mefSoamDmCfgMeasBinTable 1532719
mefSoamDmCfgMeasBinEntry 1536403
mefSoamDmCfgMeasBinType 1536491
mefSoamDmCfgMeasBinNumber 1536644
mefSoamDmCfgMeasBinLowerBound 1536802
mefSoamDmMeasuredStatsTable 1538180
mefSoamDmMeasuredStatsEntry 1539081
mefSoamDmMeasuredStatsFrameDelayTwoWay 1539174
mefSoamDmMeasuredStatsFrameDelayForward 1539565
mefSoamDmMeasuredStatsFrameDelayBackward 1540090
mefSoamDmMeasuredStatsIfdvTwoWay 1540630
mefSoamDmMeasuredStatsIfdvForward 1541015
mefSoamDmMeasuredStatsIfdvBackward 1541417
mefSoamDmCurrentStatsTable 1541834
mefSoamDmCurrentStatsEntry 1543321
mefSoamDmCurrentStatsIndex 1543412
mefSoamDmCurrentStatsStartTime 1543864
mefSoamDmCurrentStatsElapsedTime 1544050
mefSoamDmCurrentStatsSuspect 1544275
mefSoamDmCurrentStatsFrameDelayTwoWayMin 1545045
mefSoamDmCurrentStatsFrameDelayTwoWayMax 1545448
mefSoamDmCurrentStatsFrameDelayTwoWayAvg 1545851
mefSoamDmCurrentStatsFrameDelayForwardMin 1546254
mefSoamDmCurrentStatsFrameDelayForwardMax 1546805
mefSoamDmCurrentStatsFrameDelayForwardAvg 1547356
mefSoamDmCurrentStatsFrameDelayBackwardMin 1547907
mefSoamDmCurrentStatsFrameDelayBackwardMax 1548467
mefSoamDmCurrentStatsFrameDelayBackwardAvg 1549027
mefSoamDmCurrentStatsIfdvForwardMin 1549587
mefSoamDmCurrentStatsIfdvForwardMax 1550043
mefSoamDmCurrentStatsIfdvForwardAvg 1550499
mefSoamDmCurrentStatsIfdvBackwardMin 1550955
mefSoamDmCurrentStatsIfdvBackwardMax 1551420
mefSoamDmCurrentStatsIfdvBackwardAvg 1551885
mefSoamDmCurrentStatsIfdvTwoWayMin 1552350
mefSoamDmCurrentStatsIfdvTwoWayMax 1552715
mefSoamDmCurrentStatsIfdvTwoWayAvg 1553080
mefSoamDmCurrentStatsFrameDelayRangeForwardMax 1553445
mefSoamDmCurrentStatsFrameDelayRangeForwardAvg 1553925
mefSoamDmCurrentStatsFrameDelayRangeBackwardMax 1554405
mefSoamDmCurrentStatsFrameDelayRangeBackwardAvg 1554894
mefSoamDmCurrentStatsFrameDelayRangeTwoWayMax 1555383
mefSoamDmCurrentStatsFrameDelayRangeTwoWayAvg 1555752
mefSoamDmCurrentStatsSoamPdusSent 1556121
mefSoamDmCurrentStatsSoamPdusReceived 1556561
mefSoamDmCurrentStatsBinsTable 1557016
mefSoamDmCurrentStatsBinsEntry 1558179
mefSoamDmCurrentStatsBinsCounter 1558278
mefSoamDmHistoryStatsTable 1558804
mefSoamDmHistoryStatsEntry 1560871
mefSoamDmHistoryStatsIndex 1560962
mefSoamDmHistoryStatsEndTime 1561563
mefSoamDmHistoryStatsElapsedTime 1561735
mefSoamDmHistoryStatsSuspect 1561948
mefSoamDmHistoryStatsFrameDelayTwoWayMin 1562656
mefSoamDmHistoryStatsFrameDelayTwoWayMax 1563059
mefSoamDmHistoryStatsFrameDelayTwoWayAvg 1563462
mefSoamDmHistoryStatsFrameDelayForwardMin 1563865
mefSoamDmHistoryStatsFrameDelayForwardMax 1564416
mefSoamDmHistoryStatsFrameDelayForwardAvg 1564967
mefSoamDmHistoryStatsFrameDelayBackwardMin 1565518
mefSoamDmHistoryStatsFrameDelayBackwardMax 1566078
mefSoamDmHistoryStatsFrameDelayBackwardAvg 1566638
mefSoamDmHistoryStatsIfdvForwardMin 1567198
mefSoamDmHistoryStatsIfdvForwardMax 1567654
mefSoamDmHistoryStatsIfdvForwardAvg 1568110
mefSoamDmHistoryStatsIfdvBackwardMin 1568566
mefSoamDmHistoryStatsIfdvBackwardMax 1569031
mefSoamDmHistoryStatsIfdvBackwardAvg 1569496
mefSoamDmHistoryStatsIfdvTwoWayMin 1569961
mefSoamDmHistoryStatsIfdvTwoWayMax 1570326
mefSoamDmHistoryStatsIfdvTwoWayAvg 1570691
mefSoamDmHistoryStatsFrameDelayRangeForwardMax 1571055
mefSoamDmHistoryStatsFrameDelayRangeForwardAvg 1571535
mefSoamDmHistoryStatsFrameDelayRangeBackwardMax 1572015
mefSoamDmHistoryStatsFrameDelayRangeBackwardAvg 1572504
mefSoamDmHistoryStatsFrameDelayRangeTwoWayMax 1572993
mefSoamDmHistoryStatsFrameDelayRangeTwoWayAvg 1573362
mefSoamDmHistoryStatsSoamPdusSent 1573730
mefSoamDmHistoryStatsSoamPdusReceived 1574170
mefSoamDmHistoryStatsBinsTable 1574625
mefSoamDmHistoryStatsBinsEntry 1576083
mefSoamDmHistoryStatsBinsCounter 1576182
mefSoamDmThresholdCfgTable 1576703
mefSoamDmThresholdCfgEntry 1578410
mefSoamDmThresholdCfgIndex 1578502
mefSoamDmThresholdCfgEnable 1578732
mefSoamDmThresholdCfgMeasuredFrameDelayTwoWayThreshold 1587857
mefSoamDmThresholdCfgMaxFrameDelayTwoWayThreshold 1588183
mefSoamDmThresholdCfgAvgFrameDelayTwoWayThreshold 1588495
mefSoamDmThresholdCfgMeasuredIfdvTwoWayThreshold 1588807
mefSoamDmThresholdCfgMaxIfdvTwoWayThreshold 1589120
mefSoamDmThresholdCfgAvgIfdvTwoWayThreshold 1589419
mefSoamDmThresholdCfgMaxFrameDelayRangeTwoWayThreshold 1589718
mefSoamDmThresholdCfgAvgFrameDelayRangeTwoWayThreshold 1590052
mefSoamDmThresholdCfgMeasuredFrameDelayForwardThreshold 1590386
mefSoamDmThresholdCfgMaxFrameDelayForwardThreshold 1590714
mefSoamDmThresholdCfgAvgFrameDelayForwardThreshold 1591028
mefSoamDmThresholdCfgMeasuredIfdvForwardThreshold 1591342
mefSoamDmThresholdCfgMaxIfdvForwardThreshold 1591649
mefSoamDmThresholdCfgAvgIfdvForwardThreshold 1591942
mefSoamDmThresholdCfgMaxFrameDelayRangeForwardThreshold 1592235
mefSoamDmThresholdCfgAvgFrameDelayRangeForwardThreshold 1592563
mefSoamDmThresholdCfgMeasuredFrameDelayBackwardThreshold 1592891
mefSoamDmThresholdCfgMaxFrameDelayBackwardThreshold 1593222
mefSoamDmThresholdCfgAvgFrameDelayBackwardThreshold 1593539
mefSoamDmThresholdCfgMeasuredIfdvBackwardThreshold 1593856
mefSoamDmThresholdCfgMaxIfdvBackwardThreshold 1594174
mefSoamDmThresholdCfgAvgIfdvBackwardThreshold 1594478
mefSoamDmThresholdCfgMaxFrameDelayRangeBackwardThreshold 1594782
mefSoamDmThresholdCfgAvgFrameDelayRangeBackwardThreshold 1595121
mefSoamDmThresholdCfgRowStatus 1595460
mefSoamPmNotificationCfgAlarmInterval 1595706
mefSoamPmNotificationCfgAlarmEnable 1596405
mefSoamPmNotificationObjDateAndTime 1597229
mefSoamPmNotificationObjThresholdId 1597582
mefSoamPmNotificationObjThresholdConfig 1597853
mefSoamPmNotificationObjThresholdValue 1598077
mefSoamPmNotificationObjSuspect 1598467
mefSoamPmNotificationObjCrossingType 1598794
mefSoamPmNotificationObjDestinationMep 1599422
mefSoamPmNotificationObjPriority 1599679
mefSoamPmMepMandatoryGroup 1599911
mefSoamPmMepOptionalGroup 1600005
mefSoamLmCfgMandatoryGroup 1600097
mefSoamLmCfgOptionalGroup 1600201
mefSoamLmMeasuredStatsMandatoryGroup 1600303
mefSoamLmMeasuredStatsOptionalGroup 1600418
mefSoamLmCurrentAvailStatsMandatoryGroup 1600531
mefSoamLmCurrentAvailStatsOptionalGroup 1600656
mefSoamLmCurrentStatsMandatoryGroup 1600784
mefSoamLmCurrentStatsOptionalGroup 1600902
mefSoamLmHistoryAvailStatsMandatoryGroup 1601013
mefSoamLmHistoryAvailStatsOptionalGroup 1601167
mefSoamLmHistoryStatsMandatoryGroup 1601319
mefSoamLmHistoryStatsOptionalGroup 1601437
mefSoamDmCfgMandatoryGroup 1601548
mefSoamDmCfgOptionalGroup 1601652
mefSoamDmCfgMeasBinMandatoryGroup 1601754
mefSoamDmMeasuredStatsOptionalGroup 1601890
mefSoamDmCurrentStatsMandatoryGroup 1602003
mefSoamDmCurrentStatsOptionalGroup 1602121
mefSoamDmCurrentStatsBinsMandatoryGroup 1602237
mefSoamDmHistoryStatsMandatoryGroup 1602372
mefSoamDmHistoryStatsOptionalGroup 1602490
mefSoamDmHistoryStatsBinsMandatoryGroup 1602606
mefSoamLmThresholdMandatoryGroup 1602741
mefSoamLmThresholdOptionalGroup 1602847
mefSoamDmThresholdMandatoryGroup 1602951
mefSoamDmThresholdOptionalGroup 1603057
mefSoamPmNotificationsMandatoryGroup 1603161
mefSoamPmNotificationsOptionalGroup 1603274
mefSoamPmNotificationCfgMandatoryGroup 1603386
mefSoamPmNotificationObjMandatoryGroup 1603508
mefSoamPmNotificationObjOptionalGroup 1603623
libvirtGuestNotif       1603737
libvirtGuestTable       1603806
libvirtGuestEntry       1603912
libvirtGuestUUID        1604000
libvirtGuestName        1604070
libvirtGuestState       1604139
libvirtGuestCpuCount    1604701
libvirtGuestMemoryCurrent 1604787
libvirtGuestMemoryLimit 1604889
libvirtGuestCpuTime     1605007
libvirtGuestRowStatus   1605102
libvirtGuestGroup       1605495
snmpUDPDomain           1605604
snmpCLNSDomain          1605778
snmpCONSDomain          1605943
snmpDDPDomain           1606108
snmpIPXDomain           1606260
rfc1157Domain           1606412
snmpTrapOID             1606643
snmpTrapEnterprise      1606888
coldStart               1607200
warmStart               1607452
linkDown                1607696
linkUp                  1608112
authenticationFailure   1608530
snmpSetSerialNo         1608932
snmpSetGroup            1609355
systemGroup             1609553
snmpBasicNotificationsGroup 1609679
snmpGroup               1609828
snmpCommunityGroup      1609967
snmpObsoleteGroup       1610152
snmpWarmStartNotificationGroup 1610326
snmpNotificationGroup   1610552
snmpAuthProtocols       1610696
usmNoAuthProtocol       1610901
usmHMACMD5AuthProtocol  1610968
usmHMACSHAAuthProtocol  1611332
usmHMAC128SHA224AuthProtocol 1611686
usmHMAC192SHA256AuthProtocol 1612188
usmHMAC256SHA384AuthProtocol 1612690
usmHMAC384SHA512AuthProtocol 1613192
snmpPrivProtocols       1613694
usmNoPrivProtocol       1613870
usmDESPrivProtocol      1613930
usmAesCfb128Protocol    1614960
snmpEngineID            1615522
snmpEngineBoots         1615635
snmpEngineTime          1615846
snmpEngineMaxMessageSize 1616362
snmpEngineGroup         1616752
snmpUnknownSecurityModels 1616977
snmpInvalidMsgs         1617272
snmpUnknownPDUHandlers  1617524
snmpMPDGroup            1617987
snmpTargetSpinLock      1618201
snmpTargetAddrTable     1619072
snmpTargetAddrEntry     1619202
snmpTargetAddrName      1619452
snmpTargetAddrTDomain   1619591
snmpTargetAddrTAddress  1619747
snmpTargetAddrTimeout   1619940
snmpTargetAddrRetryCount 1621238
snmpTargetAddrTagList   1621540
snmpTargetAddrParams    1621717
snmpTargetAddrStorageType 1621991
snmpTargetAddrRowStatus 1622074
snmpTargetParamsTable   1623126
snmpTargetParamsEntry   1623260
snmpTargetParamsName    1623466
snmpTargetParamsMPModel 1623607
snmpTargetParamsSecurityModel 1623747
snmpTargetParamsSecurityName 1624125
snmpTargetParamsSecurityLevel 1624309
snmpTargetParamsStorageType 1624448
snmpTargetParamsRowStatus 1624533
snmpUnavailableContexts 1625756
snmpUnknownContexts     1625958
snmpTargetBasicGroup    1626156
snmpTargetResponseGroup 1626292
snmpTargetCommandResponderGroup 1626541
snmpNotifyTable         1626706
snmpNotifyEntry         1626948
snmpNotifyName          1627335
snmpNotifyTag           1627470
snmpNotifyType          1627884
snmpNotifyStorageType   1628802
snmpNotifyRowStatus     1628883
snmpNotifyFilterProfileTable 1629106
snmpNotifyFilterProfileEntry 1629269
snmpNotifyFilterProfileName 1629664
snmpNotifyFilterProfileStorType 1629863
snmpNotifyFilterProfileRowStatus 1629951
snmpNotifyFilterTable   1630590
snmpNotifyFilterEntry   1631225
snmpNotifyFilterSubtree 1631429
snmpNotifyFilterMask    1631689
snmpNotifyFilterType    1633912
snmpNotifyFilterStorageType 1634210
snmpNotifyFilterRowStatus 1634294
snmpNotifyGroup         1634519
snmpNotifyFilterGroup   1634781
usmStatsUnsupportedSecLevels 1634913
usmStatsNotInTimeWindows 1635205
usmStatsUnknownUserNames 1635447
usmStatsUnknownEngineIDs 1635686
usmStatsWrongDigests    1635934
usmStatsDecryptionErrors 1636157
usmUserSpinLock         1636363
usmUserTable            1636632
usmUserEntry            1639526
usmUserEngineID         1639729
usmUserName             1640126
usmUserSecurityName     1640361
usmUserCloneFrom        1640790
usmUserAuthProtocol     1642515
usmUserAuthKeyChange    1644563
usmUserOwnAuthKeyChange 1647245
usmUserPrivProtocol     1648428
usmUserPrivKeyChange    1650390
usmUserOwnPrivKeyChange 1651779
usmUserPublic           1652937
usmUserStorageType      1653277
usmUserStatus           1654803
usmMIBBasicGroup        1656088
vacmContextTable        1656304
vacmContextEntry        1657868
vacmContextName         1657947
vacmSecurityToGroupTable 1658212
vacmSecurityToGroupEntry 1658463
vacmSecurityModel       1658637
vacmSecurityName        1658872
vacmGroupName           1659099
vacmSecurityToGroupStorageType 1659578
vacmSecurityToGroupStatus 1659829
vacmAccessTable         1660648
vacmAccessEntry         1663270
vacmAccessContextPrefix 1663710
vacmAccessSecurityModel 1664120
vacmAccessSecurityLevel 1664297
vacmAccessContextMatch  1664853
vacmAccessReadViewName  1665349
vacmAccessWriteViewName 1665960
vacmAccessNotifyViewName 1666572
vacmAccessStorageType   1667197
vacmAccessStatus        1667443
vacmViewSpinLock        1667873
vacmViewTreeFamilyTable 1669138
vacmViewTreeFamilyEntry 1672558
vacmViewTreeFamilyViewName 1673274
vacmViewTreeFamilySubtree 1673389
vacmViewTreeFamilyMask  1673613
vacmViewTreeFamilyType  1676154
vacmViewTreeFamilyStorageType 1676452
vacmViewTreeFamilyStatus 1676704
vacmBasicGroup          1677137
snmpCommunityTable      1677366
snmpCommunityEntry      1677515
snmpCommunityIndex      1677603
snmpCommunityName       1677689
snmpCommunitySecurityName 1678069
snmpCommunityContextEngineID 1678252
snmpCommunityContextName 1678635
snmpCommunityTransportTag 1678845
snmpCommunityStorageType 1680353
snmpCommunityStatus     1680600
snmpTargetAddrExtTable  1681159
snmpTargetAddrExtEntry  1681875
snmpTargetAddrTMask     1681965
snmpTargetAddrMMS       1683471
snmpTrapAddress         1683686
snmpTrapCommunity       1684051
snmpCommunityTableGroup 1684749
snmpProxyTrapForwardGroup 1684903
dot1agCfmFaultAlarm     1685171
dot1agCfmStackTable     1687020
dot1agCfmStackEntry     1687359
dot1agCfmStackifIndex   1687503
dot1agCfmStackVlanIdOrNone 1688244
dot1agCfmStackMdLevel   1688492
dot1agCfmStackDirection 1688709
dot1agCfmStackMdIndex   1688942
dot1agCfmStackMaIndex   1689158
dot1agCfmStackMepId     1689476
dot1agCfmStackMacAddress 1689701
dot1agCfmDefaultMdDefLevel 1689908
dot1agCfmDefaultMdDefMhfCreation 1690400
dot1agCfmDefaultMdDefIdPermission 1690992
dot1agCfmDefaultMdTable 1691661
dot1agCfmDefaultMdEntry 1693056
dot1agCfmDefaultMdComponentId 1693219
dot1agCfmDefaultMdPrimaryVid 1693669
dot1agCfmDefaultMdStatus 1693877
dot1agCfmDefaultMdLevel 1694318
dot1agCfmDefaultMdMhfCreation 1694864
dot1agCfmDefaultMdIdPermission 1695431
dot1agCfmVlanTable      1696071
dot1agCfmVlanEntry      1697031
dot1agCfmVlanComponentId 1697182
dot1agCfmVlanVid        1697617
dot1agCfmVlanPrimaryVid 1697894
dot1agCfmVlanRowStatus  1698195
dot1agCfmConfigErrorListTable 1698514
dot1agCfmConfigErrorListEntry 1698822
dot1agCfmConfigErrorListVid 1698992
dot1agCfmConfigErrorListIfIndex 1699232
dot1agCfmConfigErrorListErrorType 1699900
dot1agCfmMdTableNextIndex 1700298
dot1agCfmMdTable        1700479
dot1agCfmMdEntry        1701002
dot1agCfmMdIndex        1701166
dot1agCfmMdFormat       1701719
dot1agCfmMdName         1701868
dot1agCfmMdMdLevel      1702595
dot1agCfmMdMhfCreation  1702717
dot1agCfmMdMhfIdPermission 1703076
dot1agCfmMdMaNextIndex  1703481
dot1agCfmMdRowStatus    1703768
dot1agCfmMaNetTable     1704006
dot1agCfmMaNetEntry     1705798
dot1agCfmMaIndex        1705857
dot1agCfmMaNetFormat    1706026
dot1agCfmMaNetName      1706198
dot1agCfmMaNetCcmInterval 1706524
dot1agCfmMaNetRowStatus 1706707
dot1agCfmMaCompTable    1706945
dot1agCfmMaCompEntry    1708137
dot1agCfmMaComponentId  1708286
dot1agCfmMaCompPrimaryVlanId 1708717
dot1agCfmMaCompMhfCreation 1709137
dot1agCfmMaCompIdPermission 1709418
dot1agCfmMaCompNumberOfVids 1709763
dot1agCfmMaCompRowStatus 1709996
dot1agCfmMaMepListTable 1710316
dot1agCfmMaMepListEntry 1712302
dot1agCfmMaMepListIdentifier 1712369
dot1agCfmMaMepListRowStatus 1712477
dot1agCfmMepTable       1712650
dot1agCfmMepEntry       1716976
dot1agCfmMepIdentifier  1717035
dot1agCfmMepIfIndex     1717430
dot1agCfmMepDirection   1718049
dot1agCfmMepPrimaryVid  1718204
dot1agCfmMepActive      1718546
dot1agCfmMepFngState    1718863
dot1agCfmMepCciEnabled  1719049
dot1agCfmMepCcmLtmPriority 1719202
dot1agCfmMepMacAddress  1719763
dot1agCfmMepLowPrDef    1719885
dot1agCfmMepFngAlarmTime 1720111
dot1agCfmMepFngResetTime 1720339
dot1agCfmMepHighestPrDefect 1720567
dot1agCfmMepDefects     1720855
dot1agCfmMepErrorCcmLastFailure 1721290
dot1agCfmMepXconCcmLastFailure 1721466
dot1agCfmMepCcmSequenceErrors 1721638
dot1agCfmMepCciSentCcms 1721842
dot1agCfmMepNextLbmTransId 1721998
dot1agCfmMepLbrIn       1722268
dot1agCfmMepLbrInOutOfOrder 1722428
dot1agCfmMepLbrBadMsdu  1722622
dot1agCfmMepLtmNextSeqNumber 1722890
dot1agCfmMepUnexpLtrIn  1723166
dot1agCfmMepLbrOut      1723334
dot1agCfmMepTransmitLbmStatus 1723482
dot1agCfmMepTransmitLbmDestMacAddress 1723751
dot1agCfmMepTransmitLbmDestMepId 1724090
dot1agCfmMepTransmitLbmDestIsMepId 1724475
dot1agCfmMepTransmitLbmMessages 1724810
dot1agCfmMepTransmitLbmDataTlv 1724969
dot1agCfmMepTransmitLbmVlanPriority 1725345
dot1agCfmMepTransmitLbmVlanDropEnable 1725612
dot1agCfmMepTransmitLbmResultOK 1725922
dot1agCfmMepTransmitLbmSeqNumber 1726262
dot1agCfmMepTransmitLtmStatus 1726580
dot1agCfmMepTransmitLtmFlags 1726797
dot1agCfmMepTransmitLtmTargetMacAddress 1726957
dot1agCfmMepTransmitLtmTargetMepId 1727302
dot1agCfmMepTransmitLtmTargetIsMepId 1727735
dot1agCfmMepTransmitLtmTtl 1728075
dot1agCfmMepTransmitLtmResult 1728610
dot1agCfmMepTransmitLtmSeqNumber 1728882
dot1agCfmMepTransmitLtmEgressIdentifier 1729182
dot1agCfmMepRowStatus   1730292
dot1agCfmMepPbbTeCanReportPbbTePresence 1730530
dot1agCfmMepPbbTeTrafficMismatchDefect 1730897
dot1agCfmMepPbbTransmitLbmLtmReverseVid 1731205
dot1agCfmMepPbbTeMismatchAlarm 1731459
dot1agCfmMepPbbTeLocalMismatchDefect 1731702
dot1agCfmMepPbbTeMismatchSinceReset 1731997
dot1agCfmLtrTable       1732294
dot1agCfmLtrEntry       1732752
dot1agCfmLtrSeqNumber   1732824
dot1agCfmLtrReceiveOrder 1733098
dot1agCfmLtrTtl         1733447
dot1agCfmLtrForwarded   1733582
dot1agCfmLtrTerminalMep 1733811
dot1agCfmLtrLastEgressIdentifier 1734080
dot1agCfmLtrNextEgressIdentifier 1734594
dot1agCfmLtrRelay       1735281
dot1agCfmLtrChassisIdSubtype 1735426
dot1agCfmLtrChassisId   1735732
dot1agCfmLtrManAddressDomain 1736023
dot1agCfmLtrManAddress  1736839
dot1agCfmLtrIngress     1737316
dot1agCfmLtrIngressMac  1737579
dot1agCfmLtrIngressPortIdSubtype 1737871
dot1agCfmLtrIngressPortId 1738157
dot1agCfmLtrEgress      1738525
dot1agCfmLtrEgressMac   1738787
dot1agCfmLtrEgressPortIdSubtype 1739078
dot1agCfmLtrEgressPortId 1739361
dot1agCfmLtrOrganizationSpecificTlv 1739725
dot1agCfmMepDbTable     1740029
dot1agCfmMepDbEntry     1740481
dot1agCfmMepDbRMepIdentifier 1740550
dot1agCfmMepDbRMepState 1740789
dot1agCfmMepDbRMepFailedOkTime 1740948
dot1agCfmMepDbMacAddress 1741189
dot1agCfmMepDbRdi       1741327
dot1agCfmMepDbPortStatusTlv 1741546
dot1agCfmMepDbInterfaceStatusTlv 1741919
dot1agCfmMepDbChassisIdSubtype 1742327
dot1agCfmMepDbChassisId 1742529
dot1agCfmMepDbManAddressDomain 1742762
dot1agCfmMepDbManAddress 1743582
dot1agCfmMepDbRMepIsActive 1744066
dot1agCfmStackGroup     1744218
dot1agCfmDefaultMdGroup 1744340
dot1agCfmVlanIdGroup    1744477
dot1agCfmConfigErrorListGroup 1744602
dot1agCfmMdGroup        1744763
dot1agCfmMaGroup        1744844
dot1agCfmMepGroup       1744960
dot1agCfmMepDbGroup     1745026
dot1agCfmNotificationsGroup 1745092
ieee8021CfmMaNetGroup   1745172
ieee8021CfmDefaultMdDefGroup 1745241
ieee8021CfmPbbTeExtensionGroup 1745333
ieee8021CfmPbbTeTrafficBitGroup 1745445

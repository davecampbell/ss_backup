####################################################
# Time:               9/6/1996 (16:03:16)
# List of MIBs used to create the variables:
#                     rfc1213.mib
# Number of Rows:     2
# Value type formats:                               
#     fixed(current_value)                          
#     lastset(initial_value)                        
#     random(starting_value,max_delta)              
#     randomup(starting_value,max_delta)            
#     clock(starting_value)                         
#     sequential(min_value,max_value)               
#     seqinc(min_value,increment,max_value)         
#     seqtimeinc(min_value,increment,max_value)     
#     dfixed(current_value)                         
#     rowstatus(current_value)                      
####################################################
sysDescr.0                    , OctetString , RO , fixed(Simulated Device 1)
sysObjectID.0                 , ObjectID    , RO , fixed(1.3.6.1.4.1.786.1)
sysUpTime.0                   , TimeTicks   , RO , clock(0)
sysContact.0                  , OctetString , RW , lastset(My_sysContact_string)
sysName.0                     , OctetString , RW , lastset(My_sysName_string)
sysLocation.0                 , OctetString , RW , lastset(My_sysLocation_string)
sysServices.0                 , Integer     , RO , fixed(0)
ifNumber.0                    , Integer     , RO , fixed(1)
# columnar variable ifIndex. Index = ifIndex
# sub ids in the instance are = n
ifIndex.1                     , Integer     , RO , fixed(1)
# columnar variable ifDescr. Index = ifIndex
# sub ids in the instance are = n
ifDescr.1                     , OctetString , RO , fixed(My_ifDescr_string)
# columnar variable ifType. Index = ifIndex
# sub ids in the instance are = n
ifType.1                      , Integer     , RO , fixed(6)
# columnar variable ifMtu. Index = ifIndex
# sub ids in the instance are = n
ifMtu.1                       , Integer     , RO , fixed(1500)
# columnar variable ifSpeed. Index = ifIndex
# sub ids in the instance are = n
ifSpeed.1                     , Gauge       , RO , fixed(1000000)
# columnar variable ifPhysAddress. Index = ifIndex
# sub ids in the instance are = n
ifPhysAddress.1               , OctetString , RO , fixed(0x010203040506)
# columnar variable ifAdminStatus. Index = ifIndex
# sub ids in the instance are = n
ifAdminStatus.1               , Integer     , RW , lastset(1)
# columnar variable ifOperStatus. Index = ifIndex
# sub ids in the instance are = n
ifOperStatus.1                , Integer     , RO , fixed(1)
# columnar variable ifLastChange. Index = ifIndex
# sub ids in the instance are = n
ifLastChange.1                , TimeTicks   , RO , clock(0)
# columnar variable ifInOctets. Index = ifIndex
# sub ids in the instance are = n
ifInOctets.1                  , Counter     , RO , randomup(1000, 100)
# columnar variable ifInUcastPkts. Index = ifIndex
# sub ids in the instance are = n
ifInUcastPkts.1               , Counter     , RO , randomup(1000, 100)
# columnar variable ifInNUcastPkts. Index = ifIndex
# sub ids in the instance are = n
ifInNUcastPkts.1              , Counter     , RO , randomup(1000, 100)
# columnar variable ifInDiscards. Index = ifIndex
# sub ids in the instance are = n
ifInDiscards.1                , Counter     , RO , randomup(1000, 100)
# columnar variable ifInErrors. Index = ifIndex
# sub ids in the instance are = n
ifInErrors.1                  , Counter     , RO , randomup(1000, 100)
# columnar variable ifInUnknownProtos. Index = ifIndex
# sub ids in the instance are = n
ifInUnknownProtos.1           , Counter     , RO , randomup(1000, 100)
# columnar variable ifOutOctets. Index = ifIndex
# sub ids in the instance are = n
ifOutOctets.1                 , Counter     , RO , randomup(1000, 100)
# columnar variable ifOutUcastPkts. Index = ifIndex
# sub ids in the instance are = n
ifOutUcastPkts.1              , Counter     , RO , randomup(1000, 100)
# columnar variable ifOutNUcastPkts. Index = ifIndex
# sub ids in the instance are = n
ifOutNUcastPkts.1             , Counter     , RO , randomup(1000, 100)
# columnar variable ifOutDiscards. Index = ifIndex
# sub ids in the instance are = n
ifOutDiscards.1               , Counter     , RO , randomup(1000, 100)
# columnar variable ifOutErrors. Index = ifIndex
# sub ids in the instance are = n
ifOutErrors.1                 , Counter     , RO , randomup(1000, 100)
# columnar variable ifOutQLen. Index = ifIndex
# sub ids in the instance are = n
ifOutQLen.1                   , Gauge       , RO , random(1000, 100)
# columnar variable ifSpecific. Index = ifIndex
# sub ids in the instance are = n
ifSpecific.1                  , ObjectID    , RO , fixed(1.2.3)
# columnar variable atIfIndex. Index = atIfIndex atNetAddress
# sub ids in the instance are = n.1.ip1.ip2.ip3.ip4
atIfIndex.1.1.1.2.3.4         , Integer     , RW , fixed(1)
atIfIndex.1.1.1.2.3.5         , Integer     , RW , fixed(1)
# columnar variable atPhysAddress. Index = atIfIndex atNetAddress
# sub ids in the instance are = n.1.ip1.ip2.ip3.ip4
atPhysAddress.1.1.1.2.3.4     , OctetString , RW , lastset(0x010203040506)
atPhysAddress.1.1.1.2.3.5     , OctetString , RW , lastset(0x010203040506)
# columnar variable atNetAddress. Index = atIfIndex atNetAddress
# sub ids in the instance are = n.1.ip1.ip2.ip3.ip4
atNetAddress.1.1.1.2.3.4      , NetworkAddress, RW , fixed(1.2.3.4)
atNetAddress.1.1.1.2.3.5      , NetworkAddress, RW , fixed(1.2.3.5)
ipForwarding.0                , Integer     , RW , lastset(2)
ipDefaultTTL.0                , Integer     , RW , lastset(10)
ipInReceives.0                , Counter     , RO , randomup(1000, 100)
ipInHdrErrors.0               , Counter     , RO , randomup(1000, 100)
ipInAddrErrors.0              , Counter     , RO , randomup(1000, 100)
ipForwDatagrams.0             , Counter     , RO , randomup(1000, 100)
ipInUnknownProtos.0           , Counter     , RO , randomup(1000, 100)
ipInDiscards.0                , Counter     , RO , randomup(1000, 100)
ipInDelivers.0                , Counter     , RO , randomup(1000, 100)
ipOutRequests.0               , Counter     , RO , randomup(1000, 100)
ipOutDiscards.0               , Counter     , RO , randomup(1000, 100)
ipOutNoRoutes.0               , Counter     , RO , randomup(1000, 100)
ipReasmTimeout.0              , Integer     , RO , fixed(1)
ipReasmReqds.0                , Counter     , RO , randomup(1000, 100)
ipReasmOKs.0                  , Counter     , RO , randomup(1000, 100)
ipReasmFails.0                , Counter     , RO , randomup(1000, 100)
ipFragOKs.0                   , Counter     , RO , randomup(1000, 100)
ipFragFails.0                 , Counter     , RO , randomup(1000, 100)
ipFragCreates.0               , Counter     , RO , randomup(1000, 100)
# columnar variable ipAdEntAddr. Index = ipAdEntAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipAdEntAddr.128.100.100.102   , IpAddress   , RO , fixed(128.100.100.102)
# columnar variable ipAdEntIfIndex. Index = ipAdEntAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipAdEntIfIndex.128.100.100.102, Integer     , RO , fixed(1)
# columnar variable ipAdEntNetMask. Index = ipAdEntAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipAdEntNetMask.128.100.100.102, IpAddress   , RO , fixed(255.255.255.0)
# columnar variable ipAdEntBcastAddr. Index = ipAdEntAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipAdEntBcastAddr.128.100.100.102, Integer     , RO , fixed(1)
# columnar variable ipAdEntReasmMaxSize. Index = ipAdEntAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
# columnar variable ipRouteDest. Index = ipRouteDest
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipRouteDest.1.2.3.4           , IpAddress   , RW , fixed(1.2.3.4)
ipRouteDest.1.2.3.5           , IpAddress   , RW , fixed(1.2.3.5)
# columnar variable ipRouteIfIndex. Index = ipRouteDest
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipRouteIfIndex.1.2.3.4        , Integer     , RW , lastset(1)
ipRouteIfIndex.1.2.3.5        , Integer     , RW , lastset(1)
# columnar variable ipRouteMetric1. Index = ipRouteDest
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipRouteMetric1.1.2.3.4        , Integer     , RW , lastset(1)
ipRouteMetric1.1.2.3.5        , Integer     , RW , lastset(1)
# columnar variable ipRouteMetric2. Index = ipRouteDest
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipRouteMetric2.1.2.3.4        , Integer     , RW , lastset(1)
ipRouteMetric2.1.2.3.5        , Integer     , RW , lastset(1)
# columnar variable ipRouteMetric3. Index = ipRouteDest
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipRouteMetric3.1.2.3.4        , Integer     , RW , lastset(1)
ipRouteMetric3.1.2.3.5        , Integer     , RW , lastset(1)
# columnar variable ipRouteMetric4. Index = ipRouteDest
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipRouteMetric4.1.2.3.4        , Integer     , RW , lastset(1)
ipRouteMetric4.1.2.3.5        , Integer     , RW , lastset(1)
# columnar variable ipRouteNextHop. Index = ipRouteDest
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipRouteNextHop.1.2.3.4        , IpAddress   , RW , lastset(1.2.3.4)
ipRouteNextHop.1.2.3.5        , IpAddress   , RW , lastset(1.2.3.4)
# columnar variable ipRouteType. Index = ipRouteDest
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipRouteType.1.2.3.4           , Integer     , RW , lastset(1)
ipRouteType.1.2.3.5           , Integer     , RW , lastset(1)
# columnar variable ipRouteProto. Index = ipRouteDest
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipRouteProto.1.2.3.4          , Integer     , RO , fixed(1)
ipRouteProto.1.2.3.5          , Integer     , RO , fixed(1)
# columnar variable ipRouteAge. Index = ipRouteDest
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipRouteAge.1.2.3.4            , Integer     , RW , lastset(1)
ipRouteAge.1.2.3.5            , Integer     , RW , lastset(1)
# columnar variable ipRouteMask. Index = ipRouteDest
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipRouteMask.1.2.3.4           , IpAddress   , RW , lastset(1.2.3.4)
ipRouteMask.1.2.3.5           , IpAddress   , RW , lastset(1.2.3.4)
# columnar variable ipRouteMetric5. Index = ipRouteDest
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipRouteMetric5.1.2.3.4        , Integer     , RW , lastset(1)
ipRouteMetric5.1.2.3.5        , Integer     , RW , lastset(1)
# columnar variable ipRouteInfo. Index = ipRouteDest
# sub ids in the instance are = ip1.ip2.ip3.ip4
ipRouteInfo.1.2.3.4           , ObjectID    , RO , fixed(1.2.3)
ipRouteInfo.1.2.3.5           , ObjectID    , RO , fixed(1.2.3)
# columnar variable ipNetToMediaIfIndex. Index = ipNetToMediaIfIndex ipNetToMediaNetAddress
# sub ids in the instance are = n.ip1.ip2.ip3.ip4
ipNetToMediaIfIndex.1.1.2.3.4 , Integer     , RW , fixed(1)
ipNetToMediaIfIndex.1.1.2.3.5 , Integer     , RW , fixed(1)
# columnar variable ipNetToMediaPhysAddress. Index = ipNetToMediaIfIndex ipNetToMediaNetAddress
# sub ids in the instance are = n.ip1.ip2.ip3.ip4
ipNetToMediaPhysAddress.1.1.2.3.4, OctetString , RW , lastset(0x010203040506)
ipNetToMediaPhysAddress.1.1.2.3.5, OctetString , RW , lastset(0x010203040506)
# columnar variable ipNetToMediaNetAddress. Index = ipNetToMediaIfIndex ipNetToMediaNetAddress
# sub ids in the instance are = n.ip1.ip2.ip3.ip4
ipNetToMediaNetAddress.1.1.2.3.4, IpAddress   , RW , fixed(1.2.3.4)
ipNetToMediaNetAddress.1.1.2.3.5, IpAddress   , RW , fixed(1.2.3.5)
# columnar variable ipNetToMediaType. Index = ipNetToMediaIfIndex ipNetToMediaNetAddress
# sub ids in the instance are = n.ip1.ip2.ip3.ip4
ipNetToMediaType.1.1.2.3.4    , Integer     , RW , lastset(1)
ipNetToMediaType.1.1.2.3.5    , Integer     , RW , lastset(1)
ipRoutingDiscards.0           , Counter     , RO , randomup(1000, 100)
icmpInMsgs.0                  , Counter     , RO , randomup(1000, 100)
icmpInErrors.0                , Counter     , RO , randomup(1000, 100)
icmpInDestUnreachs.0          , Counter     , RO , randomup(1000, 100)
icmpInTimeExcds.0             , Counter     , RO , randomup(1000, 100)
icmpInParmProbs.0             , Counter     , RO , randomup(1000, 100)
icmpInSrcQuenchs.0            , Counter     , RO , randomup(1000, 100)
icmpInRedirects.0             , Counter     , RO , randomup(1000, 100)
icmpInEchos.0                 , Counter     , RO , randomup(1000, 100)
icmpInEchoReps.0              , Counter     , RO , randomup(1000, 100)
icmpInTimestamps.0            , Counter     , RO , randomup(1000, 100)
icmpInTimestampReps.0         , Counter     , RO , randomup(1000, 100)
icmpInAddrMasks.0             , Counter     , RO , randomup(1000, 100)
icmpInAddrMaskReps.0          , Counter     , RO , randomup(1000, 100)
icmpOutMsgs.0                 , Counter     , RO , randomup(1000, 100)
icmpOutErrors.0               , Counter     , RO , randomup(1000, 100)
icmpOutDestUnreachs.0         , Counter     , RO , randomup(1000, 100)
icmpOutTimeExcds.0            , Counter     , RO , randomup(1000, 100)
icmpOutParmProbs.0            , Counter     , RO , randomup(1000, 100)
icmpOutSrcQuenchs.0           , Counter     , RO , randomup(1000, 100)
icmpOutRedirects.0            , Counter     , RO , randomup(1000, 100)
icmpOutEchos.0                , Counter     , RO , randomup(1000, 100)
icmpOutEchoReps.0             , Counter     , RO , randomup(1000, 100)
icmpOutTimestamps.0           , Counter     , RO , randomup(1000, 100)
icmpOutTimestampReps.0        , Counter     , RO , randomup(1000, 100)
icmpOutAddrMasks.0            , Counter     , RO , randomup(1000, 100)
icmpOutAddrMaskReps.0         , Counter     , RO , randomup(1000, 100)
tcpRtoAlgorithm.0             , Integer     , RO , fixed(1)
tcpRtoMin.0                   , Integer     , RO , fixed(1)
tcpRtoMax.0                   , Integer     , RO , fixed(1)
tcpMaxConn.0                  , Integer     , RO , fixed(1)
tcpActiveOpens.0              , Counter     , RO , randomup(1000, 100)
tcpPassiveOpens.0             , Counter     , RO , randomup(1000, 100)
tcpAttemptFails.0             , Counter     , RO , randomup(1000, 100)
tcpEstabResets.0              , Counter     , RO , randomup(1000, 100)
tcpCurrEstab.0                , Gauge       , RO , random(1000, 100)
tcpInSegs.0                   , Counter     , RO , randomup(1000, 100)
tcpOutSegs.0                  , Counter     , RO , randomup(1000, 100)
tcpRetransSegs.0              , Counter     , RO , randomup(1000, 100)
# columnar variable tcpConnState. Index = tcpConnLocalAddress tcpConnLocalPort tcpConnRemAddress tcpConnRemPort
# sub ids in the instance are = ip1.ip2.ip3.ip4.n.ip1.ip2.ip3.ip4.n
tcpConnState.1.2.3.4.1.1.2.3.4.1, Integer     , RW , lastset(1)
tcpConnState.1.2.3.4.1.1.2.3.4.2, Integer     , RW , lastset(1)
# columnar variable tcpConnLocalAddress. Index = tcpConnLocalAddress tcpConnLocalPort tcpConnRemAddress tcpConnRemPort
# sub ids in the instance are = ip1.ip2.ip3.ip4.n.ip1.ip2.ip3.ip4.n
tcpConnLocalAddress.1.2.3.4.1.1.2.3.4.1, IpAddress   , RO , fixed(1.2.3.4)
tcpConnLocalAddress.1.2.3.4.1.1.2.3.4.2, IpAddress   , RO , fixed(1.2.3.4)
# columnar variable tcpConnLocalPort. Index = tcpConnLocalAddress tcpConnLocalPort tcpConnRemAddress tcpConnRemPort
# sub ids in the instance are = ip1.ip2.ip3.ip4.n.ip1.ip2.ip3.ip4.n
tcpConnLocalPort.1.2.3.4.1.1.2.3.4.1, Integer     , RO , fixed(1)
tcpConnLocalPort.1.2.3.4.1.1.2.3.4.2, Integer     , RO , fixed(1)
# columnar variable tcpConnRemAddress. Index = tcpConnLocalAddress tcpConnLocalPort tcpConnRemAddress tcpConnRemPort
# sub ids in the instance are = ip1.ip2.ip3.ip4.n.ip1.ip2.ip3.ip4.n
tcpConnRemAddress.1.2.3.4.1.1.2.3.4.1, IpAddress   , RO , fixed(1.2.3.4)
tcpConnRemAddress.1.2.3.4.1.1.2.3.4.2, IpAddress   , RO , fixed(1.2.3.4)
# columnar variable tcpConnRemPort. Index = tcpConnLocalAddress tcpConnLocalPort tcpConnRemAddress tcpConnRemPort
# sub ids in the instance are = ip1.ip2.ip3.ip4.n.ip1.ip2.ip3.ip4.n
tcpConnRemPort.1.2.3.4.1.1.2.3.4.1, Integer     , RO , fixed(1)
tcpConnRemPort.1.2.3.4.1.1.2.3.4.2, Integer     , RO , fixed(2)
tcpInErrs.0                   , Counter     , RO , randomup(1000, 100)
tcpOutRsts.0                  , Counter     , RO , randomup(1000, 100)
udpInDatagrams.0              , Counter     , RO , randomup(1000, 100)
udpNoPorts.0                  , Counter     , RO , randomup(1000, 100)
udpInErrors.0                 , Counter     , RO , randomup(1000, 100)
udpOutDatagrams.0             , Counter     , RO , randomup(1000, 100)
# columnar variable udpLocalAddress. Index = udpLocalAddress udpLocalPort
# sub ids in the instance are = ip1.ip2.ip3.ip4.n
udpLocalAddress.1.2.3.4.1     , IpAddress   , RO , fixed(1.2.3.4)
udpLocalAddress.1.2.3.4.2     , IpAddress   , RO , fixed(1.2.3.4)
# columnar variable udpLocalPort. Index = udpLocalAddress udpLocalPort
# sub ids in the instance are = ip1.ip2.ip3.ip4.n
udpLocalPort.1.2.3.4.1        , Integer     , RO , fixed(1)
udpLocalPort.1.2.3.4.2        , Integer     , RO , fixed(2)
egpInMsgs.0                   , Counter     , RO , randomup(1000, 100)
egpInErrors.0                 , Counter     , RO , randomup(1000, 100)
egpOutMsgs.0                  , Counter     , RO , randomup(1000, 100)
egpOutErrors.0                , Counter     , RO , randomup(1000, 100)
# columnar variable egpNeighState. Index = egpNeighAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
egpNeighState.1.2.3.4         , Integer     , RO , fixed(1)
egpNeighState.1.2.3.5         , Integer     , RO , fixed(1)
# columnar variable egpNeighAddr. Index = egpNeighAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
egpNeighAddr.1.2.3.4          , IpAddress   , RO , fixed(1.2.3.4)
egpNeighAddr.1.2.3.5          , IpAddress   , RO , fixed(1.2.3.5)
# columnar variable egpNeighAs. Index = egpNeighAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
egpNeighAs.1.2.3.4            , Integer     , RO , fixed(1)
egpNeighAs.1.2.3.5            , Integer     , RO , fixed(1)
# columnar variable egpNeighInMsgs. Index = egpNeighAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
egpNeighInMsgs.1.2.3.4        , Counter     , RO , randomup(1000, 100)
egpNeighInMsgs.1.2.3.5        , Counter     , RO , randomup(1000, 100)
# columnar variable egpNeighInErrs. Index = egpNeighAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
egpNeighInErrs.1.2.3.4        , Counter     , RO , randomup(1000, 100)
egpNeighInErrs.1.2.3.5        , Counter     , RO , randomup(1000, 100)
# columnar variable egpNeighOutMsgs. Index = egpNeighAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
egpNeighOutMsgs.1.2.3.4       , Counter     , RO , randomup(1000, 100)
egpNeighOutMsgs.1.2.3.5       , Counter     , RO , randomup(1000, 100)
# columnar variable egpNeighOutErrs. Index = egpNeighAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
egpNeighOutErrs.1.2.3.4       , Counter     , RO , randomup(1000, 100)
egpNeighOutErrs.1.2.3.5       , Counter     , RO , randomup(1000, 100)
# columnar variable egpNeighInErrMsgs. Index = egpNeighAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
egpNeighInErrMsgs.1.2.3.4     , Counter     , RO , randomup(1000, 100)
egpNeighInErrMsgs.1.2.3.5     , Counter     , RO , randomup(1000, 100)
# columnar variable egpNeighOutErrMsgs. Index = egpNeighAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
egpNeighOutErrMsgs.1.2.3.4    , Counter     , RO , randomup(1000, 100)
egpNeighOutErrMsgs.1.2.3.5    , Counter     , RO , randomup(1000, 100)
# columnar variable egpNeighStateUps. Index = egpNeighAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
egpNeighStateUps.1.2.3.4      , Counter     , RO , randomup(1000, 100)
egpNeighStateUps.1.2.3.5      , Counter     , RO , randomup(1000, 100)
# columnar variable egpNeighStateDowns. Index = egpNeighAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
egpNeighStateDowns.1.2.3.4    , Counter     , RO , randomup(1000, 100)
egpNeighStateDowns.1.2.3.5    , Counter     , RO , randomup(1000, 100)
# columnar variable egpNeighIntervalHello. Index = egpNeighAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
egpNeighIntervalHello.1.2.3.4 , Integer     , RO , fixed(1)
egpNeighIntervalHello.1.2.3.5 , Integer     , RO , fixed(1)
# columnar variable egpNeighIntervalPoll. Index = egpNeighAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
egpNeighIntervalPoll.1.2.3.4  , Integer     , RO , fixed(1)
egpNeighIntervalPoll.1.2.3.5  , Integer     , RO , fixed(1)
# columnar variable egpNeighMode. Index = egpNeighAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
egpNeighMode.1.2.3.4          , Integer     , RO , fixed(1)
egpNeighMode.1.2.3.5          , Integer     , RO , fixed(1)
# columnar variable egpNeighEventTrigger. Index = egpNeighAddr
# sub ids in the instance are = ip1.ip2.ip3.ip4
egpNeighEventTrigger.1.2.3.4  , Integer     , RW , lastset(1)
egpNeighEventTrigger.1.2.3.5  , Integer     , RW , lastset(1)
egpAs.0                       , Integer     , RO , fixed(1)
snmpInPkts.0                  , Counter     , RO , randomup(1000, 100)
snmpOutPkts.0                 , Counter     , RO , randomup(1000, 100)
snmpInBadVersions.0           , Counter     , RO , randomup(1000, 100)
snmpInBadCommunityNames.0     , Counter     , RO , randomup(1000, 100)
snmpInBadCommunityUses.0      , Counter     , RO , randomup(1000, 100)
snmpInASNParseErrs.0          , Counter     , RO , randomup(1000, 100)
snmpInTooBigs.0               , Counter     , RO , randomup(1000, 100)
snmpInNoSuchNames.0           , Counter     , RO , randomup(1000, 100)
snmpInBadValues.0             , Counter     , RO , randomup(1000, 100)
snmpInReadOnlys.0             , Counter     , RO , randomup(1000, 100)
snmpInGenErrs.0               , Counter     , RO , randomup(1000, 100)
snmpInTotalReqVars.0          , Counter     , RO , randomup(1000, 100)
snmpInTotalSetVars.0          , Counter     , RO , randomup(1000, 100)
snmpInGetRequests.0           , Counter     , RO , randomup(1000, 100)
snmpInGetNexts.0              , Counter     , RO , randomup(1000, 100)
snmpInSetRequests.0           , Counter     , RO , randomup(1000, 100)
snmpInGetResponses.0          , Counter     , RO , randomup(1000, 100)
snmpInTraps.0                 , Counter     , RO , randomup(1000, 100)
snmpOutTooBigs.0              , Counter     , RO , randomup(1000, 100)
snmpOutNoSuchNames.0          , Counter     , RO , randomup(1000, 100)
snmpOutBadValues.0            , Counter     , RO , randomup(1000, 100)
snmpOutGenErrs.0              , Counter     , RO , randomup(1000, 100)
snmpOutGetRequests.0          , Counter     , RO , randomup(1000, 100)
snmpOutGetNexts.0             , Counter     , RO , randomup(1000, 100)
snmpOutSetRequests.0          , Counter     , RO , randomup(1000, 100)
snmpOutGetResponses.0         , Counter     , RO , randomup(1000, 100)
snmpOutTraps.0                , Counter     , RO , randomup(1000, 100)
snmpEnableAuthenTraps.0       , Integer     , RW , lastset(1)
